// Copyright 1986-2016 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2016.4 (win64) Build 1733598 Wed Dec 14 22:35:39 MST 2016
// Date        : Sat Jun 10 14:23:04 2017
// Host        : wsguo-PC running 64-bit Service Pack 1  (build 7601)
// Command     : write_verilog -force -mode funcsim -rename_top jtag_axi_axi_perf_mon_0_0 -prefix
//               jtag_axi_axi_perf_mon_0_0_ jtag_axi_axi_perf_mon_0_0_sim_netlist.v
// Design      : jtag_axi_axi_perf_mon_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z045ffv900-2
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_acc_n_incr
   (p_in_d1_cdc_from_reg0,
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ,
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ,
    core_aresetn_0,
    core_aclk,
    \s_level_out_bus_d4_reg[2] ,
    DI,
    S,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ,
    Metrics_Cnt_Reset_Final__0,
    accumulate,
    out,
    \GEN_MUX_N_CNT.Add_in_Valid_reg ,
    core_aresetn,
    p_in_d1_cdc_from_reg,
    Q,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ,
    \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] );
  output p_in_d1_cdc_from_reg0;
  output [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ;
  output [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ;
  input core_aresetn_0;
  input core_aclk;
  input [0:0]\s_level_out_bus_d4_reg[2] ;
  input [3:0]DI;
  input [3:0]S;
  input [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ;
  input [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ;
  input Metrics_Cnt_Reset_Final__0;
  input accumulate;
  input [0:0]out;
  input \GEN_MUX_N_CNT.Add_in_Valid_reg ;
  input core_aresetn;
  input p_in_d1_cdc_from_reg;
  input [31:0]Q;
  input [15:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ;
  input [31:0]\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] ;

  wire Acc_OF_0;
  wire Acc_OF_i_1_n_0;
  wire [32:32]Accum_i;
  wire [32:0]Accum_i1_in;
  wire \Accum_i[11]_i_2_n_0 ;
  wire \Accum_i[11]_i_3_n_0 ;
  wire \Accum_i[11]_i_4_n_0 ;
  wire \Accum_i[11]_i_5_n_0 ;
  wire \Accum_i[15]_i_2_n_0 ;
  wire \Accum_i[15]_i_3_n_0 ;
  wire \Accum_i[15]_i_4_n_0 ;
  wire \Accum_i[15]_i_5_n_0 ;
  wire \Accum_i[19]_i_2_n_0 ;
  wire \Accum_i[19]_i_3_n_0 ;
  wire \Accum_i[19]_i_4_n_0 ;
  wire \Accum_i[19]_i_5_n_0 ;
  wire \Accum_i[23]_i_2_n_0 ;
  wire \Accum_i[23]_i_3_n_0 ;
  wire \Accum_i[23]_i_4_n_0 ;
  wire \Accum_i[23]_i_5_n_0 ;
  wire \Accum_i[27]_i_2_n_0 ;
  wire \Accum_i[27]_i_3_n_0 ;
  wire \Accum_i[27]_i_4_n_0 ;
  wire \Accum_i[27]_i_5_n_0 ;
  wire \Accum_i[31]_i_3_n_0 ;
  wire \Accum_i[31]_i_4_n_0 ;
  wire \Accum_i[31]_i_5_n_0 ;
  wire \Accum_i[31]_i_6_n_0 ;
  wire \Accum_i[32]_i_1_n_0 ;
  wire \Accum_i[32]_i_3_n_0 ;
  wire \Accum_i[3]_i_2_n_0 ;
  wire \Accum_i[3]_i_3_n_0 ;
  wire \Accum_i[3]_i_4_n_0 ;
  wire \Accum_i[3]_i_5_n_0 ;
  wire \Accum_i[7]_i_2_n_0 ;
  wire \Accum_i[7]_i_3_n_0 ;
  wire \Accum_i[7]_i_4_n_0 ;
  wire \Accum_i[7]_i_5_n_0 ;
  wire \Accum_i_reg[11]_i_1_n_0 ;
  wire \Accum_i_reg[11]_i_1_n_1 ;
  wire \Accum_i_reg[11]_i_1_n_2 ;
  wire \Accum_i_reg[11]_i_1_n_3 ;
  wire \Accum_i_reg[15]_i_1_n_0 ;
  wire \Accum_i_reg[15]_i_1_n_1 ;
  wire \Accum_i_reg[15]_i_1_n_2 ;
  wire \Accum_i_reg[15]_i_1_n_3 ;
  wire \Accum_i_reg[19]_i_1_n_0 ;
  wire \Accum_i_reg[19]_i_1_n_1 ;
  wire \Accum_i_reg[19]_i_1_n_2 ;
  wire \Accum_i_reg[19]_i_1_n_3 ;
  wire \Accum_i_reg[23]_i_1_n_0 ;
  wire \Accum_i_reg[23]_i_1_n_1 ;
  wire \Accum_i_reg[23]_i_1_n_2 ;
  wire \Accum_i_reg[23]_i_1_n_3 ;
  wire \Accum_i_reg[27]_i_1_n_0 ;
  wire \Accum_i_reg[27]_i_1_n_1 ;
  wire \Accum_i_reg[27]_i_1_n_2 ;
  wire \Accum_i_reg[27]_i_1_n_3 ;
  wire \Accum_i_reg[31]_i_2_n_0 ;
  wire \Accum_i_reg[31]_i_2_n_1 ;
  wire \Accum_i_reg[31]_i_2_n_2 ;
  wire \Accum_i_reg[31]_i_2_n_3 ;
  wire \Accum_i_reg[3]_i_1_n_0 ;
  wire \Accum_i_reg[3]_i_1_n_1 ;
  wire \Accum_i_reg[3]_i_1_n_2 ;
  wire \Accum_i_reg[3]_i_1_n_3 ;
  wire \Accum_i_reg[7]_i_1_n_0 ;
  wire \Accum_i_reg[7]_i_1_n_1 ;
  wire \Accum_i_reg[7]_i_1_n_2 ;
  wire \Accum_i_reg[7]_i_1_n_3 ;
  wire [3:0]DI;
  wire [15:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ;
  wire [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ;
  wire [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_reg ;
  wire [31:0]\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] ;
  wire [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ;
  wire [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ;
  wire Incr_by_1;
  wire Incr_by_12;
  wire Incr_by_122_in;
  wire Incr_by_12_carry__0_n_1;
  wire Incr_by_12_carry__0_n_2;
  wire Incr_by_12_carry__0_n_3;
  wire Incr_by_12_carry_n_0;
  wire Incr_by_12_carry_n_1;
  wire Incr_by_12_carry_n_2;
  wire Incr_by_12_carry_n_3;
  wire \Incr_by_12_inferred__0/i__carry__0_n_1 ;
  wire \Incr_by_12_inferred__0/i__carry__0_n_2 ;
  wire \Incr_by_12_inferred__0/i__carry__0_n_3 ;
  wire \Incr_by_12_inferred__0/i__carry_n_0 ;
  wire \Incr_by_12_inferred__0/i__carry_n_1 ;
  wire \Incr_by_12_inferred__0/i__carry_n_2 ;
  wire \Incr_by_12_inferred__0/i__carry_n_3 ;
  wire Incr_by_1_i_1_n_0;
  wire \Incrementer_i[0]_i_2_n_0 ;
  wire \Incrementer_i[0]_i_3_n_0 ;
  wire \Incrementer_i[0]_i_4_n_0 ;
  wire \Incrementer_i[0]_i_5_n_0 ;
  wire \Incrementer_i[12]_i_2_n_0 ;
  wire \Incrementer_i[12]_i_3_n_0 ;
  wire \Incrementer_i[12]_i_4_n_0 ;
  wire \Incrementer_i[12]_i_5_n_0 ;
  wire \Incrementer_i[16]_i_2_n_0 ;
  wire \Incrementer_i[16]_i_3_n_0 ;
  wire \Incrementer_i[16]_i_4_n_0 ;
  wire \Incrementer_i[16]_i_5_n_0 ;
  wire \Incrementer_i[20]_i_2_n_0 ;
  wire \Incrementer_i[20]_i_3_n_0 ;
  wire \Incrementer_i[20]_i_4_n_0 ;
  wire \Incrementer_i[20]_i_5_n_0 ;
  wire \Incrementer_i[24]_i_2_n_0 ;
  wire \Incrementer_i[24]_i_3_n_0 ;
  wire \Incrementer_i[24]_i_4_n_0 ;
  wire \Incrementer_i[24]_i_5_n_0 ;
  wire \Incrementer_i[28]_i_2_n_0 ;
  wire \Incrementer_i[28]_i_3_n_0 ;
  wire \Incrementer_i[28]_i_4_n_0 ;
  wire \Incrementer_i[28]_i_5_n_0 ;
  wire \Incrementer_i[4]_i_2_n_0 ;
  wire \Incrementer_i[4]_i_3_n_0 ;
  wire \Incrementer_i[4]_i_4_n_0 ;
  wire \Incrementer_i[4]_i_5_n_0 ;
  wire \Incrementer_i[8]_i_2_n_0 ;
  wire \Incrementer_i[8]_i_3_n_0 ;
  wire \Incrementer_i[8]_i_4_n_0 ;
  wire \Incrementer_i[8]_i_5_n_0 ;
  wire [31:0]Incrementer_i_reg;
  wire \Incrementer_i_reg[0]_i_1_n_0 ;
  wire \Incrementer_i_reg[0]_i_1_n_1 ;
  wire \Incrementer_i_reg[0]_i_1_n_2 ;
  wire \Incrementer_i_reg[0]_i_1_n_3 ;
  wire \Incrementer_i_reg[0]_i_1_n_4 ;
  wire \Incrementer_i_reg[0]_i_1_n_5 ;
  wire \Incrementer_i_reg[0]_i_1_n_6 ;
  wire \Incrementer_i_reg[0]_i_1_n_7 ;
  wire \Incrementer_i_reg[12]_i_1_n_0 ;
  wire \Incrementer_i_reg[12]_i_1_n_1 ;
  wire \Incrementer_i_reg[12]_i_1_n_2 ;
  wire \Incrementer_i_reg[12]_i_1_n_3 ;
  wire \Incrementer_i_reg[12]_i_1_n_4 ;
  wire \Incrementer_i_reg[12]_i_1_n_5 ;
  wire \Incrementer_i_reg[12]_i_1_n_6 ;
  wire \Incrementer_i_reg[12]_i_1_n_7 ;
  wire \Incrementer_i_reg[16]_i_1_n_0 ;
  wire \Incrementer_i_reg[16]_i_1_n_1 ;
  wire \Incrementer_i_reg[16]_i_1_n_2 ;
  wire \Incrementer_i_reg[16]_i_1_n_3 ;
  wire \Incrementer_i_reg[16]_i_1_n_4 ;
  wire \Incrementer_i_reg[16]_i_1_n_5 ;
  wire \Incrementer_i_reg[16]_i_1_n_6 ;
  wire \Incrementer_i_reg[16]_i_1_n_7 ;
  wire \Incrementer_i_reg[20]_i_1_n_0 ;
  wire \Incrementer_i_reg[20]_i_1_n_1 ;
  wire \Incrementer_i_reg[20]_i_1_n_2 ;
  wire \Incrementer_i_reg[20]_i_1_n_3 ;
  wire \Incrementer_i_reg[20]_i_1_n_4 ;
  wire \Incrementer_i_reg[20]_i_1_n_5 ;
  wire \Incrementer_i_reg[20]_i_1_n_6 ;
  wire \Incrementer_i_reg[20]_i_1_n_7 ;
  wire \Incrementer_i_reg[24]_i_1_n_0 ;
  wire \Incrementer_i_reg[24]_i_1_n_1 ;
  wire \Incrementer_i_reg[24]_i_1_n_2 ;
  wire \Incrementer_i_reg[24]_i_1_n_3 ;
  wire \Incrementer_i_reg[24]_i_1_n_4 ;
  wire \Incrementer_i_reg[24]_i_1_n_5 ;
  wire \Incrementer_i_reg[24]_i_1_n_6 ;
  wire \Incrementer_i_reg[24]_i_1_n_7 ;
  wire \Incrementer_i_reg[28]_i_1_n_1 ;
  wire \Incrementer_i_reg[28]_i_1_n_2 ;
  wire \Incrementer_i_reg[28]_i_1_n_3 ;
  wire \Incrementer_i_reg[28]_i_1_n_4 ;
  wire \Incrementer_i_reg[28]_i_1_n_5 ;
  wire \Incrementer_i_reg[28]_i_1_n_6 ;
  wire \Incrementer_i_reg[28]_i_1_n_7 ;
  wire \Incrementer_i_reg[4]_i_1_n_0 ;
  wire \Incrementer_i_reg[4]_i_1_n_1 ;
  wire \Incrementer_i_reg[4]_i_1_n_2 ;
  wire \Incrementer_i_reg[4]_i_1_n_3 ;
  wire \Incrementer_i_reg[4]_i_1_n_4 ;
  wire \Incrementer_i_reg[4]_i_1_n_5 ;
  wire \Incrementer_i_reg[4]_i_1_n_6 ;
  wire \Incrementer_i_reg[4]_i_1_n_7 ;
  wire \Incrementer_i_reg[8]_i_1_n_0 ;
  wire \Incrementer_i_reg[8]_i_1_n_1 ;
  wire \Incrementer_i_reg[8]_i_1_n_2 ;
  wire \Incrementer_i_reg[8]_i_1_n_3 ;
  wire \Incrementer_i_reg[8]_i_1_n_4 ;
  wire \Incrementer_i_reg[8]_i_1_n_5 ;
  wire \Incrementer_i_reg[8]_i_1_n_6 ;
  wire \Incrementer_i_reg[8]_i_1_n_7 ;
  wire Metrics_Cnt_Reset_Final__0;
  wire Overflow;
  wire Overflow_D1;
  wire [31:0]Q;
  wire [3:0]S;
  wire accumulate;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire i__carry__0_i_1_n_0;
  wire i__carry__0_i_2_n_0;
  wire i__carry__0_i_3_n_0;
  wire i__carry__0_i_4_n_0;
  wire i__carry__0_i_5_n_0;
  wire i__carry__0_i_6_n_0;
  wire i__carry__0_i_7_n_0;
  wire i__carry__0_i_8_n_0;
  wire i__carry_i_1_n_0;
  wire i__carry_i_2_n_0;
  wire i__carry_i_3_n_0;
  wire i__carry_i_4_n_0;
  wire i__carry_i_5_n_0;
  wire i__carry_i_6_n_0;
  wire i__carry_i_7_n_0;
  wire i__carry_i_8_n_0;
  wire [31:0]in;
  wire [0:0]out;
  wire p_in_d1_cdc_from_reg;
  wire p_in_d1_cdc_from_reg0;
  wire [0:0]\s_level_out_bus_d4_reg[2] ;
  wire [3:0]\NLW_Accum_i_reg[32]_i_2_CO_UNCONNECTED ;
  wire [3:1]\NLW_Accum_i_reg[32]_i_2_O_UNCONNECTED ;
  wire [3:0]NLW_Incr_by_12_carry_O_UNCONNECTED;
  wire [3:0]NLW_Incr_by_12_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_Incr_by_12_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_Incr_by_12_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:3]\NLW_Incrementer_i_reg[28]_i_1_CO_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h2)) 
    Acc_OF_i_1
       (.I0(Overflow),
        .I1(Overflow_D1),
        .O(Acc_OF_i_1_n_0));
  FDRE Acc_OF_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Acc_OF_i_1_n_0),
        .Q(Acc_OF_0),
        .R(core_aresetn_0));
  LUT5 #(
    .INIT(32'hBAAAFFFF)) 
    Accum_i0
       (.I0(Metrics_Cnt_Reset_Final__0),
        .I1(accumulate),
        .I2(out),
        .I3(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I4(core_aresetn),
        .O(Accum_i));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[11]_i_2 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [11]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[11]),
        .O(\Accum_i[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[11]_i_3 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [10]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[10]),
        .O(\Accum_i[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[11]_i_4 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [9]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[9]),
        .O(\Accum_i[11]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[11]_i_5 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [8]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[8]),
        .O(\Accum_i[11]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[15]_i_2 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [15]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[15]),
        .O(\Accum_i[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[15]_i_3 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [14]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[14]),
        .O(\Accum_i[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[15]_i_4 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [13]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[13]),
        .O(\Accum_i[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[15]_i_5 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [12]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[12]),
        .O(\Accum_i[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[19]_i_2 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [19]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[19]),
        .O(\Accum_i[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[19]_i_3 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [18]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[18]),
        .O(\Accum_i[19]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[19]_i_4 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [17]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[17]),
        .O(\Accum_i[19]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[19]_i_5 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [16]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[16]),
        .O(\Accum_i[19]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[23]_i_2 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [23]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[23]),
        .O(\Accum_i[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[23]_i_3 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [22]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[22]),
        .O(\Accum_i[23]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[23]_i_4 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [21]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[21]),
        .O(\Accum_i[23]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[23]_i_5 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [20]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[20]),
        .O(\Accum_i[23]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[27]_i_2 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [27]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[27]),
        .O(\Accum_i[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[27]_i_3 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [26]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[26]),
        .O(\Accum_i[27]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[27]_i_4 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [25]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[25]),
        .O(\Accum_i[27]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[27]_i_5 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [24]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[24]),
        .O(\Accum_i[27]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[31]_i_3 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [31]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[31]),
        .O(\Accum_i[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[31]_i_4 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [30]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[30]),
        .O(\Accum_i[31]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[31]_i_5 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [29]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[29]),
        .O(\Accum_i[31]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[31]_i_6 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [28]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[28]),
        .O(\Accum_i[31]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Accum_i[32]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I1(out),
        .O(\Accum_i[32]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \Accum_i[32]_i_3 
       (.I0(accumulate),
        .I1(out),
        .I2(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I3(Overflow),
        .O(\Accum_i[32]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[3]_i_2 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [3]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[3]),
        .O(\Accum_i[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[3]_i_3 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [2]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[2]),
        .O(\Accum_i[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[3]_i_4 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [1]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[1]),
        .O(\Accum_i[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[3]_i_5 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [0]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[0]),
        .O(\Accum_i[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[7]_i_2 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [7]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[7]),
        .O(\Accum_i[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[7]_i_3 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [6]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[6]),
        .O(\Accum_i[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[7]_i_4 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [5]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[5]),
        .O(\Accum_i[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \Accum_i[7]_i_5 
       (.I0(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [4]),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I2(out),
        .I3(accumulate),
        .I4(Q[4]),
        .O(\Accum_i[7]_i_5_n_0 ));
  FDRE \Accum_i_reg[0] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[0]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [0]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[10] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[10]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [10]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[11] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[11]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [11]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Accum_i_reg[11]_i_1 
       (.CI(\Accum_i_reg[7]_i_1_n_0 ),
        .CO({\Accum_i_reg[11]_i_1_n_0 ,\Accum_i_reg[11]_i_1_n_1 ,\Accum_i_reg[11]_i_1_n_2 ,\Accum_i_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[11:8]),
        .O(Accum_i1_in[11:8]),
        .S({\Accum_i[11]_i_2_n_0 ,\Accum_i[11]_i_3_n_0 ,\Accum_i[11]_i_4_n_0 ,\Accum_i[11]_i_5_n_0 }));
  FDRE \Accum_i_reg[12] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[12]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [12]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[13] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[13]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [13]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[14] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[14]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [14]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[15] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[15]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [15]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Accum_i_reg[15]_i_1 
       (.CI(\Accum_i_reg[11]_i_1_n_0 ),
        .CO({\Accum_i_reg[15]_i_1_n_0 ,\Accum_i_reg[15]_i_1_n_1 ,\Accum_i_reg[15]_i_1_n_2 ,\Accum_i_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[15:12]),
        .O(Accum_i1_in[15:12]),
        .S({\Accum_i[15]_i_2_n_0 ,\Accum_i[15]_i_3_n_0 ,\Accum_i[15]_i_4_n_0 ,\Accum_i[15]_i_5_n_0 }));
  FDRE \Accum_i_reg[16] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[16]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [16]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[17] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[17]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [17]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[18] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[18]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [18]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[19] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[19]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [19]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Accum_i_reg[19]_i_1 
       (.CI(\Accum_i_reg[15]_i_1_n_0 ),
        .CO({\Accum_i_reg[19]_i_1_n_0 ,\Accum_i_reg[19]_i_1_n_1 ,\Accum_i_reg[19]_i_1_n_2 ,\Accum_i_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[19:16]),
        .O(Accum_i1_in[19:16]),
        .S({\Accum_i[19]_i_2_n_0 ,\Accum_i[19]_i_3_n_0 ,\Accum_i[19]_i_4_n_0 ,\Accum_i[19]_i_5_n_0 }));
  FDRE \Accum_i_reg[1] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[1]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [1]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[20] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[20]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [20]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[21] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[21]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [21]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[22] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[22]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [22]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[23] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[23]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [23]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Accum_i_reg[23]_i_1 
       (.CI(\Accum_i_reg[19]_i_1_n_0 ),
        .CO({\Accum_i_reg[23]_i_1_n_0 ,\Accum_i_reg[23]_i_1_n_1 ,\Accum_i_reg[23]_i_1_n_2 ,\Accum_i_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[23:20]),
        .O(Accum_i1_in[23:20]),
        .S({\Accum_i[23]_i_2_n_0 ,\Accum_i[23]_i_3_n_0 ,\Accum_i[23]_i_4_n_0 ,\Accum_i[23]_i_5_n_0 }));
  FDRE \Accum_i_reg[24] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[24]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [24]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[25] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[25]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [25]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[26] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[26]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [26]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[27] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[27]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [27]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Accum_i_reg[27]_i_1 
       (.CI(\Accum_i_reg[23]_i_1_n_0 ),
        .CO({\Accum_i_reg[27]_i_1_n_0 ,\Accum_i_reg[27]_i_1_n_1 ,\Accum_i_reg[27]_i_1_n_2 ,\Accum_i_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[27:24]),
        .O(Accum_i1_in[27:24]),
        .S({\Accum_i[27]_i_2_n_0 ,\Accum_i[27]_i_3_n_0 ,\Accum_i[27]_i_4_n_0 ,\Accum_i[27]_i_5_n_0 }));
  FDRE \Accum_i_reg[28] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[28]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [28]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[29] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[29]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [29]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[2] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[2]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [2]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[30] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[30]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [30]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[31] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[31]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [31]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Accum_i_reg[31]_i_2 
       (.CI(\Accum_i_reg[27]_i_1_n_0 ),
        .CO({\Accum_i_reg[31]_i_2_n_0 ,\Accum_i_reg[31]_i_2_n_1 ,\Accum_i_reg[31]_i_2_n_2 ,\Accum_i_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[31:28]),
        .O(Accum_i1_in[31:28]),
        .S({\Accum_i[31]_i_3_n_0 ,\Accum_i[31]_i_4_n_0 ,\Accum_i[31]_i_5_n_0 ,\Accum_i[31]_i_6_n_0 }));
  FDRE \Accum_i_reg[32] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[32]),
        .Q(Overflow),
        .R(Accum_i));
  CARRY4 \Accum_i_reg[32]_i_2 
       (.CI(\Accum_i_reg[31]_i_2_n_0 ),
        .CO(\NLW_Accum_i_reg[32]_i_2_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_Accum_i_reg[32]_i_2_O_UNCONNECTED [3:1],Accum_i1_in[32]}),
        .S({1'b0,1'b0,1'b0,\Accum_i[32]_i_3_n_0 }));
  FDRE \Accum_i_reg[3] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[3]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [3]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Accum_i_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\Accum_i_reg[3]_i_1_n_0 ,\Accum_i_reg[3]_i_1_n_1 ,\Accum_i_reg[3]_i_1_n_2 ,\Accum_i_reg[3]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[3:0]),
        .O(Accum_i1_in[3:0]),
        .S({\Accum_i[3]_i_2_n_0 ,\Accum_i[3]_i_3_n_0 ,\Accum_i[3]_i_4_n_0 ,\Accum_i[3]_i_5_n_0 }));
  FDRE \Accum_i_reg[4] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[4]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [4]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[5] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[5]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [5]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[6] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[6]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [6]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[7] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[7]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [7]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Accum_i_reg[7]_i_1 
       (.CI(\Accum_i_reg[3]_i_1_n_0 ),
        .CO({\Accum_i_reg[7]_i_1_n_0 ,\Accum_i_reg[7]_i_1_n_1 ,\Accum_i_reg[7]_i_1_n_2 ,\Accum_i_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O(Accum_i1_in[7:4]),
        .S({\Accum_i[7]_i_2_n_0 ,\Accum_i[7]_i_3_n_0 ,\Accum_i[7]_i_4_n_0 ,\Accum_i[7]_i_5_n_0 }));
  FDRE \Accum_i_reg[8] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[8]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [8]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Accum_i_reg[9] 
       (.C(core_aclk),
        .CE(\Accum_i[32]_i_1_n_0 ),
        .D(Accum_i1_in[9]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [9]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 Incr_by_12_carry
       (.CI(1'b0),
        .CO({Incr_by_12_carry_n_0,Incr_by_12_carry_n_1,Incr_by_12_carry_n_2,Incr_by_12_carry_n_3}),
        .CYINIT(1'b1),
        .DI(DI),
        .O(NLW_Incr_by_12_carry_O_UNCONNECTED[3:0]),
        .S(S));
  CARRY4 Incr_by_12_carry__0
       (.CI(Incr_by_12_carry_n_0),
        .CO({Incr_by_12,Incr_by_12_carry__0_n_1,Incr_by_12_carry__0_n_2,Incr_by_12_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ),
        .O(NLW_Incr_by_12_carry__0_O_UNCONNECTED[3:0]),
        .S(\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ));
  CARRY4 \Incr_by_12_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\Incr_by_12_inferred__0/i__carry_n_0 ,\Incr_by_12_inferred__0/i__carry_n_1 ,\Incr_by_12_inferred__0/i__carry_n_2 ,\Incr_by_12_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({i__carry_i_1_n_0,i__carry_i_2_n_0,i__carry_i_3_n_0,i__carry_i_4_n_0}),
        .O(\NLW_Incr_by_12_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5_n_0,i__carry_i_6_n_0,i__carry_i_7_n_0,i__carry_i_8_n_0}));
  CARRY4 \Incr_by_12_inferred__0/i__carry__0 
       (.CI(\Incr_by_12_inferred__0/i__carry_n_0 ),
        .CO({Incr_by_122_in,\Incr_by_12_inferred__0/i__carry__0_n_1 ,\Incr_by_12_inferred__0/i__carry__0_n_2 ,\Incr_by_12_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({i__carry__0_i_1_n_0,i__carry__0_i_2_n_0,i__carry__0_i_3_n_0,i__carry__0_i_4_n_0}),
        .O(\NLW_Incr_by_12_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({i__carry__0_i_5_n_0,i__carry__0_i_6_n_0,i__carry__0_i_7_n_0,i__carry__0_i_8_n_0}));
  LUT5 #(
    .INIT(32'h80000000)) 
    Incr_by_1_i_1
       (.I0(\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .I1(out),
        .I2(core_aresetn),
        .I3(Incr_by_122_in),
        .I4(Incr_by_12),
        .O(Incr_by_1_i_1_n_0));
  FDRE Incr_by_1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incr_by_1_i_1_n_0),
        .Q(Incr_by_1),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[0]_i_2 
       (.I0(in[3]),
        .I1(Incrementer_i_reg[3]),
        .O(\Incrementer_i[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[0]_i_3 
       (.I0(in[2]),
        .I1(Incrementer_i_reg[2]),
        .O(\Incrementer_i[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[0]_i_4 
       (.I0(in[1]),
        .I1(Incrementer_i_reg[1]),
        .O(\Incrementer_i[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[0]_i_5 
       (.I0(in[0]),
        .I1(Incrementer_i_reg[0]),
        .O(\Incrementer_i[0]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[12]_i_2 
       (.I0(in[15]),
        .I1(Incrementer_i_reg[15]),
        .O(\Incrementer_i[12]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[12]_i_3 
       (.I0(in[14]),
        .I1(Incrementer_i_reg[14]),
        .O(\Incrementer_i[12]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[12]_i_4 
       (.I0(in[13]),
        .I1(Incrementer_i_reg[13]),
        .O(\Incrementer_i[12]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[12]_i_5 
       (.I0(in[12]),
        .I1(Incrementer_i_reg[12]),
        .O(\Incrementer_i[12]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[16]_i_2 
       (.I0(in[19]),
        .I1(Incrementer_i_reg[19]),
        .O(\Incrementer_i[16]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[16]_i_3 
       (.I0(in[18]),
        .I1(Incrementer_i_reg[18]),
        .O(\Incrementer_i[16]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[16]_i_4 
       (.I0(in[17]),
        .I1(Incrementer_i_reg[17]),
        .O(\Incrementer_i[16]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[16]_i_5 
       (.I0(in[16]),
        .I1(Incrementer_i_reg[16]),
        .O(\Incrementer_i[16]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[20]_i_2 
       (.I0(in[23]),
        .I1(Incrementer_i_reg[23]),
        .O(\Incrementer_i[20]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[20]_i_3 
       (.I0(in[22]),
        .I1(Incrementer_i_reg[22]),
        .O(\Incrementer_i[20]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[20]_i_4 
       (.I0(in[21]),
        .I1(Incrementer_i_reg[21]),
        .O(\Incrementer_i[20]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[20]_i_5 
       (.I0(in[20]),
        .I1(Incrementer_i_reg[20]),
        .O(\Incrementer_i[20]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[24]_i_2 
       (.I0(in[27]),
        .I1(Incrementer_i_reg[27]),
        .O(\Incrementer_i[24]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[24]_i_3 
       (.I0(in[26]),
        .I1(Incrementer_i_reg[26]),
        .O(\Incrementer_i[24]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[24]_i_4 
       (.I0(in[25]),
        .I1(Incrementer_i_reg[25]),
        .O(\Incrementer_i[24]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[24]_i_5 
       (.I0(in[24]),
        .I1(Incrementer_i_reg[24]),
        .O(\Incrementer_i[24]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[28]_i_2 
       (.I0(in[31]),
        .I1(Incrementer_i_reg[31]),
        .O(\Incrementer_i[28]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[28]_i_3 
       (.I0(in[30]),
        .I1(Incrementer_i_reg[30]),
        .O(\Incrementer_i[28]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[28]_i_4 
       (.I0(in[29]),
        .I1(Incrementer_i_reg[29]),
        .O(\Incrementer_i[28]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[28]_i_5 
       (.I0(in[28]),
        .I1(Incrementer_i_reg[28]),
        .O(\Incrementer_i[28]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[4]_i_2 
       (.I0(in[7]),
        .I1(Incrementer_i_reg[7]),
        .O(\Incrementer_i[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[4]_i_3 
       (.I0(in[6]),
        .I1(Incrementer_i_reg[6]),
        .O(\Incrementer_i[4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[4]_i_4 
       (.I0(in[5]),
        .I1(Incrementer_i_reg[5]),
        .O(\Incrementer_i[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[4]_i_5 
       (.I0(in[4]),
        .I1(Incrementer_i_reg[4]),
        .O(\Incrementer_i[4]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[8]_i_2 
       (.I0(in[11]),
        .I1(Incrementer_i_reg[11]),
        .O(\Incrementer_i[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[8]_i_3 
       (.I0(in[10]),
        .I1(Incrementer_i_reg[10]),
        .O(\Incrementer_i[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[8]_i_4 
       (.I0(in[9]),
        .I1(Incrementer_i_reg[9]),
        .O(\Incrementer_i[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Incrementer_i[8]_i_5 
       (.I0(in[8]),
        .I1(Incrementer_i_reg[8]),
        .O(\Incrementer_i[8]_i_5_n_0 ));
  FDRE \Incrementer_i_reg[0] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[0]_i_1_n_7 ),
        .Q(Incrementer_i_reg[0]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Incrementer_i_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\Incrementer_i_reg[0]_i_1_n_0 ,\Incrementer_i_reg[0]_i_1_n_1 ,\Incrementer_i_reg[0]_i_1_n_2 ,\Incrementer_i_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(in[3:0]),
        .O({\Incrementer_i_reg[0]_i_1_n_4 ,\Incrementer_i_reg[0]_i_1_n_5 ,\Incrementer_i_reg[0]_i_1_n_6 ,\Incrementer_i_reg[0]_i_1_n_7 }),
        .S({\Incrementer_i[0]_i_2_n_0 ,\Incrementer_i[0]_i_3_n_0 ,\Incrementer_i[0]_i_4_n_0 ,\Incrementer_i[0]_i_5_n_0 }));
  FDRE \Incrementer_i_reg[10] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[8]_i_1_n_5 ),
        .Q(Incrementer_i_reg[10]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[11] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[8]_i_1_n_4 ),
        .Q(Incrementer_i_reg[11]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[12] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[12]_i_1_n_7 ),
        .Q(Incrementer_i_reg[12]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Incrementer_i_reg[12]_i_1 
       (.CI(\Incrementer_i_reg[8]_i_1_n_0 ),
        .CO({\Incrementer_i_reg[12]_i_1_n_0 ,\Incrementer_i_reg[12]_i_1_n_1 ,\Incrementer_i_reg[12]_i_1_n_2 ,\Incrementer_i_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(in[15:12]),
        .O({\Incrementer_i_reg[12]_i_1_n_4 ,\Incrementer_i_reg[12]_i_1_n_5 ,\Incrementer_i_reg[12]_i_1_n_6 ,\Incrementer_i_reg[12]_i_1_n_7 }),
        .S({\Incrementer_i[12]_i_2_n_0 ,\Incrementer_i[12]_i_3_n_0 ,\Incrementer_i[12]_i_4_n_0 ,\Incrementer_i[12]_i_5_n_0 }));
  FDRE \Incrementer_i_reg[13] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[12]_i_1_n_6 ),
        .Q(Incrementer_i_reg[13]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[14] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[12]_i_1_n_5 ),
        .Q(Incrementer_i_reg[14]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[15] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[12]_i_1_n_4 ),
        .Q(Incrementer_i_reg[15]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[16] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[16]_i_1_n_7 ),
        .Q(Incrementer_i_reg[16]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Incrementer_i_reg[16]_i_1 
       (.CI(\Incrementer_i_reg[12]_i_1_n_0 ),
        .CO({\Incrementer_i_reg[16]_i_1_n_0 ,\Incrementer_i_reg[16]_i_1_n_1 ,\Incrementer_i_reg[16]_i_1_n_2 ,\Incrementer_i_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(in[19:16]),
        .O({\Incrementer_i_reg[16]_i_1_n_4 ,\Incrementer_i_reg[16]_i_1_n_5 ,\Incrementer_i_reg[16]_i_1_n_6 ,\Incrementer_i_reg[16]_i_1_n_7 }),
        .S({\Incrementer_i[16]_i_2_n_0 ,\Incrementer_i[16]_i_3_n_0 ,\Incrementer_i[16]_i_4_n_0 ,\Incrementer_i[16]_i_5_n_0 }));
  FDRE \Incrementer_i_reg[17] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[16]_i_1_n_6 ),
        .Q(Incrementer_i_reg[17]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[18] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[16]_i_1_n_5 ),
        .Q(Incrementer_i_reg[18]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[19] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[16]_i_1_n_4 ),
        .Q(Incrementer_i_reg[19]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[1] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[0]_i_1_n_6 ),
        .Q(Incrementer_i_reg[1]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[20] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[20]_i_1_n_7 ),
        .Q(Incrementer_i_reg[20]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Incrementer_i_reg[20]_i_1 
       (.CI(\Incrementer_i_reg[16]_i_1_n_0 ),
        .CO({\Incrementer_i_reg[20]_i_1_n_0 ,\Incrementer_i_reg[20]_i_1_n_1 ,\Incrementer_i_reg[20]_i_1_n_2 ,\Incrementer_i_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(in[23:20]),
        .O({\Incrementer_i_reg[20]_i_1_n_4 ,\Incrementer_i_reg[20]_i_1_n_5 ,\Incrementer_i_reg[20]_i_1_n_6 ,\Incrementer_i_reg[20]_i_1_n_7 }),
        .S({\Incrementer_i[20]_i_2_n_0 ,\Incrementer_i[20]_i_3_n_0 ,\Incrementer_i[20]_i_4_n_0 ,\Incrementer_i[20]_i_5_n_0 }));
  FDRE \Incrementer_i_reg[21] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[20]_i_1_n_6 ),
        .Q(Incrementer_i_reg[21]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[22] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[20]_i_1_n_5 ),
        .Q(Incrementer_i_reg[22]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[23] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[20]_i_1_n_4 ),
        .Q(Incrementer_i_reg[23]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[24] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[24]_i_1_n_7 ),
        .Q(Incrementer_i_reg[24]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Incrementer_i_reg[24]_i_1 
       (.CI(\Incrementer_i_reg[20]_i_1_n_0 ),
        .CO({\Incrementer_i_reg[24]_i_1_n_0 ,\Incrementer_i_reg[24]_i_1_n_1 ,\Incrementer_i_reg[24]_i_1_n_2 ,\Incrementer_i_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(in[27:24]),
        .O({\Incrementer_i_reg[24]_i_1_n_4 ,\Incrementer_i_reg[24]_i_1_n_5 ,\Incrementer_i_reg[24]_i_1_n_6 ,\Incrementer_i_reg[24]_i_1_n_7 }),
        .S({\Incrementer_i[24]_i_2_n_0 ,\Incrementer_i[24]_i_3_n_0 ,\Incrementer_i[24]_i_4_n_0 ,\Incrementer_i[24]_i_5_n_0 }));
  FDRE \Incrementer_i_reg[25] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[24]_i_1_n_6 ),
        .Q(Incrementer_i_reg[25]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[26] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[24]_i_1_n_5 ),
        .Q(Incrementer_i_reg[26]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[27] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[24]_i_1_n_4 ),
        .Q(Incrementer_i_reg[27]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[28] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[28]_i_1_n_7 ),
        .Q(Incrementer_i_reg[28]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Incrementer_i_reg[28]_i_1 
       (.CI(\Incrementer_i_reg[24]_i_1_n_0 ),
        .CO({\NLW_Incrementer_i_reg[28]_i_1_CO_UNCONNECTED [3],\Incrementer_i_reg[28]_i_1_n_1 ,\Incrementer_i_reg[28]_i_1_n_2 ,\Incrementer_i_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,in[30:28]}),
        .O({\Incrementer_i_reg[28]_i_1_n_4 ,\Incrementer_i_reg[28]_i_1_n_5 ,\Incrementer_i_reg[28]_i_1_n_6 ,\Incrementer_i_reg[28]_i_1_n_7 }),
        .S({\Incrementer_i[28]_i_2_n_0 ,\Incrementer_i[28]_i_3_n_0 ,\Incrementer_i[28]_i_4_n_0 ,\Incrementer_i[28]_i_5_n_0 }));
  FDRE \Incrementer_i_reg[29] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[28]_i_1_n_6 ),
        .Q(Incrementer_i_reg[29]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[2] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[0]_i_1_n_5 ),
        .Q(Incrementer_i_reg[2]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[30] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[28]_i_1_n_5 ),
        .Q(Incrementer_i_reg[30]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[31] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[28]_i_1_n_4 ),
        .Q(Incrementer_i_reg[31]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[3] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[0]_i_1_n_4 ),
        .Q(Incrementer_i_reg[3]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[4] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[4]_i_1_n_7 ),
        .Q(Incrementer_i_reg[4]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Incrementer_i_reg[4]_i_1 
       (.CI(\Incrementer_i_reg[0]_i_1_n_0 ),
        .CO({\Incrementer_i_reg[4]_i_1_n_0 ,\Incrementer_i_reg[4]_i_1_n_1 ,\Incrementer_i_reg[4]_i_1_n_2 ,\Incrementer_i_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(in[7:4]),
        .O({\Incrementer_i_reg[4]_i_1_n_4 ,\Incrementer_i_reg[4]_i_1_n_5 ,\Incrementer_i_reg[4]_i_1_n_6 ,\Incrementer_i_reg[4]_i_1_n_7 }),
        .S({\Incrementer_i[4]_i_2_n_0 ,\Incrementer_i[4]_i_3_n_0 ,\Incrementer_i[4]_i_4_n_0 ,\Incrementer_i[4]_i_5_n_0 }));
  FDRE \Incrementer_i_reg[5] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[4]_i_1_n_6 ),
        .Q(Incrementer_i_reg[5]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[6] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[4]_i_1_n_5 ),
        .Q(Incrementer_i_reg[6]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[7] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[4]_i_1_n_4 ),
        .Q(Incrementer_i_reg[7]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_i_reg[8] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[8]_i_1_n_7 ),
        .Q(Incrementer_i_reg[8]),
        .R(\s_level_out_bus_d4_reg[2] ));
  CARRY4 \Incrementer_i_reg[8]_i_1 
       (.CI(\Incrementer_i_reg[4]_i_1_n_0 ),
        .CO({\Incrementer_i_reg[8]_i_1_n_0 ,\Incrementer_i_reg[8]_i_1_n_1 ,\Incrementer_i_reg[8]_i_1_n_2 ,\Incrementer_i_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(in[11:8]),
        .O({\Incrementer_i_reg[8]_i_1_n_4 ,\Incrementer_i_reg[8]_i_1_n_5 ,\Incrementer_i_reg[8]_i_1_n_6 ,\Incrementer_i_reg[8]_i_1_n_7 }),
        .S({\Incrementer_i[8]_i_2_n_0 ,\Incrementer_i[8]_i_3_n_0 ,\Incrementer_i[8]_i_4_n_0 ,\Incrementer_i[8]_i_5_n_0 }));
  FDRE \Incrementer_i_reg[9] 
       (.C(core_aclk),
        .CE(Incr_by_1),
        .D(\Incrementer_i_reg[8]_i_1_n_6 ),
        .Q(Incrementer_i_reg[9]),
        .R(\s_level_out_bus_d4_reg[2] ));
  FDRE \Incrementer_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[0]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [0]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[10]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [10]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[11]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [11]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[12]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [12]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[13]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [13]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[14]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [14]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[15]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [15]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[16]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [16]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[17]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [17]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[18]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [18]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[19]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [19]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[1]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [1]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[20]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [20]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[21]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [21]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[22]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [22]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[23]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [23]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[24]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [24]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[25]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [25]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[26]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [26]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[27]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [27]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[28]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [28]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[29]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [29]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[2]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [2]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[30]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [30]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[31]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [31]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[3]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [3]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[4]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [4]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[5]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [5]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[6]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [6]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[7]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [7]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[8]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [8]),
        .R(core_aresetn_0));
  FDRE \Incrementer_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Incrementer_i_reg[9]),
        .Q(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [9]),
        .R(core_aresetn_0));
  FDRE Overflow_D1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Overflow),
        .Q(Overflow_D1),
        .R(core_aresetn_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_1
       (.I0(Q[14]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [14]),
        .I2(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [15]),
        .I3(Q[15]),
        .O(i__carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2
       (.I0(Q[12]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [12]),
        .I2(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [13]),
        .I3(Q[13]),
        .O(i__carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_3
       (.I0(Q[10]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [10]),
        .I2(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [11]),
        .I3(Q[11]),
        .O(i__carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_4
       (.I0(Q[8]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [8]),
        .I2(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [9]),
        .I3(Q[9]),
        .O(i__carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_5
       (.I0(Q[14]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [14]),
        .I2(Q[15]),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [15]),
        .O(i__carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_6
       (.I0(Q[12]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [12]),
        .I2(Q[13]),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [13]),
        .O(i__carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_7
       (.I0(Q[10]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [10]),
        .I2(Q[11]),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [11]),
        .O(i__carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_8
       (.I0(Q[8]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [8]),
        .I2(Q[9]),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [9]),
        .O(i__carry__0_i_8_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1
       (.I0(Q[6]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [6]),
        .I2(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [7]),
        .I3(Q[7]),
        .O(i__carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2
       (.I0(Q[4]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [4]),
        .I2(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [5]),
        .I3(Q[5]),
        .O(i__carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3
       (.I0(Q[2]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [2]),
        .I2(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [3]),
        .I3(Q[3]),
        .O(i__carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4
       (.I0(Q[0]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [0]),
        .I2(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [1]),
        .I3(Q[1]),
        .O(i__carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5
       (.I0(Q[6]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [6]),
        .I2(Q[7]),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [7]),
        .O(i__carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6
       (.I0(Q[4]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [4]),
        .I2(Q[5]),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [5]),
        .O(i__carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7
       (.I0(Q[2]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [2]),
        .I2(Q[3]),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [3]),
        .O(i__carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8
       (.I0(Q[0]),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [0]),
        .I2(Q[1]),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] [1]),
        .O(i__carry_i_8_n_0));
  FDRE \incrementer_input_reg_val_i_reg[0] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [0]),
        .Q(in[0]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[10] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [10]),
        .Q(in[10]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[11] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [11]),
        .Q(in[11]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[12] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [12]),
        .Q(in[12]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[13] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [13]),
        .Q(in[13]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[14] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [14]),
        .Q(in[14]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[15] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [15]),
        .Q(in[15]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[16] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [16]),
        .Q(in[16]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[17] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [17]),
        .Q(in[17]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[18] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [18]),
        .Q(in[18]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[19] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [19]),
        .Q(in[19]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[1] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [1]),
        .Q(in[1]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[20] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [20]),
        .Q(in[20]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[21] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [21]),
        .Q(in[21]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[22] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [22]),
        .Q(in[22]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[23] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [23]),
        .Q(in[23]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[24] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [24]),
        .Q(in[24]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[25] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [25]),
        .Q(in[25]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[26] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [26]),
        .Q(in[26]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[27] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [27]),
        .Q(in[27]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[28] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [28]),
        .Q(in[28]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[29] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [29]),
        .Q(in[29]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[2] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [2]),
        .Q(in[2]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[30] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [30]),
        .Q(in[30]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[31] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [31]),
        .Q(in[31]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[3] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [3]),
        .Q(in[3]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[4] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [4]),
        .Q(in[4]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[5] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [5]),
        .Q(in[5]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[6] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [6]),
        .Q(in[6]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[7] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [7]),
        .Q(in[7]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[8] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [8]),
        .Q(in[8]),
        .R(1'b0));
  FDRE \incrementer_input_reg_val_i_reg[9] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] [9]),
        .Q(in[9]),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h6)) 
    p_in_d1_cdc_from_i_1__2
       (.I0(Acc_OF_0),
        .I1(p_in_d1_cdc_from_reg),
        .O(p_in_d1_cdc_from_reg0));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_advanced
   (out,
    SR,
    interrupt,
    trigger_in_ack,
    s_axi_rvalid,
    s_axi_arready,
    s_axi_awready,
    s_axi_bvalid,
    s_axi_wready,
    Q,
    \dout_reg[61] ,
    \dout_reg[31] ,
    \dout_reg[31]_0 ,
    s_axi_rdata,
    \rptr_reg[4] ,
    F1_Wr_En,
    O322,
    O323,
    E,
    O324,
    O325,
    \wptr_reg[0] ,
    O326,
    O327,
    \wptr_reg[0]_0 ,
    O328,
    O329,
    wren0,
    O330,
    O333,
    \wptr_reg[0]_1 ,
    O334,
    O335,
    O336,
    \wptr_reg[5] ,
    O337,
    O338,
    O339,
    O340,
    O342,
    O343,
    F1_Wr_Data,
    slot_0_axi_aclk,
    core_aclk,
    din,
    dout0_0,
    dout0_1,
    dout0_2,
    dout0_3,
    dout0_4,
    ext_clk_0,
    UNCONN_IN,
    s_axi_aclk,
    trigger_in,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_rready,
    s_axi_aresetn,
    s_axi_arvalid,
    s_axi_bready,
    core_aresetn,
    slot_0_axi_aresetn,
    ext_rstn_0,
    dout0,
    \Count_Out_i_reg[31] ,
    \Rd_Latency_Fifo_Wr_Data_reg[31] ,
    \Beat_fifo_Wr_data_reg[61] ,
    \Slv_Wr_Idle_Fifo_Wr_data_reg[31] ,
    D,
    s_axi_awaddr,
    s_axi_wdata,
    s_level_out_d4_reg,
    s_axi_araddr,
    s_level_out_d4_reg_0);
  output [0:0]out;
  output [0:0]SR;
  output interrupt;
  output trigger_in_ack;
  output s_axi_rvalid;
  output s_axi_arready;
  output s_axi_awready;
  output s_axi_bvalid;
  output s_axi_wready;
  output [32:0]Q;
  output [63:0]\dout_reg[61] ;
  output [32:0]\dout_reg[31] ;
  output [31:0]\dout_reg[31]_0 ;
  output [31:0]s_axi_rdata;
  output [4:0]\rptr_reg[4] ;
  output F1_Wr_En;
  output [4:0]O322;
  output [4:0]O323;
  output [0:0]E;
  output [4:0]O324;
  output [4:0]O325;
  output [0:0]\wptr_reg[0] ;
  output [4:0]O326;
  output [4:0]O327;
  output [0:0]\wptr_reg[0]_0 ;
  output [4:0]O328;
  output [4:0]O329;
  output wren0;
  output [4:0]O330;
  output [4:0]O333;
  output [0:0]\wptr_reg[0]_1 ;
  output [4:0]O334;
  output [4:0]O335;
  output [4:0]O336;
  output [0:0]\wptr_reg[5] ;
  output [4:0]O337;
  output [4:0]O338;
  output [4:0]O339;
  output [4:0]O340;
  output [4:0]O342;
  output [4:0]O343;
  output F1_Wr_Data;
  input slot_0_axi_aclk;
  input core_aclk;
  input [29:0]din;
  input dout0_0;
  input dout0_1;
  input dout0_2;
  input dout0_3;
  input dout0_4;
  input ext_clk_0;
  input [2:0]UNCONN_IN;
  input s_axi_aclk;
  input trigger_in;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input s_axi_rready;
  input s_axi_aresetn;
  input s_axi_arvalid;
  input s_axi_bready;
  input core_aresetn;
  input slot_0_axi_aresetn;
  input ext_rstn_0;
  input [32:0]dout0;
  input [32:0]\Count_Out_i_reg[31] ;
  input [32:0]\Rd_Latency_Fifo_Wr_Data_reg[31] ;
  input [63:0]\Beat_fifo_Wr_data_reg[61] ;
  input [31:0]\Slv_Wr_Idle_Fifo_Wr_data_reg[31] ;
  input [1:0]D;
  input [15:0]s_axi_awaddr;
  input [31:0]s_axi_wdata;
  input [0:0]s_level_out_d4_reg;
  input [15:0]s_axi_araddr;
  input s_level_out_d4_reg_0;

  wire ARID_reg;
  wire Addr_3downto0_is_0x4;
  wire Addr_3downto0_is_0x8;
  wire Addr_3downto0_is_0xC;
  wire Addr_7downto4_is_0x0;
  wire [63:0]\Beat_fifo_Wr_data_reg[61] ;
  wire [9:2]Bus2IP_Addr;
  wire Bus2IP_RdCE;
  wire [9:0]Control_Bits_sync;
  wire Control_Set_Rd_En;
  wire Control_Set_Wr_En;
  wire [32:0]\Count_Out_i_reg[31] ;
  wire [1:0]D;
  wire [0:0]E;
  wire En_Id_Based;
  wire Event_Log_En;
  wire Event_Log_Set_Rd_En;
  wire Ext_Event_going_on;
  wire Ext_Trig_Metric_en;
  wire External_Event_Cnt_En;
  wire F12_Rd_Vld;
  wire F1_Rd_Data;
  wire F1_Wr_Data;
  wire F1_Wr_En;
  wire F2_Rd_Data;
  wire F34_Rd_Vld_reg__0;
  wire [34:0]FBC1_Rd_Data;
  wire FBC_Rd_Data;
  wire FBC_Rd_Vld;
  wire [0:0]FSWI1_Rd_Data;
  wire FSWI_Rd_Data;
  wire FSWI_Rd_Vld;
  wire First_Read;
  wire First_Read_reg;
  wire First_Write;
  wire \GEN_CONTROL_SYNC.control_sig_cdc_sync_n_12 ;
  wire \GEN_CONTROL_SYNC.control_sig_cdc_sync_n_6 ;
  wire \GEN_CONTROL_SYNC.control_sig_cdc_sync_n_9 ;
  wire \GEN_INTERVAL_CNT_SYNC.sample_interval_cnt_cdc_sync_n_3 ;
  wire \GEN_SYNC[0].cdc_sync_inst/p_0_in0_in ;
  wire \GEN_SYNC[0].cdc_sync_inst/p_in_d1_cdc_from_reg0 ;
  wire \GEN_SYNC[1].cdc_sync_inst/p_0_in0_in ;
  wire \GEN_SYNC[1].cdc_sync_inst/p_in_d1_cdc_from_reg0 ;
  wire \GEN_SYNC[3].cdc_sync_inst/p_0_in0_in ;
  wire \GEN_SYNC[3].cdc_sync_inst/p_in_d1_cdc_from_reg0 ;
  wire [31:0]Global_Clk_Cnt;
  wire Global_Clk_Cnt_En;
  wire Global_Clk_Cnt_LSB_Rd_En;
  wire Global_Clk_Cnt_MSB_Rd_En;
  wire Global_Clk_Cnt_Reset;
  wire Global_Clk_Cnt_Set_Rd_En;
  wire Global_Intr_En;
  wire Global_Intr_En_i_1_n_0;
  wire ID_Mask_Rd_En;
  wire ID_Mask_Wr_En;
  wire [31:0]IP2Bus_Data;
  wire IP2Bus_DataValid;
  wire Incr_Reg_Set_Rd_En;
  wire [31:0]Incrementer_0;
  wire Interval_Cnt_En;
  wire Interval_Cnt_En0;
  wire Interval_Cnt_En_i_1_n_0;
  wire Interval_Cnt_En_sync;
  wire Interval_Cnt_Ld;
  wire Interval_Cnt_Ld_i_1_n_0;
  wire Interval_Cnt_Ld_sync;
  wire [12:0]Intr_In_sync;
  wire [12:0]Intr_Reg_IER;
  wire Intr_Reg_IER_Wr_En;
  wire [12:0]Intr_Reg_ISR;
  wire Intr_Reg_Set_Rd_En;
  wire Last_Read_reg;
  wire Last_Write;
  wire Lat_Sample_Reg_Rd_En_d2;
  wire Lat_Sample_Reg_Rd_En_d3;
  wire Latency_ID_Rd_En;
  wire Latency_ID_Wr_En;
  wire [31:0]Metric_Cnt_0;
  wire Metric_Cnt_Reg_Set_Rd_En;
  wire [3:0]Metric_Sel_0;
  wire Metric_Sel_Reg_0_Rd_En;
  wire Metric_Sel_Reg_0_Wr_En;
  wire Metrics_Cnt_En;
  wire Metrics_Cnt_En_Int;
  wire Metrics_Cnt_Reset;
  wire Metrics_Cnt_Reset_Final__0;
  wire Mst_Rd_Idle_Cnt_En;
  wire Mst_Rd_Idle_Cnt_En0;
  wire No_Rd_Ready_i_1_n_0;
  wire No_Wr_Ready;
  wire No_Wr_Ready_i_1_n_0;
  wire Num_BValids_En;
  wire Num_BValids_En0;
  wire Num_RLasts_En0;
  wire [4:0]O322;
  wire [4:0]O323;
  wire [4:0]O324;
  wire [4:0]O325;
  wire [4:0]O326;
  wire [4:0]O327;
  wire [4:0]O328;
  wire [4:0]O329;
  wire [4:0]O330;
  wire [4:0]O333;
  wire [4:0]O334;
  wire [4:0]O335;
  wire [4:0]O336;
  wire [4:0]O337;
  wire [4:0]O338;
  wire [4:0]O339;
  wire [4:0]O340;
  wire [4:0]O342;
  wire [4:0]O343;
  wire [32:0]Q;
  wire [0:0]RID_Mask;
  wire [15:0]Range_Reg_0;
  wire Range_Reg_0_CDC0;
  wire Rd_Add_Issue6_out;
  wire Rd_En_sync;
  wire Rd_Lat_Start;
  wire Rd_Latency_Fifo_Empty;
  wire [32:0]\Rd_Latency_Fifo_Wr_Data_reg[31] ;
  wire Rd_Latency_Fifo_Wr_En;
  wire Rd_Latency_Fifo_Wr_En1;
  wire Read_Beat_Cnt_En0;
  wire Read_Beat_Cnt_En1;
  wire Read_Latency_One;
  wire Read_going_on;
  wire Reset_On_Sample_Int_Lapse;
  wire Reset_On_Sample_Int_Lapse_i_1_n_0;
  wire Reset_On_Sample_Int_Lapse_sync;
  wire Rng_Reg_Set_Rd_En;
  wire Rtrans_Cnt_En0;
  wire [31:0]S0_Max_Read_Latency;
  wire [31:0]S0_Max_Write_Latency;
  wire [31:0]S0_Min_Read_Latency;
  wire [0:0]S0_Min_Write_Latency;
  wire [2:2]S0_Read_Byte_Cnt;
  wire S0_Read_Byte_Cnt_En;
  wire [31:0]S0_Read_Latency;
  wire [2:2]S0_S_Null_Byte_Cnt;
  wire [2:0]S0_Write_Latency;
  wire [0:0]SR;
  wire Samp_Incr_Reg_Set_Rd_En;
  wire [31:0]Samp_Incrementer_0;
  wire [31:0]Samp_Metric_Cnt_0;
  wire Samp_Metric_Cnt_Reg_Set_Rd_En;
  wire Sample_Cnt_Ld;
  wire Sample_En__0;
  wire [31:0]Sample_Interval;
  wire Sample_Interval_Cnt_Lapse;
  wire Sample_Interval_i_reg_CDC0;
  wire Sel_Reg_Set_Rd_En;
  wire [67:2]Slot_0_Sync_Data_Out;
  wire Slot_0_Sync_Data_Valid;
  wire Slv_Wr_Idle_Fifo_Wr_data;
  wire [31:0]\Slv_Wr_Idle_Fifo_Wr_data_reg[31] ;
  wire Status_Reg_Set_Rd_En;
  wire Streaming_FIFO_Reset;
  wire [2:0]UNCONN_IN;
  wire Use_Ext_Trig;
  wire Use_Ext_Trig_Log;
  wire [0:0]WID_Mask;
  wire Wr_Idle;
  wire Wr_Lat_End;
  wire Wr_Lat_Start;
  wire Write_Beat;
  wire Write_Beat_Cnt_En;
  wire Write_Latency_En;
  wire Write_going_on;
  wire Write_iss_going_on;
  wire Wtrans_Cnt_En0;
  wire axi_interface_inst_n_13;
  wire axi_interface_inst_n_14;
  wire axi_interface_inst_n_15;
  wire axi_interface_inst_n_17;
  wire axi_interface_inst_n_19;
  wire axi_interface_inst_n_20;
  wire axi_interface_inst_n_21;
  wire axi_interface_inst_n_23;
  wire axi_interface_inst_n_40;
  wire [31:0]\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in ;
  wire \axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in_Valid ;
  wire [15:15]\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/GEN_MUX_N_CNT.acc_n_incr_inst/Accum_i ;
  wire [31:0]\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/incrementer_input_reg_val ;
  wire \cdc_sync_inst1/p_0_in ;
  wire \cdc_sync_inst1/p_1_in ;
  wire \cdc_sync_inst1/s_out_re ;
  wire \cdc_sync_inst2/p_0_in ;
  wire \cdc_sync_inst2/p_0_in0_in ;
  wire \cdc_sync_inst2/p_1_in ;
  wire \cdc_sync_inst2/p_in_d1_cdc_from_reg0 ;
  wire \cdc_sync_inst2/s_out_re ;
  wire core_aclk;
  wire core_aresetn;
  wire [29:0]din;
  wire [32:0]dout0;
  wire dout0_0;
  wire dout0_1;
  wire dout0_2;
  wire dout0_3;
  wire dout0_4;
  wire [32:0]\dout_reg[31] ;
  wire [31:0]\dout_reg[31]_0 ;
  wire [63:0]\dout_reg[61] ;
  wire ext_clk_0;
  wire ext_rstn_0;
  wire interrupt;
  wire metric_calc_inst0_n_177;
  wire metric_calc_inst0_n_178;
  wire metric_calc_inst0_n_179;
  wire metric_calc_inst0_n_19;
  wire metric_calc_inst0_n_21;
  wire metric_calc_inst0_n_242;
  wire metric_calc_inst0_n_245;
  wire metric_calc_inst0_n_26;
  wire metric_calc_inst0_n_29;
  wire metric_calc_inst0_n_308;
  wire metric_calc_inst0_n_503;
  wire metric_calc_inst0_n_504;
  wire metric_calc_inst0_n_63;
  wire metric_calc_inst0_n_67;
  wire metric_calc_inst0_n_68;
  wire metric_counters_inst_n_1;
  wire metric_counters_inst_n_10;
  wire metric_counters_inst_n_11;
  wire metric_counters_inst_n_12;
  wire metric_counters_inst_n_13;
  wire metric_counters_inst_n_14;
  wire metric_counters_inst_n_15;
  wire metric_counters_inst_n_16;
  wire metric_counters_inst_n_2;
  wire metric_counters_inst_n_3;
  wire metric_counters_inst_n_4;
  wire metric_counters_inst_n_5;
  wire metric_counters_inst_n_6;
  wire metric_counters_inst_n_7;
  wire metric_counters_inst_n_8;
  wire metric_counters_inst_n_9;
  wire mon_fifo_ext_event0_inst_n_0;
  wire mon_fifo_ext_event0_inst_n_1;
  wire mon_fifo_ext_event0_inst_n_2;
  wire mon_fifo_inst_0_n_1;
  wire mon_fifo_inst_0_n_12;
  wire mon_fifo_inst_0_n_13;
  wire mon_fifo_inst_0_n_14;
  wire mon_fifo_inst_0_n_15;
  wire mon_fifo_inst_0_n_24;
  wire mon_fifo_inst_0_n_26;
  wire [0:0]out;
  wire p_0_out;
  wire p_10_out11_out;
  wire p_12_out;
  wire p_13_out;
  wire p_14_out;
  wire p_1_out;
  wire p_23_in;
  wire p_2_out;
  wire p_2_out0_out;
  wire p_2_out3_out;
  wire p_3_out;
  wire p_40_in;
  wire p_4_out;
  wire p_5_out;
  wire p_6_out7_out;
  wire p_8_out;
  wire p_9_out;
  wire rd_latency_end;
  wire rd_latency_start;
  wire register_module_inst_n_100;
  wire register_module_inst_n_101;
  wire register_module_inst_n_102;
  wire register_module_inst_n_103;
  wire register_module_inst_n_104;
  wire register_module_inst_n_105;
  wire register_module_inst_n_106;
  wire register_module_inst_n_107;
  wire register_module_inst_n_108;
  wire register_module_inst_n_109;
  wire register_module_inst_n_110;
  wire register_module_inst_n_111;
  wire register_module_inst_n_112;
  wire register_module_inst_n_113;
  wire register_module_inst_n_114;
  wire register_module_inst_n_115;
  wire register_module_inst_n_116;
  wire register_module_inst_n_117;
  wire register_module_inst_n_118;
  wire register_module_inst_n_119;
  wire register_module_inst_n_120;
  wire register_module_inst_n_121;
  wire register_module_inst_n_122;
  wire register_module_inst_n_123;
  wire register_module_inst_n_124;
  wire register_module_inst_n_125;
  wire register_module_inst_n_126;
  wire register_module_inst_n_127;
  wire register_module_inst_n_128;
  wire register_module_inst_n_129;
  wire register_module_inst_n_130;
  wire register_module_inst_n_131;
  wire register_module_inst_n_132;
  wire register_module_inst_n_133;
  wire register_module_inst_n_134;
  wire register_module_inst_n_135;
  wire register_module_inst_n_136;
  wire register_module_inst_n_137;
  wire register_module_inst_n_138;
  wire register_module_inst_n_139;
  wire register_module_inst_n_140;
  wire register_module_inst_n_141;
  wire register_module_inst_n_142;
  wire register_module_inst_n_143;
  wire register_module_inst_n_144;
  wire register_module_inst_n_145;
  wire register_module_inst_n_26;
  wire register_module_inst_n_35;
  wire register_module_inst_n_37;
  wire register_module_inst_n_41;
  wire register_module_inst_n_42;
  wire register_module_inst_n_43;
  wire register_module_inst_n_44;
  wire register_module_inst_n_61;
  wire register_module_inst_n_62;
  wire register_module_inst_n_63;
  wire register_module_inst_n_64;
  wire register_module_inst_n_65;
  wire register_module_inst_n_66;
  wire register_module_inst_n_67;
  wire register_module_inst_n_68;
  wire register_module_inst_n_69;
  wire register_module_inst_n_70;
  wire register_module_inst_n_71;
  wire register_module_inst_n_72;
  wire register_module_inst_n_75;
  wire register_module_inst_n_78;
  wire register_module_inst_n_79;
  wire register_module_inst_n_80;
  wire register_module_inst_n_81;
  wire register_module_inst_n_82;
  wire register_module_inst_n_83;
  wire register_module_inst_n_84;
  wire register_module_inst_n_85;
  wire register_module_inst_n_86;
  wire register_module_inst_n_87;
  wire register_module_inst_n_88;
  wire register_module_inst_n_89;
  wire register_module_inst_n_90;
  wire register_module_inst_n_91;
  wire register_module_inst_n_92;
  wire register_module_inst_n_93;
  wire register_module_inst_n_94;
  wire register_module_inst_n_95;
  wire register_module_inst_n_96;
  wire register_module_inst_n_97;
  wire register_module_inst_n_98;
  wire register_module_inst_n_99;
  wire rid_match_reg;
  wire [4:0]\rptr_reg[4] ;
  (* MAX_FANOUT = "300" *) (* RTL_MAX_FANOUT = "found" *) wire rst_int_n;
  (* MAX_FANOUT = "300" *) (* RTL_MAX_FANOUT = "found" *) wire rst_int_n_0;
  wire s_axi_aclk;
  wire [15:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [15:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire [0:0]s_level_out_bus_d6;
  wire [0:0]s_level_out_d4_reg;
  wire s_level_out_d4_reg_0;
  wire slot_0_axi_aclk;
  wire slot_0_axi_aresetn;
  wire trigger_in;
  wire trigger_in_ack;
  wire trigger_in_sync;
  wire update_max_Wr_Lat;
  wire update_max_Wr_Lat_i_1_n_0;
  wire update_min_Wr_Lat;
  wire update_min_Wr_Lat_i_1_n_0;
  wire wid_match_reg;
  wire wid_match_reg_i_1_n_0;
  wire [0:0]\wptr_reg[0] ;
  wire [0:0]\wptr_reg[0]_0 ;
  wire [0:0]\wptr_reg[0]_1 ;
  wire [0:0]\wptr_reg[5] ;
  wire wr_latency_end;
  wire wr_latency_start;
  wire wren0;

  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized0 \GEN_CONTROL_SYNC.control_sig_cdc_sync 
       (.\Count_Out_i_reg[0] (\GEN_CONTROL_SYNC.control_sig_cdc_sync_n_12 ),
        .D({Use_Ext_Trig_Log,Use_Ext_Trig,Streaming_FIFO_Reset,En_Id_Based,Global_Clk_Cnt_Reset,Global_Clk_Cnt_En,Event_Log_En,Metrics_Cnt_Reset,Metrics_Cnt_En}),
        .E(F1_Wr_En),
        .Ext_Trig_Metric_en(Ext_Trig_Metric_en),
        .\GEN_ARSIZE_F1.Num_BValids_En_reg (\GEN_CONTROL_SYNC.control_sig_cdc_sync_n_9 ),
        .Metrics_Cnt_En_Int(Metrics_Cnt_En_Int),
        .Q(Slot_0_Sync_Data_Out[5]),
        .RID_Mask(RID_Mask),
        .Rd_Latency_Fifo_Wr_En(Rd_Latency_Fifo_Wr_En),
        .Read_Beat_Cnt_En1(Read_Beat_Cnt_En1),
        .Slot_0_Sync_Data_Valid(Slot_0_Sync_Data_Valid),
        .Wr_Add_Issue_reg(metric_calc_inst0_n_19),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(SR),
        .out({Control_Bits_sync[9],Control_Bits_sync[5:3],out,Control_Bits_sync[0]}),
        .rst_int_n_reg(\GEN_CONTROL_SYNC.control_sig_cdc_sync_n_6 ),
        .\wptr_reg[0] (wren0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized1 \GEN_INTERVAL_CNT_SYNC.sample_interval_cnt_cdc_sync 
       (.D({Reset_On_Sample_Int_Lapse_sync,Interval_Cnt_Ld_sync,Interval_Cnt_En_sync}),
        .E(\GEN_INTERVAL_CNT_SYNC.sample_interval_cnt_cdc_sync_n_3 ),
        .Reset_On_Sample_Int_Lapse_reg({Reset_On_Sample_Int_Lapse,Interval_Cnt_Ld,Interval_Cnt_En}),
        .Sample_Cnt_Ld(Sample_Cnt_Ld),
        .Sample_Interval_Cnt_Lapse(Sample_Interval_Cnt_Lapse),
        .core_aclk(core_aclk),
        .core_aresetn(SR),
        .out(Control_Bits_sync[0]));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_intr_sync \GEN_INTR_ASYNC.intr_sync_module_inst 
       (.Intr_In_sync(Intr_In_sync),
        .SR(s_level_out_bus_d6),
        .core_aclk(core_aclk),
        .core_aresetn(SR),
        .out(\GEN_SYNC[0].cdc_sync_inst/p_0_in0_in ),
        .p_in_d1_cdc_from_reg0(\GEN_SYNC[0].cdc_sync_inst/p_in_d1_cdc_from_reg0 ),
        .p_in_d1_cdc_from_reg0_0(\GEN_SYNC[1].cdc_sync_inst/p_in_d1_cdc_from_reg0 ),
        .p_in_d1_cdc_from_reg0_1(\GEN_SYNC[3].cdc_sync_inst/p_in_d1_cdc_from_reg0 ),
        .s_axi_aclk(s_axi_aclk),
        .s_out_d1_cdc_to_reg(\GEN_SYNC[1].cdc_sync_inst/p_0_in0_in ),
        .s_out_d1_cdc_to_reg_0(\GEN_SYNC[3].cdc_sync_inst/p_0_in0_in ));
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_8 
       (.I0(FBC_Rd_Vld),
        .I1(FBC_Rd_Data),
        .O(Write_Beat_Cnt_En));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_samp_intl_cnt \GEN_SAMPLE_METRIC_CNT.sample_interval_counter_inst 
       (.D({Interval_Cnt_Ld_sync,Interval_Cnt_En_sync}),
        .E(\GEN_INTERVAL_CNT_SYNC.sample_interval_cnt_cdc_sync_n_3 ),
        .Sample_Cnt_Ld(Sample_Cnt_Ld),
        .Sample_Interval(Sample_Interval),
        .Sample_Interval_Cnt_Lapse(Sample_Interval_Cnt_Lapse),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(SR),
        .out(Control_Bits_sync[0]),
        .p_in_d1_cdc_from_reg(\GEN_SYNC[1].cdc_sync_inst/p_0_in0_in ),
        .p_in_d1_cdc_from_reg0(\GEN_SYNC[1].cdc_sync_inst/p_in_d1_cdc_from_reg0 ));
  LUT4 #(
    .INIT(16'hFB08)) 
    Global_Intr_En_i_1
       (.I0(s_axi_wdata[0]),
        .I1(axi_interface_inst_n_14),
        .I2(axi_interface_inst_n_40),
        .I3(Global_Intr_En),
        .O(Global_Intr_En_i_1_n_0));
  LUT3 #(
    .INIT(8'hB8)) 
    Interval_Cnt_En_i_1
       (.I0(s_axi_wdata[0]),
        .I1(Interval_Cnt_En0),
        .I2(Interval_Cnt_En),
        .O(Interval_Cnt_En_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Interval_Cnt_Ld_i_1
       (.I0(s_axi_wdata[1]),
        .I1(Interval_Cnt_En0),
        .I2(Interval_Cnt_Ld),
        .O(Interval_Cnt_Ld_i_1_n_0));
  LUT5 #(
    .INIT(32'hFFBAAAAA)) 
    Metrics_Cnt_Reset_Final
       (.I0(out),
        .I1(Lat_Sample_Reg_Rd_En_d3),
        .I2(Lat_Sample_Reg_Rd_En_d2),
        .I3(Sample_Interval_Cnt_Lapse),
        .I4(Reset_On_Sample_Int_Lapse_sync),
        .O(Metrics_Cnt_Reset_Final__0));
  LUT6 #(
    .INIT(64'h1010541000000000)) 
    No_Rd_Ready_i_1
       (.I0(Rd_Lat_Start),
        .I1(Slot_0_Sync_Data_Valid),
        .I2(metric_calc_inst0_n_26),
        .I3(Slot_0_Sync_Data_Out[7]),
        .I4(Slot_0_Sync_Data_Out[6]),
        .I5(rst_int_n_0),
        .O(No_Rd_Ready_i_1_n_0));
  LUT5 #(
    .INIT(32'h0808C808)) 
    No_Wr_Ready_i_1
       (.I0(No_Wr_Ready),
        .I1(rst_int_n_0),
        .I2(Slot_0_Sync_Data_Valid),
        .I3(Slot_0_Sync_Data_Out[44]),
        .I4(Slot_0_Sync_Data_Out[43]),
        .O(No_Wr_Ready_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair174" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    Reset_On_Sample_Int_Lapse_i_1
       (.I0(s_axi_wdata[8]),
        .I1(Interval_Cnt_En0),
        .I2(Reset_On_Sample_Int_Lapse),
        .O(Reset_On_Sample_Int_Lapse_i_1_n_0));
  LUT4 #(
    .INIT(16'hFFF4)) 
    Sample_En
       (.I0(Lat_Sample_Reg_Rd_En_d3),
        .I1(Lat_Sample_Reg_Rd_En_d2),
        .I2(s_level_out_d4_reg_0),
        .I3(Sample_Interval_Cnt_Lapse),
        .O(Sample_En__0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_axi_interface axi_interface_inst
       (.Addr_3downto0_is_0x4(Addr_3downto0_is_0x4),
        .Addr_3downto0_is_0x8(Addr_3downto0_is_0x8),
        .Addr_3downto0_is_0xC(Addr_3downto0_is_0xC),
        .Addr_7downto4_is_0x0(Addr_7downto4_is_0x0),
        .Bus2IP_RdCE(Bus2IP_RdCE),
        .Control_Set_Rd_En(Control_Set_Rd_En),
        .Control_Set_Wr_En(Control_Set_Wr_En),
        .D(IP2Bus_Data),
        .E(axi_interface_inst_n_21),
        .Event_Log_Set_Rd_En(Event_Log_Set_Rd_En),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[7] (Metric_Sel_Reg_0_Wr_En),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] (Range_Reg_0_CDC0),
        .Global_Clk_Cnt_LSB_Rd_En(Global_Clk_Cnt_LSB_Rd_En),
        .Global_Clk_Cnt_MSB_Rd_En(Global_Clk_Cnt_MSB_Rd_En),
        .Global_Clk_Cnt_Set_Rd_En(Global_Clk_Cnt_Set_Rd_En),
        .Global_Intr_En_reg(axi_interface_inst_n_40),
        .ID_Mask_Rd_En(ID_Mask_Rd_En),
        .\IER_reg[12] (Intr_Reg_IER_Wr_En),
        .IP2Bus_DataValid_reg(register_module_inst_n_26),
        .IP2Bus_DataValid_reg_0(IP2Bus_DataValid),
        .Incr_Reg_Set_Rd_En(Incr_Reg_Set_Rd_En),
        .Interval_Cnt_En0(Interval_Cnt_En0),
        .Intr_In_sync(Intr_In_sync),
        .Intr_Reg_ISR(Intr_Reg_ISR),
        .Intr_Reg_Set_Rd_En(Intr_Reg_Set_Rd_En),
        .Lat_Enlog_Reg_Set_Rd_En_reg(axi_interface_inst_n_23),
        .Lat_Intr_Reg_GIE_Rd_En_reg(axi_interface_inst_n_17),
        .Lat_Intr_Reg_IER_Rd_En_reg(axi_interface_inst_n_19),
        .Lat_Intr_Reg_ISR_Rd_En_reg(axi_interface_inst_n_20),
        .Lat_Status_Reg_FOC_Rd_En_reg(axi_interface_inst_n_13),
        .Lat_Status_Reg_FOC_Rd_En_reg_0(axi_interface_inst_n_14),
        .Lat_Status_Reg_WIF_Rd_En_reg(axi_interface_inst_n_15),
        .Latency_ID_Rd_En(Latency_ID_Rd_En),
        .\Latency_WID_CDC_reg[15] (Latency_ID_Wr_En),
        .Metric_Cnt_Reg_Set_Rd_En(Metric_Cnt_Reg_Set_Rd_En),
        .Metric_Sel_Reg_0_Rd_En(Metric_Sel_Reg_0_Rd_En),
        .Q(Bus2IP_Addr),
        .Rng_Reg_Set_Rd_En(Rng_Reg_Set_Rd_En),
        .SR(s_level_out_bus_d6),
        .Samp_Incr_Reg_Set_Rd_En(Samp_Incr_Reg_Set_Rd_En),
        .Samp_Metric_Cnt_Reg_Set_Rd_En(Samp_Metric_Cnt_Reg_Set_Rd_En),
        .\Sample_Interval_i_reg_CDC_reg[31] (Sample_Interval_i_reg_CDC0),
        .Sel_Reg_Set_Rd_En(Sel_Reg_Set_Rd_En),
        .Status_Reg_Set_Rd_En(Status_Reg_Set_Rd_En),
        .\WID_Mask_CDC_reg[15] (ID_Mask_Wr_En),
        .p_0_out(p_0_out),
        .p_10_out11_out(p_10_out11_out),
        .p_12_out(p_12_out),
        .p_13_out(p_13_out),
        .p_14_out(p_14_out),
        .p_1_out(p_1_out),
        .p_23_in(p_23_in),
        .p_2_out(p_2_out),
        .p_3_out(p_3_out),
        .p_4_out(p_4_out),
        .p_5_out(p_5_out),
        .p_6_out7_out(p_6_out7_out),
        .p_8_out(p_8_out),
        .p_9_out(p_9_out),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata[12:0]),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_ext_calc ext_calc_inst0
       (.Ext_Event_going_on(Ext_Event_going_on),
        .Ext_Event_going_on_reg_0(mon_fifo_ext_event0_inst_n_0),
        .External_Event_Cnt_En(External_Event_Cnt_En),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[0] (mon_fifo_ext_event0_inst_n_2),
        .\USE_MON_FIFO.fifo_rd_en_reg_reg (mon_fifo_ext_event0_inst_n_1),
        .core_aclk(core_aclk),
        .out(Control_Bits_sync[0]),
        .rst_int_n(rst_int_n),
        .\s_level_out_bus_d4_reg[1] (\GEN_CONTROL_SYNC.control_sig_cdc_sync_n_6 ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_glbl_clk_cnt global_clock_counter_inst
       (.E(\GEN_CONTROL_SYNC.control_sig_cdc_sync_n_12 ),
        .Q(Global_Clk_Cnt),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(SR),
        .out(\GEN_SYNC[0].cdc_sync_inst/p_0_in0_in ),
        .p_in_d1_cdc_from_reg0(\GEN_SYNC[0].cdc_sync_inst/p_in_d1_cdc_from_reg0 ),
        .\s_level_out_bus_d4_reg[4] (Control_Bits_sync[4:3]));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_interrupt_module interrupt_module_inst
       (.E(Intr_Reg_IER_Wr_En),
        .Global_Intr_En(Global_Intr_En),
        .Intr_Reg_ISR(Intr_Reg_ISR),
        .Q({Intr_Reg_IER[12:3],Intr_Reg_IER[1:0]}),
        .SR(s_level_out_bus_d6),
        .interrupt(interrupt),
        .p_0_out(p_0_out),
        .p_10_out11_out(p_10_out11_out),
        .p_12_out(p_12_out),
        .p_13_out(p_13_out),
        .p_14_out(p_14_out),
        .p_1_out(p_1_out),
        .p_2_out(p_2_out),
        .p_3_out(p_3_out),
        .p_4_out(p_4_out),
        .p_5_out(p_5_out),
        .p_6_out7_out(p_6_out7_out),
        .p_8_out(p_8_out),
        .p_9_out(p_9_out),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_wdata(s_axi_wdata[12:0]));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_metric_calc metric_calc_inst0
       (.ARID_reg(ARID_reg),
        .\ARID_reg_reg[0]_0 (register_module_inst_n_37),
        .\Beat_fifo_Wr_data_reg[61]_0 (\Beat_fifo_Wr_data_reg[61] ),
        .\Count_Out_i_reg[31] (\Count_Out_i_reg[31] ),
        .D(\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/incrementer_input_reg_val [31:1]),
        .E(\wptr_reg[5] ),
        .Ext_Trig_Metric_en(Ext_Trig_Metric_en),
        .F12_Rd_Vld(F12_Rd_Vld),
        .F1_Rd_Data(F1_Rd_Data),
        .F1_Wr_Data(F1_Wr_Data),
        .F2_Rd_Data(F2_Rd_Data),
        .F34_Rd_Vld_reg__0(F34_Rd_Vld_reg__0),
        .F34_Rd_Vld_reg_reg_0(update_max_Wr_Lat_i_1_n_0),
        .F34_Rd_Vld_reg_reg_1(update_min_Wr_Lat_i_1_n_0),
        .FBC_Rd_Data(FBC_Rd_Data),
        .FBC_Rd_Vld(FBC_Rd_Vld),
        .FSWI_Rd_Data(FSWI_Rd_Data),
        .FSWI_Rd_Vld(FSWI_Rd_Vld),
        .First_Read(First_Read),
        .First_Read_reg(First_Read_reg),
        .First_Write(First_Write),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] (register_module_inst_n_81),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 (register_module_inst_n_82),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_1 (register_module_inst_n_115),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] (register_module_inst_n_83),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] (register_module_inst_n_80),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ({Metric_Sel_0[3:2],Metric_Sel_0[0]}),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 (register_module_inst_n_78),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_1 (register_module_inst_n_79),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_2 (register_module_inst_n_116),
        .\GEN_MUX_N_CNT.Add_in_Valid_reg (metric_calc_inst0_n_178),
        .\GEN_MUX_N_CNT.Add_in_Valid_reg_0 (metric_calc_inst0_n_179),
        .\GEN_MUX_N_CNT.Add_in_Valid_reg_1 (metric_calc_inst0_n_308),
        .\GEN_MUX_N_CNT.Add_in_reg[0] (metric_calc_inst0_n_63),
        .\GEN_MUX_N_CNT.Add_in_reg[0]_0 (FSWI1_Rd_Data),
        .\GEN_MUX_N_CNT.Add_in_reg[0]_1 (S0_Min_Write_Latency),
        .\GEN_MUX_N_CNT.Add_in_reg[2] ({FBC1_Rd_Data[34],FBC1_Rd_Data[32],FBC1_Rd_Data[0]}),
        .\GEN_MUX_N_CNT.Add_in_reg[2]_0 (metric_calc_inst0_n_67),
        .\GEN_MUX_N_CNT.Add_in_reg[2]_1 (metric_calc_inst0_n_242),
        .\GEN_MUX_N_CNT.Add_in_reg[2]_2 ({S0_Write_Latency[2],S0_Write_Latency[0]}),
        .\GEN_MUX_N_CNT.Add_in_reg[2]_3 (metric_calc_inst0_n_245),
        .\GEN_MUX_N_CNT.Add_in_reg[31] ({\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in [31:3],\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in [1]}),
        .\GEN_MUX_N_CNT.Add_in_reg[31]_0 ({S0_Max_Read_Latency[31:3],S0_Max_Read_Latency[1:0]}),
        .\GEN_MUX_N_CNT.Add_in_reg[31]_1 ({S0_Min_Read_Latency[31:3],S0_Min_Read_Latency[1:0]}),
        .\GEN_MUX_N_CNT.Add_in_reg[31]_2 (S0_Max_Write_Latency),
        .\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] (metric_calc_inst0_n_68),
        .Last_Read_reg(Last_Read_reg),
        .Last_Write(Last_Write),
        .\Max_Write_Latency_Int_reg[10]_0 (register_module_inst_n_124),
        .\Max_Write_Latency_Int_reg[11]_0 (register_module_inst_n_125),
        .\Max_Write_Latency_Int_reg[12]_0 (register_module_inst_n_126),
        .\Max_Write_Latency_Int_reg[13]_0 (register_module_inst_n_127),
        .\Max_Write_Latency_Int_reg[14]_0 (register_module_inst_n_128),
        .\Max_Write_Latency_Int_reg[15]_0 (register_module_inst_n_129),
        .\Max_Write_Latency_Int_reg[16]_0 (register_module_inst_n_130),
        .\Max_Write_Latency_Int_reg[17]_0 (register_module_inst_n_131),
        .\Max_Write_Latency_Int_reg[18]_0 (register_module_inst_n_132),
        .\Max_Write_Latency_Int_reg[19]_0 (register_module_inst_n_133),
        .\Max_Write_Latency_Int_reg[1]_0 (register_module_inst_n_114),
        .\Max_Write_Latency_Int_reg[20]_0 (register_module_inst_n_134),
        .\Max_Write_Latency_Int_reg[21]_0 (register_module_inst_n_135),
        .\Max_Write_Latency_Int_reg[22]_0 (register_module_inst_n_136),
        .\Max_Write_Latency_Int_reg[23]_0 (register_module_inst_n_137),
        .\Max_Write_Latency_Int_reg[24]_0 (register_module_inst_n_138),
        .\Max_Write_Latency_Int_reg[25]_0 (register_module_inst_n_139),
        .\Max_Write_Latency_Int_reg[26]_0 (register_module_inst_n_140),
        .\Max_Write_Latency_Int_reg[27]_0 (register_module_inst_n_141),
        .\Max_Write_Latency_Int_reg[28]_0 (register_module_inst_n_142),
        .\Max_Write_Latency_Int_reg[29]_0 (register_module_inst_n_143),
        .\Max_Write_Latency_Int_reg[30]_0 (register_module_inst_n_144),
        .\Max_Write_Latency_Int_reg[31]_0 (register_module_inst_n_145),
        .\Max_Write_Latency_Int_reg[3]_0 (register_module_inst_n_117),
        .\Max_Write_Latency_Int_reg[4]_0 (register_module_inst_n_118),
        .\Max_Write_Latency_Int_reg[5]_0 (register_module_inst_n_119),
        .\Max_Write_Latency_Int_reg[6]_0 (register_module_inst_n_120),
        .\Max_Write_Latency_Int_reg[7]_0 (register_module_inst_n_121),
        .\Max_Write_Latency_Int_reg[8]_0 (register_module_inst_n_122),
        .\Max_Write_Latency_Int_reg[9]_0 (register_module_inst_n_123),
        .Metrics_Cnt_En_Int(Metrics_Cnt_En_Int),
        .Mst_Rd_Idle_Cnt_En(Mst_Rd_Idle_Cnt_En),
        .Mst_Rd_Idle_Cnt_En0(Mst_Rd_Idle_Cnt_En0),
        .No_Wr_Ready(No_Wr_Ready),
        .No_Wr_Ready_reg_0(No_Wr_Ready_i_1_n_0),
        .Num_BValids_En(Num_BValids_En),
        .Num_BValids_En0(Num_BValids_En0),
        .Num_RLasts_En0(Num_RLasts_En0),
        .O366(metric_calc_inst0_n_503),
        .O367(metric_calc_inst0_n_504),
        .Q({Slot_0_Sync_Data_Out[37],Slot_0_Sync_Data_Out[30],Slot_0_Sync_Data_Out[2]}),
        .\RID_Mask_CDC_reg[0] (register_module_inst_n_35),
        .\RID_Mask_CDC_reg[0]_0 (Rd_Latency_Fifo_Wr_En1),
        .Rd_Add_Issue6_out(Rd_Add_Issue6_out),
        .Rd_Add_Issue_reg_0(metric_calc_inst0_n_26),
        .Rd_Lat_Start(Rd_Lat_Start),
        .Rd_Lat_Start_CDC_reg(No_Rd_Ready_i_1_n_0),
        .Rd_Latency_Fifo_Empty(Rd_Latency_Fifo_Empty),
        .\Rd_Latency_Fifo_Wr_Data_reg[31]_0 (\Rd_Latency_Fifo_Wr_Data_reg[31] ),
        .\Rd_Latency_Fifo_Wr_Data_reg[32]_0 (metric_calc_inst0_n_21),
        .Rd_Latency_Fifo_Wr_En(Rd_Latency_Fifo_Wr_En),
        .Read_Beat_Cnt_En0(Read_Beat_Cnt_En0),
        .Read_Beat_Cnt_En1(Read_Beat_Cnt_En1),
        .\Read_Latency_Int_reg[10]_0 (register_module_inst_n_92),
        .\Read_Latency_Int_reg[11]_0 (register_module_inst_n_93),
        .\Read_Latency_Int_reg[12]_0 (register_module_inst_n_94),
        .\Read_Latency_Int_reg[13]_0 (register_module_inst_n_95),
        .\Read_Latency_Int_reg[14]_0 (register_module_inst_n_96),
        .\Read_Latency_Int_reg[15]_0 (register_module_inst_n_97),
        .\Read_Latency_Int_reg[16]_0 (register_module_inst_n_98),
        .\Read_Latency_Int_reg[17]_0 (register_module_inst_n_99),
        .\Read_Latency_Int_reg[18]_0 (register_module_inst_n_100),
        .\Read_Latency_Int_reg[19]_0 (register_module_inst_n_101),
        .\Read_Latency_Int_reg[1]_0 (register_module_inst_n_84),
        .\Read_Latency_Int_reg[20]_0 (register_module_inst_n_102),
        .\Read_Latency_Int_reg[21]_0 (register_module_inst_n_103),
        .\Read_Latency_Int_reg[22]_0 (register_module_inst_n_104),
        .\Read_Latency_Int_reg[23]_0 (register_module_inst_n_105),
        .\Read_Latency_Int_reg[24]_0 (register_module_inst_n_106),
        .\Read_Latency_Int_reg[25]_0 (register_module_inst_n_107),
        .\Read_Latency_Int_reg[26]_0 (register_module_inst_n_108),
        .\Read_Latency_Int_reg[27]_0 (register_module_inst_n_109),
        .\Read_Latency_Int_reg[28]_0 (register_module_inst_n_110),
        .\Read_Latency_Int_reg[29]_0 (register_module_inst_n_111),
        .\Read_Latency_Int_reg[30]_0 (register_module_inst_n_112),
        .\Read_Latency_Int_reg[31]_0 (register_module_inst_n_113),
        .\Read_Latency_Int_reg[3]_0 (register_module_inst_n_85),
        .\Read_Latency_Int_reg[4]_0 (register_module_inst_n_86),
        .\Read_Latency_Int_reg[5]_0 (register_module_inst_n_87),
        .\Read_Latency_Int_reg[6]_0 (register_module_inst_n_88),
        .\Read_Latency_Int_reg[7]_0 (register_module_inst_n_89),
        .\Read_Latency_Int_reg[8]_0 (register_module_inst_n_90),
        .\Read_Latency_Int_reg[9]_0 (register_module_inst_n_91),
        .Read_Latency_One(Read_Latency_One),
        .Read_going_on(Read_going_on),
        .Rtrans_Cnt_En0(Rtrans_Cnt_En0),
        .S0_Read_Byte_Cnt(S0_Read_Byte_Cnt),
        .S0_Read_Byte_Cnt_En(S0_Read_Byte_Cnt_En),
        .S0_Read_Latency(S0_Read_Latency),
        .S0_S_Null_Byte_Cnt(S0_S_Null_Byte_Cnt),
        .Slot_0_Sync_Data_Valid(Slot_0_Sync_Data_Valid),
        .\Slv_Wr_Idle_Fifo_Wr_data_reg[31]_0 (\Slv_Wr_Idle_Fifo_Wr_data_reg[31] ),
        .UNCONN_IN(D),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] (mon_fifo_inst_0_n_24),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] (Slv_Wr_Idle_Fifo_Wr_data),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[40] (mon_fifo_inst_0_n_13),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[41] (mon_fifo_inst_0_n_1),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[42] (mon_fifo_inst_0_n_12),
        .\USE_MON_FIFO.fifo_rd_en_reg_reg (mon_fifo_inst_0_n_26),
        .Wr_Idle(Wr_Idle),
        .Wr_Lat_End(Wr_Lat_End),
        .Wr_Lat_Start(Wr_Lat_Start),
        .Write_Beat(Write_Beat),
        .Write_Latency_En(Write_Latency_En),
        .Write_going_on(Write_going_on),
        .Write_going_on_reg_0(mon_fifo_inst_0_n_14),
        .Write_iss_going_on(Write_iss_going_on),
        .Write_iss_going_on_reg_0(mon_fifo_inst_0_n_15),
        .Wtrans_Cnt_En0(Wtrans_Cnt_En0),
        .core_aclk(core_aclk),
        .dout0(dout0),
        .dout0_0(dout0_0),
        .dout0_1(dout0_1),
        .dout0_2(dout0_2),
        .dout0_3(dout0_3),
        .dout0_4(dout0_4),
        .\dout_reg[0] (wid_match_reg_i_1_n_0),
        .\dout_reg[31] (Q),
        .\dout_reg[31]_0 (\dout_reg[31] ),
        .\dout_reg[31]_1 (\dout_reg[31]_0 ),
        .\dout_reg[61] (\dout_reg[61] ),
        .out({Control_Bits_sync[9],Control_Bits_sync[5],Control_Bits_sync[0]}),
        .p_2_out0_out(p_2_out0_out),
        .p_2_out3_out(p_2_out3_out),
        .p_40_in(p_40_in),
        .rd_latency_end(rd_latency_end),
        .rd_latency_start(rd_latency_start),
        .rid_match_reg(rid_match_reg),
        .\rptr_reg[4] (O329),
        .\rptr_reg[4]_0 (O335),
        .\rptr_reg[4]_1 (O333),
        .\rptr_reg[4]_2 (O342),
        .\rptr_reg[4]_3 (O339),
        .\rptr_reg[4]_4 (O337),
        .\rptr_reg[4]_5 (O327),
        .\rptr_reg[4]_6 (O325),
        .\rptr_reg[4]_7 (O323),
        .\rptr_reg[4]_8 (\rptr_reg[4] ),
        .rst_int_n(rst_int_n_0),
        .\s_level_out_bus_d4_reg[0] (F1_Wr_En),
        .\s_level_out_bus_d4_reg[0]_0 (wren0),
        .\s_level_out_bus_d4_reg[1] (\GEN_CONTROL_SYNC.control_sig_cdc_sync_n_6 ),
        .update_max_Wr_Lat(update_max_Wr_Lat),
        .update_min_Wr_Lat(update_min_Wr_Lat),
        .wid_match_reg(wid_match_reg),
        .\wptr_reg[0] (metric_calc_inst0_n_29),
        .\wptr_reg[0]_0 (\wptr_reg[0]_1 ),
        .\wptr_reg[0]_1 (\wptr_reg[0]_0 ),
        .\wptr_reg[0]_2 (\wptr_reg[0] ),
        .\wptr_reg[0]_3 (E),
        .\wptr_reg[4] (O322),
        .\wptr_reg[4]_0 (O324),
        .\wptr_reg[4]_1 (O330),
        .\wptr_reg[4]_2 (O326),
        .\wptr_reg[4]_3 (O328),
        .\wptr_reg[4]_4 (O334),
        .\wptr_reg[4]_5 (O336),
        .\wptr_reg[4]_6 (O338),
        .\wptr_reg[4]_7 (O340),
        .\wptr_reg[4]_8 (O343),
        .wr_latency_end(wr_latency_end),
        .wr_latency_end_d1_reg_0(metric_calc_inst0_n_177),
        .wr_latency_start(wr_latency_start),
        .wr_latency_start_d1_reg_0(metric_calc_inst0_n_19));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_metric_counters metric_counters_inst
       (.Add_in_Valid(\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in_Valid ),
        .D(\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in ),
        .DI({register_module_inst_n_61,register_module_inst_n_62,register_module_inst_n_63,register_module_inst_n_64}),
        .FBC_Rd_Vld_reg(\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/incrementer_input_reg_val ),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] (register_module_inst_n_75),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] (Range_Reg_0),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ({register_module_inst_n_69,register_module_inst_n_70,register_module_inst_n_71,register_module_inst_n_72}),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ({register_module_inst_n_65,register_module_inst_n_66,register_module_inst_n_67,register_module_inst_n_68}),
        .\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] (Incrementer_0),
        .\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] (Metric_Cnt_0),
        .Metrics_Cnt_Reset_Final__0(Metrics_Cnt_Reset_Final__0),
        .Q({metric_counters_inst_n_1,metric_counters_inst_n_2,metric_counters_inst_n_3,metric_counters_inst_n_4,metric_counters_inst_n_5,metric_counters_inst_n_6,metric_counters_inst_n_7,metric_counters_inst_n_8,metric_counters_inst_n_9,metric_counters_inst_n_10,metric_counters_inst_n_11,metric_counters_inst_n_12,metric_counters_inst_n_13,metric_counters_inst_n_14,metric_counters_inst_n_15,metric_counters_inst_n_16}),
        .S({register_module_inst_n_41,register_module_inst_n_42,register_module_inst_n_43,register_module_inst_n_44}),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(SR),
        .out(Control_Bits_sync[0]),
        .p_in_d1_cdc_from_reg(\GEN_SYNC[3].cdc_sync_inst/p_0_in0_in ),
        .p_in_d1_cdc_from_reg0(\GEN_SYNC[3].cdc_sync_inst/p_in_d1_cdc_from_reg0 ),
        .\s_level_out_bus_d4_reg[2] (\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/GEN_MUX_N_CNT.acc_n_incr_inst/Accum_i ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_mon_fifo__parameterized0 mon_fifo_ext_event0_inst
       (.Ext_Event_Valid_d1_reg(mon_fifo_ext_event0_inst_n_1),
        .Ext_Event_d1_reg(mon_fifo_ext_event0_inst_n_2),
        .Ext_Event_going_on(Ext_Event_going_on),
        .Ext_Event_going_on_reg(mon_fifo_ext_event0_inst_n_0),
        .UNCONN_IN(UNCONN_IN),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(SR),
        .ext_clk_0(ext_clk_0),
        .ext_rstn_0(ext_rstn_0),
        .rst_int_n(rst_int_n));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_mon_fifo mon_fifo_inst_0
       (.First_Read(First_Read),
        .First_Write(First_Write),
        .Last_Write(Last_Write),
        .Metrics_Cnt_En_Int(Metrics_Cnt_En_Int),
        .Mst_Rd_Idle_Cnt_En0(Mst_Rd_Idle_Cnt_En0),
        .No_Rd_Ready_reg(metric_calc_inst0_n_26),
        .No_Wr_Ready(No_Wr_Ready),
        .Num_BValids_En0(Num_BValids_En0),
        .Num_RLasts_En0(Num_RLasts_En0),
        .Q({Slot_0_Sync_Data_Out[67],Slot_0_Sync_Data_Out[44:43],Slot_0_Sync_Data_Out[38:37],Slot_0_Sync_Data_Out[30],Slot_0_Sync_Data_Out[7:5],Slot_0_Sync_Data_Out[2]}),
        .\RID_Mask_CDC_reg[0] (RID_Mask),
        .Rd_Add_Issue6_out(Rd_Add_Issue6_out),
        .Rd_Add_Issue_reg(metric_calc_inst0_n_21),
        .Rd_Lat_Start(Rd_Lat_Start),
        .Read_Beat_Cnt_En0(Read_Beat_Cnt_En0),
        .Read_Beat_Cnt_En1(Read_Beat_Cnt_En1),
        .Read_going_on(Read_going_on),
        .Read_going_on_reg(mon_fifo_inst_0_n_24),
        .Rtrans_Cnt_En0(Rtrans_Cnt_En0),
        .Slot_0_Sync_Data_Valid(Slot_0_Sync_Data_Valid),
        .\Slv_Wr_Idle_Fifo_Wr_data_reg[31] (Slv_Wr_Idle_Fifo_Wr_data),
        .\WID_Mask_CDC_reg[0] (WID_Mask),
        .Wr_Add_Issue_reg(mon_fifo_inst_0_n_26),
        .Wr_Add_Issue_reg_0(metric_calc_inst0_n_19),
        .Wr_Idle(Wr_Idle),
        .Wr_Lat_Start(Wr_Lat_Start),
        .Write_Beat(Write_Beat),
        .Write_going_on(Write_going_on),
        .Write_going_on_reg(mon_fifo_inst_0_n_14),
        .Write_iss_going_on(Write_iss_going_on),
        .Write_iss_going_on_reg(mon_fifo_inst_0_n_15),
        .Write_iss_going_on_reg_0(metric_calc_inst0_n_29),
        .Wtrans_Cnt_En0(Wtrans_Cnt_En0),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(SR),
        .din(din),
        .out(Control_Bits_sync[5]),
        .p_40_in(p_40_in),
        .rd_latency_start(rd_latency_start),
        .rst_int_n(rst_int_n_0),
        .\s_level_out_bus_d4_reg[0] (\GEN_CONTROL_SYNC.control_sig_cdc_sync_n_9 ),
        .slot_0_axi_aclk(slot_0_axi_aclk),
        .slot_0_axi_aresetn(slot_0_axi_aresetn),
        .\wr_byte_cnt_d1_reg[0] (mon_fifo_inst_0_n_1),
        .\wr_byte_cnt_d1_reg[1] (mon_fifo_inst_0_n_12),
        .\wr_byte_cnt_d1_reg[2] (mon_fifo_inst_0_n_13),
        .wr_latency_start(wr_latency_start));
  LUT2 #(
    .INIT(4'h6)) 
    p_in_d1_cdc_from_i_1__0
       (.I0(Rd_En_sync),
        .I1(\cdc_sync_inst2/p_0_in0_in ),
        .O(\cdc_sync_inst2/p_in_d1_cdc_from_reg0 ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_register_module register_module_inst
       (.ARID_reg(ARID_reg),
        .\Accum_i_reg[15] (\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/GEN_MUX_N_CNT.acc_n_incr_inst/Accum_i ),
        .\Accum_i_reg[31] (Metric_Cnt_0),
        .Add_in_Valid(\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in_Valid ),
        .Addr_3downto0_is_0x4(Addr_3downto0_is_0x4),
        .Addr_3downto0_is_0x8(Addr_3downto0_is_0x8),
        .Addr_3downto0_is_0xC(Addr_3downto0_is_0xC),
        .Addr_7downto4_is_0x0(Addr_7downto4_is_0x0),
        .Bus2IP_RdCE(Bus2IP_RdCE),
        .Control_Set_Rd_En(Control_Set_Rd_En),
        .Control_Set_Wr_En(Control_Set_Wr_En),
        .\Count_Out_i_reg[31] (Global_Clk_Cnt),
        .D({Use_Ext_Trig_Log,Use_Ext_Trig,Streaming_FIFO_Reset,En_Id_Based,Global_Clk_Cnt_Reset,Global_Clk_Cnt_En,Event_Log_En,Metrics_Cnt_Reset,Metrics_Cnt_En}),
        .DI({register_module_inst_n_61,register_module_inst_n_62,register_module_inst_n_63,register_module_inst_n_64}),
        .E(axi_interface_inst_n_21),
        .Event_Log_Set_Rd_En(Event_Log_Set_Rd_En),
        .External_Event_Cnt_En(External_Event_Cnt_En),
        .FBC_Rd_Vld(FBC_Rd_Vld),
        .FBC_Rd_Vld_reg(metric_calc_inst0_n_63),
        .FBC_Rd_Vld_reg_0(metric_calc_inst0_n_67),
        .FSWI_Rd_Data(FSWI_Rd_Data),
        .FSWI_Rd_Vld(FSWI_Rd_Vld),
        .FSWI_Rd_Vld_reg(metric_calc_inst0_n_68),
        .First_Read_reg(First_Read_reg),
        .First_Write_d1_reg(metric_calc_inst0_n_177),
        .\GEN_ARSIZE_F1.Num_RLasts_En_reg (metric_calc_inst0_n_178),
        .\GEN_ARSIZE_F1.Rtrans_Cnt_En_reg (metric_calc_inst0_n_308),
        .\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 (Rd_En_sync),
        .\GEN_MUX_N_CNT.Add_in_reg[0] (register_module_inst_n_78),
        .\GEN_MUX_N_CNT.Add_in_reg[0]_0 (register_module_inst_n_79),
        .\GEN_MUX_N_CNT.Add_in_reg[10] (register_module_inst_n_92),
        .\GEN_MUX_N_CNT.Add_in_reg[10]_0 (register_module_inst_n_124),
        .\GEN_MUX_N_CNT.Add_in_reg[11] (register_module_inst_n_93),
        .\GEN_MUX_N_CNT.Add_in_reg[11]_0 (register_module_inst_n_125),
        .\GEN_MUX_N_CNT.Add_in_reg[12] (register_module_inst_n_94),
        .\GEN_MUX_N_CNT.Add_in_reg[12]_0 (register_module_inst_n_126),
        .\GEN_MUX_N_CNT.Add_in_reg[13] (register_module_inst_n_95),
        .\GEN_MUX_N_CNT.Add_in_reg[13]_0 (register_module_inst_n_127),
        .\GEN_MUX_N_CNT.Add_in_reg[14] (register_module_inst_n_96),
        .\GEN_MUX_N_CNT.Add_in_reg[14]_0 (register_module_inst_n_128),
        .\GEN_MUX_N_CNT.Add_in_reg[15] (register_module_inst_n_97),
        .\GEN_MUX_N_CNT.Add_in_reg[15]_0 (register_module_inst_n_129),
        .\GEN_MUX_N_CNT.Add_in_reg[15]_1 ({metric_counters_inst_n_1,metric_counters_inst_n_2,metric_counters_inst_n_3,metric_counters_inst_n_4,metric_counters_inst_n_5,metric_counters_inst_n_6,metric_counters_inst_n_7,metric_counters_inst_n_8,metric_counters_inst_n_9,metric_counters_inst_n_10,metric_counters_inst_n_11,metric_counters_inst_n_12,metric_counters_inst_n_13,metric_counters_inst_n_14,metric_counters_inst_n_15,metric_counters_inst_n_16}),
        .\GEN_MUX_N_CNT.Add_in_reg[16] (register_module_inst_n_98),
        .\GEN_MUX_N_CNT.Add_in_reg[16]_0 (register_module_inst_n_130),
        .\GEN_MUX_N_CNT.Add_in_reg[17] (register_module_inst_n_99),
        .\GEN_MUX_N_CNT.Add_in_reg[17]_0 (register_module_inst_n_131),
        .\GEN_MUX_N_CNT.Add_in_reg[18] (register_module_inst_n_100),
        .\GEN_MUX_N_CNT.Add_in_reg[18]_0 (register_module_inst_n_132),
        .\GEN_MUX_N_CNT.Add_in_reg[19] (register_module_inst_n_101),
        .\GEN_MUX_N_CNT.Add_in_reg[19]_0 (register_module_inst_n_133),
        .\GEN_MUX_N_CNT.Add_in_reg[1] (register_module_inst_n_84),
        .\GEN_MUX_N_CNT.Add_in_reg[1]_0 (register_module_inst_n_114),
        .\GEN_MUX_N_CNT.Add_in_reg[1]_1 (register_module_inst_n_115),
        .\GEN_MUX_N_CNT.Add_in_reg[1]_2 (register_module_inst_n_116),
        .\GEN_MUX_N_CNT.Add_in_reg[20] (register_module_inst_n_102),
        .\GEN_MUX_N_CNT.Add_in_reg[20]_0 (register_module_inst_n_134),
        .\GEN_MUX_N_CNT.Add_in_reg[21] (register_module_inst_n_103),
        .\GEN_MUX_N_CNT.Add_in_reg[21]_0 (register_module_inst_n_135),
        .\GEN_MUX_N_CNT.Add_in_reg[22] (register_module_inst_n_104),
        .\GEN_MUX_N_CNT.Add_in_reg[22]_0 (register_module_inst_n_136),
        .\GEN_MUX_N_CNT.Add_in_reg[23] (register_module_inst_n_105),
        .\GEN_MUX_N_CNT.Add_in_reg[23]_0 (register_module_inst_n_137),
        .\GEN_MUX_N_CNT.Add_in_reg[24] (register_module_inst_n_106),
        .\GEN_MUX_N_CNT.Add_in_reg[24]_0 (register_module_inst_n_138),
        .\GEN_MUX_N_CNT.Add_in_reg[25] (register_module_inst_n_107),
        .\GEN_MUX_N_CNT.Add_in_reg[25]_0 (register_module_inst_n_139),
        .\GEN_MUX_N_CNT.Add_in_reg[26] (register_module_inst_n_108),
        .\GEN_MUX_N_CNT.Add_in_reg[26]_0 (register_module_inst_n_140),
        .\GEN_MUX_N_CNT.Add_in_reg[27] (register_module_inst_n_109),
        .\GEN_MUX_N_CNT.Add_in_reg[27]_0 (register_module_inst_n_141),
        .\GEN_MUX_N_CNT.Add_in_reg[28] (register_module_inst_n_110),
        .\GEN_MUX_N_CNT.Add_in_reg[28]_0 (register_module_inst_n_142),
        .\GEN_MUX_N_CNT.Add_in_reg[29] (register_module_inst_n_111),
        .\GEN_MUX_N_CNT.Add_in_reg[29]_0 (register_module_inst_n_143),
        .\GEN_MUX_N_CNT.Add_in_reg[2] ({\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in [2],\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/Add_in [0]}),
        .\GEN_MUX_N_CNT.Add_in_reg[2]_0 (register_module_inst_n_80),
        .\GEN_MUX_N_CNT.Add_in_reg[2]_1 (register_module_inst_n_83),
        .\GEN_MUX_N_CNT.Add_in_reg[30] (register_module_inst_n_112),
        .\GEN_MUX_N_CNT.Add_in_reg[30]_0 (register_module_inst_n_144),
        .\GEN_MUX_N_CNT.Add_in_reg[31] (register_module_inst_n_82),
        .\GEN_MUX_N_CNT.Add_in_reg[31]_0 (register_module_inst_n_113),
        .\GEN_MUX_N_CNT.Add_in_reg[31]_1 (register_module_inst_n_145),
        .\GEN_MUX_N_CNT.Add_in_reg[3] (register_module_inst_n_85),
        .\GEN_MUX_N_CNT.Add_in_reg[3]_0 (register_module_inst_n_117),
        .\GEN_MUX_N_CNT.Add_in_reg[4] (register_module_inst_n_86),
        .\GEN_MUX_N_CNT.Add_in_reg[4]_0 (register_module_inst_n_118),
        .\GEN_MUX_N_CNT.Add_in_reg[5] (register_module_inst_n_87),
        .\GEN_MUX_N_CNT.Add_in_reg[5]_0 (register_module_inst_n_119),
        .\GEN_MUX_N_CNT.Add_in_reg[6] (register_module_inst_n_88),
        .\GEN_MUX_N_CNT.Add_in_reg[6]_0 (register_module_inst_n_120),
        .\GEN_MUX_N_CNT.Add_in_reg[7] (register_module_inst_n_89),
        .\GEN_MUX_N_CNT.Add_in_reg[7]_0 (register_module_inst_n_121),
        .\GEN_MUX_N_CNT.Add_in_reg[8] (register_module_inst_n_90),
        .\GEN_MUX_N_CNT.Add_in_reg[8]_0 (register_module_inst_n_122),
        .\GEN_MUX_N_CNT.Add_in_reg[9] (register_module_inst_n_91),
        .\GEN_MUX_N_CNT.Add_in_reg[9]_0 (register_module_inst_n_123),
        .\GEN_MUX_N_CNT.accumulate_reg (register_module_inst_n_75),
        .\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] (\axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0/incrementer_input_reg_val [0]),
        .\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] (register_module_inst_n_81),
        .\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] (Samp_Incrementer_0),
        .\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] (Samp_Metric_Cnt_0),
        .Global_Clk_Cnt_LSB_Rd_En(Global_Clk_Cnt_LSB_Rd_En),
        .Global_Clk_Cnt_MSB_Rd_En(Global_Clk_Cnt_MSB_Rd_En),
        .Global_Clk_Cnt_Set_Rd_En(Global_Clk_Cnt_Set_Rd_En),
        .Global_Intr_En(Global_Intr_En),
        .Global_Intr_En_reg_0(Global_Intr_En_i_1_n_0),
        .ID_Mask_Rd_En(ID_Mask_Rd_En),
        .\IER_reg[12] ({Intr_Reg_IER[12:3],Intr_Reg_IER[1:0]}),
        .\IP2Bus_Data_reg[15]_0 (Range_Reg_0),
        .\IP2Bus_Data_reg[31]_0 (Sample_Interval),
        .\IP2Bus_Data_sampled_reg[31] (IP2Bus_DataValid),
        .\IP2Bus_Data_sampled_reg[31]_0 (IP2Bus_Data),
        .Incr_Reg_Set_Rd_En(Incr_Reg_Set_Rd_En),
        .Incr_by_1_reg({register_module_inst_n_65,register_module_inst_n_66,register_module_inst_n_67,register_module_inst_n_68}),
        .Incr_by_1_reg_0({register_module_inst_n_69,register_module_inst_n_70,register_module_inst_n_71,register_module_inst_n_72}),
        .\Incrementer_reg[31] (Incrementer_0),
        .Interval_Cnt_En_reg_0(Interval_Cnt_En_i_1_n_0),
        .Interval_Cnt_Ld_reg_0(Interval_Cnt_Ld_i_1_n_0),
        .Intr_Reg_ISR(Intr_Reg_ISR),
        .Intr_Reg_Set_Rd_En(Intr_Reg_Set_Rd_En),
        .Last_Read_reg(Last_Read_reg),
        .Lat_Sample_Reg_Rd_En_d3(Lat_Sample_Reg_Rd_En_d3),
        .Latency_ID_Rd_En(Latency_ID_Rd_En),
        .\Max_Read_Latency_Int_reg[2] (metric_calc_inst0_n_245),
        .\Max_Read_Latency_Int_reg[31] ({S0_Max_Read_Latency[31:3],S0_Max_Read_Latency[1:0]}),
        .\Max_Write_Latency_Int_reg[31] (S0_Max_Write_Latency),
        .Metric_Cnt_Reg_Set_Rd_En(Metric_Cnt_Reg_Set_Rd_En),
        .Metric_Sel_Reg_0_Rd_En(Metric_Sel_Reg_0_Rd_En),
        .\Min_Read_Latency_Int_reg[31] ({S0_Min_Read_Latency[31:3],S0_Min_Read_Latency[1:0]}),
        .\Min_Write_Latency_Int_reg[0] (S0_Min_Write_Latency),
        .\Min_Write_Latency_Int_reg[2] (metric_calc_inst0_n_242),
        .Mst_Rd_Idle_Cnt_En(Mst_Rd_Idle_Cnt_En),
        .Num_BValids_En(Num_BValids_En),
        .Q({Metric_Sel_0[3:2],Metric_Sel_0[0]}),
        .Rd_Lat_Start(Rd_Lat_Start),
        .Rd_Latency_Fifo_Empty(Rd_Latency_Fifo_Empty),
        .Rd_Latency_Fifo_Rd_En_reg(register_module_inst_n_35),
        .\Rd_Latency_Fifo_Wr_Data_reg[32] (Rd_Latency_Fifo_Wr_En1),
        .Rd_Latency_Fifo_Wr_En_reg(register_module_inst_n_37),
        .Read_Latency_One(Read_Latency_One),
        .Read_going_on(Read_going_on),
        .Reset_On_Sample_Int_Lapse_reg_0(Reset_On_Sample_Int_Lapse_i_1_n_0),
        .Rng_Reg_Set_Rd_En(Rng_Reg_Set_Rd_En),
        .S({register_module_inst_n_41,register_module_inst_n_42,register_module_inst_n_43,register_module_inst_n_44}),
        .S0_Read_Byte_Cnt(S0_Read_Byte_Cnt),
        .S0_Read_Byte_Cnt_En(S0_Read_Byte_Cnt_En),
        .S0_Read_Latency(S0_Read_Latency),
        .S0_S_Null_Byte_Cnt(S0_S_Null_Byte_Cnt),
        .SR(s_level_out_bus_d6),
        .Samp_Incr_Reg_Set_Rd_En(Samp_Incr_Reg_Set_Rd_En),
        .Samp_Metric_Cnt_Reg_Set_Rd_En(Samp_Metric_Cnt_Reg_Set_Rd_En),
        .Sample_Interval_Cnt_Lapse(Sample_Interval_Cnt_Lapse),
        .Sel_Reg_Set_Rd_En(Sel_Reg_Set_Rd_En),
        .Status_Reg_Set_Rd_En(Status_Reg_Set_Rd_En),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] (mon_fifo_inst_0_n_24),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] ({Slot_0_Sync_Data_Out[67],Slot_0_Sync_Data_Out[38],Slot_0_Sync_Data_Out[30],Slot_0_Sync_Data_Out[5],Slot_0_Sync_Data_Out[2]}),
        .Wr_Lat_End(Wr_Lat_End),
        .Wr_Lat_Start(Wr_Lat_Start),
        .Write_Beat(Write_Beat),
        .Write_Beat_Cnt_En(Write_Beat_Cnt_En),
        .Write_Latency_En(Write_Latency_En),
        .\Write_Latency_Int_reg[2] ({S0_Write_Latency[2],S0_Write_Latency[0]}),
        .Write_going_on(Write_going_on),
        .awid_match_d1_reg(WID_Mask),
        .\bus2ip_addr_i_reg[1] (axi_interface_inst_n_23),
        .\bus2ip_addr_i_reg[1]_0 (axi_interface_inst_n_20),
        .\bus2ip_addr_i_reg[3] (axi_interface_inst_n_19),
        .\bus2ip_addr_i_reg[3]_0 (axi_interface_inst_n_17),
        .\bus2ip_addr_i_reg[5] (ID_Mask_Wr_En),
        .\bus2ip_addr_i_reg[5]_0 (Latency_ID_Wr_En),
        .\bus2ip_addr_i_reg[6] (axi_interface_inst_n_15),
        .\bus2ip_addr_i_reg[6]_0 (axi_interface_inst_n_13),
        .\bus2ip_addr_i_reg[6]_1 (Sample_Interval_i_reg_CDC0),
        .\bus2ip_addr_i_reg[7] (Metric_Sel_Reg_0_Wr_En),
        .\bus2ip_addr_i_reg[9] (Bus2IP_Addr),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(SR),
        .\dout_reg[0] (metric_calc_inst0_n_179),
        .\dout_reg[0]_0 (FSWI1_Rd_Data),
        .\dout_reg[34] ({FBC1_Rd_Data[34],FBC1_Rd_Data[32],FBC1_Rd_Data[0]}),
        .out(Lat_Sample_Reg_Rd_En_d2),
        .p_23_in(p_23_in),
        .p_2_out0_out(p_2_out0_out),
        .p_2_out3_out(p_2_out3_out),
        .p_in_d1_cdc_from_reg0(\cdc_sync_inst2/p_in_d1_cdc_from_reg0 ),
        .rd_latency_end(rd_latency_end),
        .rd_latency_start(rd_latency_start),
        .rid_match_reg(rid_match_reg),
        .rid_match_reg_reg(RID_Mask),
        .rvalid_reg(register_module_inst_n_26),
        .rvalid_reg_0(s_axi_rvalid),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_rready(s_axi_rready),
        .s_axi_wdata(s_axi_wdata),
        .\s_level_out_bus_d1_cdc_to_reg[2] ({Reset_On_Sample_Int_Lapse,Interval_Cnt_Ld,Interval_Cnt_En}),
        .\s_level_out_bus_d4_reg[2] (Reset_On_Sample_Int_Lapse_sync),
        .\s_level_out_bus_d4_reg[5] ({Control_Bits_sync[5],out}),
        .s_out_d1_cdc_to_reg(\cdc_sync_inst2/p_0_in0_in ),
        .s_out_d5_reg(\cdc_sync_inst1/p_1_in ),
        .s_out_d5_reg_0(\cdc_sync_inst2/p_1_in ),
        .s_out_d6_reg(\cdc_sync_inst1/p_0_in ),
        .s_out_d6_reg_0(\cdc_sync_inst2/p_0_in ),
        .s_out_re(\cdc_sync_inst1/s_out_re ),
        .s_out_re_0(\cdc_sync_inst2/s_out_re ),
        .wr_latency_end(wr_latency_end),
        .write_req_reg(Range_Reg_0_CDC0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_samp_metrics_data sampled_metrics_data_inst
       (.D(Metric_Cnt_0),
        .E(Sample_En__0),
        .\GEN_METRIC_RAM.Metric_ram_CDCR_reg (Samp_Incrementer_0),
        .\Incrementer_reg[31] (Incrementer_0),
        .Q(Samp_Metric_Cnt_0),
        .core_aclk(core_aclk),
        .s_level_out_d4_reg(s_level_out_d4_reg));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__0__0
       (.I0(\cdc_sync_inst2/p_1_in ),
        .I1(\cdc_sync_inst2/p_0_in ),
        .O(\cdc_sync_inst2/s_out_re ));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__12
       (.I0(\cdc_sync_inst1/p_1_in ),
        .I1(\cdc_sync_inst1/p_0_in ),
        .O(\cdc_sync_inst1/s_out_re ));
  LUT1 #(
    .INIT(2'h1)) 
    trigger_in_ack_r_i_1
       (.I0(core_aresetn),
        .O(SR));
  (* equivalent_register_removal = "no" *) 
  FDRE trigger_in_ack_r_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(trigger_in_sync),
        .Q(trigger_in_ack),
        .R(SR));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized4 trigger_sig_cdc_sync
       (.core_aclk(core_aclk),
        .core_aresetn(SR),
        .out(trigger_in_sync),
        .trigger_in(trigger_in));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    update_max_Wr_Lat_i_1
       (.I0(metric_calc_inst0_n_503),
        .I1(F34_Rd_Vld_reg__0),
        .I2(update_max_Wr_Lat),
        .O(update_max_Wr_Lat_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair175" *) 
  LUT3 #(
    .INIT(8'hB8)) 
    update_min_Wr_Lat_i_1
       (.I0(metric_calc_inst0_n_504),
        .I1(F34_Rd_Vld_reg__0),
        .I2(update_min_Wr_Lat),
        .O(update_min_Wr_Lat_i_1_n_0));
  LUT4 #(
    .INIT(16'h8F80)) 
    wid_match_reg_i_1
       (.I0(F1_Rd_Data),
        .I1(F2_Rd_Data),
        .I2(F12_Rd_Vld),
        .I3(wid_match_reg),
        .O(wid_match_reg_i_1_n_0));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_async_fifo
   (D,
    rd_en,
    slot_0_axi_aclk,
    core_aclk,
    din,
    slot_0_axi_aresetn,
    core_aresetn);
  output [19:0]D;
  output rd_en;
  input slot_0_axi_aclk;
  input core_aclk;
  input [29:0]din;
  input slot_0_axi_aresetn;
  input core_aresetn;

  wire [19:0]D;
  wire core_aclk;
  wire core_aresetn;
  wire [29:0]din;
  wire fifo_empty;
  wire fifo_full;
  wire fifo_wr_en;
  wire inst_i_1_n_0;
  wire rd_en;
  wire slot_0_axi_aclk;
  wire slot_0_axi_aresetn;
  wire NLW_inst_almost_empty_UNCONNECTED;
  wire NLW_inst_almost_full_UNCONNECTED;
  wire NLW_inst_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_ar_overflow_UNCONNECTED;
  wire NLW_inst_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_ar_prog_full_UNCONNECTED;
  wire NLW_inst_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_ar_underflow_UNCONNECTED;
  wire NLW_inst_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_aw_overflow_UNCONNECTED;
  wire NLW_inst_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_aw_prog_full_UNCONNECTED;
  wire NLW_inst_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_aw_underflow_UNCONNECTED;
  wire NLW_inst_axi_b_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_b_overflow_UNCONNECTED;
  wire NLW_inst_axi_b_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_b_prog_full_UNCONNECTED;
  wire NLW_inst_axi_b_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_b_underflow_UNCONNECTED;
  wire NLW_inst_axi_r_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_r_overflow_UNCONNECTED;
  wire NLW_inst_axi_r_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_r_prog_full_UNCONNECTED;
  wire NLW_inst_axi_r_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_r_underflow_UNCONNECTED;
  wire NLW_inst_axi_w_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_w_overflow_UNCONNECTED;
  wire NLW_inst_axi_w_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_w_prog_full_UNCONNECTED;
  wire NLW_inst_axi_w_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_w_underflow_UNCONNECTED;
  wire NLW_inst_axis_dbiterr_UNCONNECTED;
  wire NLW_inst_axis_overflow_UNCONNECTED;
  wire NLW_inst_axis_prog_empty_UNCONNECTED;
  wire NLW_inst_axis_prog_full_UNCONNECTED;
  wire NLW_inst_axis_sbiterr_UNCONNECTED;
  wire NLW_inst_axis_underflow_UNCONNECTED;
  wire NLW_inst_dbiterr_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire NLW_inst_m_axis_tlast_UNCONNECTED;
  wire NLW_inst_m_axis_tvalid_UNCONNECTED;
  wire NLW_inst_overflow_UNCONNECTED;
  wire NLW_inst_prog_empty_UNCONNECTED;
  wire NLW_inst_prog_full_UNCONNECTED;
  wire NLW_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_inst_s_axi_arready_UNCONNECTED;
  wire NLW_inst_s_axi_awready_UNCONNECTED;
  wire NLW_inst_s_axi_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_wready_UNCONNECTED;
  wire NLW_inst_s_axis_tready_UNCONNECTED;
  wire NLW_inst_sbiterr_UNCONNECTED;
  wire NLW_inst_underflow_UNCONNECTED;
  wire NLW_inst_valid_UNCONNECTED;
  wire NLW_inst_wr_ack_UNCONNECTED;
  wire NLW_inst_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_inst_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axis_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_inst_data_count_UNCONNECTED;
  wire [66:3]NLW_inst_dout_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arcache_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awcache_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [63:0]NLW_inst_m_axis_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_tdest_UNCONNECTED;
  wire [7:0]NLW_inst_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_tuser_UNCONNECTED;
  wire [4:0]NLW_inst_rd_data_count_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_ruser_UNCONNECTED;
  wire [4:0]NLW_inst_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "64" *) 
  (* C_AXIS_TDEST_WIDTH = "4" *) 
  (* C_AXIS_TID_WIDTH = "8" *) 
  (* C_AXIS_TKEEP_WIDTH = "4" *) 
  (* C_AXIS_TSTRB_WIDTH = "4" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "10" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "68" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "32" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "68" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "1" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "0" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "0" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "0" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "1" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "1" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "2" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "13" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "12" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "5" *) 
  (* C_RD_DEPTH = "32" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "5" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "4" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "5" *) 
  (* C_WR_DEPTH = "32" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "5" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  jtag_axi_axi_perf_mon_0_0_fifo_generator_v13_1_3 inst
       (.almost_empty(NLW_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_inst_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_inst_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_inst_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_inst_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_inst_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_inst_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_inst_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_inst_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_inst_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_inst_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_inst_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_inst_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_inst_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_inst_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_inst_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_inst_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_inst_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_inst_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_inst_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_inst_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_inst_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_inst_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_inst_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_inst_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_inst_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_inst_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_inst_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_inst_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_inst_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_inst_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_inst_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_inst_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_inst_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_inst_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_inst_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_inst_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_inst_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_inst_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_inst_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_inst_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_inst_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_inst_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_inst_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_inst_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_inst_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_inst_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_inst_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_inst_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_inst_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_inst_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_inst_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_inst_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_inst_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_inst_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_inst_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_inst_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_inst_dbiterr_UNCONNECTED),
        .din({din[29:28],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[27:19],1'b0,din[18:11],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,din[10:2],1'b0,din[1:0]}),
        .dout({D[19],NLW_inst_dout_UNCONNECTED[66:45],D[18:9],NLW_inst_dout_UNCONNECTED[34:33],D[8:6],NLW_inst_dout_UNCONNECTED[29:8],D[5:3],NLW_inst_dout_UNCONNECTED[4:3],D[2:0]}),
        .empty(fifo_empty),
        .full(fifo_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_inst_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[3:0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_inst_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_inst_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_inst_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_inst_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_inst_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_inst_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[3:0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_inst_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_inst_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_inst_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_inst_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_inst_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_inst_m_axi_wid_UNCONNECTED[3:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_inst_m_axis_tdata_UNCONNECTED[63:0]),
        .m_axis_tdest(NLW_inst_m_axis_tdest_UNCONNECTED[3:0]),
        .m_axis_tid(NLW_inst_m_axis_tid_UNCONNECTED[7:0]),
        .m_axis_tkeep(NLW_inst_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_inst_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_inst_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(NLW_inst_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_inst_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_inst_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_inst_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(core_aclk),
        .rd_data_count(NLW_inst_rd_data_count_UNCONNECTED[4:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_inst_rd_rst_busy_UNCONNECTED),
        .rst(inst_i_1_n_0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b1),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_inst_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_inst_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_inst_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_inst_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_inst_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_inst_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_inst_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_inst_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_inst_underflow_UNCONNECTED),
        .valid(NLW_inst_valid_UNCONNECTED),
        .wr_ack(NLW_inst_wr_ack_UNCONNECTED),
        .wr_clk(slot_0_axi_aclk),
        .wr_data_count(NLW_inst_wr_data_count_UNCONNECTED[4:0]),
        .wr_en(fifo_wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_inst_wr_rst_busy_UNCONNECTED));
  LUT2 #(
    .INIT(4'h7)) 
    inst_i_1
       (.I0(slot_0_axi_aresetn),
        .I1(core_aresetn),
        .O(inst_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    inst_i_2
       (.I0(fifo_full),
        .O(fifo_wr_en));
  LUT1 #(
    .INIT(2'h1)) 
    inst_i_3
       (.I0(fifo_empty),
        .O(rd_en));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_async_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_async_fifo__parameterized0
   (D,
    rd_en,
    ext_clk_0,
    core_aclk,
    UNCONN_IN,
    ext_rstn_0,
    core_aresetn);
  output [2:0]D;
  output rd_en;
  input ext_clk_0;
  input core_aclk;
  input [2:0]UNCONN_IN;
  input ext_rstn_0;
  input core_aresetn;

  wire [2:0]D;
  wire [2:0]UNCONN_IN;
  wire core_aclk;
  wire core_aresetn;
  wire ext_clk_0;
  wire ext_rstn_0;
  wire fifo_empty;
  wire fifo_full;
  wire fifo_wr_en;
  wire inst_i_1__0_n_0;
  wire rd_en;
  wire NLW_inst_almost_empty_UNCONNECTED;
  wire NLW_inst_almost_full_UNCONNECTED;
  wire NLW_inst_axi_ar_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_ar_overflow_UNCONNECTED;
  wire NLW_inst_axi_ar_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_ar_prog_full_UNCONNECTED;
  wire NLW_inst_axi_ar_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_ar_underflow_UNCONNECTED;
  wire NLW_inst_axi_aw_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_aw_overflow_UNCONNECTED;
  wire NLW_inst_axi_aw_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_aw_prog_full_UNCONNECTED;
  wire NLW_inst_axi_aw_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_aw_underflow_UNCONNECTED;
  wire NLW_inst_axi_b_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_b_overflow_UNCONNECTED;
  wire NLW_inst_axi_b_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_b_prog_full_UNCONNECTED;
  wire NLW_inst_axi_b_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_b_underflow_UNCONNECTED;
  wire NLW_inst_axi_r_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_r_overflow_UNCONNECTED;
  wire NLW_inst_axi_r_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_r_prog_full_UNCONNECTED;
  wire NLW_inst_axi_r_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_r_underflow_UNCONNECTED;
  wire NLW_inst_axi_w_dbiterr_UNCONNECTED;
  wire NLW_inst_axi_w_overflow_UNCONNECTED;
  wire NLW_inst_axi_w_prog_empty_UNCONNECTED;
  wire NLW_inst_axi_w_prog_full_UNCONNECTED;
  wire NLW_inst_axi_w_sbiterr_UNCONNECTED;
  wire NLW_inst_axi_w_underflow_UNCONNECTED;
  wire NLW_inst_axis_dbiterr_UNCONNECTED;
  wire NLW_inst_axis_overflow_UNCONNECTED;
  wire NLW_inst_axis_prog_empty_UNCONNECTED;
  wire NLW_inst_axis_prog_full_UNCONNECTED;
  wire NLW_inst_axis_sbiterr_UNCONNECTED;
  wire NLW_inst_axis_underflow_UNCONNECTED;
  wire NLW_inst_dbiterr_UNCONNECTED;
  wire NLW_inst_m_axi_arvalid_UNCONNECTED;
  wire NLW_inst_m_axi_awvalid_UNCONNECTED;
  wire NLW_inst_m_axi_bready_UNCONNECTED;
  wire NLW_inst_m_axi_rready_UNCONNECTED;
  wire NLW_inst_m_axi_wlast_UNCONNECTED;
  wire NLW_inst_m_axi_wvalid_UNCONNECTED;
  wire NLW_inst_m_axis_tlast_UNCONNECTED;
  wire NLW_inst_m_axis_tvalid_UNCONNECTED;
  wire NLW_inst_overflow_UNCONNECTED;
  wire NLW_inst_prog_empty_UNCONNECTED;
  wire NLW_inst_prog_full_UNCONNECTED;
  wire NLW_inst_rd_rst_busy_UNCONNECTED;
  wire NLW_inst_s_axi_arready_UNCONNECTED;
  wire NLW_inst_s_axi_awready_UNCONNECTED;
  wire NLW_inst_s_axi_bvalid_UNCONNECTED;
  wire NLW_inst_s_axi_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_rvalid_UNCONNECTED;
  wire NLW_inst_s_axi_wready_UNCONNECTED;
  wire NLW_inst_s_axis_tready_UNCONNECTED;
  wire NLW_inst_sbiterr_UNCONNECTED;
  wire NLW_inst_underflow_UNCONNECTED;
  wire NLW_inst_valid_UNCONNECTED;
  wire NLW_inst_wr_ack_UNCONNECTED;
  wire NLW_inst_wr_rst_busy_UNCONNECTED;
  wire [4:0]NLW_inst_axi_ar_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_ar_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_ar_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_aw_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_aw_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_aw_wr_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_b_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_b_rd_data_count_UNCONNECTED;
  wire [4:0]NLW_inst_axi_b_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_r_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_r_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_r_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_w_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_w_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axi_w_wr_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axis_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axis_rd_data_count_UNCONNECTED;
  wire [10:0]NLW_inst_axis_wr_data_count_UNCONNECTED;
  wire [9:0]NLW_inst_data_count_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_araddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_arburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arcache_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_arlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_arlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arqos_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_arregion_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_arsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_aruser_UNCONNECTED;
  wire [31:0]NLW_inst_m_axi_awaddr_UNCONNECTED;
  wire [1:0]NLW_inst_m_axi_awburst_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awcache_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_awlen_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awlock_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awprot_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awqos_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_awregion_UNCONNECTED;
  wire [2:0]NLW_inst_m_axi_awsize_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_awuser_UNCONNECTED;
  wire [63:0]NLW_inst_m_axi_wdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axi_wid_UNCONNECTED;
  wire [7:0]NLW_inst_m_axi_wstrb_UNCONNECTED;
  wire [0:0]NLW_inst_m_axi_wuser_UNCONNECTED;
  wire [63:0]NLW_inst_m_axis_tdata_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_tdest_UNCONNECTED;
  wire [7:0]NLW_inst_m_axis_tid_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_tkeep_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_tstrb_UNCONNECTED;
  wire [3:0]NLW_inst_m_axis_tuser_UNCONNECTED;
  wire [4:0]NLW_inst_rd_data_count_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_bresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_buser_UNCONNECTED;
  wire [63:0]NLW_inst_s_axi_rdata_UNCONNECTED;
  wire [3:0]NLW_inst_s_axi_rid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_rresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_ruser_UNCONNECTED;
  wire [4:0]NLW_inst_wr_data_count_UNCONNECTED;

  (* C_ADD_NGC_CONSTRAINT = "0" *) 
  (* C_APPLICATION_TYPE_AXIS = "0" *) 
  (* C_APPLICATION_TYPE_RACH = "0" *) 
  (* C_APPLICATION_TYPE_RDCH = "0" *) 
  (* C_APPLICATION_TYPE_WACH = "0" *) 
  (* C_APPLICATION_TYPE_WDCH = "0" *) 
  (* C_APPLICATION_TYPE_WRCH = "0" *) 
  (* C_AXIS_TDATA_WIDTH = "64" *) 
  (* C_AXIS_TDEST_WIDTH = "4" *) 
  (* C_AXIS_TID_WIDTH = "8" *) 
  (* C_AXIS_TKEEP_WIDTH = "4" *) 
  (* C_AXIS_TSTRB_WIDTH = "4" *) 
  (* C_AXIS_TUSER_WIDTH = "4" *) 
  (* C_AXIS_TYPE = "0" *) 
  (* C_AXI_ADDR_WIDTH = "32" *) 
  (* C_AXI_ARUSER_WIDTH = "1" *) 
  (* C_AXI_AWUSER_WIDTH = "1" *) 
  (* C_AXI_BUSER_WIDTH = "1" *) 
  (* C_AXI_DATA_WIDTH = "64" *) 
  (* C_AXI_ID_WIDTH = "4" *) 
  (* C_AXI_LEN_WIDTH = "8" *) 
  (* C_AXI_LOCK_WIDTH = "1" *) 
  (* C_AXI_RUSER_WIDTH = "1" *) 
  (* C_AXI_TYPE = "1" *) 
  (* C_AXI_WUSER_WIDTH = "1" *) 
  (* C_COMMON_CLOCK = "0" *) 
  (* C_COUNT_TYPE = "0" *) 
  (* C_DATA_COUNT_WIDTH = "10" *) 
  (* C_DEFAULT_VALUE = "BlankString" *) 
  (* C_DIN_WIDTH = "3" *) 
  (* C_DIN_WIDTH_AXIS = "1" *) 
  (* C_DIN_WIDTH_RACH = "32" *) 
  (* C_DIN_WIDTH_RDCH = "64" *) 
  (* C_DIN_WIDTH_WACH = "32" *) 
  (* C_DIN_WIDTH_WDCH = "64" *) 
  (* C_DIN_WIDTH_WRCH = "2" *) 
  (* C_DOUT_RST_VAL = "0" *) 
  (* C_DOUT_WIDTH = "3" *) 
  (* C_ENABLE_RLOCS = "0" *) 
  (* C_ENABLE_RST_SYNC = "1" *) 
  (* C_EN_SAFETY_CKT = "0" *) 
  (* C_ERROR_INJECTION_TYPE = "0" *) 
  (* C_ERROR_INJECTION_TYPE_AXIS = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WACH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) 
  (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FULL_FLAGS_RST_VAL = "1" *) 
  (* C_HAS_ALMOST_EMPTY = "1" *) 
  (* C_HAS_ALMOST_FULL = "0" *) 
  (* C_HAS_AXIS_TDATA = "1" *) 
  (* C_HAS_AXIS_TDEST = "0" *) 
  (* C_HAS_AXIS_TID = "0" *) 
  (* C_HAS_AXIS_TKEEP = "0" *) 
  (* C_HAS_AXIS_TLAST = "0" *) 
  (* C_HAS_AXIS_TREADY = "1" *) 
  (* C_HAS_AXIS_TSTRB = "0" *) 
  (* C_HAS_AXIS_TUSER = "0" *) 
  (* C_HAS_AXI_ARUSER = "0" *) 
  (* C_HAS_AXI_AWUSER = "0" *) 
  (* C_HAS_AXI_BUSER = "0" *) 
  (* C_HAS_AXI_ID = "0" *) 
  (* C_HAS_AXI_RD_CHANNEL = "0" *) 
  (* C_HAS_AXI_RUSER = "0" *) 
  (* C_HAS_AXI_WR_CHANNEL = "0" *) 
  (* C_HAS_AXI_WUSER = "0" *) 
  (* C_HAS_BACKUP = "0" *) 
  (* C_HAS_DATA_COUNT = "0" *) 
  (* C_HAS_DATA_COUNTS_AXIS = "0" *) 
  (* C_HAS_DATA_COUNTS_RACH = "0" *) 
  (* C_HAS_DATA_COUNTS_RDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WACH = "0" *) 
  (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
  (* C_HAS_DATA_COUNTS_WRCH = "0" *) 
  (* C_HAS_INT_CLK = "0" *) 
  (* C_HAS_MASTER_CE = "0" *) 
  (* C_HAS_MEMINIT_FILE = "0" *) 
  (* C_HAS_OVERFLOW = "0" *) 
  (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
  (* C_HAS_PROG_FLAGS_RACH = "0" *) 
  (* C_HAS_PROG_FLAGS_RDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WACH = "0" *) 
  (* C_HAS_PROG_FLAGS_WDCH = "0" *) 
  (* C_HAS_PROG_FLAGS_WRCH = "0" *) 
  (* C_HAS_RD_DATA_COUNT = "1" *) 
  (* C_HAS_RD_RST = "0" *) 
  (* C_HAS_RST = "1" *) 
  (* C_HAS_SLAVE_CE = "0" *) 
  (* C_HAS_SRST = "0" *) 
  (* C_HAS_UNDERFLOW = "0" *) 
  (* C_HAS_VALID = "0" *) 
  (* C_HAS_WR_ACK = "0" *) 
  (* C_HAS_WR_DATA_COUNT = "1" *) 
  (* C_HAS_WR_RST = "0" *) 
  (* C_IMPLEMENTATION_TYPE = "2" *) 
  (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_RDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WACH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
  (* C_IMPLEMENTATION_TYPE_WRCH = "1" *) 
  (* C_INIT_WR_PNTR_VAL = "0" *) 
  (* C_INTERFACE_TYPE = "0" *) 
  (* C_MEMORY_TYPE = "2" *) 
  (* C_MIF_FILE_NAME = "BlankString" *) 
  (* C_MSGON_VAL = "1" *) 
  (* C_OPTIMIZATION_MODE = "0" *) 
  (* C_OVERFLOW_LOW = "0" *) 
  (* C_POWER_SAVING_MODE = "0" *) 
  (* C_PRELOAD_LATENCY = "0" *) 
  (* C_PRELOAD_REGS = "1" *) 
  (* C_PRIM_FIFO_TYPE = "512x72" *) 
  (* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WACH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) 
  (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) 
  (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) 
  (* C_PROG_EMPTY_TYPE = "0" *) 
  (* C_PROG_EMPTY_TYPE_AXIS = "0" *) 
  (* C_PROG_EMPTY_TYPE_RACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WACH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WDCH = "0" *) 
  (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL = "13" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
  (* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) 
  (* C_PROG_FULL_THRESH_NEGATE_VAL = "12" *) 
  (* C_PROG_FULL_TYPE = "0" *) 
  (* C_PROG_FULL_TYPE_AXIS = "0" *) 
  (* C_PROG_FULL_TYPE_RACH = "0" *) 
  (* C_PROG_FULL_TYPE_RDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WACH = "0" *) 
  (* C_PROG_FULL_TYPE_WDCH = "0" *) 
  (* C_PROG_FULL_TYPE_WRCH = "0" *) 
  (* C_RACH_TYPE = "0" *) 
  (* C_RDCH_TYPE = "0" *) 
  (* C_RD_DATA_COUNT_WIDTH = "5" *) 
  (* C_RD_DEPTH = "32" *) 
  (* C_RD_FREQ = "1" *) 
  (* C_RD_PNTR_WIDTH = "5" *) 
  (* C_REG_SLICE_MODE_AXIS = "0" *) 
  (* C_REG_SLICE_MODE_RACH = "0" *) 
  (* C_REG_SLICE_MODE_RDCH = "0" *) 
  (* C_REG_SLICE_MODE_WACH = "0" *) 
  (* C_REG_SLICE_MODE_WDCH = "0" *) 
  (* C_REG_SLICE_MODE_WRCH = "0" *) 
  (* C_SELECT_XPM = "0" *) 
  (* C_SYNCHRONIZER_STAGE = "4" *) 
  (* C_UNDERFLOW_LOW = "0" *) 
  (* C_USE_COMMON_OVERFLOW = "0" *) 
  (* C_USE_COMMON_UNDERFLOW = "0" *) 
  (* C_USE_DEFAULT_SETTINGS = "0" *) 
  (* C_USE_DOUT_RST = "1" *) 
  (* C_USE_ECC = "0" *) 
  (* C_USE_ECC_AXIS = "0" *) 
  (* C_USE_ECC_RACH = "0" *) 
  (* C_USE_ECC_RDCH = "0" *) 
  (* C_USE_ECC_WACH = "0" *) 
  (* C_USE_ECC_WDCH = "0" *) 
  (* C_USE_ECC_WRCH = "0" *) 
  (* C_USE_EMBEDDED_REG = "0" *) 
  (* C_USE_FIFO16_FLAGS = "0" *) 
  (* C_USE_FWFT_DATA_COUNT = "0" *) 
  (* C_USE_PIPELINE_REG = "0" *) 
  (* C_VALID_LOW = "0" *) 
  (* C_WACH_TYPE = "0" *) 
  (* C_WDCH_TYPE = "0" *) 
  (* C_WRCH_TYPE = "0" *) 
  (* C_WR_ACK_LOW = "0" *) 
  (* C_WR_DATA_COUNT_WIDTH = "5" *) 
  (* C_WR_DEPTH = "32" *) 
  (* C_WR_DEPTH_AXIS = "1024" *) 
  (* C_WR_DEPTH_RACH = "16" *) 
  (* C_WR_DEPTH_RDCH = "1024" *) 
  (* C_WR_DEPTH_WACH = "16" *) 
  (* C_WR_DEPTH_WDCH = "1024" *) 
  (* C_WR_DEPTH_WRCH = "16" *) 
  (* C_WR_FREQ = "1" *) 
  (* C_WR_PNTR_WIDTH = "5" *) 
  (* C_WR_PNTR_WIDTH_AXIS = "10" *) 
  (* C_WR_PNTR_WIDTH_RACH = "4" *) 
  (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WACH = "4" *) 
  (* C_WR_PNTR_WIDTH_WDCH = "10" *) 
  (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
  (* C_WR_RESPONSE_LATENCY = "1" *) 
  jtag_axi_axi_perf_mon_0_0_fifo_generator_v13_1_3__parameterized0 inst
       (.almost_empty(NLW_inst_almost_empty_UNCONNECTED),
        .almost_full(NLW_inst_almost_full_UNCONNECTED),
        .axi_ar_data_count(NLW_inst_axi_ar_data_count_UNCONNECTED[4:0]),
        .axi_ar_dbiterr(NLW_inst_axi_ar_dbiterr_UNCONNECTED),
        .axi_ar_injectdbiterr(1'b0),
        .axi_ar_injectsbiterr(1'b0),
        .axi_ar_overflow(NLW_inst_axi_ar_overflow_UNCONNECTED),
        .axi_ar_prog_empty(NLW_inst_axi_ar_prog_empty_UNCONNECTED),
        .axi_ar_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_prog_full(NLW_inst_axi_ar_prog_full_UNCONNECTED),
        .axi_ar_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_ar_rd_data_count(NLW_inst_axi_ar_rd_data_count_UNCONNECTED[4:0]),
        .axi_ar_sbiterr(NLW_inst_axi_ar_sbiterr_UNCONNECTED),
        .axi_ar_underflow(NLW_inst_axi_ar_underflow_UNCONNECTED),
        .axi_ar_wr_data_count(NLW_inst_axi_ar_wr_data_count_UNCONNECTED[4:0]),
        .axi_aw_data_count(NLW_inst_axi_aw_data_count_UNCONNECTED[4:0]),
        .axi_aw_dbiterr(NLW_inst_axi_aw_dbiterr_UNCONNECTED),
        .axi_aw_injectdbiterr(1'b0),
        .axi_aw_injectsbiterr(1'b0),
        .axi_aw_overflow(NLW_inst_axi_aw_overflow_UNCONNECTED),
        .axi_aw_prog_empty(NLW_inst_axi_aw_prog_empty_UNCONNECTED),
        .axi_aw_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_prog_full(NLW_inst_axi_aw_prog_full_UNCONNECTED),
        .axi_aw_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_aw_rd_data_count(NLW_inst_axi_aw_rd_data_count_UNCONNECTED[4:0]),
        .axi_aw_sbiterr(NLW_inst_axi_aw_sbiterr_UNCONNECTED),
        .axi_aw_underflow(NLW_inst_axi_aw_underflow_UNCONNECTED),
        .axi_aw_wr_data_count(NLW_inst_axi_aw_wr_data_count_UNCONNECTED[4:0]),
        .axi_b_data_count(NLW_inst_axi_b_data_count_UNCONNECTED[4:0]),
        .axi_b_dbiterr(NLW_inst_axi_b_dbiterr_UNCONNECTED),
        .axi_b_injectdbiterr(1'b0),
        .axi_b_injectsbiterr(1'b0),
        .axi_b_overflow(NLW_inst_axi_b_overflow_UNCONNECTED),
        .axi_b_prog_empty(NLW_inst_axi_b_prog_empty_UNCONNECTED),
        .axi_b_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_prog_full(NLW_inst_axi_b_prog_full_UNCONNECTED),
        .axi_b_prog_full_thresh({1'b0,1'b0,1'b0,1'b0}),
        .axi_b_rd_data_count(NLW_inst_axi_b_rd_data_count_UNCONNECTED[4:0]),
        .axi_b_sbiterr(NLW_inst_axi_b_sbiterr_UNCONNECTED),
        .axi_b_underflow(NLW_inst_axi_b_underflow_UNCONNECTED),
        .axi_b_wr_data_count(NLW_inst_axi_b_wr_data_count_UNCONNECTED[4:0]),
        .axi_r_data_count(NLW_inst_axi_r_data_count_UNCONNECTED[10:0]),
        .axi_r_dbiterr(NLW_inst_axi_r_dbiterr_UNCONNECTED),
        .axi_r_injectdbiterr(1'b0),
        .axi_r_injectsbiterr(1'b0),
        .axi_r_overflow(NLW_inst_axi_r_overflow_UNCONNECTED),
        .axi_r_prog_empty(NLW_inst_axi_r_prog_empty_UNCONNECTED),
        .axi_r_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_prog_full(NLW_inst_axi_r_prog_full_UNCONNECTED),
        .axi_r_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_r_rd_data_count(NLW_inst_axi_r_rd_data_count_UNCONNECTED[10:0]),
        .axi_r_sbiterr(NLW_inst_axi_r_sbiterr_UNCONNECTED),
        .axi_r_underflow(NLW_inst_axi_r_underflow_UNCONNECTED),
        .axi_r_wr_data_count(NLW_inst_axi_r_wr_data_count_UNCONNECTED[10:0]),
        .axi_w_data_count(NLW_inst_axi_w_data_count_UNCONNECTED[10:0]),
        .axi_w_dbiterr(NLW_inst_axi_w_dbiterr_UNCONNECTED),
        .axi_w_injectdbiterr(1'b0),
        .axi_w_injectsbiterr(1'b0),
        .axi_w_overflow(NLW_inst_axi_w_overflow_UNCONNECTED),
        .axi_w_prog_empty(NLW_inst_axi_w_prog_empty_UNCONNECTED),
        .axi_w_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_prog_full(NLW_inst_axi_w_prog_full_UNCONNECTED),
        .axi_w_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axi_w_rd_data_count(NLW_inst_axi_w_rd_data_count_UNCONNECTED[10:0]),
        .axi_w_sbiterr(NLW_inst_axi_w_sbiterr_UNCONNECTED),
        .axi_w_underflow(NLW_inst_axi_w_underflow_UNCONNECTED),
        .axi_w_wr_data_count(NLW_inst_axi_w_wr_data_count_UNCONNECTED[10:0]),
        .axis_data_count(NLW_inst_axis_data_count_UNCONNECTED[10:0]),
        .axis_dbiterr(NLW_inst_axis_dbiterr_UNCONNECTED),
        .axis_injectdbiterr(1'b0),
        .axis_injectsbiterr(1'b0),
        .axis_overflow(NLW_inst_axis_overflow_UNCONNECTED),
        .axis_prog_empty(NLW_inst_axis_prog_empty_UNCONNECTED),
        .axis_prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_prog_full(NLW_inst_axis_prog_full_UNCONNECTED),
        .axis_prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .axis_rd_data_count(NLW_inst_axis_rd_data_count_UNCONNECTED[10:0]),
        .axis_sbiterr(NLW_inst_axis_sbiterr_UNCONNECTED),
        .axis_underflow(NLW_inst_axis_underflow_UNCONNECTED),
        .axis_wr_data_count(NLW_inst_axis_wr_data_count_UNCONNECTED[10:0]),
        .backup(1'b0),
        .backup_marker(1'b0),
        .clk(1'b0),
        .data_count(NLW_inst_data_count_UNCONNECTED[9:0]),
        .dbiterr(NLW_inst_dbiterr_UNCONNECTED),
        .din(UNCONN_IN),
        .dout(D),
        .empty(fifo_empty),
        .full(fifo_full),
        .injectdbiterr(1'b0),
        .injectsbiterr(1'b0),
        .int_clk(1'b0),
        .m_aclk(1'b0),
        .m_aclk_en(1'b0),
        .m_axi_araddr(NLW_inst_m_axi_araddr_UNCONNECTED[31:0]),
        .m_axi_arburst(NLW_inst_m_axi_arburst_UNCONNECTED[1:0]),
        .m_axi_arcache(NLW_inst_m_axi_arcache_UNCONNECTED[3:0]),
        .m_axi_arid(NLW_inst_m_axi_arid_UNCONNECTED[3:0]),
        .m_axi_arlen(NLW_inst_m_axi_arlen_UNCONNECTED[7:0]),
        .m_axi_arlock(NLW_inst_m_axi_arlock_UNCONNECTED[0]),
        .m_axi_arprot(NLW_inst_m_axi_arprot_UNCONNECTED[2:0]),
        .m_axi_arqos(NLW_inst_m_axi_arqos_UNCONNECTED[3:0]),
        .m_axi_arready(1'b0),
        .m_axi_arregion(NLW_inst_m_axi_arregion_UNCONNECTED[3:0]),
        .m_axi_arsize(NLW_inst_m_axi_arsize_UNCONNECTED[2:0]),
        .m_axi_aruser(NLW_inst_m_axi_aruser_UNCONNECTED[0]),
        .m_axi_arvalid(NLW_inst_m_axi_arvalid_UNCONNECTED),
        .m_axi_awaddr(NLW_inst_m_axi_awaddr_UNCONNECTED[31:0]),
        .m_axi_awburst(NLW_inst_m_axi_awburst_UNCONNECTED[1:0]),
        .m_axi_awcache(NLW_inst_m_axi_awcache_UNCONNECTED[3:0]),
        .m_axi_awid(NLW_inst_m_axi_awid_UNCONNECTED[3:0]),
        .m_axi_awlen(NLW_inst_m_axi_awlen_UNCONNECTED[7:0]),
        .m_axi_awlock(NLW_inst_m_axi_awlock_UNCONNECTED[0]),
        .m_axi_awprot(NLW_inst_m_axi_awprot_UNCONNECTED[2:0]),
        .m_axi_awqos(NLW_inst_m_axi_awqos_UNCONNECTED[3:0]),
        .m_axi_awready(1'b0),
        .m_axi_awregion(NLW_inst_m_axi_awregion_UNCONNECTED[3:0]),
        .m_axi_awsize(NLW_inst_m_axi_awsize_UNCONNECTED[2:0]),
        .m_axi_awuser(NLW_inst_m_axi_awuser_UNCONNECTED[0]),
        .m_axi_awvalid(NLW_inst_m_axi_awvalid_UNCONNECTED),
        .m_axi_bid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_bready(NLW_inst_m_axi_bready_UNCONNECTED),
        .m_axi_bresp({1'b0,1'b0}),
        .m_axi_buser(1'b0),
        .m_axi_bvalid(1'b0),
        .m_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rid({1'b0,1'b0,1'b0,1'b0}),
        .m_axi_rlast(1'b0),
        .m_axi_rready(NLW_inst_m_axi_rready_UNCONNECTED),
        .m_axi_rresp({1'b0,1'b0}),
        .m_axi_ruser(1'b0),
        .m_axi_rvalid(1'b0),
        .m_axi_wdata(NLW_inst_m_axi_wdata_UNCONNECTED[63:0]),
        .m_axi_wid(NLW_inst_m_axi_wid_UNCONNECTED[3:0]),
        .m_axi_wlast(NLW_inst_m_axi_wlast_UNCONNECTED),
        .m_axi_wready(1'b0),
        .m_axi_wstrb(NLW_inst_m_axi_wstrb_UNCONNECTED[7:0]),
        .m_axi_wuser(NLW_inst_m_axi_wuser_UNCONNECTED[0]),
        .m_axi_wvalid(NLW_inst_m_axi_wvalid_UNCONNECTED),
        .m_axis_tdata(NLW_inst_m_axis_tdata_UNCONNECTED[63:0]),
        .m_axis_tdest(NLW_inst_m_axis_tdest_UNCONNECTED[3:0]),
        .m_axis_tid(NLW_inst_m_axis_tid_UNCONNECTED[7:0]),
        .m_axis_tkeep(NLW_inst_m_axis_tkeep_UNCONNECTED[3:0]),
        .m_axis_tlast(NLW_inst_m_axis_tlast_UNCONNECTED),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_inst_m_axis_tstrb_UNCONNECTED[3:0]),
        .m_axis_tuser(NLW_inst_m_axis_tuser_UNCONNECTED[3:0]),
        .m_axis_tvalid(NLW_inst_m_axis_tvalid_UNCONNECTED),
        .overflow(NLW_inst_overflow_UNCONNECTED),
        .prog_empty(NLW_inst_prog_empty_UNCONNECTED),
        .prog_empty_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_empty_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full(NLW_inst_prog_full_UNCONNECTED),
        .prog_full_thresh({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_assert({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .prog_full_thresh_negate({1'b0,1'b0,1'b0,1'b0,1'b0}),
        .rd_clk(core_aclk),
        .rd_data_count(NLW_inst_rd_data_count_UNCONNECTED[4:0]),
        .rd_en(rd_en),
        .rd_rst(1'b0),
        .rd_rst_busy(NLW_inst_rd_rst_busy_UNCONNECTED),
        .rst(inst_i_1__0_n_0),
        .s_aclk(1'b0),
        .s_aclk_en(1'b0),
        .s_aresetn(1'b1),
        .s_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arburst({1'b0,1'b0}),
        .s_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arlock(1'b0),
        .s_axi_arprot({1'b0,1'b0,1'b0}),
        .s_axi_arqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arready(NLW_inst_s_axi_arready_UNCONNECTED),
        .s_axi_arregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_arsize({1'b0,1'b0,1'b0}),
        .s_axi_aruser(1'b0),
        .s_axi_arvalid(1'b0),
        .s_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awburst({1'b0,1'b0}),
        .s_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awlock(1'b0),
        .s_axi_awprot({1'b0,1'b0,1'b0}),
        .s_axi_awqos({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awready(NLW_inst_s_axi_awready_UNCONNECTED),
        .s_axi_awregion({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_awsize({1'b0,1'b0,1'b0}),
        .s_axi_awuser(1'b0),
        .s_axi_awvalid(1'b0),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[3:0]),
        .s_axi_bready(1'b0),
        .s_axi_bresp(NLW_inst_s_axi_bresp_UNCONNECTED[1:0]),
        .s_axi_buser(NLW_inst_s_axi_buser_UNCONNECTED[0]),
        .s_axi_bvalid(NLW_inst_s_axi_bvalid_UNCONNECTED),
        .s_axi_rdata(NLW_inst_s_axi_rdata_UNCONNECTED[63:0]),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[3:0]),
        .s_axi_rlast(NLW_inst_s_axi_rlast_UNCONNECTED),
        .s_axi_rready(1'b0),
        .s_axi_rresp(NLW_inst_s_axi_rresp_UNCONNECTED[1:0]),
        .s_axi_ruser(NLW_inst_s_axi_ruser_UNCONNECTED[0]),
        .s_axi_rvalid(NLW_inst_s_axi_rvalid_UNCONNECTED),
        .s_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wid({1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wlast(1'b0),
        .s_axi_wready(NLW_inst_s_axi_wready_UNCONNECTED),
        .s_axi_wstrb({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_wuser(1'b0),
        .s_axi_wvalid(1'b0),
        .s_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tdest({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tid({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tkeep({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tlast(1'b0),
        .s_axis_tready(NLW_inst_s_axis_tready_UNCONNECTED),
        .s_axis_tstrb({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tuser({1'b0,1'b0,1'b0,1'b0}),
        .s_axis_tvalid(1'b0),
        .sbiterr(NLW_inst_sbiterr_UNCONNECTED),
        .sleep(1'b0),
        .srst(1'b0),
        .underflow(NLW_inst_underflow_UNCONNECTED),
        .valid(NLW_inst_valid_UNCONNECTED),
        .wr_ack(NLW_inst_wr_ack_UNCONNECTED),
        .wr_clk(ext_clk_0),
        .wr_data_count(NLW_inst_wr_data_count_UNCONNECTED[4:0]),
        .wr_en(fifo_wr_en),
        .wr_rst(1'b0),
        .wr_rst_busy(NLW_inst_wr_rst_busy_UNCONNECTED));
  LUT2 #(
    .INIT(4'h7)) 
    inst_i_1__0
       (.I0(ext_rstn_0),
        .I1(core_aresetn),
        .O(inst_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    inst_i_2__0
       (.I0(fifo_full),
        .O(fifo_wr_en));
  LUT1 #(
    .INIT(2'h1)) 
    inst_i_3__0
       (.I0(fifo_empty),
        .O(rd_en));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_axi_interface
   (Bus2IP_RdCE,
    s_axi_rvalid,
    s_axi_arready,
    s_axi_awready,
    s_axi_bvalid,
    Q,
    Lat_Status_Reg_FOC_Rd_En_reg,
    Lat_Status_Reg_FOC_Rd_En_reg_0,
    Lat_Status_Reg_WIF_Rd_En_reg,
    Addr_3downto0_is_0x4,
    Lat_Intr_Reg_GIE_Rd_En_reg,
    Intr_Reg_Set_Rd_En,
    Lat_Intr_Reg_IER_Rd_En_reg,
    Lat_Intr_Reg_ISR_Rd_En_reg,
    E,
    Addr_3downto0_is_0xC,
    Lat_Enlog_Reg_Set_Rd_En_reg,
    s_axi_wready,
    p_1_out,
    p_3_out,
    p_5_out,
    p_8_out,
    p_10_out11_out,
    p_13_out,
    p_14_out,
    p_12_out,
    p_9_out,
    p_6_out7_out,
    p_4_out,
    p_2_out,
    p_0_out,
    Event_Log_Set_Rd_En,
    Addr_7downto4_is_0x0,
    Global_Intr_En_reg,
    Interval_Cnt_En0,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[7] ,
    \IER_reg[12] ,
    \Sample_Interval_i_reg_CDC_reg[31] ,
    Status_Reg_Set_Rd_En,
    p_23_in,
    Metric_Sel_Reg_0_Rd_En,
    Sel_Reg_Set_Rd_En,
    Global_Clk_Cnt_LSB_Rd_En,
    Global_Clk_Cnt_MSB_Rd_En,
    Global_Clk_Cnt_Set_Rd_En,
    Samp_Incr_Reg_Set_Rd_En,
    Samp_Metric_Cnt_Reg_Set_Rd_En,
    Control_Set_Rd_En,
    Latency_ID_Rd_En,
    ID_Mask_Rd_En,
    Control_Set_Wr_En,
    \Latency_WID_CDC_reg[15] ,
    \WID_Mask_CDC_reg[15] ,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[31] ,
    Metric_Cnt_Reg_Set_Rd_En,
    Incr_Reg_Set_Rd_En,
    Rng_Reg_Set_Rd_En,
    Addr_3downto0_is_0x8,
    s_axi_rdata,
    SR,
    s_axi_aclk,
    IP2Bus_DataValid_reg,
    s_axi_awvalid,
    s_axi_wvalid,
    s_axi_rready,
    s_axi_aresetn,
    s_axi_arvalid,
    s_axi_bready,
    s_axi_wdata,
    Intr_In_sync,
    Intr_Reg_ISR,
    s_axi_araddr,
    s_axi_awaddr,
    IP2Bus_DataValid_reg_0,
    D);
  output Bus2IP_RdCE;
  output s_axi_rvalid;
  output s_axi_arready;
  output s_axi_awready;
  output s_axi_bvalid;
  output [7:0]Q;
  output Lat_Status_Reg_FOC_Rd_En_reg;
  output Lat_Status_Reg_FOC_Rd_En_reg_0;
  output Lat_Status_Reg_WIF_Rd_En_reg;
  output Addr_3downto0_is_0x4;
  output Lat_Intr_Reg_GIE_Rd_En_reg;
  output Intr_Reg_Set_Rd_En;
  output Lat_Intr_Reg_IER_Rd_En_reg;
  output Lat_Intr_Reg_ISR_Rd_En_reg;
  output [0:0]E;
  output Addr_3downto0_is_0xC;
  output Lat_Enlog_Reg_Set_Rd_En_reg;
  output s_axi_wready;
  output p_1_out;
  output p_3_out;
  output p_5_out;
  output p_8_out;
  output p_10_out11_out;
  output p_13_out;
  output p_14_out;
  output p_12_out;
  output p_9_out;
  output p_6_out7_out;
  output p_4_out;
  output p_2_out;
  output p_0_out;
  output Event_Log_Set_Rd_En;
  output Addr_7downto4_is_0x0;
  output Global_Intr_En_reg;
  output Interval_Cnt_En0;
  output [0:0]\GEN_METRIC_0.Metric_Sel_0_CDC_reg[7] ;
  output [0:0]\IER_reg[12] ;
  output [0:0]\Sample_Interval_i_reg_CDC_reg[31] ;
  output Status_Reg_Set_Rd_En;
  output p_23_in;
  output Metric_Sel_Reg_0_Rd_En;
  output Sel_Reg_Set_Rd_En;
  output Global_Clk_Cnt_LSB_Rd_En;
  output Global_Clk_Cnt_MSB_Rd_En;
  output Global_Clk_Cnt_Set_Rd_En;
  output Samp_Incr_Reg_Set_Rd_En;
  output Samp_Metric_Cnt_Reg_Set_Rd_En;
  output Control_Set_Rd_En;
  output Latency_ID_Rd_En;
  output ID_Mask_Rd_En;
  output Control_Set_Wr_En;
  output [0:0]\Latency_WID_CDC_reg[15] ;
  output [0:0]\WID_Mask_CDC_reg[15] ;
  output [0:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] ;
  output Metric_Cnt_Reg_Set_Rd_En;
  output Incr_Reg_Set_Rd_En;
  output Rng_Reg_Set_Rd_En;
  output Addr_3downto0_is_0x8;
  output [31:0]s_axi_rdata;
  input [0:0]SR;
  input s_axi_aclk;
  input IP2Bus_DataValid_reg;
  input s_axi_awvalid;
  input s_axi_wvalid;
  input s_axi_rready;
  input s_axi_aresetn;
  input s_axi_arvalid;
  input s_axi_bready;
  input [12:0]s_axi_wdata;
  input [12:0]Intr_In_sync;
  input [12:0]Intr_Reg_ISR;
  input [15:0]s_axi_araddr;
  input [15:0]s_axi_awaddr;
  input [0:0]IP2Bus_DataValid_reg_0;
  input [31:0]D;

  wire Addr_3downto0_is_0x4;
  wire Addr_3downto0_is_0x8;
  wire Addr_3downto0_is_0xC;
  wire Addr_7downto4_is_0x0;
  wire [15:0]Bus2IP_Addr;
  wire Bus2IP_RdCE;
  wire Bus2IP_WrCE;
  wire Control_Set_Rd_En;
  wire Control_Set_Wr_En;
  wire [31:0]D;
  wire [0:0]E;
  wire Event_Log_Set_Rd_En;
  wire \GEN_ISR_REG[0].ISR[0]_i_2_n_0 ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_2_n_0 ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_3_n_0 ;
  wire [0:0]\GEN_METRIC_0.Metric_Sel_0_CDC_reg[7] ;
  wire \GEN_METRIC_0.Range_Reg_0_CDC[31]_i_2_n_0 ;
  wire \GEN_METRIC_0.Range_Reg_0_CDC[31]_i_3_n_0 ;
  wire [0:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] ;
  wire Global_Clk_Cnt_LSB_Rd_En;
  wire Global_Clk_Cnt_MSB_Rd_En;
  wire Global_Clk_Cnt_Set_Rd_En;
  wire Global_Intr_En_reg;
  wire ID_Mask_Rd_En;
  wire [0:0]\IER_reg[12] ;
  wire IP2Bus_DataValid_reg;
  wire [0:0]IP2Bus_DataValid_reg_0;
  wire Incr_Reg_Set_Rd_En;
  wire Interval_Cnt_En0;
  wire [12:0]Intr_In_sync;
  wire [12:0]Intr_Reg_ISR;
  wire Intr_Reg_Set_Rd_En;
  wire Lat_Enlog_Reg_Set_Rd_En_reg;
  wire Lat_Event_Log_Set_Rd_En_i_2_n_0;
  wire Lat_Event_Log_Set_Rd_En_i_3_n_0;
  wire Lat_ID_Mask_Rd_En_i_2_n_0;
  wire Lat_Incr_Reg_Set_Rd_En_i_2_n_0;
  wire Lat_Intr_Reg_GIE_Rd_En_reg;
  wire Lat_Intr_Reg_IER_Rd_En_reg;
  wire Lat_Intr_Reg_ISR_Rd_En_reg;
  wire Lat_Samp_Metric_Cnt_Reg_Set_Rd_En_i_2_n_0;
  wire Lat_Sample_Reg_Rd_En_i_2_n_0;
  wire Lat_Status_Reg_FOC_Rd_En_reg;
  wire Lat_Status_Reg_FOC_Rd_En_reg_0;
  wire Lat_Status_Reg_WIF_Rd_En_reg;
  wire Latency_ID_Rd_En;
  wire [0:0]\Latency_WID_CDC_reg[15] ;
  wire Metric_Cnt_Reg_Set_Rd_En;
  wire Metric_Sel_Reg_0_Rd_En;
  wire [7:0]Q;
  wire Rng_Reg_Set_Rd_En;
  wire [0:0]SR;
  wire Samp_Incr_Reg_Set_Rd_En;
  wire Samp_Metric_Cnt_Reg_Set_Rd_En;
  wire [0:0]\Sample_Interval_i_reg_CDC_reg[31] ;
  wire Sel_Reg_Set_Rd_En;
  wire Status_Reg_Set_Rd_En;
  wire \WID_Mask_CDC[15]_i_2_n_0 ;
  wire [0:0]\WID_Mask_CDC_reg[15] ;
  wire arready_i0;
  wire arready_i_i_1_n_0;
  wire awready_i_i_1_n_0;
  wire \bus2ip_addr_i[15]_i_1_n_0 ;
  wire bvalid_i_2_n_0;
  wire p_0_out;
  wire p_10_out11_out;
  wire p_12_out;
  wire p_13_out;
  wire p_14_out;
  wire p_1_out;
  wire p_23_in;
  wire [15:0]p_2_in;
  wire p_2_out;
  wire p_3_out;
  wire p_4_in;
  wire p_4_out;
  wire p_5_out;
  wire p_6_out7_out;
  wire p_8_out;
  wire p_9_out;
  wire rd_in_progress;
  wire rd_in_progress_i_1_n_0;
  wire s_axi_aclk;
  wire [15:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [15:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [12:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire wr_req_pend;
  wire [15:0]wr_req_pend_addr;
  wire wr_req_pend_i_1_n_0;
  wire wr_req_pend_pulse;
  wire write_req;
  wire write_req_i_1_n_0;

  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[0].ISR[0]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[0]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[0]),
        .I4(Intr_Reg_ISR[0]),
        .O(p_14_out));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \GEN_ISR_REG[0].ISR[0]_i_2 
       (.I0(\GEN_METRIC_0.Range_Reg_0_CDC[31]_i_2_n_0 ),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_3_n_0 ),
        .I2(Q[3]),
        .I3(Q[5]),
        .I4(Q[4]),
        .I5(Q[2]),
        .O(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[10].ISR[10]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[10]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[10]),
        .I4(Intr_Reg_ISR[10]),
        .O(p_2_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[11].ISR[11]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[11]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[11]),
        .I4(Intr_Reg_ISR[11]),
        .O(p_1_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[12].ISR[12]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[12]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[12]),
        .I4(Intr_Reg_ISR[12]),
        .O(p_0_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[1].ISR[1]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[1]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[1]),
        .I4(Intr_Reg_ISR[1]),
        .O(p_13_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[2].ISR[2]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[2]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[2]),
        .I4(Intr_Reg_ISR[2]),
        .O(p_12_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[3].ISR[3]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[3]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[3]),
        .I4(Intr_Reg_ISR[3]),
        .O(p_10_out11_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[4].ISR[4]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[4]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[4]),
        .I4(Intr_Reg_ISR[4]),
        .O(p_9_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[5].ISR[5]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[5]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[5]),
        .I4(Intr_Reg_ISR[5]),
        .O(p_8_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[6].ISR[6]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[6]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[6]),
        .I4(Intr_Reg_ISR[6]),
        .O(p_6_out7_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[7].ISR[7]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[7]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[7]),
        .I4(Intr_Reg_ISR[7]),
        .O(p_5_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[8].ISR[8]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[8]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[8]),
        .I4(Intr_Reg_ISR[8]),
        .O(p_4_out));
  LUT5 #(
    .INIT(32'h70707000)) 
    \GEN_ISR_REG[9].ISR[9]_i_1 
       (.I0(\GEN_ISR_REG[0].ISR[0]_i_2_n_0 ),
        .I1(s_axi_wdata[9]),
        .I2(s_axi_aresetn),
        .I3(Intr_In_sync[9]),
        .I4(Intr_Reg_ISR[9]),
        .O(p_3_out));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_1 
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_2_n_0 ),
        .O(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[7] ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'hFFFEFFFF)) 
    \GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_2 
       (.I0(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_3_n_0 ),
        .I1(Q[1]),
        .I2(Bus2IP_Addr[1]),
        .I3(Bus2IP_Addr[0]),
        .I4(Q[0]),
        .O(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFEFFFFFFFF)) 
    \GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_3 
       (.I0(Bus2IP_Addr[11]),
        .I1(Bus2IP_Addr[10]),
        .I2(Q[7]),
        .I3(Q[6]),
        .I4(Lat_Event_Log_Set_Rd_En_i_3_n_0),
        .I5(Bus2IP_WrCE),
        .O(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'h00004000)) 
    \GEN_METRIC_0.Range_Reg_0_CDC[31]_i_1 
       (.I0(\GEN_METRIC_0.Range_Reg_0_CDC[31]_i_2_n_0 ),
        .I1(Addr_7downto4_is_0x0),
        .I2(s_axi_wvalid),
        .I3(write_req),
        .I4(\GEN_METRIC_0.Range_Reg_0_CDC[31]_i_3_n_0 ),
        .O(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] ));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hFFFB)) 
    \GEN_METRIC_0.Range_Reg_0_CDC[31]_i_2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Bus2IP_Addr[1]),
        .O(\GEN_METRIC_0.Range_Reg_0_CDC[31]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT5 #(
    .INIT(32'hFFFFFFEF)) 
    \GEN_METRIC_0.Range_Reg_0_CDC[31]_i_3 
       (.I0(Lat_Event_Log_Set_Rd_En_i_3_n_0),
        .I1(Q[7]),
        .I2(Q[6]),
        .I3(Bus2IP_Addr[10]),
        .I4(Bus2IP_Addr[11]),
        .O(\GEN_METRIC_0.Range_Reg_0_CDC[31]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFDFF)) 
    Global_Intr_En_i_2
       (.I0(Q[2]),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[3]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_3_n_0 ),
        .O(Global_Intr_En_reg));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    \IER[12]_i_1 
       (.I0(Q[2]),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[3]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_2_n_0 ),
        .O(\IER_reg[12] ));
  FDRE \IP2Bus_Data_sampled_reg[0] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[0]),
        .Q(s_axi_rdata[0]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[10] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[10]),
        .Q(s_axi_rdata[10]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[11] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[11]),
        .Q(s_axi_rdata[11]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[12] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[12]),
        .Q(s_axi_rdata[12]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[13] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[13]),
        .Q(s_axi_rdata[13]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[14] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[14]),
        .Q(s_axi_rdata[14]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[15] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[15]),
        .Q(s_axi_rdata[15]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[16] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[16]),
        .Q(s_axi_rdata[16]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[17] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[17]),
        .Q(s_axi_rdata[17]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[18] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[18]),
        .Q(s_axi_rdata[18]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[19] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[19]),
        .Q(s_axi_rdata[19]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[1] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[1]),
        .Q(s_axi_rdata[1]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[20] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[20]),
        .Q(s_axi_rdata[20]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[21] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[21]),
        .Q(s_axi_rdata[21]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[22] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[22]),
        .Q(s_axi_rdata[22]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[23] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[23]),
        .Q(s_axi_rdata[23]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[24] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[24]),
        .Q(s_axi_rdata[24]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[25] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[25]),
        .Q(s_axi_rdata[25]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[26] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[26]),
        .Q(s_axi_rdata[26]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[27] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[27]),
        .Q(s_axi_rdata[27]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[28] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[28]),
        .Q(s_axi_rdata[28]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[29] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[29]),
        .Q(s_axi_rdata[29]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[2] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[2]),
        .Q(s_axi_rdata[2]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[30] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[30]),
        .Q(s_axi_rdata[30]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[31] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[31]),
        .Q(s_axi_rdata[31]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[3] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[3]),
        .Q(s_axi_rdata[3]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[4] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[4]),
        .Q(s_axi_rdata[4]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[5] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[5]),
        .Q(s_axi_rdata[5]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[6] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[6]),
        .Q(s_axi_rdata[6]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[7] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[7]),
        .Q(s_axi_rdata[7]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[8] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[8]),
        .Q(s_axi_rdata[8]),
        .R(SR));
  FDRE \IP2Bus_Data_sampled_reg[9] 
       (.C(s_axi_aclk),
        .CE(IP2Bus_DataValid_reg_0),
        .D(D[9]),
        .Q(s_axi_rdata[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h0000000000000100)) 
    Interval_Cnt_En_i_2
       (.I0(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_3_n_0 ),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC[31]_i_2_n_0 ),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Q[4]),
        .O(Interval_Cnt_En0));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h0002)) 
    Lat_Addr_3downto0_is_0x4_i_1
       (.I0(Q[0]),
        .I1(Bus2IP_Addr[0]),
        .I2(Bus2IP_Addr[1]),
        .I3(Q[1]),
        .O(Addr_3downto0_is_0x4));
  LUT4 #(
    .INIT(16'h0010)) 
    Lat_Addr_3downto0_is_0x8_i_1
       (.I0(Bus2IP_Addr[1]),
        .I1(Bus2IP_Addr[0]),
        .I2(Q[1]),
        .I3(Q[0]),
        .O(Addr_3downto0_is_0x8));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    Lat_Addr_3downto0_is_0xC_i_1
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Bus2IP_Addr[1]),
        .O(Addr_3downto0_is_0xC));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    Lat_Addr_7downto4_is_0x0_i_1
       (.I0(Q[3]),
        .I1(Q[2]),
        .I2(Q[4]),
        .I3(Q[5]),
        .O(Addr_7downto4_is_0x0));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    Lat_Control_Set_Rd_En_i_1
       (.I0(Lat_Status_Reg_FOC_Rd_En_reg_0),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Lat_ID_Mask_Rd_En_i_2_n_0),
        .O(Control_Set_Rd_En));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h02000000)) 
    Lat_Enlog_Reg_Set_Rd_En_i_1
       (.I0(Lat_Incr_Reg_Set_Rd_En_i_2_n_0),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(Lat_Enlog_Reg_Set_Rd_En_reg));
  LUT6 #(
    .INIT(64'h0000000020000000)) 
    Lat_Event_Log_Set_Rd_En_i_1
       (.I0(Bus2IP_Addr[10]),
        .I1(Bus2IP_Addr[11]),
        .I2(Bus2IP_RdCE),
        .I3(Lat_Event_Log_Set_Rd_En_i_2_n_0),
        .I4(Addr_7downto4_is_0x0),
        .I5(Lat_Event_Log_Set_Rd_En_i_3_n_0),
        .O(Event_Log_Set_Rd_En));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT2 #(
    .INIT(4'h1)) 
    Lat_Event_Log_Set_Rd_En_i_2
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(Lat_Event_Log_Set_Rd_En_i_2_n_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    Lat_Event_Log_Set_Rd_En_i_3
       (.I0(Bus2IP_Addr[14]),
        .I1(Bus2IP_Addr[12]),
        .I2(Bus2IP_Addr[15]),
        .I3(Bus2IP_Addr[13]),
        .O(Lat_Event_Log_Set_Rd_En_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    Lat_Global_Clk_Cnt_LSB_Rd_En_i_1
       (.I0(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .I1(Addr_3downto0_is_0x4),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(Global_Clk_Cnt_LSB_Rd_En));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    Lat_Global_Clk_Cnt_MSB_Rd_En_i_1
       (.I0(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .I1(Lat_Status_Reg_FOC_Rd_En_reg_0),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(Global_Clk_Cnt_MSB_Rd_En));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    Lat_Global_Clk_Cnt_MSB_Rd_En_i_2
       (.I0(Q[0]),
        .I1(Bus2IP_Addr[0]),
        .I2(Bus2IP_Addr[1]),
        .I3(Q[1]),
        .O(Lat_Status_Reg_FOC_Rd_En_reg_0));
  LUT5 #(
    .INIT(32'h00010000)) 
    Lat_Global_Clk_Cnt_Set_Rd_En_i_1
       (.I0(Q[5]),
        .I1(Q[4]),
        .I2(Q[2]),
        .I3(Q[3]),
        .I4(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .O(Global_Clk_Cnt_Set_Rd_En));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    Lat_ID_Mask_Rd_En_i_1
       (.I0(\GEN_METRIC_0.Range_Reg_0_CDC[31]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Lat_ID_Mask_Rd_En_i_2_n_0),
        .O(ID_Mask_Rd_En));
  LUT6 #(
    .INIT(64'hFFFFFFDFFFFFFFFF)) 
    Lat_ID_Mask_Rd_En_i_2
       (.I0(Bus2IP_RdCE),
        .I1(Lat_Event_Log_Set_Rd_En_i_3_n_0),
        .I2(Q[7]),
        .I3(Bus2IP_Addr[10]),
        .I4(Bus2IP_Addr[11]),
        .I5(Q[6]),
        .O(Lat_ID_Mask_Rd_En_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    Lat_Incr_Reg_Set_Rd_En_i_1
       (.I0(Q[1]),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[0]),
        .I4(Lat_Incr_Reg_Set_Rd_En_i_2_n_0),
        .O(Incr_Reg_Set_Rd_En));
  LUT6 #(
    .INIT(64'h0000000000000200)) 
    Lat_Incr_Reg_Set_Rd_En_i_2
       (.I0(Bus2IP_RdCE),
        .I1(Bus2IP_Addr[11]),
        .I2(Bus2IP_Addr[10]),
        .I3(Q[6]),
        .I4(Q[7]),
        .I5(Lat_Event_Log_Set_Rd_En_i_3_n_0),
        .O(Lat_Incr_Reg_Set_Rd_En_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    Lat_Intr_Reg_GIE_Rd_En_i_1
       (.I0(Q[1]),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[0]),
        .I4(Intr_Reg_Set_Rd_En),
        .O(Lat_Intr_Reg_GIE_Rd_En_reg));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT5 #(
    .INIT(32'h01000000)) 
    Lat_Intr_Reg_IER_Rd_En_i_1
       (.I0(Q[1]),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[0]),
        .I4(Intr_Reg_Set_Rd_En),
        .O(Lat_Intr_Reg_IER_Rd_En_reg));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    Lat_Intr_Reg_ISR_Rd_En_i_1
       (.I0(Intr_Reg_Set_Rd_En),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(Lat_Intr_Reg_ISR_Rd_En_reg));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00080000)) 
    Lat_Intr_Reg_Set_Rd_En_i_1
       (.I0(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .I1(Q[2]),
        .I2(Q[4]),
        .I3(Q[5]),
        .I4(Q[3]),
        .O(Intr_Reg_Set_Rd_En));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    Lat_Latency_ID_Rd_En_i_1
       (.I0(Addr_3downto0_is_0x4),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Lat_ID_Mask_Rd_En_i_2_n_0),
        .O(Latency_ID_Rd_En));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'h00010000)) 
    Lat_Metric_Cnt_Reg_Set_Rd_En_i_1
       (.I0(Q[1]),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[0]),
        .I4(Lat_Incr_Reg_Set_Rd_En_i_2_n_0),
        .O(Metric_Cnt_Reg_Set_Rd_En));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    Lat_Metric_Sel_Reg_0_Rd_En_i_1
       (.I0(Addr_3downto0_is_0x4),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .O(Metric_Sel_Reg_0_Rd_En));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    Lat_Rng_Reg_Set_Rd_En_i_1
       (.I0(Lat_Incr_Reg_Set_Rd_En_i_2_n_0),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[1]),
        .I4(Q[0]),
        .O(Rng_Reg_Set_Rd_En));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h00000100)) 
    Lat_Samp_Incr_Reg_Set_Rd_En_i_1
       (.I0(Q[1]),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[0]),
        .I4(Lat_Samp_Metric_Cnt_Reg_Set_Rd_En_i_2_n_0),
        .O(Samp_Incr_Reg_Set_Rd_En));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    Lat_Samp_Metric_Cnt_Reg_Set_Rd_En_i_1
       (.I0(Q[1]),
        .I1(Bus2IP_Addr[1]),
        .I2(Bus2IP_Addr[0]),
        .I3(Q[0]),
        .I4(Lat_Samp_Metric_Cnt_Reg_Set_Rd_En_i_2_n_0),
        .O(Samp_Metric_Cnt_Reg_Set_Rd_En));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFBFF)) 
    Lat_Samp_Metric_Cnt_Reg_Set_Rd_En_i_2
       (.I0(Q[6]),
        .I1(Bus2IP_RdCE),
        .I2(Lat_Event_Log_Set_Rd_En_i_3_n_0),
        .I3(Q[7]),
        .I4(Bus2IP_Addr[10]),
        .I5(Bus2IP_Addr[11]),
        .O(Lat_Samp_Metric_Cnt_Reg_Set_Rd_En_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h00000200)) 
    Lat_Sample_Interval_Rd_En_i_1
       (.I0(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[3]),
        .I4(Q[2]),
        .O(p_23_in));
  LUT6 #(
    .INIT(64'h0004000000000000)) 
    Lat_Sample_Reg_Rd_En_i_1
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Q[5]),
        .I3(Q[4]),
        .I4(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .I5(Addr_3downto0_is_0xC),
        .O(E));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    Lat_Sample_Reg_Rd_En_i_2
       (.I0(Bus2IP_RdCE),
        .I1(Bus2IP_Addr[11]),
        .I2(Bus2IP_Addr[10]),
        .I3(Q[7]),
        .I4(Q[6]),
        .I5(Lat_Event_Log_Set_Rd_En_i_3_n_0),
        .O(Lat_Sample_Reg_Rd_En_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT5 #(
    .INIT(32'h00000020)) 
    Lat_Sel_Reg_Set_Rd_En_i_1
       (.I0(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .I1(Q[5]),
        .I2(Q[4]),
        .I3(Q[2]),
        .I4(Q[3]),
        .O(Sel_Reg_Set_Rd_En));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    Lat_Status_Reg_FOC_Rd_En_i_1
       (.I0(Lat_Status_Reg_FOC_Rd_En_reg_0),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .O(Lat_Status_Reg_FOC_Rd_En_reg));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT5 #(
    .INIT(32'h00200000)) 
    Lat_Status_Reg_Set_Rd_En_i_1
       (.I0(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[5]),
        .I4(Q[4]),
        .O(Status_Reg_Set_Rd_En));
  LUT6 #(
    .INIT(64'h0000080000000000)) 
    Lat_Status_Reg_WIF_Rd_En_i_1
       (.I0(Addr_3downto0_is_0x4),
        .I1(Q[4]),
        .I2(Q[5]),
        .I3(Q[2]),
        .I4(Q[3]),
        .I5(Lat_Sample_Reg_Rd_En_i_2_n_0),
        .O(Lat_Status_Reg_WIF_Rd_En_reg));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    \Latency_WID_CDC[15]_i_1 
       (.I0(Addr_3downto0_is_0x4),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(\WID_Mask_CDC[15]_i_2_n_0 ),
        .O(\Latency_WID_CDC_reg[15] ));
  LUT6 #(
    .INIT(64'h0000000000000002)) 
    Metrics_Cnt_En_i_1
       (.I0(Lat_Status_Reg_FOC_Rd_En_reg_0),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(\WID_Mask_CDC[15]_i_2_n_0 ),
        .O(Control_Set_Wr_En));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT5 #(
    .INIT(32'h00000010)) 
    \Sample_Interval_i_reg_CDC[31]_i_1 
       (.I0(Q[4]),
        .I1(Q[5]),
        .I2(Q[3]),
        .I3(Q[2]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC[7]_i_2_n_0 ),
        .O(\Sample_Interval_i_reg_CDC_reg[31] ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \WID_Mask_CDC[15]_i_1 
       (.I0(\GEN_METRIC_0.Range_Reg_0_CDC[31]_i_2_n_0 ),
        .I1(Q[3]),
        .I2(Q[2]),
        .I3(Q[4]),
        .I4(Q[5]),
        .I5(\WID_Mask_CDC[15]_i_2_n_0 ),
        .O(\WID_Mask_CDC_reg[15] ));
  LUT6 #(
    .INIT(64'hFFEFFFFFFFFFFFFF)) 
    \WID_Mask_CDC[15]_i_2 
       (.I0(Bus2IP_Addr[11]),
        .I1(Bus2IP_Addr[10]),
        .I2(Q[7]),
        .I3(Lat_Event_Log_Set_Rd_En_i_3_n_0),
        .I4(Q[6]),
        .I5(Bus2IP_WrCE),
        .O(\WID_Mask_CDC[15]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \WID_Mask_CDC[15]_i_3 
       (.I0(s_axi_wvalid),
        .I1(write_req),
        .O(Bus2IP_WrCE));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    arready_i_i_1
       (.I0(rd_in_progress),
        .I1(Bus2IP_RdCE),
        .I2(s_axi_awvalid),
        .I3(write_req),
        .I4(s_axi_aresetn),
        .I5(arready_i0),
        .O(arready_i_i_1_n_0));
  FDRE arready_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(arready_i_i_1_n_0),
        .Q(s_axi_arready),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    awready_i_i_1
       (.I0(s_axi_rvalid),
        .I1(s_axi_arvalid),
        .I2(Bus2IP_RdCE),
        .I3(write_req),
        .I4(s_axi_aresetn),
        .I5(p_4_in),
        .O(awready_i_i_1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT2 #(
    .INIT(4'h8)) 
    awready_i_i_2
       (.I0(s_axi_awready),
        .I1(s_axi_awvalid),
        .O(p_4_in));
  FDRE awready_i_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(awready_i_i_1_n_0),
        .Q(s_axi_awready),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[0]_i_1 
       (.I0(s_axi_araddr[0]),
        .I1(s_axi_awaddr[0]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[0]),
        .I5(arready_i0),
        .O(p_2_in[0]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[10]_i_1 
       (.I0(s_axi_araddr[10]),
        .I1(s_axi_awaddr[10]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[10]),
        .I5(arready_i0),
        .O(p_2_in[10]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[11]_i_1 
       (.I0(s_axi_araddr[11]),
        .I1(s_axi_awaddr[11]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[11]),
        .I5(arready_i0),
        .O(p_2_in[11]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[12]_i_1 
       (.I0(s_axi_araddr[12]),
        .I1(s_axi_awaddr[12]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[12]),
        .I5(arready_i0),
        .O(p_2_in[12]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[13]_i_1 
       (.I0(s_axi_araddr[13]),
        .I1(s_axi_awaddr[13]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[13]),
        .I5(arready_i0),
        .O(p_2_in[13]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[14]_i_1 
       (.I0(s_axi_araddr[14]),
        .I1(s_axi_awaddr[14]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[14]),
        .I5(arready_i0),
        .O(p_2_in[14]));
  LUT5 #(
    .INIT(32'hFFFFF888)) 
    \bus2ip_addr_i[15]_i_1 
       (.I0(s_axi_awvalid),
        .I1(s_axi_awready),
        .I2(s_axi_arready),
        .I3(s_axi_arvalid),
        .I4(wr_req_pend),
        .O(\bus2ip_addr_i[15]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[15]_i_2 
       (.I0(s_axi_araddr[15]),
        .I1(s_axi_awaddr[15]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[15]),
        .I5(arready_i0),
        .O(p_2_in[15]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[1]_i_1 
       (.I0(s_axi_araddr[1]),
        .I1(s_axi_awaddr[1]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[1]),
        .I5(arready_i0),
        .O(p_2_in[1]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[2]_i_1 
       (.I0(s_axi_araddr[2]),
        .I1(s_axi_awaddr[2]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[2]),
        .I5(arready_i0),
        .O(p_2_in[2]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[3]_i_1 
       (.I0(s_axi_araddr[3]),
        .I1(s_axi_awaddr[3]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[3]),
        .I5(arready_i0),
        .O(p_2_in[3]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[4]_i_1 
       (.I0(s_axi_araddr[4]),
        .I1(s_axi_awaddr[4]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[4]),
        .I5(arready_i0),
        .O(p_2_in[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[5]_i_1 
       (.I0(s_axi_araddr[5]),
        .I1(s_axi_awaddr[5]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[5]),
        .I5(arready_i0),
        .O(p_2_in[5]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[6]_i_1 
       (.I0(s_axi_araddr[6]),
        .I1(s_axi_awaddr[6]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[6]),
        .I5(arready_i0),
        .O(p_2_in[6]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[7]_i_1 
       (.I0(s_axi_araddr[7]),
        .I1(s_axi_awaddr[7]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[7]),
        .I5(arready_i0),
        .O(p_2_in[7]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[8]_i_1 
       (.I0(s_axi_araddr[8]),
        .I1(s_axi_awaddr[8]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[8]),
        .I5(arready_i0),
        .O(p_2_in[8]));
  LUT6 #(
    .INIT(64'hAAAAAAAACFFFC000)) 
    \bus2ip_addr_i[9]_i_1 
       (.I0(s_axi_araddr[9]),
        .I1(s_axi_awaddr[9]),
        .I2(s_axi_awready),
        .I3(s_axi_awvalid),
        .I4(wr_req_pend_addr[9]),
        .I5(arready_i0),
        .O(p_2_in[9]));
  FDRE \bus2ip_addr_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[0]),
        .Q(Bus2IP_Addr[0]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[10]),
        .Q(Bus2IP_Addr[10]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[11]),
        .Q(Bus2IP_Addr[11]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[12]),
        .Q(Bus2IP_Addr[12]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[13]),
        .Q(Bus2IP_Addr[13]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[14]),
        .Q(Bus2IP_Addr[14]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[15]),
        .Q(Bus2IP_Addr[15]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[1]),
        .Q(Bus2IP_Addr[1]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[2]),
        .Q(Q[0]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[3]),
        .Q(Q[1]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[4]),
        .Q(Q[2]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[5]),
        .Q(Q[3]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[6]),
        .Q(Q[4]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[7]),
        .Q(Q[5]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[8]),
        .Q(Q[6]),
        .R(SR));
  FDRE \bus2ip_addr_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i[15]_i_1_n_0 ),
        .D(p_2_in[9]),
        .Q(Q[7]),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'h20FF2020)) 
    bvalid_i_2
       (.I0(write_req),
        .I1(Bus2IP_RdCE),
        .I2(s_axi_wvalid),
        .I3(s_axi_bready),
        .I4(s_axi_bvalid),
        .O(bvalid_i_2_n_0));
  FDRE bvalid_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(bvalid_i_2_n_0),
        .Q(s_axi_bvalid),
        .R(SR));
  LUT4 #(
    .INIT(16'hBFAA)) 
    rd_in_progress_i_1
       (.I0(Bus2IP_RdCE),
        .I1(s_axi_rvalid),
        .I2(s_axi_rready),
        .I3(rd_in_progress),
        .O(rd_in_progress_i_1_n_0));
  FDRE rd_in_progress_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(rd_in_progress_i_1_n_0),
        .Q(rd_in_progress),
        .R(SR));
  LUT2 #(
    .INIT(4'h8)) 
    read_req_i_1
       (.I0(s_axi_arready),
        .I1(s_axi_arvalid),
        .O(arready_i0));
  FDRE read_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(arready_i0),
        .Q(Bus2IP_RdCE),
        .R(SR));
  FDRE rvalid_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(IP2Bus_DataValid_reg),
        .Q(s_axi_rvalid),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT2 #(
    .INIT(4'h2)) 
    s_axi_wready_INST_0
       (.I0(write_req),
        .I1(Bus2IP_RdCE),
        .O(s_axi_wready));
  LUT4 #(
    .INIT(16'h8000)) 
    \wr_req_pend_addr[15]_i_1 
       (.I0(s_axi_arvalid),
        .I1(s_axi_arready),
        .I2(s_axi_awvalid),
        .I3(s_axi_awready),
        .O(wr_req_pend_pulse));
  FDRE \wr_req_pend_addr_reg[0] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[0]),
        .Q(wr_req_pend_addr[0]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[10] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[10]),
        .Q(wr_req_pend_addr[10]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[11] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[11]),
        .Q(wr_req_pend_addr[11]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[12] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[12]),
        .Q(wr_req_pend_addr[12]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[13] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[13]),
        .Q(wr_req_pend_addr[13]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[14] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[14]),
        .Q(wr_req_pend_addr[14]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[15] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[15]),
        .Q(wr_req_pend_addr[15]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[1] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[1]),
        .Q(wr_req_pend_addr[1]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[2] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[2]),
        .Q(wr_req_pend_addr[2]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[3] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[3]),
        .Q(wr_req_pend_addr[3]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[4] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[4]),
        .Q(wr_req_pend_addr[4]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[5] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[5]),
        .Q(wr_req_pend_addr[5]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[6] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[6]),
        .Q(wr_req_pend_addr[6]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[7] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[7]),
        .Q(wr_req_pend_addr[7]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[8] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[8]),
        .Q(wr_req_pend_addr[8]),
        .R(SR));
  FDRE \wr_req_pend_addr_reg[9] 
       (.C(s_axi_aclk),
        .CE(wr_req_pend_pulse),
        .D(s_axi_awaddr[9]),
        .Q(wr_req_pend_addr[9]),
        .R(SR));
  LUT6 #(
    .INIT(64'h8000FFFF80008000)) 
    wr_req_pend_i_1
       (.I0(s_axi_awready),
        .I1(s_axi_awvalid),
        .I2(s_axi_arready),
        .I3(s_axi_arvalid),
        .I4(Bus2IP_RdCE),
        .I5(wr_req_pend),
        .O(wr_req_pend_i_1_n_0));
  FDRE wr_req_pend_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(wr_req_pend_i_1_n_0),
        .Q(wr_req_pend),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h88F8)) 
    write_req_i_1
       (.I0(s_axi_awvalid),
        .I1(s_axi_awready),
        .I2(write_req),
        .I3(s_axi_wvalid),
        .O(write_req_i_1_n_0));
  FDRE write_req_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(write_req_i_1_n_0),
        .Q(write_req),
        .R(SR));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync
   (s_out_d5_reg_0,
    s_out_d6_reg_0,
    E,
    SR,
    s_axi_aclk,
    core_aresetn,
    core_aclk,
    s_out_re,
    Bus2IP_RdCE);
  output s_out_d5_reg_0;
  output s_out_d6_reg_0;
  output [0:0]E;
  input [0:0]SR;
  input s_axi_aclk;
  input core_aresetn;
  input core_aclk;
  input s_out_re;
  input Bus2IP_RdCE;

  wire Bus2IP_RdCE;
  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  wire p_in_d1_cdc_from_reg0;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign E[0] = scndry_out_int_d1;
  assign s_out_d5_reg_0 = s_out_d4;
  assign s_out_d6_reg_0 = s_out_d5;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT2 #(
    .INIT(4'h6)) 
    p_in_d1_cdc_from_i_1
       (.I0(p_in_d1_cdc_from),
        .I1(Bus2IP_RdCE),
        .O(p_in_d1_cdc_from_reg0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from_reg0),
        .Q(p_in_d1_cdc_from),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(core_aresetn));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_3
   (s_out_d1_cdc_to_reg_0,
    s_out_d5_reg_0,
    s_out_d6_reg_0,
    out,
    \IP2Bus_Data_reg[8] ,
    \IP2Bus_Data_reg[1] ,
    \IP2Bus_Data_reg[0] ,
    p_1_in,
    \IP2Bus_Data_reg[7] ,
    \IP2Bus_Data_reg[31] ,
    core_aresetn,
    p_in_d1_cdc_from_reg0,
    core_aclk,
    SR,
    s_axi_aclk,
    s_out_re_0,
    Metric_ram_Out_Reg_CDCR,
    Lat_Status_Reg_WIF_Rd_En,
    Lat_Status_Reg_FOC_Rd_En,
    D,
    Q,
    \Sample_Time_Diff_Reg_reg[31] ,
    Use_Ext_Trigger_reg,
    Wr_Lat_Start,
    Wr_Lat_End,
    Rd_Lat_Start_CDC_reg,
    Rd_Lat_End,
    Reset_On_Sample_Int_Lapse_reg,
    Lat_Global_Clk_Cnt_Set_Rd_En,
    \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] ,
    \Sample_Interval_i_reg_CDC_reg[31] ,
    \Latency_WID_CDC_reg[15] ,
    \Latency_RID_CDC_reg[15] ,
    Lat_Status_Reg_Set_Rd_En,
    Lat_Sample_Interval_Rd_En,
    Lat_Sel_Reg_Set_Rd_En,
    \WID_Mask_CDC_reg[15] ,
    Lat_Control_Set_Rd_En,
    \IER_reg[12] ,
    Lat_Latency_ID_Rd_En,
    Global_Intr_En,
    Lat_Intr_Reg_GIE_Rd_En,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[31] ,
    Intr_Reg_ISR,
    Lat_ID_Mask_Rd_En,
    Lat_Intr_Reg_Set_Rd_En,
    Lat_Intr_Reg_IER_Rd_En,
    Lat_Intr_Reg_ISR_Rd_En_reg,
    \RID_Mask_CDC_reg[15] ,
    Lat_Rng_Reg_Set_Rd_En,
    Lat_Addr_7downto4_is_0x0,
    Lat_Rng_Reg_Set_Rd_En_reg,
    Lat_Samp_Incr_Reg_Set_Rd_En_reg,
    Lat_Addr_3downto0_is_0xC,
    Lat_Addr_3downto0_is_0x8,
    Lat_Metric_Sel_Reg_0_Rd_En,
    s_axi_aresetn,
    Lat_Global_Clk_Cnt_LSB_Rd_En,
    Lat_Global_Clk_Cnt_MSB_Rd_En,
    Lat_Addr_3downto0_is_0x4);
  output s_out_d1_cdc_to_reg_0;
  output s_out_d5_reg_0;
  output s_out_d6_reg_0;
  output out;
  output \IP2Bus_Data_reg[8] ;
  output \IP2Bus_Data_reg[1] ;
  output \IP2Bus_Data_reg[0] ;
  output [28:0]p_1_in;
  output \IP2Bus_Data_reg[7] ;
  output \IP2Bus_Data_reg[31] ;
  input core_aresetn;
  input p_in_d1_cdc_from_reg0;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;
  input s_out_re_0;
  input [31:0]Metric_ram_Out_Reg_CDCR;
  input Lat_Status_Reg_WIF_Rd_En;
  input Lat_Status_Reg_FOC_Rd_En;
  input [31:0]D;
  input [7:0]Q;
  input [31:0]\Sample_Time_Diff_Reg_reg[31] ;
  input [5:0]Use_Ext_Trigger_reg;
  input Wr_Lat_Start;
  input Wr_Lat_End;
  input Rd_Lat_Start_CDC_reg;
  input Rd_Lat_End;
  input [2:0]Reset_On_Sample_Int_Lapse_reg;
  input Lat_Global_Clk_Cnt_Set_Rd_En;
  input [31:0]\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] ;
  input [31:0]\Sample_Interval_i_reg_CDC_reg[31] ;
  input [15:0]\Latency_WID_CDC_reg[15] ;
  input [15:0]\Latency_RID_CDC_reg[15] ;
  input Lat_Status_Reg_Set_Rd_En;
  input Lat_Sample_Interval_Rd_En;
  input Lat_Sel_Reg_Set_Rd_En;
  input [15:0]\WID_Mask_CDC_reg[15] ;
  input Lat_Control_Set_Rd_En;
  input [11:0]\IER_reg[12] ;
  input Lat_Latency_ID_Rd_En;
  input Global_Intr_En;
  input Lat_Intr_Reg_GIE_Rd_En;
  input [31:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] ;
  input [12:0]Intr_Reg_ISR;
  input Lat_ID_Mask_Rd_En;
  input Lat_Intr_Reg_Set_Rd_En;
  input Lat_Intr_Reg_IER_Rd_En;
  input Lat_Intr_Reg_ISR_Rd_En_reg;
  input [15:0]\RID_Mask_CDC_reg[15] ;
  input Lat_Rng_Reg_Set_Rd_En;
  input Lat_Addr_7downto4_is_0x0;
  input Lat_Rng_Reg_Set_Rd_En_reg;
  input Lat_Samp_Incr_Reg_Set_Rd_En_reg;
  input Lat_Addr_3downto0_is_0xC;
  input Lat_Addr_3downto0_is_0x8;
  input Lat_Metric_Sel_Reg_0_Rd_En;
  input s_axi_aresetn;
  input Lat_Global_Clk_Cnt_LSB_Rd_En;
  input Lat_Global_Clk_Cnt_MSB_Rd_En;
  input Lat_Addr_3downto0_is_0x4;

  wire [31:0]D;
  wire [31:0]\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] ;
  wire [31:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] ;
  wire Global_Intr_En;
  wire [11:0]\IER_reg[12] ;
  wire \IP2Bus_Data[0]_i_2_n_0 ;
  wire \IP2Bus_Data[0]_i_3_n_0 ;
  wire \IP2Bus_Data[0]_i_4_n_0 ;
  wire \IP2Bus_Data[0]_i_5_n_0 ;
  wire \IP2Bus_Data[0]_i_6_n_0 ;
  wire \IP2Bus_Data[0]_i_7_n_0 ;
  wire \IP2Bus_Data[10]_i_2_n_0 ;
  wire \IP2Bus_Data[10]_i_3_n_0 ;
  wire \IP2Bus_Data[10]_i_4_n_0 ;
  wire \IP2Bus_Data[11]_i_2_n_0 ;
  wire \IP2Bus_Data[11]_i_3_n_0 ;
  wire \IP2Bus_Data[11]_i_4_n_0 ;
  wire \IP2Bus_Data[12]_i_2_n_0 ;
  wire \IP2Bus_Data[12]_i_3_n_0 ;
  wire \IP2Bus_Data[12]_i_4_n_0 ;
  wire \IP2Bus_Data[12]_i_5_n_0 ;
  wire \IP2Bus_Data[12]_i_6_n_0 ;
  wire \IP2Bus_Data[13]_i_2_n_0 ;
  wire \IP2Bus_Data[13]_i_3_n_0 ;
  wire \IP2Bus_Data[14]_i_2_n_0 ;
  wire \IP2Bus_Data[14]_i_3_n_0 ;
  wire \IP2Bus_Data[15]_i_2_n_0 ;
  wire \IP2Bus_Data[15]_i_3_n_0 ;
  wire \IP2Bus_Data[16]_i_2_n_0 ;
  wire \IP2Bus_Data[16]_i_3_n_0 ;
  wire \IP2Bus_Data[16]_i_4_n_0 ;
  wire \IP2Bus_Data[17]_i_2_n_0 ;
  wire \IP2Bus_Data[17]_i_3_n_0 ;
  wire \IP2Bus_Data[17]_i_4_n_0 ;
  wire \IP2Bus_Data[17]_i_5_n_0 ;
  wire \IP2Bus_Data[18]_i_2_n_0 ;
  wire \IP2Bus_Data[18]_i_3_n_0 ;
  wire \IP2Bus_Data[19]_i_2_n_0 ;
  wire \IP2Bus_Data[19]_i_3_n_0 ;
  wire \IP2Bus_Data[1]_i_2_n_0 ;
  wire \IP2Bus_Data[1]_i_3_n_0 ;
  wire \IP2Bus_Data[1]_i_4_n_0 ;
  wire \IP2Bus_Data[1]_i_5_n_0 ;
  wire \IP2Bus_Data[1]_i_6_n_0 ;
  wire \IP2Bus_Data[1]_i_7_n_0 ;
  wire \IP2Bus_Data[1]_i_8_n_0 ;
  wire \IP2Bus_Data[20]_i_2_n_0 ;
  wire \IP2Bus_Data[20]_i_3_n_0 ;
  wire \IP2Bus_Data[21]_i_2_n_0 ;
  wire \IP2Bus_Data[21]_i_3_n_0 ;
  wire \IP2Bus_Data[22]_i_2_n_0 ;
  wire \IP2Bus_Data[22]_i_3_n_0 ;
  wire \IP2Bus_Data[23]_i_2_n_0 ;
  wire \IP2Bus_Data[23]_i_3_n_0 ;
  wire \IP2Bus_Data[24]_i_2_n_0 ;
  wire \IP2Bus_Data[24]_i_3_n_0 ;
  wire \IP2Bus_Data[25]_i_2_n_0 ;
  wire \IP2Bus_Data[25]_i_3_n_0 ;
  wire \IP2Bus_Data[26]_i_2_n_0 ;
  wire \IP2Bus_Data[26]_i_3_n_0 ;
  wire \IP2Bus_Data[27]_i_2_n_0 ;
  wire \IP2Bus_Data[27]_i_3_n_0 ;
  wire \IP2Bus_Data[28]_i_2_n_0 ;
  wire \IP2Bus_Data[28]_i_3_n_0 ;
  wire \IP2Bus_Data[29]_i_2_n_0 ;
  wire \IP2Bus_Data[29]_i_3_n_0 ;
  wire \IP2Bus_Data[2]_i_2_n_0 ;
  wire \IP2Bus_Data[2]_i_3_n_0 ;
  wire \IP2Bus_Data[2]_i_4_n_0 ;
  wire \IP2Bus_Data[2]_i_5_n_0 ;
  wire \IP2Bus_Data[30]_i_2_n_0 ;
  wire \IP2Bus_Data[30]_i_3_n_0 ;
  wire \IP2Bus_Data[31]_i_10_n_0 ;
  wire \IP2Bus_Data[31]_i_11_n_0 ;
  wire \IP2Bus_Data[31]_i_12_n_0 ;
  wire \IP2Bus_Data[31]_i_13_n_0 ;
  wire \IP2Bus_Data[31]_i_14_n_0 ;
  wire \IP2Bus_Data[31]_i_17_n_0 ;
  wire \IP2Bus_Data[31]_i_3_n_0 ;
  wire \IP2Bus_Data[31]_i_4_n_0 ;
  wire \IP2Bus_Data[31]_i_5_n_0 ;
  wire \IP2Bus_Data[31]_i_6_n_0 ;
  wire \IP2Bus_Data[31]_i_7_n_0 ;
  wire \IP2Bus_Data[31]_i_8_n_0 ;
  wire \IP2Bus_Data[31]_i_9_n_0 ;
  wire \IP2Bus_Data[3]_i_2_n_0 ;
  wire \IP2Bus_Data[3]_i_3_n_0 ;
  wire \IP2Bus_Data[3]_i_4_n_0 ;
  wire \IP2Bus_Data[3]_i_5_n_0 ;
  wire \IP2Bus_Data[4]_i_2_n_0 ;
  wire \IP2Bus_Data[4]_i_3_n_0 ;
  wire \IP2Bus_Data[4]_i_4_n_0 ;
  wire \IP2Bus_Data[4]_i_5_n_0 ;
  wire \IP2Bus_Data[5]_i_2_n_0 ;
  wire \IP2Bus_Data[5]_i_3_n_0 ;
  wire \IP2Bus_Data[5]_i_4_n_0 ;
  wire \IP2Bus_Data[5]_i_5_n_0 ;
  wire \IP2Bus_Data[6]_i_2_n_0 ;
  wire \IP2Bus_Data[6]_i_3_n_0 ;
  wire \IP2Bus_Data[6]_i_4_n_0 ;
  wire \IP2Bus_Data[6]_i_5_n_0 ;
  wire \IP2Bus_Data[7]_i_3_n_0 ;
  wire \IP2Bus_Data[7]_i_4_n_0 ;
  wire \IP2Bus_Data[7]_i_5_n_0 ;
  wire \IP2Bus_Data[7]_i_6_n_0 ;
  wire \IP2Bus_Data[7]_i_7_n_0 ;
  wire \IP2Bus_Data[7]_i_8_n_0 ;
  wire \IP2Bus_Data[8]_i_2_n_0 ;
  wire \IP2Bus_Data[8]_i_3_n_0 ;
  wire \IP2Bus_Data[8]_i_4_n_0 ;
  wire \IP2Bus_Data[8]_i_5_n_0 ;
  wire \IP2Bus_Data[8]_i_6_n_0 ;
  wire \IP2Bus_Data[8]_i_7_n_0 ;
  wire \IP2Bus_Data[8]_i_8_n_0 ;
  wire \IP2Bus_Data[8]_i_9_n_0 ;
  wire \IP2Bus_Data[9]_i_2_n_0 ;
  wire \IP2Bus_Data[9]_i_3_n_0 ;
  wire \IP2Bus_Data[9]_i_4_n_0 ;
  wire \IP2Bus_Data_reg[0] ;
  wire \IP2Bus_Data_reg[1] ;
  wire \IP2Bus_Data_reg[31] ;
  wire \IP2Bus_Data_reg[7] ;
  wire \IP2Bus_Data_reg[8] ;
  wire [12:0]Intr_Reg_ISR;
  wire Lat_Addr_3downto0_is_0x4;
  wire Lat_Addr_3downto0_is_0x8;
  wire Lat_Addr_3downto0_is_0xC;
  wire Lat_Addr_7downto4_is_0x0;
  wire Lat_Control_Set_Rd_En;
  wire Lat_Global_Clk_Cnt_LSB_Rd_En;
  wire Lat_Global_Clk_Cnt_MSB_Rd_En;
  wire Lat_Global_Clk_Cnt_Set_Rd_En;
  wire Lat_ID_Mask_Rd_En;
  wire Lat_Intr_Reg_GIE_Rd_En;
  wire Lat_Intr_Reg_IER_Rd_En;
  wire Lat_Intr_Reg_ISR_Rd_En_reg;
  wire Lat_Intr_Reg_Set_Rd_En;
  wire Lat_Latency_ID_Rd_En;
  wire Lat_Metric_Sel_Reg_0_Rd_En;
  wire Lat_Rng_Reg_Set_Rd_En;
  wire Lat_Rng_Reg_Set_Rd_En_reg;
  wire Lat_Samp_Incr_Reg_Set_Rd_En_reg;
  wire Lat_Sample_Interval_Rd_En;
  wire Lat_Sel_Reg_Set_Rd_En;
  wire Lat_Status_Reg_FOC_Rd_En;
  wire Lat_Status_Reg_Set_Rd_En;
  wire Lat_Status_Reg_WIF_Rd_En;
  wire [15:0]\Latency_RID_CDC_reg[15] ;
  wire [15:0]\Latency_WID_CDC_reg[15] ;
  wire [31:0]Metric_ram_Out_Reg_CDCR;
  wire [7:0]Q;
  wire [15:0]\RID_Mask_CDC_reg[15] ;
  wire Rd_Lat_End;
  wire Rd_Lat_Start_CDC_reg;
  wire [2:0]Reset_On_Sample_Int_Lapse_reg;
  wire [0:0]SR;
  wire [31:0]\Sample_Interval_i_reg_CDC_reg[31] ;
  wire [31:0]\Sample_Time_Diff_Reg_reg[31] ;
  wire [5:0]Use_Ext_Trigger_reg;
  wire [15:0]\WID_Mask_CDC_reg[15] ;
  wire Wr_Lat_End;
  wire Wr_Lat_Start;
  wire core_aclk;
  wire core_aresetn;
  wire [28:0]p_1_in;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  wire p_in_d1_cdc_from_reg0;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re_0;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign out = scndry_out_int_d1;
  assign s_out_d1_cdc_to_reg_0 = p_in_d1_cdc_from;
  assign s_out_d5_reg_0 = s_out_d4;
  assign s_out_d6_reg_0 = s_out_d5;
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \IP2Bus_Data[0]_i_1 
       (.I0(\IP2Bus_Data[0]_i_2_n_0 ),
        .I1(\IP2Bus_Data[0]_i_3_n_0 ),
        .I2(\IP2Bus_Data[0]_i_4_n_0 ),
        .I3(\IP2Bus_Data[0]_i_5_n_0 ),
        .I4(\IP2Bus_Data[0]_i_6_n_0 ),
        .I5(\IP2Bus_Data[1]_i_7_n_0 ),
        .O(\IP2Bus_Data_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[0]_i_2 
       (.I0(\IP2Bus_Data[31]_i_13_n_0 ),
        .I1(D[0]),
        .I2(\IP2Bus_Data[31]_i_4_n_0 ),
        .I3(Q[0]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [0]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[0]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[0]_i_3 
       (.I0(\IP2Bus_Data[31]_i_10_n_0 ),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [0]),
        .I2(\IP2Bus_Data[12]_i_6_n_0 ),
        .I3(Intr_Reg_ISR[0]),
        .I4(\IER_reg[12] [0]),
        .I5(\IP2Bus_Data[12]_i_5_n_0 ),
        .O(\IP2Bus_Data[0]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \IP2Bus_Data[0]_i_4 
       (.I0(Metric_ram_Out_Reg_CDCR[0]),
        .I1(\IP2Bus_Data[31]_i_9_n_0 ),
        .I2(\IP2Bus_Data[0]_i_7_n_0 ),
        .I3(Global_Intr_En),
        .I4(Lat_Intr_Reg_GIE_Rd_En),
        .O(\IP2Bus_Data[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[0]_i_5 
       (.I0(\IP2Bus_Data[31]_i_11_n_0 ),
        .I1(\WID_Mask_CDC_reg[15] [0]),
        .I2(\IP2Bus_Data[31]_i_12_n_0 ),
        .I3(\Latency_WID_CDC_reg[15] [0]),
        .I4(Use_Ext_Trigger_reg[0]),
        .I5(\IP2Bus_Data[17]_i_5_n_0 ),
        .O(\IP2Bus_Data[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[0]_i_6 
       (.I0(\IP2Bus_Data[8]_i_8_n_0 ),
        .I1(Reset_On_Sample_Int_Lapse_reg[0]),
        .I2(\IP2Bus_Data[31]_i_6_n_0 ),
        .I3(\Sample_Interval_i_reg_CDC_reg[31] [0]),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [0]),
        .I5(\IP2Bus_Data[31]_i_3_n_0 ),
        .O(\IP2Bus_Data[0]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \IP2Bus_Data[0]_i_7 
       (.I0(Lat_ID_Mask_Rd_En),
        .I1(\IP2Bus_Data[31]_i_17_n_0 ),
        .I2(Lat_Latency_ID_Rd_En),
        .I3(Lat_Intr_Reg_Set_Rd_En),
        .O(\IP2Bus_Data[0]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    \IP2Bus_Data[10]_i_1 
       (.I0(\IP2Bus_Data[10]_i_2_n_0 ),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [10]),
        .I4(\IP2Bus_Data[10]_i_3_n_0 ),
        .I5(\IP2Bus_Data[10]_i_4_n_0 ),
        .O(p_1_in[7]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[10]_i_2 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [9]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [10]),
        .I4(\Latency_WID_CDC_reg[15] [10]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[10]_i_3 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[10]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [10]),
        .I4(Intr_Reg_ISR[10]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[10]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[10]_i_4 
       (.I0(\IP2Bus_Data[31]_i_13_n_0 ),
        .I1(D[10]),
        .I2(\IP2Bus_Data[31]_i_14_n_0 ),
        .I3(\Sample_Time_Diff_Reg_reg[31] [10]),
        .I4(\Sample_Interval_i_reg_CDC_reg[31] [10]),
        .I5(\IP2Bus_Data[31]_i_6_n_0 ),
        .O(\IP2Bus_Data[10]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    \IP2Bus_Data[11]_i_1 
       (.I0(\IP2Bus_Data[11]_i_2_n_0 ),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [11]),
        .I4(\IP2Bus_Data[11]_i_3_n_0 ),
        .I5(\IP2Bus_Data[11]_i_4_n_0 ),
        .O(p_1_in[8]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[11]_i_2 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [10]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [11]),
        .I4(\Latency_WID_CDC_reg[15] [11]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[11]_i_3 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[11]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [11]),
        .I4(Intr_Reg_ISR[11]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[11]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[11]_i_4 
       (.I0(\IP2Bus_Data[31]_i_13_n_0 ),
        .I1(D[11]),
        .I2(\IP2Bus_Data[31]_i_14_n_0 ),
        .I3(\Sample_Time_Diff_Reg_reg[31] [11]),
        .I4(\Sample_Interval_i_reg_CDC_reg[31] [11]),
        .I5(\IP2Bus_Data[31]_i_6_n_0 ),
        .O(\IP2Bus_Data[11]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    \IP2Bus_Data[12]_i_1 
       (.I0(\IP2Bus_Data[12]_i_2_n_0 ),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [12]),
        .I4(\IP2Bus_Data[12]_i_3_n_0 ),
        .I5(\IP2Bus_Data[12]_i_4_n_0 ),
        .O(p_1_in[9]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[12]_i_2 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [11]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [12]),
        .I4(\Latency_WID_CDC_reg[15] [12]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[12]_i_3 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[12]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [12]),
        .I4(Intr_Reg_ISR[12]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[12]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[12]_i_4 
       (.I0(\IP2Bus_Data[31]_i_13_n_0 ),
        .I1(D[12]),
        .I2(\IP2Bus_Data[31]_i_14_n_0 ),
        .I3(\Sample_Time_Diff_Reg_reg[31] [12]),
        .I4(\Sample_Interval_i_reg_CDC_reg[31] [12]),
        .I5(\IP2Bus_Data[31]_i_6_n_0 ),
        .O(\IP2Bus_Data[12]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0010000000000000)) 
    \IP2Bus_Data[12]_i_5 
       (.I0(Lat_Intr_Reg_GIE_Rd_En),
        .I1(Lat_ID_Mask_Rd_En),
        .I2(\IP2Bus_Data[31]_i_17_n_0 ),
        .I3(Lat_Latency_ID_Rd_En),
        .I4(Lat_Intr_Reg_Set_Rd_En),
        .I5(Lat_Intr_Reg_IER_Rd_En),
        .O(\IP2Bus_Data[12]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000020000000000)) 
    \IP2Bus_Data[12]_i_6 
       (.I0(Lat_Intr_Reg_ISR_Rd_En_reg),
        .I1(Lat_Intr_Reg_GIE_Rd_En),
        .I2(Lat_ID_Mask_Rd_En),
        .I3(\IP2Bus_Data[31]_i_17_n_0 ),
        .I4(Lat_Latency_ID_Rd_En),
        .I5(Lat_Intr_Reg_Set_Rd_En),
        .O(\IP2Bus_Data[12]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[13]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [13]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [13]),
        .I4(\IP2Bus_Data[13]_i_2_n_0 ),
        .I5(\IP2Bus_Data[13]_i_3_n_0 ),
        .O(p_1_in[10]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[13]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[13]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [13]),
        .I4(\WID_Mask_CDC_reg[15] [13]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[13]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_WID_CDC_reg[15] [13]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[13]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [13]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[13]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[14]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [14]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [14]),
        .I4(\IP2Bus_Data[14]_i_2_n_0 ),
        .I5(\IP2Bus_Data[14]_i_3_n_0 ),
        .O(p_1_in[11]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[14]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[14]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [14]),
        .I4(\WID_Mask_CDC_reg[15] [14]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[14]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_WID_CDC_reg[15] [14]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[14]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [14]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[14]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[15]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [15]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [15]),
        .I4(\IP2Bus_Data[15]_i_2_n_0 ),
        .I5(\IP2Bus_Data[15]_i_3_n_0 ),
        .O(p_1_in[12]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[15]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[15]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [15]),
        .I4(\WID_Mask_CDC_reg[15] [15]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[15]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_WID_CDC_reg[15] [15]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[15]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [15]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[15]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEEEEEE)) 
    \IP2Bus_Data[16]_i_1 
       (.I0(\IP2Bus_Data[16]_i_2_n_0 ),
        .I1(\IP2Bus_Data[16]_i_3_n_0 ),
        .I2(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I3(scndry_out_int_d1),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [16]),
        .I5(\IP2Bus_Data[16]_i_4_n_0 ),
        .O(p_1_in[13]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[16]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[16]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [16]),
        .I4(\RID_Mask_CDC_reg[15] [0]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[16]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [0]),
        .I2(\IP2Bus_Data[17]_i_5_n_0 ),
        .I3(Use_Ext_Trigger_reg[2]),
        .I4(D[16]),
        .I5(\IP2Bus_Data[31]_i_13_n_0 ),
        .O(\IP2Bus_Data[16]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \IP2Bus_Data[16]_i_4 
       (.I0(\Sample_Interval_i_reg_CDC_reg[31] [16]),
        .I1(\IP2Bus_Data[31]_i_6_n_0 ),
        .I2(\Sample_Time_Diff_Reg_reg[31] [16]),
        .I3(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[16]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFEEEEEEE)) 
    \IP2Bus_Data[17]_i_1 
       (.I0(\IP2Bus_Data[17]_i_2_n_0 ),
        .I1(\IP2Bus_Data[17]_i_3_n_0 ),
        .I2(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I3(scndry_out_int_d1),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [17]),
        .I5(\IP2Bus_Data[17]_i_4_n_0 ),
        .O(p_1_in[14]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[17]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[17]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [17]),
        .I4(\RID_Mask_CDC_reg[15] [1]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[17]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [1]),
        .I2(\IP2Bus_Data[17]_i_5_n_0 ),
        .I3(Use_Ext_Trigger_reg[3]),
        .I4(D[17]),
        .I5(\IP2Bus_Data[31]_i_13_n_0 ),
        .O(\IP2Bus_Data[17]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hF888)) 
    \IP2Bus_Data[17]_i_4 
       (.I0(\Sample_Interval_i_reg_CDC_reg[31] [17]),
        .I1(\IP2Bus_Data[31]_i_6_n_0 ),
        .I2(\Sample_Time_Diff_Reg_reg[31] [17]),
        .I3(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[17]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h0000001000000000)) 
    \IP2Bus_Data[17]_i_5 
       (.I0(Lat_Status_Reg_Set_Rd_En),
        .I1(Lat_Sample_Interval_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I4(Lat_Sel_Reg_Set_Rd_En),
        .I5(Lat_Control_Set_Rd_En),
        .O(\IP2Bus_Data[17]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[18]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [18]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [18]),
        .I4(\IP2Bus_Data[18]_i_2_n_0 ),
        .I5(\IP2Bus_Data[18]_i_3_n_0 ),
        .O(p_1_in[15]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[18]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[18]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [18]),
        .I4(\RID_Mask_CDC_reg[15] [2]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[18]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [2]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[18]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [18]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[18]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[19]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [19]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [19]),
        .I4(\IP2Bus_Data[19]_i_2_n_0 ),
        .I5(\IP2Bus_Data[19]_i_3_n_0 ),
        .O(p_1_in[16]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[19]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[19]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [19]),
        .I4(\RID_Mask_CDC_reg[15] [3]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[19]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [3]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[19]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [19]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[19]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \IP2Bus_Data[1]_i_1 
       (.I0(\IP2Bus_Data[1]_i_2_n_0 ),
        .I1(\IP2Bus_Data[1]_i_3_n_0 ),
        .I2(\IP2Bus_Data[1]_i_4_n_0 ),
        .I3(\IP2Bus_Data[1]_i_5_n_0 ),
        .I4(\IP2Bus_Data[1]_i_6_n_0 ),
        .I5(\IP2Bus_Data[1]_i_7_n_0 ),
        .O(\IP2Bus_Data_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[1]_i_2 
       (.I0(\IP2Bus_Data[31]_i_13_n_0 ),
        .I1(D[1]),
        .I2(\IP2Bus_Data[31]_i_4_n_0 ),
        .I3(Q[1]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [1]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[1]_i_3 
       (.I0(\IP2Bus_Data[31]_i_10_n_0 ),
        .I1(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [1]),
        .I2(\IP2Bus_Data[12]_i_6_n_0 ),
        .I3(Intr_Reg_ISR[1]),
        .I4(\IER_reg[12] [1]),
        .I5(\IP2Bus_Data[12]_i_5_n_0 ),
        .O(\IP2Bus_Data[1]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h8888F888)) 
    \IP2Bus_Data[1]_i_4 
       (.I0(Metric_ram_Out_Reg_CDCR[1]),
        .I1(\IP2Bus_Data[31]_i_9_n_0 ),
        .I2(\IP2Bus_Data[1]_i_8_n_0 ),
        .I3(Lat_Status_Reg_WIF_Rd_En),
        .I4(Lat_Status_Reg_FOC_Rd_En),
        .O(\IP2Bus_Data[1]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[1]_i_5 
       (.I0(\IP2Bus_Data[31]_i_11_n_0 ),
        .I1(\WID_Mask_CDC_reg[15] [1]),
        .I2(\IP2Bus_Data[31]_i_12_n_0 ),
        .I3(\Latency_WID_CDC_reg[15] [1]),
        .I4(Use_Ext_Trigger_reg[1]),
        .I5(\IP2Bus_Data[17]_i_5_n_0 ),
        .O(\IP2Bus_Data[1]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[1]_i_6 
       (.I0(\IP2Bus_Data[8]_i_8_n_0 ),
        .I1(Reset_On_Sample_Int_Lapse_reg[1]),
        .I2(\IP2Bus_Data[31]_i_6_n_0 ),
        .I3(\Sample_Interval_i_reg_CDC_reg[31] [1]),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [1]),
        .I5(\IP2Bus_Data[31]_i_3_n_0 ),
        .O(\IP2Bus_Data[1]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT3 #(
    .INIT(8'hF4)) 
    \IP2Bus_Data[1]_i_7 
       (.I0(Lat_Addr_3downto0_is_0xC),
        .I1(\IP2Bus_Data[31]_i_14_n_0 ),
        .I2(\IP2Bus_Data[7]_i_4_n_0 ),
        .O(\IP2Bus_Data[1]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h00100000)) 
    \IP2Bus_Data[1]_i_8 
       (.I0(Lat_Sel_Reg_Set_Rd_En),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(Lat_Sample_Interval_Rd_En),
        .I4(Lat_Status_Reg_Set_Rd_En),
        .O(\IP2Bus_Data[1]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[20]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [20]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [20]),
        .I4(\IP2Bus_Data[20]_i_2_n_0 ),
        .I5(\IP2Bus_Data[20]_i_3_n_0 ),
        .O(p_1_in[17]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[20]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[20]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [20]),
        .I4(\RID_Mask_CDC_reg[15] [4]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[20]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [4]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[20]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [20]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[20]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[21]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [21]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [21]),
        .I4(\IP2Bus_Data[21]_i_2_n_0 ),
        .I5(\IP2Bus_Data[21]_i_3_n_0 ),
        .O(p_1_in[18]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[21]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[21]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [21]),
        .I4(\RID_Mask_CDC_reg[15] [5]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[21]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [5]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[21]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [21]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[21]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[22]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [22]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [22]),
        .I4(\IP2Bus_Data[22]_i_2_n_0 ),
        .I5(\IP2Bus_Data[22]_i_3_n_0 ),
        .O(p_1_in[19]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[22]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[22]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [22]),
        .I4(\RID_Mask_CDC_reg[15] [6]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[22]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [6]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[22]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [22]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[22]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[23]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [23]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [23]),
        .I4(\IP2Bus_Data[23]_i_2_n_0 ),
        .I5(\IP2Bus_Data[23]_i_3_n_0 ),
        .O(p_1_in[20]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[23]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[23]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [23]),
        .I4(\RID_Mask_CDC_reg[15] [7]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[23]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [7]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[23]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [23]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[23]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[24]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [24]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [24]),
        .I4(\IP2Bus_Data[24]_i_2_n_0 ),
        .I5(\IP2Bus_Data[24]_i_3_n_0 ),
        .O(p_1_in[21]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[24]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[24]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [24]),
        .I4(\RID_Mask_CDC_reg[15] [8]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[24]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [8]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[24]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [24]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[24]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[25]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [25]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [25]),
        .I4(\IP2Bus_Data[25]_i_2_n_0 ),
        .I5(\IP2Bus_Data[25]_i_3_n_0 ),
        .O(p_1_in[22]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[25]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[25]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [25]),
        .I4(\RID_Mask_CDC_reg[15] [9]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[25]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [9]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[25]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [25]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[25]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[26]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [26]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [26]),
        .I4(\IP2Bus_Data[26]_i_2_n_0 ),
        .I5(\IP2Bus_Data[26]_i_3_n_0 ),
        .O(p_1_in[23]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[26]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[26]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [26]),
        .I4(\RID_Mask_CDC_reg[15] [10]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[26]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [10]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[26]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [26]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[26]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[27]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [27]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [27]),
        .I4(\IP2Bus_Data[27]_i_2_n_0 ),
        .I5(\IP2Bus_Data[27]_i_3_n_0 ),
        .O(p_1_in[24]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[27]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[27]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [27]),
        .I4(\RID_Mask_CDC_reg[15] [11]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[27]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [11]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[27]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [27]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[27]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[28]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [28]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [28]),
        .I4(\IP2Bus_Data[28]_i_2_n_0 ),
        .I5(\IP2Bus_Data[28]_i_3_n_0 ),
        .O(p_1_in[25]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[28]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[28]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [28]),
        .I4(\RID_Mask_CDC_reg[15] [12]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[28]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [12]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[28]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [28]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[28]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[29]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [29]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [29]),
        .I4(\IP2Bus_Data[29]_i_2_n_0 ),
        .I5(\IP2Bus_Data[29]_i_3_n_0 ),
        .O(p_1_in[26]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[29]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[29]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [29]),
        .I4(\RID_Mask_CDC_reg[15] [13]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[29]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [13]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[29]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [29]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[29]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \IP2Bus_Data[2]_i_1 
       (.I0(\IP2Bus_Data[2]_i_2_n_0 ),
        .I1(\IP2Bus_Data[2]_i_3_n_0 ),
        .I2(\IP2Bus_Data[2]_i_4_n_0 ),
        .I3(\IP2Bus_Data[2]_i_5_n_0 ),
        .O(p_1_in[0]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[2]_i_2 
       (.I0(\IP2Bus_Data[31]_i_11_n_0 ),
        .I1(\WID_Mask_CDC_reg[15] [2]),
        .I2(\IP2Bus_Data[31]_i_12_n_0 ),
        .I3(\Latency_WID_CDC_reg[15] [2]),
        .I4(Use_Ext_Trigger_reg[5]),
        .I5(\IP2Bus_Data[17]_i_5_n_0 ),
        .O(\IP2Bus_Data[2]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[2]_i_3 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[2]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [2]),
        .I4(Intr_Reg_ISR[2]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[2]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hAA00C000AA000000)) 
    \IP2Bus_Data[2]_i_4 
       (.I0(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [2]),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [2]),
        .I2(Lat_Sample_Interval_Rd_En),
        .I3(scndry_out_int_d1),
        .I4(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I5(Lat_Addr_3downto0_is_0x4),
        .O(\IP2Bus_Data[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[2]_i_5 
       (.I0(\IP2Bus_Data[31]_i_13_n_0 ),
        .I1(D[2]),
        .I2(\IP2Bus_Data[31]_i_4_n_0 ),
        .I3(Q[2]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [2]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[30]_i_1 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [30]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [30]),
        .I4(\IP2Bus_Data[30]_i_2_n_0 ),
        .I5(\IP2Bus_Data[30]_i_3_n_0 ),
        .O(p_1_in[27]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[30]_i_2 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[30]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [30]),
        .I4(\RID_Mask_CDC_reg[15] [14]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[30]_i_3 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [14]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[30]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [30]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[30]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFF8AFF)) 
    \IP2Bus_Data[31]_i_1 
       (.I0(\IP2Bus_Data[31]_i_3_n_0 ),
        .I1(Lat_Global_Clk_Cnt_MSB_Rd_En),
        .I2(Lat_Global_Clk_Cnt_LSB_Rd_En),
        .I3(s_axi_aresetn),
        .I4(\IP2Bus_Data[31]_i_4_n_0 ),
        .I5(\IP2Bus_Data[31]_i_5_n_0 ),
        .O(\IP2Bus_Data_reg[31] ));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    \IP2Bus_Data[31]_i_10 
       (.I0(Lat_Rng_Reg_Set_Rd_En),
        .I1(Lat_Addr_7downto4_is_0x0),
        .I2(Lat_Intr_Reg_Set_Rd_En),
        .I3(Lat_Latency_ID_Rd_En),
        .I4(\IP2Bus_Data[31]_i_17_n_0 ),
        .I5(Lat_ID_Mask_Rd_En),
        .O(\IP2Bus_Data[31]_i_10_n_0 ));
  LUT3 #(
    .INIT(8'h40)) 
    \IP2Bus_Data[31]_i_11 
       (.I0(Lat_Latency_ID_Rd_En),
        .I1(\IP2Bus_Data[31]_i_17_n_0 ),
        .I2(Lat_ID_Mask_Rd_En),
        .O(\IP2Bus_Data[31]_i_11_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \IP2Bus_Data[31]_i_12 
       (.I0(\IP2Bus_Data[31]_i_17_n_0 ),
        .I1(Lat_Latency_ID_Rd_En),
        .O(\IP2Bus_Data[31]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h0000002000000000)) 
    \IP2Bus_Data[31]_i_13 
       (.I0(Lat_Status_Reg_Set_Rd_En),
        .I1(Lat_Sample_Interval_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I4(Lat_Sel_Reg_Set_Rd_En),
        .I5(Lat_Status_Reg_FOC_Rd_En),
        .O(\IP2Bus_Data[31]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h00001000)) 
    \IP2Bus_Data[31]_i_14 
       (.I0(Lat_Addr_3downto0_is_0x4),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(Lat_Sample_Interval_Rd_En),
        .I4(Lat_Addr_3downto0_is_0x8),
        .O(\IP2Bus_Data[31]_i_14_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000010)) 
    \IP2Bus_Data[31]_i_17 
       (.I0(Lat_Status_Reg_Set_Rd_En),
        .I1(Lat_Sample_Interval_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I4(Lat_Sel_Reg_Set_Rd_En),
        .I5(Lat_Control_Set_Rd_En),
        .O(\IP2Bus_Data[31]_i_17_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFF888)) 
    \IP2Bus_Data[31]_i_2 
       (.I0(\IP2Bus_Data[31]_i_6_n_0 ),
        .I1(\Sample_Interval_i_reg_CDC_reg[31] [31]),
        .I2(\IP2Bus_Data[31]_i_3_n_0 ),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [31]),
        .I4(\IP2Bus_Data[31]_i_7_n_0 ),
        .I5(\IP2Bus_Data[31]_i_8_n_0 ),
        .O(p_1_in[28]));
  LUT2 #(
    .INIT(4'h8)) 
    \IP2Bus_Data[31]_i_3 
       (.I0(scndry_out_int_d1),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .O(\IP2Bus_Data[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h0400)) 
    \IP2Bus_Data[31]_i_4 
       (.I0(Lat_Sample_Interval_Rd_En),
        .I1(scndry_out_int_d1),
        .I2(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I3(Lat_Sel_Reg_Set_Rd_En),
        .O(\IP2Bus_Data[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000000000000D000)) 
    \IP2Bus_Data[31]_i_5 
       (.I0(Lat_Addr_3downto0_is_0xC),
        .I1(Lat_Addr_3downto0_is_0x8),
        .I2(Lat_Sample_Interval_Rd_En),
        .I3(scndry_out_int_d1),
        .I4(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I5(Lat_Addr_3downto0_is_0x4),
        .O(\IP2Bus_Data[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h0800)) 
    \IP2Bus_Data[31]_i_6 
       (.I0(Lat_Sample_Interval_Rd_En),
        .I1(scndry_out_int_d1),
        .I2(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I3(Lat_Addr_3downto0_is_0x4),
        .O(\IP2Bus_Data[31]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[31]_i_7 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[31]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [31]),
        .I4(\RID_Mask_CDC_reg[15] [15]),
        .I5(\IP2Bus_Data[31]_i_11_n_0 ),
        .O(\IP2Bus_Data[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[31]_i_8 
       (.I0(\IP2Bus_Data[31]_i_12_n_0 ),
        .I1(\Latency_RID_CDC_reg[15] [15]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[31]),
        .I4(\Sample_Time_Diff_Reg_reg[31] [31]),
        .I5(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[31]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000080000)) 
    \IP2Bus_Data[31]_i_9 
       (.I0(Lat_Rng_Reg_Set_Rd_En_reg),
        .I1(Lat_Samp_Incr_Reg_Set_Rd_En_reg),
        .I2(Lat_Intr_Reg_Set_Rd_En),
        .I3(Lat_Latency_ID_Rd_En),
        .I4(\IP2Bus_Data[31]_i_17_n_0 ),
        .I5(Lat_ID_Mask_Rd_En),
        .O(\IP2Bus_Data[31]_i_9_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \IP2Bus_Data[3]_i_1 
       (.I0(\IP2Bus_Data[3]_i_2_n_0 ),
        .I1(\IP2Bus_Data[3]_i_3_n_0 ),
        .I2(\IP2Bus_Data[3]_i_4_n_0 ),
        .I3(\IP2Bus_Data[3]_i_5_n_0 ),
        .O(p_1_in[1]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[3]_i_2 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [2]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [3]),
        .I4(\Latency_WID_CDC_reg[15] [3]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[3]_i_3 
       (.I0(\IP2Bus_Data[31]_i_14_n_0 ),
        .I1(\Sample_Time_Diff_Reg_reg[31] [3]),
        .I2(\IP2Bus_Data[31]_i_6_n_0 ),
        .I3(\Sample_Interval_i_reg_CDC_reg[31] [3]),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [3]),
        .I5(\IP2Bus_Data[31]_i_3_n_0 ),
        .O(\IP2Bus_Data[3]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[3]_i_4 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[3]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [3]),
        .I4(Intr_Reg_ISR[3]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[3]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[3]_i_5 
       (.I0(\IP2Bus_Data[17]_i_5_n_0 ),
        .I1(Use_Ext_Trigger_reg[4]),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[3]),
        .I4(Q[3]),
        .I5(\IP2Bus_Data[31]_i_4_n_0 ),
        .O(\IP2Bus_Data[3]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \IP2Bus_Data[4]_i_1 
       (.I0(\IP2Bus_Data[4]_i_2_n_0 ),
        .I1(\IP2Bus_Data[4]_i_3_n_0 ),
        .I2(\IP2Bus_Data[4]_i_4_n_0 ),
        .I3(\IP2Bus_Data[4]_i_5_n_0 ),
        .O(p_1_in[2]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[4]_i_2 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [3]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [4]),
        .I4(\Latency_WID_CDC_reg[15] [4]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[4]_i_3 
       (.I0(\IP2Bus_Data[31]_i_14_n_0 ),
        .I1(\Sample_Time_Diff_Reg_reg[31] [4]),
        .I2(\IP2Bus_Data[31]_i_6_n_0 ),
        .I3(\Sample_Interval_i_reg_CDC_reg[31] [4]),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [4]),
        .I5(\IP2Bus_Data[31]_i_3_n_0 ),
        .O(\IP2Bus_Data[4]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[4]_i_4 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[4]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [4]),
        .I4(Intr_Reg_ISR[4]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[4]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[4]_i_5 
       (.I0(\IP2Bus_Data[17]_i_5_n_0 ),
        .I1(Wr_Lat_Start),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[4]),
        .I4(Q[4]),
        .I5(\IP2Bus_Data[31]_i_4_n_0 ),
        .O(\IP2Bus_Data[4]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \IP2Bus_Data[5]_i_1 
       (.I0(\IP2Bus_Data[5]_i_2_n_0 ),
        .I1(\IP2Bus_Data[5]_i_3_n_0 ),
        .I2(\IP2Bus_Data[5]_i_4_n_0 ),
        .I3(\IP2Bus_Data[5]_i_5_n_0 ),
        .O(p_1_in[3]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[5]_i_2 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [4]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [5]),
        .I4(\Latency_WID_CDC_reg[15] [5]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[5]_i_3 
       (.I0(\IP2Bus_Data[31]_i_14_n_0 ),
        .I1(\Sample_Time_Diff_Reg_reg[31] [5]),
        .I2(\IP2Bus_Data[31]_i_6_n_0 ),
        .I3(\Sample_Interval_i_reg_CDC_reg[31] [5]),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [5]),
        .I5(\IP2Bus_Data[31]_i_3_n_0 ),
        .O(\IP2Bus_Data[5]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[5]_i_4 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[5]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [5]),
        .I4(Intr_Reg_ISR[5]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[5]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[5]_i_5 
       (.I0(\IP2Bus_Data[17]_i_5_n_0 ),
        .I1(Wr_Lat_End),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[5]),
        .I4(Q[5]),
        .I5(\IP2Bus_Data[31]_i_4_n_0 ),
        .O(\IP2Bus_Data[5]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \IP2Bus_Data[6]_i_1 
       (.I0(\IP2Bus_Data[6]_i_2_n_0 ),
        .I1(\IP2Bus_Data[6]_i_3_n_0 ),
        .I2(\IP2Bus_Data[6]_i_4_n_0 ),
        .I3(\IP2Bus_Data[6]_i_5_n_0 ),
        .O(p_1_in[4]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[6]_i_2 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [5]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [6]),
        .I4(\Latency_WID_CDC_reg[15] [6]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[6]_i_3 
       (.I0(\IP2Bus_Data[31]_i_14_n_0 ),
        .I1(\Sample_Time_Diff_Reg_reg[31] [6]),
        .I2(\IP2Bus_Data[31]_i_6_n_0 ),
        .I3(\Sample_Interval_i_reg_CDC_reg[31] [6]),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [6]),
        .I5(\IP2Bus_Data[31]_i_3_n_0 ),
        .O(\IP2Bus_Data[6]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[6]_i_4 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[6]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [6]),
        .I4(Intr_Reg_ISR[6]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[6]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[6]_i_5 
       (.I0(\IP2Bus_Data[17]_i_5_n_0 ),
        .I1(Rd_Lat_Start_CDC_reg),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[6]),
        .I4(Q[6]),
        .I5(\IP2Bus_Data[31]_i_4_n_0 ),
        .O(\IP2Bus_Data[6]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair148" *) 
  LUT4 #(
    .INIT(16'hFF8A)) 
    \IP2Bus_Data[7]_i_1 
       (.I0(\IP2Bus_Data[7]_i_3_n_0 ),
        .I1(Lat_Addr_3downto0_is_0x8),
        .I2(Lat_Addr_3downto0_is_0xC),
        .I3(\IP2Bus_Data[7]_i_4_n_0 ),
        .O(\IP2Bus_Data_reg[7] ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \IP2Bus_Data[7]_i_2 
       (.I0(\IP2Bus_Data[7]_i_5_n_0 ),
        .I1(\IP2Bus_Data[7]_i_6_n_0 ),
        .I2(\IP2Bus_Data[7]_i_7_n_0 ),
        .I3(\IP2Bus_Data[7]_i_8_n_0 ),
        .O(p_1_in[5]));
  LUT4 #(
    .INIT(16'h0008)) 
    \IP2Bus_Data[7]_i_3 
       (.I0(Lat_Sample_Interval_Rd_En),
        .I1(scndry_out_int_d1),
        .I2(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I3(Lat_Addr_3downto0_is_0x4),
        .O(\IP2Bus_Data[7]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF4FFF4F4F4F4F)) 
    \IP2Bus_Data[7]_i_4 
       (.I0(Lat_Metric_Sel_Reg_0_Rd_En),
        .I1(\IP2Bus_Data[31]_i_4_n_0 ),
        .I2(s_axi_aresetn),
        .I3(Lat_Global_Clk_Cnt_LSB_Rd_En),
        .I4(Lat_Global_Clk_Cnt_MSB_Rd_En),
        .I5(\IP2Bus_Data[31]_i_3_n_0 ),
        .O(\IP2Bus_Data[7]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[7]_i_5 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [6]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [7]),
        .I4(\Latency_WID_CDC_reg[15] [7]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[7]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[7]_i_6 
       (.I0(\IP2Bus_Data[31]_i_14_n_0 ),
        .I1(\Sample_Time_Diff_Reg_reg[31] [7]),
        .I2(\IP2Bus_Data[31]_i_6_n_0 ),
        .I3(\Sample_Interval_i_reg_CDC_reg[31] [7]),
        .I4(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [7]),
        .I5(\IP2Bus_Data[31]_i_3_n_0 ),
        .O(\IP2Bus_Data[7]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[7]_i_7 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[7]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [7]),
        .I4(Intr_Reg_ISR[7]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[7]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[7]_i_8 
       (.I0(\IP2Bus_Data[17]_i_5_n_0 ),
        .I1(Rd_Lat_End),
        .I2(\IP2Bus_Data[31]_i_13_n_0 ),
        .I3(D[7]),
        .I4(Q[7]),
        .I5(\IP2Bus_Data[31]_i_4_n_0 ),
        .O(\IP2Bus_Data[7]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h00000000FFFFFFFE)) 
    \IP2Bus_Data[8]_i_1 
       (.I0(\IP2Bus_Data[8]_i_2_n_0 ),
        .I1(\IP2Bus_Data[8]_i_3_n_0 ),
        .I2(\IP2Bus_Data[8]_i_4_n_0 ),
        .I3(\IP2Bus_Data[8]_i_5_n_0 ),
        .I4(\IP2Bus_Data[8]_i_6_n_0 ),
        .I5(\IP2Bus_Data[8]_i_7_n_0 ),
        .O(\IP2Bus_Data_reg[8] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[8]_i_2 
       (.I0(\IP2Bus_Data[31]_i_13_n_0 ),
        .I1(D[8]),
        .I2(\IP2Bus_Data[31]_i_14_n_0 ),
        .I3(\Sample_Time_Diff_Reg_reg[31] [8]),
        .I4(Reset_On_Sample_Int_Lapse_reg[2]),
        .I5(\IP2Bus_Data[8]_i_8_n_0 ),
        .O(\IP2Bus_Data[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[8]_i_3 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [7]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [8]),
        .I4(\Latency_WID_CDC_reg[15] [8]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[8]_i_3_n_0 ));
  LUT3 #(
    .INIT(8'h80)) 
    \IP2Bus_Data[8]_i_4 
       (.I0(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I1(scndry_out_int_d1),
        .I2(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [8]),
        .O(\IP2Bus_Data[8]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[8]_i_5 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[8]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [8]),
        .I4(Intr_Reg_ISR[8]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[8]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h20000000)) 
    \IP2Bus_Data[8]_i_6 
       (.I0(Lat_Addr_3downto0_is_0x4),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(Lat_Sample_Interval_Rd_En),
        .I4(\Sample_Interval_i_reg_CDC_reg[31] [8]),
        .O(\IP2Bus_Data[8]_i_6_n_0 ));
  LUT3 #(
    .INIT(8'hBA)) 
    \IP2Bus_Data[8]_i_7 
       (.I0(\IP2Bus_Data[8]_i_9_n_0 ),
        .I1(Lat_Addr_3downto0_is_0xC),
        .I2(\IP2Bus_Data[31]_i_14_n_0 ),
        .O(\IP2Bus_Data[8]_i_7_n_0 ));
  LUT5 #(
    .INIT(32'h10000000)) 
    \IP2Bus_Data[8]_i_8 
       (.I0(Lat_Addr_3downto0_is_0x4),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(Lat_Sample_Interval_Rd_En),
        .I4(Lat_Addr_3downto0_is_0x8),
        .O(\IP2Bus_Data[8]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'hFFBFBBBBBBBBBBBB)) 
    \IP2Bus_Data[8]_i_9 
       (.I0(\IP2Bus_Data[31]_i_4_n_0 ),
        .I1(s_axi_aresetn),
        .I2(Lat_Global_Clk_Cnt_LSB_Rd_En),
        .I3(Lat_Global_Clk_Cnt_MSB_Rd_En),
        .I4(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I5(scndry_out_int_d1),
        .O(\IP2Bus_Data[8]_i_9_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    \IP2Bus_Data[9]_i_1 
       (.I0(\IP2Bus_Data[9]_i_2_n_0 ),
        .I1(Lat_Global_Clk_Cnt_Set_Rd_En),
        .I2(scndry_out_int_d1),
        .I3(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] [9]),
        .I4(\IP2Bus_Data[9]_i_3_n_0 ),
        .I5(\IP2Bus_Data[9]_i_4_n_0 ),
        .O(p_1_in[6]));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[9]_i_2 
       (.I0(\IP2Bus_Data[12]_i_5_n_0 ),
        .I1(\IER_reg[12] [8]),
        .I2(\IP2Bus_Data[31]_i_11_n_0 ),
        .I3(\WID_Mask_CDC_reg[15] [9]),
        .I4(\Latency_WID_CDC_reg[15] [9]),
        .I5(\IP2Bus_Data[31]_i_12_n_0 ),
        .O(\IP2Bus_Data[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[9]_i_3 
       (.I0(\IP2Bus_Data[31]_i_9_n_0 ),
        .I1(Metric_ram_Out_Reg_CDCR[9]),
        .I2(\IP2Bus_Data[31]_i_10_n_0 ),
        .I3(\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] [9]),
        .I4(Intr_Reg_ISR[9]),
        .I5(\IP2Bus_Data[12]_i_6_n_0 ),
        .O(\IP2Bus_Data[9]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \IP2Bus_Data[9]_i_4 
       (.I0(\IP2Bus_Data[31]_i_13_n_0 ),
        .I1(D[9]),
        .I2(\IP2Bus_Data[31]_i_14_n_0 ),
        .I3(\Sample_Time_Diff_Reg_reg[31] [9]),
        .I4(\Sample_Interval_i_reg_CDC_reg[31] [9]),
        .I5(\IP2Bus_Data[31]_i_6_n_0 ),
        .O(\IP2Bus_Data[9]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from_reg0),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re_0),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_44
   (out,
    Intr_In_sync,
    core_aresetn,
    p_in_d1_cdc_from_reg0,
    core_aclk,
    SR,
    s_axi_aclk);
  output out;
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input p_in_d1_cdc_from_reg0;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  wire p_in_d1_cdc_from_reg0;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  assign out = p_in_d1_cdc_from;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from_reg0),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_45
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__9
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_46
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__10
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_47
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__11
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_48
   (s_out_d1_cdc_to_reg_0,
    Intr_In_sync,
    core_aresetn,
    p_in_d1_cdc_from_reg0_0,
    core_aclk,
    SR,
    s_axi_aclk);
  output s_out_d1_cdc_to_reg_0;
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input p_in_d1_cdc_from_reg0_0;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  wire p_in_d1_cdc_from_reg0_0;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  assign s_out_d1_cdc_to_reg_0 = p_in_d1_cdc_from;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from_reg0_0),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__0
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_49
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__1
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_50
   (s_out_d1_cdc_to_reg_0,
    Intr_In_sync,
    core_aresetn,
    p_in_d1_cdc_from_reg0_1,
    core_aclk,
    SR,
    s_axi_aclk);
  output s_out_d1_cdc_to_reg_0;
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input p_in_d1_cdc_from_reg0_1;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  wire p_in_d1_cdc_from_reg0_1;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  assign s_out_d1_cdc_to_reg_0 = p_in_d1_cdc_from;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from_reg0_1),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__2
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_51
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__3
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_52
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__4
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_53
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__5
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_54
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__6
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_55
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__7
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_56
   (Intr_In_sync,
    core_aresetn,
    core_aclk,
    SR,
    s_axi_aclk);
  output [0:0]Intr_In_sync;
  input core_aresetn;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;

  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  wire s_out_re;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign Intr_In_sync[0] = scndry_out_int_d1;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE p_in_d1_cdc_from_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(p_in_d1_cdc_from),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d1_cdc_to_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_in_d1_cdc_from),
        .Q(s_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d2_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d1_cdc_to),
        .Q(s_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d3_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d2),
        .Q(s_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d4_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d3),
        .Q(s_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d5_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d4),
        .Q(s_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d6_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d5),
        .Q(s_out_d6),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_out_d7_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_d6),
        .Q(s_out_d7),
        .R(SR));
  LUT2 #(
    .INIT(4'h6)) 
    scndry_out_int_d1_i_1__8
       (.I0(s_out_d4),
        .I1(s_out_d5),
        .O(s_out_re));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE scndry_out_int_d1_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_out_re),
        .Q(scndry_out_int_d1),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized0
   (out,
    rst_int_n_reg,
    E,
    \wptr_reg[0] ,
    \GEN_ARSIZE_F1.Num_BValids_En_reg ,
    Metrics_Cnt_En_Int,
    Read_Beat_Cnt_En1,
    \Count_Out_i_reg[0] ,
    core_aresetn,
    Ext_Trig_Metric_en,
    Wr_Add_Issue_reg,
    Rd_Latency_Fifo_Wr_En,
    Slot_0_Sync_Data_Valid,
    RID_Mask,
    Q,
    core_aresetn_0,
    D,
    core_aclk);
  output [5:0]out;
  output rst_int_n_reg;
  output [0:0]E;
  output [0:0]\wptr_reg[0] ;
  output \GEN_ARSIZE_F1.Num_BValids_En_reg ;
  output Metrics_Cnt_En_Int;
  output Read_Beat_Cnt_En1;
  output [0:0]\Count_Out_i_reg[0] ;
  input core_aresetn;
  input Ext_Trig_Metric_en;
  input Wr_Add_Issue_reg;
  input Rd_Latency_Fifo_Wr_En;
  input Slot_0_Sync_Data_Valid;
  input [0:0]RID_Mask;
  input [0:0]Q;
  input core_aresetn_0;
  input [8:0]D;
  input core_aclk;

  wire [0:0]\Count_Out_i_reg[0] ;
  wire [8:0]D;
  wire [0:0]E;
  wire Ext_Trig_Metric_en;
  wire \GEN_ARSIZE_F1.Num_BValids_En_reg ;
  wire Metrics_Cnt_En_Int;
  wire [0:0]Q;
  wire [0:0]RID_Mask;
  wire Rd_Latency_Fifo_Wr_En;
  wire Read_Beat_Cnt_En1;
  wire Slot_0_Sync_Data_Valid;
  wire Wr_Add_Issue_reg;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire rst_int_n_reg;
  (* async_reg = "true" *) wire [10:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [10:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [10:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [10:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [10:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [10:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  (* async_reg = "true" *) wire scndry_out_int_d1;
  wire [0:0]\wptr_reg[0] ;

  assign out[5] = s_level_out_bus_d4[9];
  assign out[4:2] = s_level_out_bus_d4[5:3];
  assign out[1:0] = s_level_out_bus_d4[1:0];
  LUT2 #(
    .INIT(4'hE)) 
    \Count_Out_i[31]_i_1__2 
       (.I0(s_level_out_bus_d4[4]),
        .I1(s_level_out_bus_d4[3]),
        .O(\Count_Out_i_reg[0] ));
  LUT3 #(
    .INIT(8'hB0)) 
    \Count_Out_i[32]_i_3 
       (.I0(Ext_Trig_Metric_en),
        .I1(s_level_out_bus_d4[9]),
        .I2(s_level_out_bus_d4[0]),
        .O(Metrics_Cnt_En_Int));
  LUT4 #(
    .INIT(16'hA200)) 
    \GEN_ARSIZE_F1.Wtrans_Cnt_En_i_2 
       (.I0(s_level_out_bus_d4[0]),
        .I1(s_level_out_bus_d4[9]),
        .I2(Ext_Trig_Metric_en),
        .I3(Slot_0_Sync_Data_Valid),
        .O(\GEN_ARSIZE_F1.Num_BValids_En_reg ));
  LUT3 #(
    .INIT(8'hDF)) 
    Read_going_on_i_2
       (.I0(s_level_out_bus_d4[5]),
        .I1(RID_Mask),
        .I2(Q),
        .O(Read_Beat_Cnt_En1));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(scndry_out_int_d1));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(p_in_d1_cdc_from));
  LUT4 #(
    .INIT(16'hA200)) 
    mem_reg_0_31_0_0_i_2
       (.I0(s_level_out_bus_d4[0]),
        .I1(s_level_out_bus_d4[9]),
        .I2(Ext_Trig_Metric_en),
        .I3(Wr_Add_Issue_reg),
        .O(E));
  LUT4 #(
    .INIT(16'hA200)) 
    mem_reg_0_31_0_5_i_1__1
       (.I0(s_level_out_bus_d4[0]),
        .I1(s_level_out_bus_d4[9]),
        .I2(Ext_Trig_Metric_en),
        .I3(Rd_Latency_Fifo_Wr_En),
        .O(\wptr_reg[0] ));
  LUT2 #(
    .INIT(4'h2)) 
    rst_int_n_i_1
       (.I0(core_aresetn),
        .I1(s_level_out_bus_d4[1]),
        .O(rst_int_n_reg));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(core_aresetn_0));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized1
   (D,
    E,
    Sample_Cnt_Ld,
    Sample_Interval_Cnt_Lapse,
    out,
    core_aresetn,
    Reset_On_Sample_Int_Lapse_reg,
    core_aclk);
  output [2:0]D;
  output [0:0]E;
  output Sample_Cnt_Ld;
  input Sample_Interval_Cnt_Lapse;
  input [0:0]out;
  input core_aresetn;
  input [2:0]Reset_On_Sample_Int_Lapse_reg;
  input core_aclk;

  wire [0:0]E;
  wire [2:0]Reset_On_Sample_Int_Lapse_reg;
  wire Sample_Cnt_Ld;
  wire Sample_Interval_Cnt_Lapse;
  wire core_aclk;
  wire core_aresetn;
  wire [0:0]out;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  (* async_reg = "true" *) wire [2:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [2:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [2:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [2:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [2:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [2:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign D[2:0] = s_level_out_bus_d4;
  LUT4 #(
    .INIT(16'hFEEE)) 
    \Count_Out_i[31]_i_1__1 
       (.I0(Sample_Interval_Cnt_Lapse),
        .I1(s_level_out_bus_d4[1]),
        .I2(out),
        .I3(s_level_out_bus_d4[0]),
        .O(E));
  LUT2 #(
    .INIT(4'hE)) 
    \Count_Out_i[32]_i_2__1 
       (.I0(s_level_out_bus_d4[1]),
        .I1(Sample_Interval_Cnt_Lapse),
        .O(Sample_Cnt_Ld));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(scndry_out_int_d1));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(p_in_d1_cdc_from));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Reset_On_Sample_Int_Lapse_reg[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Reset_On_Sample_Int_Lapse_reg[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Reset_On_Sample_Int_Lapse_reg[2]),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(core_aresetn));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized2
   (out,
    \Accum_i_reg[15] ,
    core_aresetn_0,
    Lat_Sample_Reg_Rd_En,
    core_aclk,
    \s_level_out_bus_d4_reg[2] ,
    Sample_Interval_Cnt_Lapse,
    Lat_Sample_Reg_Rd_En_d3,
    \s_level_out_bus_d4_reg[1] ,
    core_aresetn);
  output out;
  output [0:0]\Accum_i_reg[15] ;
  input core_aresetn_0;
  input Lat_Sample_Reg_Rd_En;
  input core_aclk;
  input [0:0]\s_level_out_bus_d4_reg[2] ;
  input Sample_Interval_Cnt_Lapse;
  input Lat_Sample_Reg_Rd_En_d3;
  input [0:0]\s_level_out_bus_d4_reg[1] ;
  input core_aresetn;

  wire [0:0]\Accum_i_reg[15] ;
  wire Lat_Sample_Reg_Rd_En;
  wire Lat_Sample_Reg_Rd_En_d3;
  wire Sample_Interval_Cnt_Lapse;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  wire [0:0]\s_level_out_bus_d4_reg[1] ;
  wire [0:0]\s_level_out_bus_d4_reg[2] ;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign out = s_level_out_d4;
  LUT6 #(
    .INIT(64'hFFFF88A8FFFFFFFF)) 
    \Accum_i[31]_i_1 
       (.I0(\s_level_out_bus_d4_reg[2] ),
        .I1(Sample_Interval_Cnt_Lapse),
        .I2(s_level_out_d4),
        .I3(Lat_Sample_Reg_Rd_En_d3),
        .I4(\s_level_out_bus_d4_reg[1] ),
        .I5(core_aresetn),
        .O(\Accum_i_reg[15] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(scndry_out_int_d1));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(p_in_d1_cdc_from));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d1_cdc_to_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Lat_Sample_Reg_Rd_En),
        .Q(s_level_out_d1_cdc_to),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d2_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d3_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d4_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d5_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_aresetn_0));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d6_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_aresetn_0));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized3
   (D,
    SR,
    s_axi_aresetn,
    s_axi_aclk);
  output [31:0]D;
  output [0:0]SR;
  input s_axi_aresetn;
  input s_axi_aclk;

  wire [0:0]SR;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  (* async_reg = "true" *) wire [31:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [31:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [31:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [31:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [31:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [31:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign D[31:0] = s_level_out_bus_d4;
  LUT1 #(
    .INIT(2'h1)) 
    bvalid_i_1
       (.I0(s_axi_aresetn),
        .O(SR));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(scndry_out_int_d1));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(p_in_d1_cdc_from));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[18]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[19]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[20]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[21]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[22]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[23]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[24]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[25]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[26]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[27]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[28]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[29]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[30]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[31]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(1'b0),
        .Q(s_level_out_bus_d1_cdc_to[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[10]),
        .Q(s_level_out_bus_d2[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[11]),
        .Q(s_level_out_bus_d2[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[12]),
        .Q(s_level_out_bus_d2[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[13]),
        .Q(s_level_out_bus_d2[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[14]),
        .Q(s_level_out_bus_d2[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[15]),
        .Q(s_level_out_bus_d2[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[16]),
        .Q(s_level_out_bus_d2[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[17]),
        .Q(s_level_out_bus_d2[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[18]),
        .Q(s_level_out_bus_d2[18]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[19]),
        .Q(s_level_out_bus_d2[19]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[20]),
        .Q(s_level_out_bus_d2[20]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[21]),
        .Q(s_level_out_bus_d2[21]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[22]),
        .Q(s_level_out_bus_d2[22]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[23]),
        .Q(s_level_out_bus_d2[23]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[24]),
        .Q(s_level_out_bus_d2[24]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[25]),
        .Q(s_level_out_bus_d2[25]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[26]),
        .Q(s_level_out_bus_d2[26]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[27]),
        .Q(s_level_out_bus_d2[27]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[28]),
        .Q(s_level_out_bus_d2[28]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[29]),
        .Q(s_level_out_bus_d2[29]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[2]),
        .Q(s_level_out_bus_d2[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[30]),
        .Q(s_level_out_bus_d2[30]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[31]),
        .Q(s_level_out_bus_d2[31]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[3]),
        .Q(s_level_out_bus_d2[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[4]),
        .Q(s_level_out_bus_d2[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[5]),
        .Q(s_level_out_bus_d2[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[6]),
        .Q(s_level_out_bus_d2[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[7]),
        .Q(s_level_out_bus_d2[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[8]),
        .Q(s_level_out_bus_d2[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[9]),
        .Q(s_level_out_bus_d2[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[10]),
        .Q(s_level_out_bus_d3[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[11]),
        .Q(s_level_out_bus_d3[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[12]),
        .Q(s_level_out_bus_d3[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[13]),
        .Q(s_level_out_bus_d3[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[14]),
        .Q(s_level_out_bus_d3[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[15]),
        .Q(s_level_out_bus_d3[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[16]),
        .Q(s_level_out_bus_d3[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[17]),
        .Q(s_level_out_bus_d3[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[18]),
        .Q(s_level_out_bus_d3[18]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[19]),
        .Q(s_level_out_bus_d3[19]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[20]),
        .Q(s_level_out_bus_d3[20]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[21]),
        .Q(s_level_out_bus_d3[21]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[22]),
        .Q(s_level_out_bus_d3[22]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[23]),
        .Q(s_level_out_bus_d3[23]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[24]),
        .Q(s_level_out_bus_d3[24]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[25]),
        .Q(s_level_out_bus_d3[25]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[26]),
        .Q(s_level_out_bus_d3[26]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[27]),
        .Q(s_level_out_bus_d3[27]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[28]),
        .Q(s_level_out_bus_d3[28]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[29]),
        .Q(s_level_out_bus_d3[29]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[2]),
        .Q(s_level_out_bus_d3[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[30]),
        .Q(s_level_out_bus_d3[30]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[31]),
        .Q(s_level_out_bus_d3[31]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[3]),
        .Q(s_level_out_bus_d3[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[4]),
        .Q(s_level_out_bus_d3[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[5]),
        .Q(s_level_out_bus_d3[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[6]),
        .Q(s_level_out_bus_d3[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[7]),
        .Q(s_level_out_bus_d3[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[8]),
        .Q(s_level_out_bus_d3[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[9]),
        .Q(s_level_out_bus_d3[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[10]),
        .Q(s_level_out_bus_d4[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[11]),
        .Q(s_level_out_bus_d4[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[12]),
        .Q(s_level_out_bus_d4[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[13]),
        .Q(s_level_out_bus_d4[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[14]),
        .Q(s_level_out_bus_d4[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[15]),
        .Q(s_level_out_bus_d4[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[16]),
        .Q(s_level_out_bus_d4[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[17]),
        .Q(s_level_out_bus_d4[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[18]),
        .Q(s_level_out_bus_d4[18]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[19]),
        .Q(s_level_out_bus_d4[19]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[20]),
        .Q(s_level_out_bus_d4[20]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[21]),
        .Q(s_level_out_bus_d4[21]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[22]),
        .Q(s_level_out_bus_d4[22]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[23]),
        .Q(s_level_out_bus_d4[23]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[24]),
        .Q(s_level_out_bus_d4[24]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[25]),
        .Q(s_level_out_bus_d4[25]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[26]),
        .Q(s_level_out_bus_d4[26]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[27]),
        .Q(s_level_out_bus_d4[27]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[28]),
        .Q(s_level_out_bus_d4[28]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[29]),
        .Q(s_level_out_bus_d4[29]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[2]),
        .Q(s_level_out_bus_d4[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[30]),
        .Q(s_level_out_bus_d4[30]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[31]),
        .Q(s_level_out_bus_d4[31]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[3]),
        .Q(s_level_out_bus_d4[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[4]),
        .Q(s_level_out_bus_d4[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[5]),
        .Q(s_level_out_bus_d4[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[6]),
        .Q(s_level_out_bus_d4[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[7]),
        .Q(s_level_out_bus_d4[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[8]),
        .Q(s_level_out_bus_d4[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[9]),
        .Q(s_level_out_bus_d4[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[10]),
        .Q(s_level_out_bus_d5[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[11]),
        .Q(s_level_out_bus_d5[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[12]),
        .Q(s_level_out_bus_d5[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[13]),
        .Q(s_level_out_bus_d5[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[14]),
        .Q(s_level_out_bus_d5[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[15]),
        .Q(s_level_out_bus_d5[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[16]),
        .Q(s_level_out_bus_d5[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[17]),
        .Q(s_level_out_bus_d5[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[18]),
        .Q(s_level_out_bus_d5[18]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[19]),
        .Q(s_level_out_bus_d5[19]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[20]),
        .Q(s_level_out_bus_d5[20]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[21]),
        .Q(s_level_out_bus_d5[21]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[22]),
        .Q(s_level_out_bus_d5[22]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[23]),
        .Q(s_level_out_bus_d5[23]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[24]),
        .Q(s_level_out_bus_d5[24]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[25]),
        .Q(s_level_out_bus_d5[25]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[26]),
        .Q(s_level_out_bus_d5[26]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[27]),
        .Q(s_level_out_bus_d5[27]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[28]),
        .Q(s_level_out_bus_d5[28]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[29]),
        .Q(s_level_out_bus_d5[29]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[2]),
        .Q(s_level_out_bus_d5[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[30]),
        .Q(s_level_out_bus_d5[30]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[31]),
        .Q(s_level_out_bus_d5[31]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[3]),
        .Q(s_level_out_bus_d5[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[4]),
        .Q(s_level_out_bus_d5[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[5]),
        .Q(s_level_out_bus_d5[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[6]),
        .Q(s_level_out_bus_d5[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[7]),
        .Q(s_level_out_bus_d5[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[8]),
        .Q(s_level_out_bus_d5[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[9]),
        .Q(s_level_out_bus_d5[9]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[10]),
        .Q(s_level_out_bus_d6[10]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[11]),
        .Q(s_level_out_bus_d6[11]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[12]),
        .Q(s_level_out_bus_d6[12]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[13]),
        .Q(s_level_out_bus_d6[13]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[14]),
        .Q(s_level_out_bus_d6[14]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[15]),
        .Q(s_level_out_bus_d6[15]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[16]),
        .Q(s_level_out_bus_d6[16]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[17]),
        .Q(s_level_out_bus_d6[17]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[18]),
        .Q(s_level_out_bus_d6[18]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[19]),
        .Q(s_level_out_bus_d6[19]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[20]),
        .Q(s_level_out_bus_d6[20]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[21]),
        .Q(s_level_out_bus_d6[21]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[22]),
        .Q(s_level_out_bus_d6[22]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[23]),
        .Q(s_level_out_bus_d6[23]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[24]),
        .Q(s_level_out_bus_d6[24]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[25]),
        .Q(s_level_out_bus_d6[25]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[26]),
        .Q(s_level_out_bus_d6[26]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[27]),
        .Q(s_level_out_bus_d6[27]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[28]),
        .Q(s_level_out_bus_d6[28]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[29]),
        .Q(s_level_out_bus_d6[29]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[2]),
        .Q(s_level_out_bus_d6[2]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[30]),
        .Q(s_level_out_bus_d6[30]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[31]),
        .Q(s_level_out_bus_d6[31]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[3]),
        .Q(s_level_out_bus_d6[3]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[4]),
        .Q(s_level_out_bus_d6[4]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[5]),
        .Q(s_level_out_bus_d6[5]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[6]),
        .Q(s_level_out_bus_d6[6]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[7]),
        .Q(s_level_out_bus_d6[7]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[8]),
        .Q(s_level_out_bus_d6[8]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[9]),
        .Q(s_level_out_bus_d6[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized4
   (out,
    core_aresetn,
    trigger_in,
    core_aclk);
  output out;
  input core_aresetn;
  input trigger_in;
  input core_aclk;

  wire core_aclk;
  wire core_aresetn;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  (* async_reg = "true" *) wire scndry_out_int_d1;
  wire trigger_in;

  assign out = s_level_out_d4;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(scndry_out_int_d1));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(p_in_d1_cdc_from));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d1_cdc_to_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(trigger_in),
        .Q(s_level_out_d1_cdc_to),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d2_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d3_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d4_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d5_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(core_aresetn));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d6_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(core_aresetn));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized5
   (D,
    Ext_Trig_Metric_en_reg,
    out,
    rst_int_n_reg,
    Q,
    Ext_Trig_Metric_en_reg_0,
    SR,
    UNCONN_IN,
    core_aclk);
  output [1:0]D;
  output Ext_Trig_Metric_en_reg;
  input [0:0]out;
  input rst_int_n_reg;
  input [1:0]Q;
  input Ext_Trig_Metric_en_reg_0;
  input [0:0]SR;
  input [1:0]UNCONN_IN;
  input core_aclk;

  wire Ext_Trig_Metric_en_i_2_n_0;
  wire Ext_Trig_Metric_en_reg;
  wire Ext_Trig_Metric_en_reg_0;
  wire [1:0]Q;
  wire [0:0]SR;
  wire [1:0]UNCONN_IN;
  wire core_aclk;
  wire [0:0]out;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire rst_int_n_reg;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d2;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d3;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d4;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d5;
  (* async_reg = "true" *) wire [1:0]s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign D[1:0] = s_level_out_bus_d4;
  LUT4 #(
    .INIT(16'h00AE)) 
    Ext_Trig_Metric_en_i_1
       (.I0(Ext_Trig_Metric_en_reg_0),
        .I1(s_level_out_bus_d4[0]),
        .I2(Q[0]),
        .I3(Ext_Trig_Metric_en_i_2_n_0),
        .O(Ext_Trig_Metric_en_reg));
  LUT4 #(
    .INIT(16'h7F77)) 
    Ext_Trig_Metric_en_i_2
       (.I0(out),
        .I1(rst_int_n_reg),
        .I2(Q[1]),
        .I3(s_level_out_bus_d4[1]),
        .O(Ext_Trig_Metric_en_i_2_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(scndry_out_int_d1));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(p_in_d1_cdc_from));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(UNCONN_IN[0]),
        .Q(s_level_out_bus_d1_cdc_to[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d1_cdc_to_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(UNCONN_IN[1]),
        .Q(s_level_out_bus_d1_cdc_to[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[0]),
        .Q(s_level_out_bus_d2[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d2_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d1_cdc_to[1]),
        .Q(s_level_out_bus_d2[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[0]),
        .Q(s_level_out_bus_d3[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d3_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d2[1]),
        .Q(s_level_out_bus_d3[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[0]),
        .Q(s_level_out_bus_d4[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d4_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d3[1]),
        .Q(s_level_out_bus_d4[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[0]),
        .Q(s_level_out_bus_d5[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d5_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d4[1]),
        .Q(s_level_out_bus_d5[1]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[0]),
        .Q(s_level_out_bus_d6[0]),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE \s_level_out_bus_d6_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_bus_d5[1]),
        .Q(s_level_out_bus_d6[1]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized6
   (out,
    SR,
    q_reg,
    core_aclk);
  output out;
  input [0:0]SR;
  input q_reg;
  input core_aclk;

  wire [0:0]SR;
  wire core_aclk;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  wire q_reg;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  assign out = s_level_out_d4;
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(scndry_out_int_d1));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(p_in_d1_cdc_from));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d1_cdc_to_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(q_reg),
        .Q(s_level_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d2_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d3_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d4_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d5_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d6_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_cdc_sync" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized7
   (\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[0] ,
    SR,
    out,
    core_aclk,
    core_aresetn,
    \s_level_out_bus_d4_reg[1] );
  output [0:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[0] ;
  input [0:0]SR;
  input out;
  input core_aclk;
  input core_aresetn;
  input [0:0]\s_level_out_bus_d4_reg[1] ;

  wire [0:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[0] ;
  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  wire out;
  (* async_reg = "true" *) wire p_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_in_d1_cdc_from;
  (* async_reg = "true" *) wire p_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire p_level_out_d2;
  (* async_reg = "true" *) wire p_level_out_d3;
  (* async_reg = "true" *) wire p_level_out_d4;
  (* async_reg = "true" *) wire p_level_out_d5;
  (* async_reg = "true" *) wire p_level_out_d6;
  (* async_reg = "true" *) wire p_level_out_d7;
  (* async_reg = "true" *) wire prmry_ack_int;
  (* async_reg = "true" *) wire s_level_out_bus_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_bus_d2;
  (* async_reg = "true" *) wire s_level_out_bus_d3;
  (* async_reg = "true" *) wire s_level_out_bus_d4;
  wire [0:0]\s_level_out_bus_d4_reg[1] ;
  (* async_reg = "true" *) wire s_level_out_bus_d5;
  (* async_reg = "true" *) wire s_level_out_bus_d6;
  (* async_reg = "true" *) wire s_level_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_level_out_d2;
  (* async_reg = "true" *) wire s_level_out_d3;
  (* async_reg = "true" *) wire s_level_out_d4;
  (* async_reg = "true" *) wire s_level_out_d5;
  (* async_reg = "true" *) wire s_level_out_d6;
  (* async_reg = "true" *) wire s_out_d1_cdc_to;
  (* async_reg = "true" *) wire s_out_d2;
  (* async_reg = "true" *) wire s_out_d3;
  (* async_reg = "true" *) wire s_out_d4;
  (* async_reg = "true" *) wire s_out_d5;
  (* async_reg = "true" *) wire s_out_d6;
  (* async_reg = "true" *) wire s_out_d7;
  (* async_reg = "true" *) wire scndry_out_int_d1;

  LUT3 #(
    .INIT(8'hFD)) 
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0[31]_i_1 
       (.I0(core_aresetn),
        .I1(s_level_out_d4),
        .I2(\s_level_out_bus_d4_reg[1] ),
        .O(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    i_0
       (.I0(1'b0),
        .O(p_level_in_d1_cdc_from));
  LUT1 #(
    .INIT(2'h2)) 
    i_1
       (.I0(1'b0),
        .O(prmry_ack_int));
  LUT1 #(
    .INIT(2'h2)) 
    i_10
       (.I0(1'b0),
        .O(s_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_11
       (.I0(1'b0),
        .O(s_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_12
       (.I0(1'b0),
        .O(s_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_13
       (.I0(1'b0),
        .O(s_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_14
       (.I0(1'b0),
        .O(s_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_15
       (.I0(1'b0),
        .O(s_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_16
       (.I0(1'b0),
        .O(s_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_17
       (.I0(1'b0),
        .O(scndry_out_int_d1));
  LUT1 #(
    .INIT(2'h2)) 
    i_18
       (.I0(1'b0),
        .O(s_level_out_bus_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_19
       (.I0(1'b0),
        .O(s_level_out_bus_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_2
       (.I0(1'b0),
        .O(p_level_out_d1_cdc_to));
  LUT1 #(
    .INIT(2'h2)) 
    i_20
       (.I0(1'b0),
        .O(s_level_out_bus_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_21
       (.I0(1'b0),
        .O(s_level_out_bus_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_22
       (.I0(1'b0),
        .O(s_level_out_bus_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_23
       (.I0(1'b0),
        .O(s_level_out_bus_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_3
       (.I0(1'b0),
        .O(p_level_out_d2));
  LUT1 #(
    .INIT(2'h2)) 
    i_4
       (.I0(1'b0),
        .O(p_level_out_d3));
  LUT1 #(
    .INIT(2'h2)) 
    i_5
       (.I0(1'b0),
        .O(p_level_out_d4));
  LUT1 #(
    .INIT(2'h2)) 
    i_6
       (.I0(1'b0),
        .O(p_level_out_d5));
  LUT1 #(
    .INIT(2'h2)) 
    i_7
       (.I0(1'b0),
        .O(p_level_out_d6));
  LUT1 #(
    .INIT(2'h2)) 
    i_8
       (.I0(1'b0),
        .O(p_level_out_d7));
  LUT1 #(
    .INIT(2'h2)) 
    i_9
       (.I0(1'b0),
        .O(p_in_d1_cdc_from));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d1_cdc_to_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(out),
        .Q(s_level_out_d1_cdc_to),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d2_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d1_cdc_to),
        .Q(s_level_out_d2),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d3_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d2),
        .Q(s_level_out_d3),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d4_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d3),
        .Q(s_level_out_d4),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d5_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d4),
        .Q(s_level_out_d5),
        .R(SR));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDRE s_level_out_d6_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(s_level_out_d5),
        .Q(s_level_out_d6),
        .R(SR));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter
   (Q,
    SR,
    E,
    s_axi_aclk);
  output [31:0]Q;
  input [0:0]SR;
  input [0:0]E;
  input s_axi_aclk;

  wire \Count_Out_i[0]_i_1_n_0 ;
  wire \Count_Out_i[12]_i_2_n_0 ;
  wire \Count_Out_i[12]_i_3_n_0 ;
  wire \Count_Out_i[12]_i_4_n_0 ;
  wire \Count_Out_i[12]_i_5_n_0 ;
  wire \Count_Out_i[16]_i_2_n_0 ;
  wire \Count_Out_i[16]_i_3_n_0 ;
  wire \Count_Out_i[16]_i_4_n_0 ;
  wire \Count_Out_i[16]_i_5_n_0 ;
  wire \Count_Out_i[20]_i_2_n_0 ;
  wire \Count_Out_i[20]_i_3_n_0 ;
  wire \Count_Out_i[20]_i_4_n_0 ;
  wire \Count_Out_i[20]_i_5_n_0 ;
  wire \Count_Out_i[24]_i_2_n_0 ;
  wire \Count_Out_i[24]_i_3_n_0 ;
  wire \Count_Out_i[24]_i_4_n_0 ;
  wire \Count_Out_i[24]_i_5_n_0 ;
  wire \Count_Out_i[28]_i_2_n_0 ;
  wire \Count_Out_i[28]_i_3_n_0 ;
  wire \Count_Out_i[28]_i_4_n_0 ;
  wire \Count_Out_i[28]_i_5_n_0 ;
  wire \Count_Out_i[31]_i_2_n_0 ;
  wire \Count_Out_i[31]_i_3_n_0 ;
  wire \Count_Out_i[31]_i_4_n_0 ;
  wire \Count_Out_i[4]_i_2_n_0 ;
  wire \Count_Out_i[4]_i_3_n_0 ;
  wire \Count_Out_i[4]_i_4_n_0 ;
  wire \Count_Out_i[4]_i_5_n_0 ;
  wire \Count_Out_i[4]_i_6_n_0 ;
  wire \Count_Out_i[8]_i_2_n_0 ;
  wire \Count_Out_i[8]_i_3_n_0 ;
  wire \Count_Out_i[8]_i_4_n_0 ;
  wire \Count_Out_i[8]_i_5_n_0 ;
  wire \Count_Out_i_reg[12]_i_1_n_0 ;
  wire \Count_Out_i_reg[12]_i_1_n_1 ;
  wire \Count_Out_i_reg[12]_i_1_n_2 ;
  wire \Count_Out_i_reg[12]_i_1_n_3 ;
  wire \Count_Out_i_reg[12]_i_1_n_4 ;
  wire \Count_Out_i_reg[12]_i_1_n_5 ;
  wire \Count_Out_i_reg[12]_i_1_n_6 ;
  wire \Count_Out_i_reg[12]_i_1_n_7 ;
  wire \Count_Out_i_reg[16]_i_1_n_0 ;
  wire \Count_Out_i_reg[16]_i_1_n_1 ;
  wire \Count_Out_i_reg[16]_i_1_n_2 ;
  wire \Count_Out_i_reg[16]_i_1_n_3 ;
  wire \Count_Out_i_reg[16]_i_1_n_4 ;
  wire \Count_Out_i_reg[16]_i_1_n_5 ;
  wire \Count_Out_i_reg[16]_i_1_n_6 ;
  wire \Count_Out_i_reg[16]_i_1_n_7 ;
  wire \Count_Out_i_reg[20]_i_1_n_0 ;
  wire \Count_Out_i_reg[20]_i_1_n_1 ;
  wire \Count_Out_i_reg[20]_i_1_n_2 ;
  wire \Count_Out_i_reg[20]_i_1_n_3 ;
  wire \Count_Out_i_reg[20]_i_1_n_4 ;
  wire \Count_Out_i_reg[20]_i_1_n_5 ;
  wire \Count_Out_i_reg[20]_i_1_n_6 ;
  wire \Count_Out_i_reg[20]_i_1_n_7 ;
  wire \Count_Out_i_reg[24]_i_1_n_0 ;
  wire \Count_Out_i_reg[24]_i_1_n_1 ;
  wire \Count_Out_i_reg[24]_i_1_n_2 ;
  wire \Count_Out_i_reg[24]_i_1_n_3 ;
  wire \Count_Out_i_reg[24]_i_1_n_4 ;
  wire \Count_Out_i_reg[24]_i_1_n_5 ;
  wire \Count_Out_i_reg[24]_i_1_n_6 ;
  wire \Count_Out_i_reg[24]_i_1_n_7 ;
  wire \Count_Out_i_reg[28]_i_1_n_0 ;
  wire \Count_Out_i_reg[28]_i_1_n_1 ;
  wire \Count_Out_i_reg[28]_i_1_n_2 ;
  wire \Count_Out_i_reg[28]_i_1_n_3 ;
  wire \Count_Out_i_reg[28]_i_1_n_4 ;
  wire \Count_Out_i_reg[28]_i_1_n_5 ;
  wire \Count_Out_i_reg[28]_i_1_n_6 ;
  wire \Count_Out_i_reg[28]_i_1_n_7 ;
  wire \Count_Out_i_reg[31]_i_1_n_2 ;
  wire \Count_Out_i_reg[31]_i_1_n_3 ;
  wire \Count_Out_i_reg[31]_i_1_n_5 ;
  wire \Count_Out_i_reg[31]_i_1_n_6 ;
  wire \Count_Out_i_reg[31]_i_1_n_7 ;
  wire \Count_Out_i_reg[4]_i_1_n_0 ;
  wire \Count_Out_i_reg[4]_i_1_n_1 ;
  wire \Count_Out_i_reg[4]_i_1_n_2 ;
  wire \Count_Out_i_reg[4]_i_1_n_3 ;
  wire \Count_Out_i_reg[4]_i_1_n_4 ;
  wire \Count_Out_i_reg[4]_i_1_n_5 ;
  wire \Count_Out_i_reg[4]_i_1_n_6 ;
  wire \Count_Out_i_reg[4]_i_1_n_7 ;
  wire \Count_Out_i_reg[8]_i_1_n_0 ;
  wire \Count_Out_i_reg[8]_i_1_n_1 ;
  wire \Count_Out_i_reg[8]_i_1_n_2 ;
  wire \Count_Out_i_reg[8]_i_1_n_3 ;
  wire \Count_Out_i_reg[8]_i_1_n_4 ;
  wire \Count_Out_i_reg[8]_i_1_n_5 ;
  wire \Count_Out_i_reg[8]_i_1_n_6 ;
  wire \Count_Out_i_reg[8]_i_1_n_7 ;
  wire [0:0]E;
  wire [31:0]Q;
  wire [0:0]SR;
  wire s_axi_aclk;
  wire [3:2]\NLW_Count_Out_i_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_Count_Out_i_reg[31]_i_1_O_UNCONNECTED ;

  LUT1 #(
    .INIT(2'h1)) 
    \Count_Out_i[0]_i_1 
       (.I0(Q[0]),
        .O(\Count_Out_i[0]_i_1_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[12]_i_2 
       (.I0(Q[11]),
        .I1(Q[12]),
        .O(\Count_Out_i[12]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[12]_i_3 
       (.I0(Q[10]),
        .I1(Q[11]),
        .O(\Count_Out_i[12]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[12]_i_4 
       (.I0(Q[9]),
        .I1(Q[10]),
        .O(\Count_Out_i[12]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[12]_i_5 
       (.I0(Q[8]),
        .I1(Q[9]),
        .O(\Count_Out_i[12]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[16]_i_2 
       (.I0(Q[15]),
        .I1(Q[16]),
        .O(\Count_Out_i[16]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[16]_i_3 
       (.I0(Q[14]),
        .I1(Q[15]),
        .O(\Count_Out_i[16]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[16]_i_4 
       (.I0(Q[13]),
        .I1(Q[14]),
        .O(\Count_Out_i[16]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[16]_i_5 
       (.I0(Q[12]),
        .I1(Q[13]),
        .O(\Count_Out_i[16]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[20]_i_2 
       (.I0(Q[19]),
        .I1(Q[20]),
        .O(\Count_Out_i[20]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[20]_i_3 
       (.I0(Q[18]),
        .I1(Q[19]),
        .O(\Count_Out_i[20]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[20]_i_4 
       (.I0(Q[17]),
        .I1(Q[18]),
        .O(\Count_Out_i[20]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[20]_i_5 
       (.I0(Q[16]),
        .I1(Q[17]),
        .O(\Count_Out_i[20]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[24]_i_2 
       (.I0(Q[23]),
        .I1(Q[24]),
        .O(\Count_Out_i[24]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[24]_i_3 
       (.I0(Q[22]),
        .I1(Q[23]),
        .O(\Count_Out_i[24]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[24]_i_4 
       (.I0(Q[21]),
        .I1(Q[22]),
        .O(\Count_Out_i[24]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[24]_i_5 
       (.I0(Q[20]),
        .I1(Q[21]),
        .O(\Count_Out_i[24]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[28]_i_2 
       (.I0(Q[27]),
        .I1(Q[28]),
        .O(\Count_Out_i[28]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[28]_i_3 
       (.I0(Q[26]),
        .I1(Q[27]),
        .O(\Count_Out_i[28]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[28]_i_4 
       (.I0(Q[25]),
        .I1(Q[26]),
        .O(\Count_Out_i[28]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[28]_i_5 
       (.I0(Q[24]),
        .I1(Q[25]),
        .O(\Count_Out_i[28]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[31]_i_2 
       (.I0(Q[30]),
        .I1(Q[31]),
        .O(\Count_Out_i[31]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[31]_i_3 
       (.I0(Q[29]),
        .I1(Q[30]),
        .O(\Count_Out_i[31]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[31]_i_4 
       (.I0(Q[28]),
        .I1(Q[29]),
        .O(\Count_Out_i[31]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \Count_Out_i[4]_i_2 
       (.I0(Q[1]),
        .O(\Count_Out_i[4]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[4]_i_3 
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(\Count_Out_i[4]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[4]_i_4 
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(\Count_Out_i[4]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[4]_i_5 
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(\Count_Out_i[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Count_Out_i[4]_i_6 
       (.I0(Q[1]),
        .O(\Count_Out_i[4]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[8]_i_2 
       (.I0(Q[7]),
        .I1(Q[8]),
        .O(\Count_Out_i[8]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[8]_i_3 
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(\Count_Out_i[8]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[8]_i_4 
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(\Count_Out_i[8]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Count_Out_i[8]_i_5 
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(\Count_Out_i[8]_i_5_n_0 ));
  FDRE \Count_Out_i_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i[0]_i_1_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE \Count_Out_i_reg[10] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[12]_i_1_n_6 ),
        .Q(Q[10]),
        .R(SR));
  FDRE \Count_Out_i_reg[11] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[12]_i_1_n_5 ),
        .Q(Q[11]),
        .R(SR));
  FDRE \Count_Out_i_reg[12] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[12]_i_1_n_4 ),
        .Q(Q[12]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Count_Out_i_reg[12]_i_1 
       (.CI(\Count_Out_i_reg[8]_i_1_n_0 ),
        .CO({\Count_Out_i_reg[12]_i_1_n_0 ,\Count_Out_i_reg[12]_i_1_n_1 ,\Count_Out_i_reg[12]_i_1_n_2 ,\Count_Out_i_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[11:8]),
        .O({\Count_Out_i_reg[12]_i_1_n_4 ,\Count_Out_i_reg[12]_i_1_n_5 ,\Count_Out_i_reg[12]_i_1_n_6 ,\Count_Out_i_reg[12]_i_1_n_7 }),
        .S({\Count_Out_i[12]_i_2_n_0 ,\Count_Out_i[12]_i_3_n_0 ,\Count_Out_i[12]_i_4_n_0 ,\Count_Out_i[12]_i_5_n_0 }));
  FDRE \Count_Out_i_reg[13] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[16]_i_1_n_7 ),
        .Q(Q[13]),
        .R(SR));
  FDRE \Count_Out_i_reg[14] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[16]_i_1_n_6 ),
        .Q(Q[14]),
        .R(SR));
  FDRE \Count_Out_i_reg[15] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[16]_i_1_n_5 ),
        .Q(Q[15]),
        .R(SR));
  FDRE \Count_Out_i_reg[16] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[16]_i_1_n_4 ),
        .Q(Q[16]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Count_Out_i_reg[16]_i_1 
       (.CI(\Count_Out_i_reg[12]_i_1_n_0 ),
        .CO({\Count_Out_i_reg[16]_i_1_n_0 ,\Count_Out_i_reg[16]_i_1_n_1 ,\Count_Out_i_reg[16]_i_1_n_2 ,\Count_Out_i_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[15:12]),
        .O({\Count_Out_i_reg[16]_i_1_n_4 ,\Count_Out_i_reg[16]_i_1_n_5 ,\Count_Out_i_reg[16]_i_1_n_6 ,\Count_Out_i_reg[16]_i_1_n_7 }),
        .S({\Count_Out_i[16]_i_2_n_0 ,\Count_Out_i[16]_i_3_n_0 ,\Count_Out_i[16]_i_4_n_0 ,\Count_Out_i[16]_i_5_n_0 }));
  FDRE \Count_Out_i_reg[17] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[20]_i_1_n_7 ),
        .Q(Q[17]),
        .R(SR));
  FDRE \Count_Out_i_reg[18] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[20]_i_1_n_6 ),
        .Q(Q[18]),
        .R(SR));
  FDRE \Count_Out_i_reg[19] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[20]_i_1_n_5 ),
        .Q(Q[19]),
        .R(SR));
  FDRE \Count_Out_i_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[4]_i_1_n_7 ),
        .Q(Q[1]),
        .R(SR));
  FDRE \Count_Out_i_reg[20] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[20]_i_1_n_4 ),
        .Q(Q[20]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Count_Out_i_reg[20]_i_1 
       (.CI(\Count_Out_i_reg[16]_i_1_n_0 ),
        .CO({\Count_Out_i_reg[20]_i_1_n_0 ,\Count_Out_i_reg[20]_i_1_n_1 ,\Count_Out_i_reg[20]_i_1_n_2 ,\Count_Out_i_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[19:16]),
        .O({\Count_Out_i_reg[20]_i_1_n_4 ,\Count_Out_i_reg[20]_i_1_n_5 ,\Count_Out_i_reg[20]_i_1_n_6 ,\Count_Out_i_reg[20]_i_1_n_7 }),
        .S({\Count_Out_i[20]_i_2_n_0 ,\Count_Out_i[20]_i_3_n_0 ,\Count_Out_i[20]_i_4_n_0 ,\Count_Out_i[20]_i_5_n_0 }));
  FDRE \Count_Out_i_reg[21] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[24]_i_1_n_7 ),
        .Q(Q[21]),
        .R(SR));
  FDRE \Count_Out_i_reg[22] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[24]_i_1_n_6 ),
        .Q(Q[22]),
        .R(SR));
  FDRE \Count_Out_i_reg[23] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[24]_i_1_n_5 ),
        .Q(Q[23]),
        .R(SR));
  FDRE \Count_Out_i_reg[24] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[24]_i_1_n_4 ),
        .Q(Q[24]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Count_Out_i_reg[24]_i_1 
       (.CI(\Count_Out_i_reg[20]_i_1_n_0 ),
        .CO({\Count_Out_i_reg[24]_i_1_n_0 ,\Count_Out_i_reg[24]_i_1_n_1 ,\Count_Out_i_reg[24]_i_1_n_2 ,\Count_Out_i_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[23:20]),
        .O({\Count_Out_i_reg[24]_i_1_n_4 ,\Count_Out_i_reg[24]_i_1_n_5 ,\Count_Out_i_reg[24]_i_1_n_6 ,\Count_Out_i_reg[24]_i_1_n_7 }),
        .S({\Count_Out_i[24]_i_2_n_0 ,\Count_Out_i[24]_i_3_n_0 ,\Count_Out_i[24]_i_4_n_0 ,\Count_Out_i[24]_i_5_n_0 }));
  FDRE \Count_Out_i_reg[25] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[28]_i_1_n_7 ),
        .Q(Q[25]),
        .R(SR));
  FDRE \Count_Out_i_reg[26] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[28]_i_1_n_6 ),
        .Q(Q[26]),
        .R(SR));
  FDRE \Count_Out_i_reg[27] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[28]_i_1_n_5 ),
        .Q(Q[27]),
        .R(SR));
  FDRE \Count_Out_i_reg[28] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[28]_i_1_n_4 ),
        .Q(Q[28]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Count_Out_i_reg[28]_i_1 
       (.CI(\Count_Out_i_reg[24]_i_1_n_0 ),
        .CO({\Count_Out_i_reg[28]_i_1_n_0 ,\Count_Out_i_reg[28]_i_1_n_1 ,\Count_Out_i_reg[28]_i_1_n_2 ,\Count_Out_i_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[27:24]),
        .O({\Count_Out_i_reg[28]_i_1_n_4 ,\Count_Out_i_reg[28]_i_1_n_5 ,\Count_Out_i_reg[28]_i_1_n_6 ,\Count_Out_i_reg[28]_i_1_n_7 }),
        .S({\Count_Out_i[28]_i_2_n_0 ,\Count_Out_i[28]_i_3_n_0 ,\Count_Out_i[28]_i_4_n_0 ,\Count_Out_i[28]_i_5_n_0 }));
  FDRE \Count_Out_i_reg[29] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[31]_i_1_n_7 ),
        .Q(Q[29]),
        .R(SR));
  FDRE \Count_Out_i_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[4]_i_1_n_6 ),
        .Q(Q[2]),
        .R(SR));
  FDRE \Count_Out_i_reg[30] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[31]_i_1_n_6 ),
        .Q(Q[30]),
        .R(SR));
  FDRE \Count_Out_i_reg[31] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[31]_i_1_n_5 ),
        .Q(Q[31]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Count_Out_i_reg[31]_i_1 
       (.CI(\Count_Out_i_reg[28]_i_1_n_0 ),
        .CO({\NLW_Count_Out_i_reg[31]_i_1_CO_UNCONNECTED [3:2],\Count_Out_i_reg[31]_i_1_n_2 ,\Count_Out_i_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,Q[29:28]}),
        .O({\NLW_Count_Out_i_reg[31]_i_1_O_UNCONNECTED [3],\Count_Out_i_reg[31]_i_1_n_5 ,\Count_Out_i_reg[31]_i_1_n_6 ,\Count_Out_i_reg[31]_i_1_n_7 }),
        .S({1'b0,\Count_Out_i[31]_i_2_n_0 ,\Count_Out_i[31]_i_3_n_0 ,\Count_Out_i[31]_i_4_n_0 }));
  FDRE \Count_Out_i_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[4]_i_1_n_5 ),
        .Q(Q[3]),
        .R(SR));
  FDRE \Count_Out_i_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[4]_i_1_n_4 ),
        .Q(Q[4]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Count_Out_i_reg[4]_i_1 
       (.CI(1'b0),
        .CO({\Count_Out_i_reg[4]_i_1_n_0 ,\Count_Out_i_reg[4]_i_1_n_1 ,\Count_Out_i_reg[4]_i_1_n_2 ,\Count_Out_i_reg[4]_i_1_n_3 }),
        .CYINIT(Q[0]),
        .DI({Q[3:1],\Count_Out_i[4]_i_2_n_0 }),
        .O({\Count_Out_i_reg[4]_i_1_n_4 ,\Count_Out_i_reg[4]_i_1_n_5 ,\Count_Out_i_reg[4]_i_1_n_6 ,\Count_Out_i_reg[4]_i_1_n_7 }),
        .S({\Count_Out_i[4]_i_3_n_0 ,\Count_Out_i[4]_i_4_n_0 ,\Count_Out_i[4]_i_5_n_0 ,\Count_Out_i[4]_i_6_n_0 }));
  FDRE \Count_Out_i_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[8]_i_1_n_7 ),
        .Q(Q[5]),
        .R(SR));
  FDRE \Count_Out_i_reg[6] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[8]_i_1_n_6 ),
        .Q(Q[6]),
        .R(SR));
  FDRE \Count_Out_i_reg[7] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[8]_i_1_n_5 ),
        .Q(Q[7]),
        .R(SR));
  FDRE \Count_Out_i_reg[8] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[8]_i_1_n_4 ),
        .Q(Q[8]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Count_Out_i_reg[8]_i_1 
       (.CI(\Count_Out_i_reg[4]_i_1_n_0 ),
        .CO({\Count_Out_i_reg[8]_i_1_n_0 ,\Count_Out_i_reg[8]_i_1_n_1 ,\Count_Out_i_reg[8]_i_1_n_2 ,\Count_Out_i_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O({\Count_Out_i_reg[8]_i_1_n_4 ,\Count_Out_i_reg[8]_i_1_n_5 ,\Count_Out_i_reg[8]_i_1_n_6 ,\Count_Out_i_reg[8]_i_1_n_7 }),
        .S({\Count_Out_i[8]_i_2_n_0 ,\Count_Out_i[8]_i_3_n_0 ,\Count_Out_i[8]_i_4_n_0 ,\Count_Out_i[8]_i_5_n_0 }));
  FDRE \Count_Out_i_reg[9] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(\Count_Out_i_reg[12]_i_1_n_7 ),
        .Q(Q[9]),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_counter" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter_42
   (Q,
    p_in_d1_cdc_from_reg0,
    core_aresetn_0,
    core_aclk,
    out,
    \s_level_out_bus_d4_reg[4] ,
    E,
    core_aresetn);
  output [31:0]Q;
  output p_in_d1_cdc_from_reg0;
  input core_aresetn_0;
  input core_aclk;
  input out;
  input [1:0]\s_level_out_bus_d4_reg[4] ;
  input [0:0]E;
  input core_aresetn;

  wire Carry_Out_i_1__0_n_0;
  wire Count_Out_i0_carry__0_i_1__0_n_0;
  wire Count_Out_i0_carry__0_i_2__0_n_0;
  wire Count_Out_i0_carry__0_i_3__0_n_0;
  wire Count_Out_i0_carry__0_i_4__0_n_0;
  wire Count_Out_i0_carry__0_n_0;
  wire Count_Out_i0_carry__0_n_1;
  wire Count_Out_i0_carry__0_n_2;
  wire Count_Out_i0_carry__0_n_3;
  wire Count_Out_i0_carry__0_n_4;
  wire Count_Out_i0_carry__0_n_5;
  wire Count_Out_i0_carry__0_n_6;
  wire Count_Out_i0_carry__0_n_7;
  wire Count_Out_i0_carry__1_i_1__0_n_0;
  wire Count_Out_i0_carry__1_i_2__0_n_0;
  wire Count_Out_i0_carry__1_i_3__0_n_0;
  wire Count_Out_i0_carry__1_i_4__0_n_0;
  wire Count_Out_i0_carry__1_n_0;
  wire Count_Out_i0_carry__1_n_1;
  wire Count_Out_i0_carry__1_n_2;
  wire Count_Out_i0_carry__1_n_3;
  wire Count_Out_i0_carry__1_n_4;
  wire Count_Out_i0_carry__1_n_5;
  wire Count_Out_i0_carry__1_n_6;
  wire Count_Out_i0_carry__1_n_7;
  wire Count_Out_i0_carry__2_i_1__0_n_0;
  wire Count_Out_i0_carry__2_i_2__0_n_0;
  wire Count_Out_i0_carry__2_i_3__0_n_0;
  wire Count_Out_i0_carry__2_i_4__0_n_0;
  wire Count_Out_i0_carry__2_n_0;
  wire Count_Out_i0_carry__2_n_1;
  wire Count_Out_i0_carry__2_n_2;
  wire Count_Out_i0_carry__2_n_3;
  wire Count_Out_i0_carry__2_n_4;
  wire Count_Out_i0_carry__2_n_5;
  wire Count_Out_i0_carry__2_n_6;
  wire Count_Out_i0_carry__2_n_7;
  wire Count_Out_i0_carry__3_i_1__0_n_0;
  wire Count_Out_i0_carry__3_i_2__0_n_0;
  wire Count_Out_i0_carry__3_i_3__0_n_0;
  wire Count_Out_i0_carry__3_i_4__0_n_0;
  wire Count_Out_i0_carry__3_n_0;
  wire Count_Out_i0_carry__3_n_1;
  wire Count_Out_i0_carry__3_n_2;
  wire Count_Out_i0_carry__3_n_3;
  wire Count_Out_i0_carry__3_n_4;
  wire Count_Out_i0_carry__3_n_5;
  wire Count_Out_i0_carry__3_n_6;
  wire Count_Out_i0_carry__3_n_7;
  wire Count_Out_i0_carry__4_i_1__0_n_0;
  wire Count_Out_i0_carry__4_i_2__0_n_0;
  wire Count_Out_i0_carry__4_i_3__0_n_0;
  wire Count_Out_i0_carry__4_i_4__0_n_0;
  wire Count_Out_i0_carry__4_n_0;
  wire Count_Out_i0_carry__4_n_1;
  wire Count_Out_i0_carry__4_n_2;
  wire Count_Out_i0_carry__4_n_3;
  wire Count_Out_i0_carry__4_n_4;
  wire Count_Out_i0_carry__4_n_5;
  wire Count_Out_i0_carry__4_n_6;
  wire Count_Out_i0_carry__4_n_7;
  wire Count_Out_i0_carry__5_i_1__0_n_0;
  wire Count_Out_i0_carry__5_i_2__0_n_0;
  wire Count_Out_i0_carry__5_i_3__0_n_0;
  wire Count_Out_i0_carry__5_i_4__0_n_0;
  wire Count_Out_i0_carry__5_n_0;
  wire Count_Out_i0_carry__5_n_1;
  wire Count_Out_i0_carry__5_n_2;
  wire Count_Out_i0_carry__5_n_3;
  wire Count_Out_i0_carry__5_n_4;
  wire Count_Out_i0_carry__5_n_5;
  wire Count_Out_i0_carry__5_n_6;
  wire Count_Out_i0_carry__5_n_7;
  wire Count_Out_i0_carry__6_i_1__0_n_0;
  wire Count_Out_i0_carry__6_i_2__0_n_0;
  wire Count_Out_i0_carry__6_i_3__0_n_0;
  wire Count_Out_i0_carry__6_i_4__0_n_0;
  wire Count_Out_i0_carry__6_n_1;
  wire Count_Out_i0_carry__6_n_2;
  wire Count_Out_i0_carry__6_n_3;
  wire Count_Out_i0_carry__6_n_4;
  wire Count_Out_i0_carry__6_n_5;
  wire Count_Out_i0_carry__6_n_6;
  wire Count_Out_i0_carry__6_n_7;
  wire Count_Out_i0_carry_i_1__0_n_0;
  wire Count_Out_i0_carry_i_2__0_n_0;
  wire Count_Out_i0_carry_i_3__0_n_0;
  wire Count_Out_i0_carry_i_4__0_n_0;
  wire Count_Out_i0_carry_n_0;
  wire Count_Out_i0_carry_n_1;
  wire Count_Out_i0_carry_n_2;
  wire Count_Out_i0_carry_n_3;
  wire Count_Out_i0_carry_n_4;
  wire Count_Out_i0_carry_n_5;
  wire Count_Out_i0_carry_n_6;
  wire Count_Out_i0_carry_n_7;
  wire \Count_Out_i[0]_i_1__1_n_0 ;
  wire \Count_Out_i[10]_i_1_n_0 ;
  wire \Count_Out_i[11]_i_1_n_0 ;
  wire \Count_Out_i[12]_i_1_n_0 ;
  wire \Count_Out_i[13]_i_1_n_0 ;
  wire \Count_Out_i[14]_i_1_n_0 ;
  wire \Count_Out_i[15]_i_1_n_0 ;
  wire \Count_Out_i[16]_i_1_n_0 ;
  wire \Count_Out_i[17]_i_1_n_0 ;
  wire \Count_Out_i[18]_i_1_n_0 ;
  wire \Count_Out_i[19]_i_1_n_0 ;
  wire \Count_Out_i[1]_i_1_n_0 ;
  wire \Count_Out_i[20]_i_1_n_0 ;
  wire \Count_Out_i[21]_i_1_n_0 ;
  wire \Count_Out_i[22]_i_1_n_0 ;
  wire \Count_Out_i[23]_i_1_n_0 ;
  wire \Count_Out_i[24]_i_1_n_0 ;
  wire \Count_Out_i[25]_i_1_n_0 ;
  wire \Count_Out_i[26]_i_1_n_0 ;
  wire \Count_Out_i[27]_i_1_n_0 ;
  wire \Count_Out_i[28]_i_1_n_0 ;
  wire \Count_Out_i[29]_i_1_n_0 ;
  wire \Count_Out_i[2]_i_1_n_0 ;
  wire \Count_Out_i[30]_i_1_n_0 ;
  wire \Count_Out_i[31]_i_2_n_0 ;
  wire \Count_Out_i[32]_i_1_n_0 ;
  wire \Count_Out_i[3]_i_1_n_0 ;
  wire \Count_Out_i[4]_i_1_n_0 ;
  wire \Count_Out_i[5]_i_1_n_0 ;
  wire \Count_Out_i[6]_i_1_n_0 ;
  wire \Count_Out_i[7]_i_1_n_0 ;
  wire \Count_Out_i[8]_i_1_n_0 ;
  wire \Count_Out_i[9]_i_1_n_0 ;
  wire [0:0]E;
  wire Global_Clk_Cnt_OF;
  wire Overflow;
  wire Overflow_D1;
  wire [31:0]Q;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire out;
  wire p_in_d1_cdc_from_reg0;
  wire [1:0]\s_level_out_bus_d4_reg[4] ;
  wire [3:3]NLW_Count_Out_i0_carry__6_CO_UNCONNECTED;

  LUT2 #(
    .INIT(4'h2)) 
    Carry_Out_i_1__0
       (.I0(Overflow),
        .I1(Overflow_D1),
        .O(Carry_Out_i_1__0_n_0));
  FDRE Carry_Out_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Carry_Out_i_1__0_n_0),
        .Q(Global_Clk_Cnt_OF),
        .R(core_aresetn_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry
       (.CI(1'b0),
        .CO({Count_Out_i0_carry_n_0,Count_Out_i0_carry_n_1,Count_Out_i0_carry_n_2,Count_Out_i0_carry_n_3}),
        .CYINIT(Q[0]),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({Count_Out_i0_carry_n_4,Count_Out_i0_carry_n_5,Count_Out_i0_carry_n_6,Count_Out_i0_carry_n_7}),
        .S({Count_Out_i0_carry_i_1__0_n_0,Count_Out_i0_carry_i_2__0_n_0,Count_Out_i0_carry_i_3__0_n_0,Count_Out_i0_carry_i_4__0_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__0
       (.CI(Count_Out_i0_carry_n_0),
        .CO({Count_Out_i0_carry__0_n_0,Count_Out_i0_carry__0_n_1,Count_Out_i0_carry__0_n_2,Count_Out_i0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({Count_Out_i0_carry__0_n_4,Count_Out_i0_carry__0_n_5,Count_Out_i0_carry__0_n_6,Count_Out_i0_carry__0_n_7}),
        .S({Count_Out_i0_carry__0_i_1__0_n_0,Count_Out_i0_carry__0_i_2__0_n_0,Count_Out_i0_carry__0_i_3__0_n_0,Count_Out_i0_carry__0_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__0_i_1__0
       (.I0(Q[8]),
        .O(Count_Out_i0_carry__0_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__0_i_2__0
       (.I0(Q[7]),
        .O(Count_Out_i0_carry__0_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__0_i_3__0
       (.I0(Q[6]),
        .O(Count_Out_i0_carry__0_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__0_i_4__0
       (.I0(Q[5]),
        .O(Count_Out_i0_carry__0_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__1
       (.CI(Count_Out_i0_carry__0_n_0),
        .CO({Count_Out_i0_carry__1_n_0,Count_Out_i0_carry__1_n_1,Count_Out_i0_carry__1_n_2,Count_Out_i0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({Count_Out_i0_carry__1_n_4,Count_Out_i0_carry__1_n_5,Count_Out_i0_carry__1_n_6,Count_Out_i0_carry__1_n_7}),
        .S({Count_Out_i0_carry__1_i_1__0_n_0,Count_Out_i0_carry__1_i_2__0_n_0,Count_Out_i0_carry__1_i_3__0_n_0,Count_Out_i0_carry__1_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__1_i_1__0
       (.I0(Q[12]),
        .O(Count_Out_i0_carry__1_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__1_i_2__0
       (.I0(Q[11]),
        .O(Count_Out_i0_carry__1_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__1_i_3__0
       (.I0(Q[10]),
        .O(Count_Out_i0_carry__1_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__1_i_4__0
       (.I0(Q[9]),
        .O(Count_Out_i0_carry__1_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__2
       (.CI(Count_Out_i0_carry__1_n_0),
        .CO({Count_Out_i0_carry__2_n_0,Count_Out_i0_carry__2_n_1,Count_Out_i0_carry__2_n_2,Count_Out_i0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({Count_Out_i0_carry__2_n_4,Count_Out_i0_carry__2_n_5,Count_Out_i0_carry__2_n_6,Count_Out_i0_carry__2_n_7}),
        .S({Count_Out_i0_carry__2_i_1__0_n_0,Count_Out_i0_carry__2_i_2__0_n_0,Count_Out_i0_carry__2_i_3__0_n_0,Count_Out_i0_carry__2_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__2_i_1__0
       (.I0(Q[16]),
        .O(Count_Out_i0_carry__2_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__2_i_2__0
       (.I0(Q[15]),
        .O(Count_Out_i0_carry__2_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__2_i_3__0
       (.I0(Q[14]),
        .O(Count_Out_i0_carry__2_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__2_i_4__0
       (.I0(Q[13]),
        .O(Count_Out_i0_carry__2_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__3
       (.CI(Count_Out_i0_carry__2_n_0),
        .CO({Count_Out_i0_carry__3_n_0,Count_Out_i0_carry__3_n_1,Count_Out_i0_carry__3_n_2,Count_Out_i0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({Count_Out_i0_carry__3_n_4,Count_Out_i0_carry__3_n_5,Count_Out_i0_carry__3_n_6,Count_Out_i0_carry__3_n_7}),
        .S({Count_Out_i0_carry__3_i_1__0_n_0,Count_Out_i0_carry__3_i_2__0_n_0,Count_Out_i0_carry__3_i_3__0_n_0,Count_Out_i0_carry__3_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__3_i_1__0
       (.I0(Q[20]),
        .O(Count_Out_i0_carry__3_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__3_i_2__0
       (.I0(Q[19]),
        .O(Count_Out_i0_carry__3_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__3_i_3__0
       (.I0(Q[18]),
        .O(Count_Out_i0_carry__3_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__3_i_4__0
       (.I0(Q[17]),
        .O(Count_Out_i0_carry__3_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__4
       (.CI(Count_Out_i0_carry__3_n_0),
        .CO({Count_Out_i0_carry__4_n_0,Count_Out_i0_carry__4_n_1,Count_Out_i0_carry__4_n_2,Count_Out_i0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({Count_Out_i0_carry__4_n_4,Count_Out_i0_carry__4_n_5,Count_Out_i0_carry__4_n_6,Count_Out_i0_carry__4_n_7}),
        .S({Count_Out_i0_carry__4_i_1__0_n_0,Count_Out_i0_carry__4_i_2__0_n_0,Count_Out_i0_carry__4_i_3__0_n_0,Count_Out_i0_carry__4_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__4_i_1__0
       (.I0(Q[24]),
        .O(Count_Out_i0_carry__4_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__4_i_2__0
       (.I0(Q[23]),
        .O(Count_Out_i0_carry__4_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__4_i_3__0
       (.I0(Q[22]),
        .O(Count_Out_i0_carry__4_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__4_i_4__0
       (.I0(Q[21]),
        .O(Count_Out_i0_carry__4_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__5
       (.CI(Count_Out_i0_carry__4_n_0),
        .CO({Count_Out_i0_carry__5_n_0,Count_Out_i0_carry__5_n_1,Count_Out_i0_carry__5_n_2,Count_Out_i0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({Count_Out_i0_carry__5_n_4,Count_Out_i0_carry__5_n_5,Count_Out_i0_carry__5_n_6,Count_Out_i0_carry__5_n_7}),
        .S({Count_Out_i0_carry__5_i_1__0_n_0,Count_Out_i0_carry__5_i_2__0_n_0,Count_Out_i0_carry__5_i_3__0_n_0,Count_Out_i0_carry__5_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__5_i_1__0
       (.I0(Q[28]),
        .O(Count_Out_i0_carry__5_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__5_i_2__0
       (.I0(Q[27]),
        .O(Count_Out_i0_carry__5_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__5_i_3__0
       (.I0(Q[26]),
        .O(Count_Out_i0_carry__5_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__5_i_4__0
       (.I0(Q[25]),
        .O(Count_Out_i0_carry__5_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__6
       (.CI(Count_Out_i0_carry__5_n_0),
        .CO({NLW_Count_Out_i0_carry__6_CO_UNCONNECTED[3],Count_Out_i0_carry__6_n_1,Count_Out_i0_carry__6_n_2,Count_Out_i0_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({Count_Out_i0_carry__6_n_4,Count_Out_i0_carry__6_n_5,Count_Out_i0_carry__6_n_6,Count_Out_i0_carry__6_n_7}),
        .S({Count_Out_i0_carry__6_i_1__0_n_0,Count_Out_i0_carry__6_i_2__0_n_0,Count_Out_i0_carry__6_i_3__0_n_0,Count_Out_i0_carry__6_i_4__0_n_0}));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__6_i_1__0
       (.I0(Overflow),
        .O(Count_Out_i0_carry__6_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__6_i_2__0
       (.I0(Q[31]),
        .O(Count_Out_i0_carry__6_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__6_i_3__0
       (.I0(Q[30]),
        .O(Count_Out_i0_carry__6_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry__6_i_4__0
       (.I0(Q[29]),
        .O(Count_Out_i0_carry__6_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry_i_1__0
       (.I0(Q[4]),
        .O(Count_Out_i0_carry_i_1__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry_i_2__0
       (.I0(Q[3]),
        .O(Count_Out_i0_carry_i_2__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry_i_3__0
       (.I0(Q[2]),
        .O(Count_Out_i0_carry_i_3__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    Count_Out_i0_carry_i_4__0
       (.I0(Q[1]),
        .O(Count_Out_i0_carry_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \Count_Out_i[0]_i_1__1 
       (.I0(Q[0]),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[10]_i_1 
       (.I0(Count_Out_i0_carry__1_n_6),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[11]_i_1 
       (.I0(Count_Out_i0_carry__1_n_5),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[12]_i_1 
       (.I0(Count_Out_i0_carry__1_n_4),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[12]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[13]_i_1 
       (.I0(Count_Out_i0_carry__2_n_7),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[13]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[14]_i_1 
       (.I0(Count_Out_i0_carry__2_n_6),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[14]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[15]_i_1 
       (.I0(Count_Out_i0_carry__2_n_5),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[16]_i_1 
       (.I0(Count_Out_i0_carry__2_n_4),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[16]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[17]_i_1 
       (.I0(Count_Out_i0_carry__3_n_7),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[17]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[18]_i_1 
       (.I0(Count_Out_i0_carry__3_n_6),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[18]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[19]_i_1 
       (.I0(Count_Out_i0_carry__3_n_5),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[19]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[1]_i_1 
       (.I0(Count_Out_i0_carry_n_7),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[20]_i_1 
       (.I0(Count_Out_i0_carry__3_n_4),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[20]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[21]_i_1 
       (.I0(Count_Out_i0_carry__4_n_7),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[21]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[22]_i_1 
       (.I0(Count_Out_i0_carry__4_n_6),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[22]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[23]_i_1 
       (.I0(Count_Out_i0_carry__4_n_5),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[24]_i_1 
       (.I0(Count_Out_i0_carry__4_n_4),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[24]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[25]_i_1 
       (.I0(Count_Out_i0_carry__5_n_7),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[25]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[26]_i_1 
       (.I0(Count_Out_i0_carry__5_n_6),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[26]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[27]_i_1 
       (.I0(Count_Out_i0_carry__5_n_5),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[27]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[28]_i_1 
       (.I0(Count_Out_i0_carry__5_n_4),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[29]_i_1 
       (.I0(Count_Out_i0_carry__6_n_7),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[2]_i_1 
       (.I0(Count_Out_i0_carry_n_6),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[30]_i_1 
       (.I0(Count_Out_i0_carry__6_n_6),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[31]_i_2 
       (.I0(Count_Out_i0_carry__6_n_5),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[31]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h0000E200)) 
    \Count_Out_i[32]_i_1 
       (.I0(Overflow),
        .I1(\s_level_out_bus_d4_reg[4] [0]),
        .I2(Count_Out_i0_carry__6_n_4),
        .I3(core_aresetn),
        .I4(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[3]_i_1 
       (.I0(Count_Out_i0_carry_n_5),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[4]_i_1 
       (.I0(Count_Out_i0_carry_n_4),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[4]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[5]_i_1 
       (.I0(Count_Out_i0_carry__0_n_7),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[5]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[6]_i_1 
       (.I0(Count_Out_i0_carry__0_n_6),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[6]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[7]_i_1 
       (.I0(Count_Out_i0_carry__0_n_5),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[8]_i_1 
       (.I0(Count_Out_i0_carry__0_n_4),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \Count_Out_i[9]_i_1 
       (.I0(Count_Out_i0_carry__1_n_7),
        .I1(\s_level_out_bus_d4_reg[4] [1]),
        .O(\Count_Out_i[9]_i_1_n_0 ));
  FDRE \Count_Out_i_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[0]_i_1__1_n_0 ),
        .Q(Q[0]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[10] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[10]_i_1_n_0 ),
        .Q(Q[10]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[11] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[11]_i_1_n_0 ),
        .Q(Q[11]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[12] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[12]_i_1_n_0 ),
        .Q(Q[12]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[13] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[13]_i_1_n_0 ),
        .Q(Q[13]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[14] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[14]_i_1_n_0 ),
        .Q(Q[14]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[15] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[15]_i_1_n_0 ),
        .Q(Q[15]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[16] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[16]_i_1_n_0 ),
        .Q(Q[16]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[17] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[17]_i_1_n_0 ),
        .Q(Q[17]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[18] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[18]_i_1_n_0 ),
        .Q(Q[18]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[19] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[19]_i_1_n_0 ),
        .Q(Q[19]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[1]_i_1_n_0 ),
        .Q(Q[1]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[20] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[20]_i_1_n_0 ),
        .Q(Q[20]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[21] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[21]_i_1_n_0 ),
        .Q(Q[21]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[22] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[22]_i_1_n_0 ),
        .Q(Q[22]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[23] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[23]_i_1_n_0 ),
        .Q(Q[23]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[24] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[24]_i_1_n_0 ),
        .Q(Q[24]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[25] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[25]_i_1_n_0 ),
        .Q(Q[25]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[26] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[26]_i_1_n_0 ),
        .Q(Q[26]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[27] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[27]_i_1_n_0 ),
        .Q(Q[27]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[28] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[28]_i_1_n_0 ),
        .Q(Q[28]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[29] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[29]_i_1_n_0 ),
        .Q(Q[29]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[2]_i_1_n_0 ),
        .Q(Q[2]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[30] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[30]_i_1_n_0 ),
        .Q(Q[30]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[31] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[31]_i_2_n_0 ),
        .Q(Q[31]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i[32]_i_1_n_0 ),
        .Q(Overflow),
        .R(1'b0));
  FDRE \Count_Out_i_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[3]_i_1_n_0 ),
        .Q(Q[3]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[4]_i_1_n_0 ),
        .Q(Q[4]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[5]_i_1_n_0 ),
        .Q(Q[5]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[6] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[6]_i_1_n_0 ),
        .Q(Q[6]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[7] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[7]_i_1_n_0 ),
        .Q(Q[7]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[8] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[8]_i_1_n_0 ),
        .Q(Q[8]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[9] 
       (.C(core_aclk),
        .CE(E),
        .D(\Count_Out_i[9]_i_1_n_0 ),
        .Q(Q[9]),
        .R(core_aresetn_0));
  FDRE Overflow_D1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Overflow),
        .Q(Overflow_D1),
        .R(core_aresetn_0));
  LUT2 #(
    .INIT(4'h6)) 
    p_in_d1_cdc_from_i_1__1
       (.I0(Global_Clk_Cnt_OF),
        .I1(out),
        .O(p_in_d1_cdc_from_reg0));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_counter" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter_43
   (\Count_Out_i_reg[31]_0 ,
    p_in_d1_cdc_from_reg0,
    core_aresetn_0,
    core_aclk,
    p_in_d1_cdc_from_reg,
    E,
    D,
    out,
    core_aresetn,
    Sample_Cnt_Ld,
    Sample_Interval);
  output \Count_Out_i_reg[31]_0 ;
  output p_in_d1_cdc_from_reg0;
  input core_aresetn_0;
  input core_aclk;
  input p_in_d1_cdc_from_reg;
  input [0:0]E;
  input [1:0]D;
  input [0:0]out;
  input core_aresetn;
  input Sample_Cnt_Ld;
  input [31:0]Sample_Interval;

  wire [31:0]A;
  wire Carry_Out_i_1_n_0;
  wire [32:1]Count_Out_i;
  wire Count_Out_i0_carry__0_i_1_n_0;
  wire Count_Out_i0_carry__0_i_2_n_0;
  wire Count_Out_i0_carry__0_i_3_n_0;
  wire Count_Out_i0_carry__0_i_4_n_0;
  wire Count_Out_i0_carry__0_n_0;
  wire Count_Out_i0_carry__0_n_1;
  wire Count_Out_i0_carry__0_n_2;
  wire Count_Out_i0_carry__0_n_3;
  wire Count_Out_i0_carry__1_i_1_n_0;
  wire Count_Out_i0_carry__1_i_2_n_0;
  wire Count_Out_i0_carry__1_i_3_n_0;
  wire Count_Out_i0_carry__1_i_4_n_0;
  wire Count_Out_i0_carry__1_n_0;
  wire Count_Out_i0_carry__1_n_1;
  wire Count_Out_i0_carry__1_n_2;
  wire Count_Out_i0_carry__1_n_3;
  wire Count_Out_i0_carry__2_i_1_n_0;
  wire Count_Out_i0_carry__2_i_2_n_0;
  wire Count_Out_i0_carry__2_i_3_n_0;
  wire Count_Out_i0_carry__2_i_4_n_0;
  wire Count_Out_i0_carry__2_n_0;
  wire Count_Out_i0_carry__2_n_1;
  wire Count_Out_i0_carry__2_n_2;
  wire Count_Out_i0_carry__2_n_3;
  wire Count_Out_i0_carry__3_i_1_n_0;
  wire Count_Out_i0_carry__3_i_2_n_0;
  wire Count_Out_i0_carry__3_i_3_n_0;
  wire Count_Out_i0_carry__3_i_4_n_0;
  wire Count_Out_i0_carry__3_n_0;
  wire Count_Out_i0_carry__3_n_1;
  wire Count_Out_i0_carry__3_n_2;
  wire Count_Out_i0_carry__3_n_3;
  wire Count_Out_i0_carry__4_i_1_n_0;
  wire Count_Out_i0_carry__4_i_2_n_0;
  wire Count_Out_i0_carry__4_i_3_n_0;
  wire Count_Out_i0_carry__4_i_4_n_0;
  wire Count_Out_i0_carry__4_n_0;
  wire Count_Out_i0_carry__4_n_1;
  wire Count_Out_i0_carry__4_n_2;
  wire Count_Out_i0_carry__4_n_3;
  wire Count_Out_i0_carry__5_i_1_n_0;
  wire Count_Out_i0_carry__5_i_2_n_0;
  wire Count_Out_i0_carry__5_i_3_n_0;
  wire Count_Out_i0_carry__5_i_4_n_0;
  wire Count_Out_i0_carry__5_n_0;
  wire Count_Out_i0_carry__5_n_1;
  wire Count_Out_i0_carry__5_n_2;
  wire Count_Out_i0_carry__5_n_3;
  wire Count_Out_i0_carry__6_i_1_n_0;
  wire Count_Out_i0_carry__6_i_2_n_0;
  wire Count_Out_i0_carry__6_i_3_n_0;
  wire Count_Out_i0_carry__6_i_4_n_0;
  wire Count_Out_i0_carry__6_n_1;
  wire Count_Out_i0_carry__6_n_2;
  wire Count_Out_i0_carry__6_n_3;
  wire Count_Out_i0_carry_i_1_n_0;
  wire Count_Out_i0_carry_i_2_n_0;
  wire Count_Out_i0_carry_i_3_n_0;
  wire Count_Out_i0_carry_i_4_n_0;
  wire Count_Out_i0_carry_n_0;
  wire Count_Out_i0_carry_n_1;
  wire Count_Out_i0_carry_n_2;
  wire Count_Out_i0_carry_n_3;
  wire \Count_Out_i[32]_i_1_n_0 ;
  wire \Count_Out_i_reg[31]_0 ;
  wire [1:0]D;
  wire [0:0]E;
  wire Overflow;
  wire Overflow_D1;
  wire Sample_Cnt_Ld;
  wire [31:0]Sample_Interval;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire [0:0]out;
  wire [31:0]p_1_in;
  wire p_in_d1_cdc_from_reg;
  wire p_in_d1_cdc_from_reg0;
  wire [3:3]NLW_Count_Out_i0_carry__6_CO_UNCONNECTED;

  LUT2 #(
    .INIT(4'h2)) 
    Carry_Out_i_1
       (.I0(Overflow),
        .I1(Overflow_D1),
        .O(Carry_Out_i_1_n_0));
  FDRE Carry_Out_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Carry_Out_i_1_n_0),
        .Q(\Count_Out_i_reg[31]_0 ),
        .R(core_aresetn_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry
       (.CI(1'b0),
        .CO({Count_Out_i0_carry_n_0,Count_Out_i0_carry_n_1,Count_Out_i0_carry_n_2,Count_Out_i0_carry_n_3}),
        .CYINIT(A[0]),
        .DI(A[4:1]),
        .O(Count_Out_i[4:1]),
        .S({Count_Out_i0_carry_i_1_n_0,Count_Out_i0_carry_i_2_n_0,Count_Out_i0_carry_i_3_n_0,Count_Out_i0_carry_i_4_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__0
       (.CI(Count_Out_i0_carry_n_0),
        .CO({Count_Out_i0_carry__0_n_0,Count_Out_i0_carry__0_n_1,Count_Out_i0_carry__0_n_2,Count_Out_i0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(A[8:5]),
        .O(Count_Out_i[8:5]),
        .S({Count_Out_i0_carry__0_i_1_n_0,Count_Out_i0_carry__0_i_2_n_0,Count_Out_i0_carry__0_i_3_n_0,Count_Out_i0_carry__0_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__0_i_1
       (.I0(A[8]),
        .O(Count_Out_i0_carry__0_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__0_i_2
       (.I0(A[7]),
        .O(Count_Out_i0_carry__0_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__0_i_3
       (.I0(A[6]),
        .O(Count_Out_i0_carry__0_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__0_i_4
       (.I0(A[5]),
        .O(Count_Out_i0_carry__0_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__1
       (.CI(Count_Out_i0_carry__0_n_0),
        .CO({Count_Out_i0_carry__1_n_0,Count_Out_i0_carry__1_n_1,Count_Out_i0_carry__1_n_2,Count_Out_i0_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(A[12:9]),
        .O(Count_Out_i[12:9]),
        .S({Count_Out_i0_carry__1_i_1_n_0,Count_Out_i0_carry__1_i_2_n_0,Count_Out_i0_carry__1_i_3_n_0,Count_Out_i0_carry__1_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__1_i_1
       (.I0(A[12]),
        .O(Count_Out_i0_carry__1_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__1_i_2
       (.I0(A[11]),
        .O(Count_Out_i0_carry__1_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__1_i_3
       (.I0(A[10]),
        .O(Count_Out_i0_carry__1_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__1_i_4
       (.I0(A[9]),
        .O(Count_Out_i0_carry__1_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__2
       (.CI(Count_Out_i0_carry__1_n_0),
        .CO({Count_Out_i0_carry__2_n_0,Count_Out_i0_carry__2_n_1,Count_Out_i0_carry__2_n_2,Count_Out_i0_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI(A[16:13]),
        .O(Count_Out_i[16:13]),
        .S({Count_Out_i0_carry__2_i_1_n_0,Count_Out_i0_carry__2_i_2_n_0,Count_Out_i0_carry__2_i_3_n_0,Count_Out_i0_carry__2_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__2_i_1
       (.I0(A[16]),
        .O(Count_Out_i0_carry__2_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__2_i_2
       (.I0(A[15]),
        .O(Count_Out_i0_carry__2_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__2_i_3
       (.I0(A[14]),
        .O(Count_Out_i0_carry__2_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__2_i_4
       (.I0(A[13]),
        .O(Count_Out_i0_carry__2_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__3
       (.CI(Count_Out_i0_carry__2_n_0),
        .CO({Count_Out_i0_carry__3_n_0,Count_Out_i0_carry__3_n_1,Count_Out_i0_carry__3_n_2,Count_Out_i0_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI(A[20:17]),
        .O(Count_Out_i[20:17]),
        .S({Count_Out_i0_carry__3_i_1_n_0,Count_Out_i0_carry__3_i_2_n_0,Count_Out_i0_carry__3_i_3_n_0,Count_Out_i0_carry__3_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__3_i_1
       (.I0(A[20]),
        .O(Count_Out_i0_carry__3_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__3_i_2
       (.I0(A[19]),
        .O(Count_Out_i0_carry__3_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__3_i_3
       (.I0(A[18]),
        .O(Count_Out_i0_carry__3_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__3_i_4
       (.I0(A[17]),
        .O(Count_Out_i0_carry__3_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__4
       (.CI(Count_Out_i0_carry__3_n_0),
        .CO({Count_Out_i0_carry__4_n_0,Count_Out_i0_carry__4_n_1,Count_Out_i0_carry__4_n_2,Count_Out_i0_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI(A[24:21]),
        .O(Count_Out_i[24:21]),
        .S({Count_Out_i0_carry__4_i_1_n_0,Count_Out_i0_carry__4_i_2_n_0,Count_Out_i0_carry__4_i_3_n_0,Count_Out_i0_carry__4_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__4_i_1
       (.I0(A[24]),
        .O(Count_Out_i0_carry__4_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__4_i_2
       (.I0(A[23]),
        .O(Count_Out_i0_carry__4_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__4_i_3
       (.I0(A[22]),
        .O(Count_Out_i0_carry__4_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__4_i_4
       (.I0(A[21]),
        .O(Count_Out_i0_carry__4_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__5
       (.CI(Count_Out_i0_carry__4_n_0),
        .CO({Count_Out_i0_carry__5_n_0,Count_Out_i0_carry__5_n_1,Count_Out_i0_carry__5_n_2,Count_Out_i0_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI(A[28:25]),
        .O(Count_Out_i[28:25]),
        .S({Count_Out_i0_carry__5_i_1_n_0,Count_Out_i0_carry__5_i_2_n_0,Count_Out_i0_carry__5_i_3_n_0,Count_Out_i0_carry__5_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__5_i_1
       (.I0(A[28]),
        .O(Count_Out_i0_carry__5_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__5_i_2
       (.I0(A[27]),
        .O(Count_Out_i0_carry__5_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__5_i_3
       (.I0(A[26]),
        .O(Count_Out_i0_carry__5_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__5_i_4
       (.I0(A[25]),
        .O(Count_Out_i0_carry__5_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 Count_Out_i0_carry__6
       (.CI(Count_Out_i0_carry__5_n_0),
        .CO({NLW_Count_Out_i0_carry__6_CO_UNCONNECTED[3],Count_Out_i0_carry__6_n_1,Count_Out_i0_carry__6_n_2,Count_Out_i0_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,A[31:29]}),
        .O(Count_Out_i[32:29]),
        .S({Count_Out_i0_carry__6_i_1_n_0,Count_Out_i0_carry__6_i_2_n_0,Count_Out_i0_carry__6_i_3_n_0,Count_Out_i0_carry__6_i_4_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__6_i_1
       (.I0(Overflow),
        .O(Count_Out_i0_carry__6_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__6_i_2
       (.I0(A[31]),
        .O(Count_Out_i0_carry__6_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__6_i_3
       (.I0(A[30]),
        .O(Count_Out_i0_carry__6_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry__6_i_4
       (.I0(A[29]),
        .O(Count_Out_i0_carry__6_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry_i_1
       (.I0(A[4]),
        .O(Count_Out_i0_carry_i_1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry_i_2
       (.I0(A[3]),
        .O(Count_Out_i0_carry_i_2_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry_i_3
       (.I0(A[2]),
        .O(Count_Out_i0_carry_i_3_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    Count_Out_i0_carry_i_4
       (.I0(A[1]),
        .O(Count_Out_i0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'hAAA3)) 
    \Count_Out_i[0]_i_1 
       (.I0(Sample_Interval[0]),
        .I1(A[0]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[0]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[10]_i_1 
       (.I0(Sample_Interval[10]),
        .I1(Count_Out_i[10]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[10]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[11]_i_1 
       (.I0(Sample_Interval[11]),
        .I1(Count_Out_i[11]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[11]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[12]_i_1 
       (.I0(Sample_Interval[12]),
        .I1(Count_Out_i[12]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[12]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[13]_i_1 
       (.I0(Sample_Interval[13]),
        .I1(Count_Out_i[13]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[13]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[14]_i_1 
       (.I0(Sample_Interval[14]),
        .I1(Count_Out_i[14]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[14]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[15]_i_1 
       (.I0(Sample_Interval[15]),
        .I1(Count_Out_i[15]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[15]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[16]_i_1 
       (.I0(Sample_Interval[16]),
        .I1(Count_Out_i[16]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[16]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[17]_i_1 
       (.I0(Sample_Interval[17]),
        .I1(Count_Out_i[17]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[17]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[18]_i_1 
       (.I0(Sample_Interval[18]),
        .I1(Count_Out_i[18]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[18]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[19]_i_1 
       (.I0(Sample_Interval[19]),
        .I1(Count_Out_i[19]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[19]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[1]_i_1 
       (.I0(Sample_Interval[1]),
        .I1(Count_Out_i[1]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[1]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[20]_i_1 
       (.I0(Sample_Interval[20]),
        .I1(Count_Out_i[20]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[20]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[21]_i_1 
       (.I0(Sample_Interval[21]),
        .I1(Count_Out_i[21]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[21]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[22]_i_1 
       (.I0(Sample_Interval[22]),
        .I1(Count_Out_i[22]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[22]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[23]_i_1 
       (.I0(Sample_Interval[23]),
        .I1(Count_Out_i[23]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[23]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[24]_i_1 
       (.I0(Sample_Interval[24]),
        .I1(Count_Out_i[24]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[24]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[25]_i_1 
       (.I0(Sample_Interval[25]),
        .I1(Count_Out_i[25]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[25]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[26]_i_1 
       (.I0(Sample_Interval[26]),
        .I1(Count_Out_i[26]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[26]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[27]_i_1 
       (.I0(Sample_Interval[27]),
        .I1(Count_Out_i[27]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[27]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[28]_i_1 
       (.I0(Sample_Interval[28]),
        .I1(Count_Out_i[28]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[28]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[29]_i_1 
       (.I0(Sample_Interval[29]),
        .I1(Count_Out_i[29]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[29]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[2]_i_1 
       (.I0(Sample_Interval[2]),
        .I1(Count_Out_i[2]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[30]_i_1 
       (.I0(Sample_Interval[30]),
        .I1(Count_Out_i[30]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[30]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[31]_i_2 
       (.I0(Sample_Interval[31]),
        .I1(Count_Out_i[31]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[31]));
  LUT6 #(
    .INIT(64'h00000000EA2A0000)) 
    \Count_Out_i[32]_i_1 
       (.I0(Overflow),
        .I1(D[0]),
        .I2(out),
        .I3(Count_Out_i[32]),
        .I4(core_aresetn),
        .I5(Sample_Cnt_Ld),
        .O(\Count_Out_i[32]_i_1_n_0 ));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[3]_i_1 
       (.I0(Sample_Interval[3]),
        .I1(Count_Out_i[3]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[3]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[4]_i_1 
       (.I0(Sample_Interval[4]),
        .I1(Count_Out_i[4]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[4]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[5]_i_1 
       (.I0(Sample_Interval[5]),
        .I1(Count_Out_i[5]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[5]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[6]_i_1 
       (.I0(Sample_Interval[6]),
        .I1(Count_Out_i[6]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[6]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[7]_i_1 
       (.I0(Sample_Interval[7]),
        .I1(Count_Out_i[7]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[7]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[8]_i_1 
       (.I0(Sample_Interval[8]),
        .I1(Count_Out_i[8]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[8]));
  LUT4 #(
    .INIT(16'hAAAC)) 
    \Count_Out_i[9]_i_1 
       (.I0(Sample_Interval[9]),
        .I1(Count_Out_i[9]),
        .I2(D[1]),
        .I3(\Count_Out_i_reg[31]_0 ),
        .O(p_1_in[9]));
  FDRE \Count_Out_i_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[0]),
        .Q(A[0]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[10] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[10]),
        .Q(A[10]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[11] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[11]),
        .Q(A[11]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[12] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[12]),
        .Q(A[12]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[13] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[13]),
        .Q(A[13]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[14] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[14]),
        .Q(A[14]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[15] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[15]),
        .Q(A[15]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[16] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[16]),
        .Q(A[16]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[17] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[17]),
        .Q(A[17]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[18] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[18]),
        .Q(A[18]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[19] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[19]),
        .Q(A[19]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[1]),
        .Q(A[1]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[20] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[20]),
        .Q(A[20]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[21] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[21]),
        .Q(A[21]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[22] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[22]),
        .Q(A[22]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[23] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[23]),
        .Q(A[23]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[24] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[24]),
        .Q(A[24]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[25] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[25]),
        .Q(A[25]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[26] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[26]),
        .Q(A[26]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[27] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[27]),
        .Q(A[27]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[28] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[28]),
        .Q(A[28]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[29] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[29]),
        .Q(A[29]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[2]),
        .Q(A[2]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[30] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[30]),
        .Q(A[30]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[31] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[31]),
        .Q(A[31]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i[32]_i_1_n_0 ),
        .Q(Overflow),
        .R(1'b0));
  FDRE \Count_Out_i_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[3]),
        .Q(A[3]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[4]),
        .Q(A[4]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[5]),
        .Q(A[5]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[6] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[6]),
        .Q(A[6]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[7] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[7]),
        .Q(A[7]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[8] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[8]),
        .Q(A[8]),
        .R(core_aresetn_0));
  FDRE \Count_Out_i_reg[9] 
       (.C(core_aclk),
        .CE(E),
        .D(p_1_in[9]),
        .Q(A[9]),
        .R(core_aresetn_0));
  FDRE Overflow_D1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Overflow),
        .Q(Overflow_D1),
        .R(core_aresetn_0));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT2 #(
    .INIT(4'h6)) 
    p_in_d1_cdc_from_i_1__0__0
       (.I0(\Count_Out_i_reg[31]_0 ),
        .I1(p_in_d1_cdc_from_reg),
        .O(p_in_d1_cdc_from_reg0));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter_ovf
   (Q,
    rst_int_n_reg,
    S0_S_Null_Byte_Cnt,
    Rd_Lat_Start,
    Metrics_Cnt_En_Int,
    Slot_0_Sync_Data_Valid,
    SR,
    core_aclk);
  output [32:0]Q;
  input rst_int_n_reg;
  input [0:0]S0_S_Null_Byte_Cnt;
  input Rd_Lat_Start;
  input Metrics_Cnt_En_Int;
  input Slot_0_Sync_Data_Valid;
  input [0:0]SR;
  input core_aclk;

  wire \Count_Out_i[0]_i_1__0_n_0 ;
  wire \Count_Out_i[32]_i_1_n_0 ;
  wire Metrics_Cnt_En_Int;
  wire [32:0]Q;
  wire Rd_Lat_Start;
  wire [0:0]S0_S_Null_Byte_Cnt;
  wire [0:0]SR;
  wire Slot_0_Sync_Data_Valid;
  wire core_aclk;
  wire p_0_out_carry__0_i_1__0_n_0;
  wire p_0_out_carry__0_i_2__0_n_0;
  wire p_0_out_carry__0_i_3__0_n_0;
  wire p_0_out_carry__0_i_4__0_n_0;
  wire p_0_out_carry__0_n_0;
  wire p_0_out_carry__0_n_1;
  wire p_0_out_carry__0_n_2;
  wire p_0_out_carry__0_n_3;
  wire p_0_out_carry__0_n_4;
  wire p_0_out_carry__0_n_5;
  wire p_0_out_carry__0_n_6;
  wire p_0_out_carry__0_n_7;
  wire p_0_out_carry__1_i_1__0_n_0;
  wire p_0_out_carry__1_i_2__0_n_0;
  wire p_0_out_carry__1_i_3__0_n_0;
  wire p_0_out_carry__1_i_4__0_n_0;
  wire p_0_out_carry__1_n_0;
  wire p_0_out_carry__1_n_1;
  wire p_0_out_carry__1_n_2;
  wire p_0_out_carry__1_n_3;
  wire p_0_out_carry__1_n_4;
  wire p_0_out_carry__1_n_5;
  wire p_0_out_carry__1_n_6;
  wire p_0_out_carry__1_n_7;
  wire p_0_out_carry__2_i_1__0_n_0;
  wire p_0_out_carry__2_i_2__0_n_0;
  wire p_0_out_carry__2_i_3__0_n_0;
  wire p_0_out_carry__2_i_4__0_n_0;
  wire p_0_out_carry__2_n_0;
  wire p_0_out_carry__2_n_1;
  wire p_0_out_carry__2_n_2;
  wire p_0_out_carry__2_n_3;
  wire p_0_out_carry__2_n_4;
  wire p_0_out_carry__2_n_5;
  wire p_0_out_carry__2_n_6;
  wire p_0_out_carry__2_n_7;
  wire p_0_out_carry__3_i_1__0_n_0;
  wire p_0_out_carry__3_i_2__0_n_0;
  wire p_0_out_carry__3_i_3__0_n_0;
  wire p_0_out_carry__3_i_4__0_n_0;
  wire p_0_out_carry__3_n_0;
  wire p_0_out_carry__3_n_1;
  wire p_0_out_carry__3_n_2;
  wire p_0_out_carry__3_n_3;
  wire p_0_out_carry__3_n_4;
  wire p_0_out_carry__3_n_5;
  wire p_0_out_carry__3_n_6;
  wire p_0_out_carry__3_n_7;
  wire p_0_out_carry__4_i_1__0_n_0;
  wire p_0_out_carry__4_i_2__0_n_0;
  wire p_0_out_carry__4_i_3__0_n_0;
  wire p_0_out_carry__4_i_4__0_n_0;
  wire p_0_out_carry__4_n_0;
  wire p_0_out_carry__4_n_1;
  wire p_0_out_carry__4_n_2;
  wire p_0_out_carry__4_n_3;
  wire p_0_out_carry__4_n_4;
  wire p_0_out_carry__4_n_5;
  wire p_0_out_carry__4_n_6;
  wire p_0_out_carry__4_n_7;
  wire p_0_out_carry__5_i_1__0_n_0;
  wire p_0_out_carry__5_i_2__0_n_0;
  wire p_0_out_carry__5_i_3__0_n_0;
  wire p_0_out_carry__5_i_4__0_n_0;
  wire p_0_out_carry__5_n_0;
  wire p_0_out_carry__5_n_1;
  wire p_0_out_carry__5_n_2;
  wire p_0_out_carry__5_n_3;
  wire p_0_out_carry__5_n_4;
  wire p_0_out_carry__5_n_5;
  wire p_0_out_carry__5_n_6;
  wire p_0_out_carry__5_n_7;
  wire p_0_out_carry__6_i_1__0_n_0;
  wire p_0_out_carry__6_i_2__0_n_0;
  wire p_0_out_carry__6_i_3__0_n_0;
  wire p_0_out_carry__6_i_4__0_n_0;
  wire p_0_out_carry__6_n_1;
  wire p_0_out_carry__6_n_2;
  wire p_0_out_carry__6_n_3;
  wire p_0_out_carry__6_n_4;
  wire p_0_out_carry__6_n_5;
  wire p_0_out_carry__6_n_6;
  wire p_0_out_carry__6_n_7;
  wire p_0_out_carry_i_1__0_n_0;
  wire p_0_out_carry_i_2__0_n_0;
  wire p_0_out_carry_i_3__0_n_0;
  wire p_0_out_carry_i_4__0_n_0;
  wire p_0_out_carry_i_5__0_n_0;
  wire p_0_out_carry_n_0;
  wire p_0_out_carry_n_1;
  wire p_0_out_carry_n_2;
  wire p_0_out_carry_n_3;
  wire p_0_out_carry_n_4;
  wire p_0_out_carry_n_5;
  wire p_0_out_carry_n_6;
  wire p_0_out_carry_n_7;
  wire [32:1]p_1_in;
  wire rst_int_n_reg;
  wire [3:3]NLW_p_0_out_carry__6_CO_UNCONNECTED;

  LUT2 #(
    .INIT(4'h7)) 
    \Count_Out_i[0]_i_1__0 
       (.I0(Q[0]),
        .I1(rst_int_n_reg),
        .O(\Count_Out_i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[10]_i_1__0 
       (.I0(p_0_out_carry__1_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[11]_i_1__0 
       (.I0(p_0_out_carry__1_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[12]_i_1__0 
       (.I0(p_0_out_carry__1_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair93" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[13]_i_1__0 
       (.I0(p_0_out_carry__2_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[14]_i_1__0 
       (.I0(p_0_out_carry__2_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair92" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[15]_i_1__0 
       (.I0(p_0_out_carry__2_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[16]_i_1__0 
       (.I0(p_0_out_carry__2_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair91" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[17]_i_1__0 
       (.I0(p_0_out_carry__3_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[18]_i_1__0 
       (.I0(p_0_out_carry__3_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair90" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[19]_i_1__0 
       (.I0(p_0_out_carry__3_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[1]_i_1__0 
       (.I0(p_0_out_carry_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[20]_i_1__0 
       (.I0(p_0_out_carry__3_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair89" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[21]_i_1__0 
       (.I0(p_0_out_carry__4_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[22]_i_1__0 
       (.I0(p_0_out_carry__4_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[22]));
  (* SOFT_HLUTNM = "soft_lutpair88" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[23]_i_1__0 
       (.I0(p_0_out_carry__4_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[24]_i_1__0 
       (.I0(p_0_out_carry__4_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair87" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[25]_i_1__0 
       (.I0(p_0_out_carry__5_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[26]_i_1__0 
       (.I0(p_0_out_carry__5_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair86" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[27]_i_1__0 
       (.I0(p_0_out_carry__5_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[28]_i_1__0 
       (.I0(p_0_out_carry__5_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair85" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[29]_i_1__0 
       (.I0(p_0_out_carry__6_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair98" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[2]_i_1__0 
       (.I0(p_0_out_carry_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[30]_i_1__0 
       (.I0(p_0_out_carry__6_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[30]));
  (* SOFT_HLUTNM = "soft_lutpair84" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[31]_i_1__0 
       (.I0(p_0_out_carry__6_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[31]));
  LUT5 #(
    .INIT(32'hFD555D55)) 
    \Count_Out_i[32]_i_1 
       (.I0(rst_int_n_reg),
        .I1(S0_S_Null_Byte_Cnt),
        .I2(Rd_Lat_Start),
        .I3(Metrics_Cnt_En_Int),
        .I4(Slot_0_Sync_Data_Valid),
        .O(\Count_Out_i[32]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair83" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[32]_i_2__0 
       (.I0(p_0_out_carry__6_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[32]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[3]_i_1__0 
       (.I0(p_0_out_carry_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair97" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[4]_i_1__0 
       (.I0(p_0_out_carry_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[5]_i_1__0 
       (.I0(p_0_out_carry__0_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair94" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[6]_i_1__0 
       (.I0(p_0_out_carry__0_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair96" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[7]_i_1__0 
       (.I0(p_0_out_carry__0_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[8]_i_1__0 
       (.I0(p_0_out_carry__0_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair95" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[9]_i_1__0 
       (.I0(p_0_out_carry__1_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[9]));
  FDRE \Count_Out_i_reg[0] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(\Count_Out_i[0]_i_1__0_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE \Count_Out_i_reg[10] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE \Count_Out_i_reg[11] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[11]),
        .Q(Q[11]),
        .R(SR));
  FDRE \Count_Out_i_reg[12] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[12]),
        .Q(Q[12]),
        .R(SR));
  FDRE \Count_Out_i_reg[13] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[13]),
        .Q(Q[13]),
        .R(SR));
  FDRE \Count_Out_i_reg[14] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[14]),
        .Q(Q[14]),
        .R(SR));
  FDRE \Count_Out_i_reg[15] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[15]),
        .Q(Q[15]),
        .R(SR));
  FDRE \Count_Out_i_reg[16] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[16]),
        .Q(Q[16]),
        .R(SR));
  FDRE \Count_Out_i_reg[17] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[17]),
        .Q(Q[17]),
        .R(SR));
  FDRE \Count_Out_i_reg[18] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[18]),
        .Q(Q[18]),
        .R(SR));
  FDRE \Count_Out_i_reg[19] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[19]),
        .Q(Q[19]),
        .R(SR));
  FDRE \Count_Out_i_reg[1] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \Count_Out_i_reg[20] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[20]),
        .Q(Q[20]),
        .R(SR));
  FDRE \Count_Out_i_reg[21] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[21]),
        .Q(Q[21]),
        .R(SR));
  FDRE \Count_Out_i_reg[22] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[22]),
        .Q(Q[22]),
        .R(SR));
  FDRE \Count_Out_i_reg[23] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[23]),
        .Q(Q[23]),
        .R(SR));
  FDRE \Count_Out_i_reg[24] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[24]),
        .Q(Q[24]),
        .R(SR));
  FDRE \Count_Out_i_reg[25] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[25]),
        .Q(Q[25]),
        .R(SR));
  FDRE \Count_Out_i_reg[26] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[26]),
        .Q(Q[26]),
        .R(SR));
  FDRE \Count_Out_i_reg[27] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[27]),
        .Q(Q[27]),
        .R(SR));
  FDRE \Count_Out_i_reg[28] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[28]),
        .Q(Q[28]),
        .R(SR));
  FDRE \Count_Out_i_reg[29] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[29]),
        .Q(Q[29]),
        .R(SR));
  FDRE \Count_Out_i_reg[2] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \Count_Out_i_reg[30] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[30]),
        .Q(Q[30]),
        .R(SR));
  FDRE \Count_Out_i_reg[31] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[31]),
        .Q(Q[31]),
        .R(SR));
  FDRE \Count_Out_i_reg[32] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[32]),
        .Q(Q[32]),
        .R(SR));
  FDRE \Count_Out_i_reg[3] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \Count_Out_i_reg[4] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \Count_Out_i_reg[5] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE \Count_Out_i_reg[6] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE \Count_Out_i_reg[7] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE \Count_Out_i_reg[8] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE \Count_Out_i_reg[9] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1_n_0 ),
        .D(p_1_in[9]),
        .Q(Q[9]),
        .R(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry
       (.CI(1'b0),
        .CO({p_0_out_carry_n_0,p_0_out_carry_n_1,p_0_out_carry_n_2,p_0_out_carry_n_3}),
        .CYINIT(Q[0]),
        .DI({Q[3:1],p_0_out_carry_i_1__0_n_0}),
        .O({p_0_out_carry_n_4,p_0_out_carry_n_5,p_0_out_carry_n_6,p_0_out_carry_n_7}),
        .S({p_0_out_carry_i_2__0_n_0,p_0_out_carry_i_3__0_n_0,p_0_out_carry_i_4__0_n_0,p_0_out_carry_i_5__0_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__0
       (.CI(p_0_out_carry_n_0),
        .CO({p_0_out_carry__0_n_0,p_0_out_carry__0_n_1,p_0_out_carry__0_n_2,p_0_out_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(Q[7:4]),
        .O({p_0_out_carry__0_n_4,p_0_out_carry__0_n_5,p_0_out_carry__0_n_6,p_0_out_carry__0_n_7}),
        .S({p_0_out_carry__0_i_1__0_n_0,p_0_out_carry__0_i_2__0_n_0,p_0_out_carry__0_i_3__0_n_0,p_0_out_carry__0_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_1__0
       (.I0(Q[7]),
        .I1(Q[8]),
        .O(p_0_out_carry__0_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_2__0
       (.I0(Q[6]),
        .I1(Q[7]),
        .O(p_0_out_carry__0_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_3__0
       (.I0(Q[5]),
        .I1(Q[6]),
        .O(p_0_out_carry__0_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_4__0
       (.I0(Q[4]),
        .I1(Q[5]),
        .O(p_0_out_carry__0_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__1
       (.CI(p_0_out_carry__0_n_0),
        .CO({p_0_out_carry__1_n_0,p_0_out_carry__1_n_1,p_0_out_carry__1_n_2,p_0_out_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(Q[11:8]),
        .O({p_0_out_carry__1_n_4,p_0_out_carry__1_n_5,p_0_out_carry__1_n_6,p_0_out_carry__1_n_7}),
        .S({p_0_out_carry__1_i_1__0_n_0,p_0_out_carry__1_i_2__0_n_0,p_0_out_carry__1_i_3__0_n_0,p_0_out_carry__1_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__1_i_1__0
       (.I0(Q[11]),
        .I1(Q[12]),
        .O(p_0_out_carry__1_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__1_i_2__0
       (.I0(Q[10]),
        .I1(Q[11]),
        .O(p_0_out_carry__1_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__1_i_3__0
       (.I0(Q[9]),
        .I1(Q[10]),
        .O(p_0_out_carry__1_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__1_i_4__0
       (.I0(Q[8]),
        .I1(Q[9]),
        .O(p_0_out_carry__1_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__2
       (.CI(p_0_out_carry__1_n_0),
        .CO({p_0_out_carry__2_n_0,p_0_out_carry__2_n_1,p_0_out_carry__2_n_2,p_0_out_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI(Q[15:12]),
        .O({p_0_out_carry__2_n_4,p_0_out_carry__2_n_5,p_0_out_carry__2_n_6,p_0_out_carry__2_n_7}),
        .S({p_0_out_carry__2_i_1__0_n_0,p_0_out_carry__2_i_2__0_n_0,p_0_out_carry__2_i_3__0_n_0,p_0_out_carry__2_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__2_i_1__0
       (.I0(Q[15]),
        .I1(Q[16]),
        .O(p_0_out_carry__2_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__2_i_2__0
       (.I0(Q[14]),
        .I1(Q[15]),
        .O(p_0_out_carry__2_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__2_i_3__0
       (.I0(Q[13]),
        .I1(Q[14]),
        .O(p_0_out_carry__2_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__2_i_4__0
       (.I0(Q[12]),
        .I1(Q[13]),
        .O(p_0_out_carry__2_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__3
       (.CI(p_0_out_carry__2_n_0),
        .CO({p_0_out_carry__3_n_0,p_0_out_carry__3_n_1,p_0_out_carry__3_n_2,p_0_out_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI(Q[19:16]),
        .O({p_0_out_carry__3_n_4,p_0_out_carry__3_n_5,p_0_out_carry__3_n_6,p_0_out_carry__3_n_7}),
        .S({p_0_out_carry__3_i_1__0_n_0,p_0_out_carry__3_i_2__0_n_0,p_0_out_carry__3_i_3__0_n_0,p_0_out_carry__3_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__3_i_1__0
       (.I0(Q[19]),
        .I1(Q[20]),
        .O(p_0_out_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__3_i_2__0
       (.I0(Q[18]),
        .I1(Q[19]),
        .O(p_0_out_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__3_i_3__0
       (.I0(Q[17]),
        .I1(Q[18]),
        .O(p_0_out_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__3_i_4__0
       (.I0(Q[16]),
        .I1(Q[17]),
        .O(p_0_out_carry__3_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__4
       (.CI(p_0_out_carry__3_n_0),
        .CO({p_0_out_carry__4_n_0,p_0_out_carry__4_n_1,p_0_out_carry__4_n_2,p_0_out_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI(Q[23:20]),
        .O({p_0_out_carry__4_n_4,p_0_out_carry__4_n_5,p_0_out_carry__4_n_6,p_0_out_carry__4_n_7}),
        .S({p_0_out_carry__4_i_1__0_n_0,p_0_out_carry__4_i_2__0_n_0,p_0_out_carry__4_i_3__0_n_0,p_0_out_carry__4_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__4_i_1__0
       (.I0(Q[23]),
        .I1(Q[24]),
        .O(p_0_out_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__4_i_2__0
       (.I0(Q[22]),
        .I1(Q[23]),
        .O(p_0_out_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__4_i_3__0
       (.I0(Q[21]),
        .I1(Q[22]),
        .O(p_0_out_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__4_i_4__0
       (.I0(Q[20]),
        .I1(Q[21]),
        .O(p_0_out_carry__4_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__5
       (.CI(p_0_out_carry__4_n_0),
        .CO({p_0_out_carry__5_n_0,p_0_out_carry__5_n_1,p_0_out_carry__5_n_2,p_0_out_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI(Q[27:24]),
        .O({p_0_out_carry__5_n_4,p_0_out_carry__5_n_5,p_0_out_carry__5_n_6,p_0_out_carry__5_n_7}),
        .S({p_0_out_carry__5_i_1__0_n_0,p_0_out_carry__5_i_2__0_n_0,p_0_out_carry__5_i_3__0_n_0,p_0_out_carry__5_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__5_i_1__0
       (.I0(Q[27]),
        .I1(Q[28]),
        .O(p_0_out_carry__5_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__5_i_2__0
       (.I0(Q[26]),
        .I1(Q[27]),
        .O(p_0_out_carry__5_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__5_i_3__0
       (.I0(Q[25]),
        .I1(Q[26]),
        .O(p_0_out_carry__5_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__5_i_4__0
       (.I0(Q[24]),
        .I1(Q[25]),
        .O(p_0_out_carry__5_i_4__0_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__6
       (.CI(p_0_out_carry__5_n_0),
        .CO({NLW_p_0_out_carry__6_CO_UNCONNECTED[3],p_0_out_carry__6_n_1,p_0_out_carry__6_n_2,p_0_out_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,Q[30:28]}),
        .O({p_0_out_carry__6_n_4,p_0_out_carry__6_n_5,p_0_out_carry__6_n_6,p_0_out_carry__6_n_7}),
        .S({p_0_out_carry__6_i_1__0_n_0,p_0_out_carry__6_i_2__0_n_0,p_0_out_carry__6_i_3__0_n_0,p_0_out_carry__6_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__6_i_1__0
       (.I0(Q[31]),
        .I1(Q[32]),
        .O(p_0_out_carry__6_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__6_i_2__0
       (.I0(Q[30]),
        .I1(Q[31]),
        .O(p_0_out_carry__6_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__6_i_3__0
       (.I0(Q[29]),
        .I1(Q[30]),
        .O(p_0_out_carry__6_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__6_i_4__0
       (.I0(Q[28]),
        .I1(Q[29]),
        .O(p_0_out_carry__6_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    p_0_out_carry_i_1__0
       (.I0(Q[1]),
        .O(p_0_out_carry_i_1__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_2__0
       (.I0(Q[3]),
        .I1(Q[4]),
        .O(p_0_out_carry_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_3__0
       (.I0(Q[2]),
        .I1(Q[3]),
        .O(p_0_out_carry_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_4__0
       (.I0(Q[1]),
        .I1(Q[2]),
        .O(p_0_out_carry_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    p_0_out_carry_i_5__0
       (.I0(Q[1]),
        .O(p_0_out_carry_i_5__0_n_0));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_counter_ovf" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter_ovf_41
   (\dout_reg[31] ,
    SR,
    rst_int_n_reg,
    Data_valid_reg2,
    Metrics_Cnt_En_Int,
    Wr_Lat_Start,
    Data_valid_reg1,
    core_aclk);
  output [32:0]\dout_reg[31] ;
  output [0:0]SR;
  input rst_int_n_reg;
  input Data_valid_reg2;
  input Metrics_Cnt_En_Int;
  input Wr_Lat_Start;
  input Data_valid_reg1;
  input core_aclk;

  wire \Count_Out_i[0]_i_1_n_0 ;
  wire \Count_Out_i[32]_i_1__0_n_0 ;
  wire Data_valid_reg1;
  wire Data_valid_reg2;
  wire Metrics_Cnt_En_Int;
  wire [0:0]SR;
  wire Wr_Lat_Start;
  wire core_aclk;
  wire [32:0]\dout_reg[31] ;
  wire p_0_out_carry__0_i_1_n_0;
  wire p_0_out_carry__0_i_2_n_0;
  wire p_0_out_carry__0_i_3_n_0;
  wire p_0_out_carry__0_i_4_n_0;
  wire p_0_out_carry__0_n_0;
  wire p_0_out_carry__0_n_1;
  wire p_0_out_carry__0_n_2;
  wire p_0_out_carry__0_n_3;
  wire p_0_out_carry__0_n_4;
  wire p_0_out_carry__0_n_5;
  wire p_0_out_carry__0_n_6;
  wire p_0_out_carry__0_n_7;
  wire p_0_out_carry__1_i_1_n_0;
  wire p_0_out_carry__1_i_2_n_0;
  wire p_0_out_carry__1_i_3_n_0;
  wire p_0_out_carry__1_i_4_n_0;
  wire p_0_out_carry__1_n_0;
  wire p_0_out_carry__1_n_1;
  wire p_0_out_carry__1_n_2;
  wire p_0_out_carry__1_n_3;
  wire p_0_out_carry__1_n_4;
  wire p_0_out_carry__1_n_5;
  wire p_0_out_carry__1_n_6;
  wire p_0_out_carry__1_n_7;
  wire p_0_out_carry__2_i_1_n_0;
  wire p_0_out_carry__2_i_2_n_0;
  wire p_0_out_carry__2_i_3_n_0;
  wire p_0_out_carry__2_i_4_n_0;
  wire p_0_out_carry__2_n_0;
  wire p_0_out_carry__2_n_1;
  wire p_0_out_carry__2_n_2;
  wire p_0_out_carry__2_n_3;
  wire p_0_out_carry__2_n_4;
  wire p_0_out_carry__2_n_5;
  wire p_0_out_carry__2_n_6;
  wire p_0_out_carry__2_n_7;
  wire p_0_out_carry__3_i_1_n_0;
  wire p_0_out_carry__3_i_2_n_0;
  wire p_0_out_carry__3_i_3_n_0;
  wire p_0_out_carry__3_i_4_n_0;
  wire p_0_out_carry__3_n_0;
  wire p_0_out_carry__3_n_1;
  wire p_0_out_carry__3_n_2;
  wire p_0_out_carry__3_n_3;
  wire p_0_out_carry__3_n_4;
  wire p_0_out_carry__3_n_5;
  wire p_0_out_carry__3_n_6;
  wire p_0_out_carry__3_n_7;
  wire p_0_out_carry__4_i_1_n_0;
  wire p_0_out_carry__4_i_2_n_0;
  wire p_0_out_carry__4_i_3_n_0;
  wire p_0_out_carry__4_i_4_n_0;
  wire p_0_out_carry__4_n_0;
  wire p_0_out_carry__4_n_1;
  wire p_0_out_carry__4_n_2;
  wire p_0_out_carry__4_n_3;
  wire p_0_out_carry__4_n_4;
  wire p_0_out_carry__4_n_5;
  wire p_0_out_carry__4_n_6;
  wire p_0_out_carry__4_n_7;
  wire p_0_out_carry__5_i_1_n_0;
  wire p_0_out_carry__5_i_2_n_0;
  wire p_0_out_carry__5_i_3_n_0;
  wire p_0_out_carry__5_i_4_n_0;
  wire p_0_out_carry__5_n_0;
  wire p_0_out_carry__5_n_1;
  wire p_0_out_carry__5_n_2;
  wire p_0_out_carry__5_n_3;
  wire p_0_out_carry__5_n_4;
  wire p_0_out_carry__5_n_5;
  wire p_0_out_carry__5_n_6;
  wire p_0_out_carry__5_n_7;
  wire p_0_out_carry__6_i_1_n_0;
  wire p_0_out_carry__6_i_2_n_0;
  wire p_0_out_carry__6_i_3_n_0;
  wire p_0_out_carry__6_i_4_n_0;
  wire p_0_out_carry__6_n_1;
  wire p_0_out_carry__6_n_2;
  wire p_0_out_carry__6_n_3;
  wire p_0_out_carry__6_n_4;
  wire p_0_out_carry__6_n_5;
  wire p_0_out_carry__6_n_6;
  wire p_0_out_carry__6_n_7;
  wire p_0_out_carry_i_1_n_0;
  wire p_0_out_carry_i_2_n_0;
  wire p_0_out_carry_i_3_n_0;
  wire p_0_out_carry_i_4_n_0;
  wire p_0_out_carry_i_5_n_0;
  wire p_0_out_carry_n_0;
  wire p_0_out_carry_n_1;
  wire p_0_out_carry_n_2;
  wire p_0_out_carry_n_3;
  wire p_0_out_carry_n_4;
  wire p_0_out_carry_n_5;
  wire p_0_out_carry_n_6;
  wire p_0_out_carry_n_7;
  wire [32:1]p_1_in;
  wire rst_int_n_reg;
  wire [3:3]NLW_p_0_out_carry__6_CO_UNCONNECTED;

  LUT2 #(
    .INIT(4'h7)) 
    \Count_Out_i[0]_i_1 
       (.I0(\dout_reg[31] [0]),
        .I1(rst_int_n_reg),
        .O(\Count_Out_i[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[10]_i_1 
       (.I0(p_0_out_carry__1_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[10]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[11]_i_1 
       (.I0(p_0_out_carry__1_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[11]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[12]_i_1 
       (.I0(p_0_out_carry__1_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[12]));
  (* SOFT_HLUTNM = "soft_lutpair116" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[13]_i_1 
       (.I0(p_0_out_carry__2_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[13]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[14]_i_1 
       (.I0(p_0_out_carry__2_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[14]));
  (* SOFT_HLUTNM = "soft_lutpair115" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[15]_i_1 
       (.I0(p_0_out_carry__2_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[15]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[16]_i_1 
       (.I0(p_0_out_carry__2_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[16]));
  (* SOFT_HLUTNM = "soft_lutpair114" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[17]_i_1 
       (.I0(p_0_out_carry__3_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[17]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[18]_i_1 
       (.I0(p_0_out_carry__3_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[18]));
  (* SOFT_HLUTNM = "soft_lutpair113" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[19]_i_1 
       (.I0(p_0_out_carry__3_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[19]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[1]_i_1 
       (.I0(p_0_out_carry_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[20]_i_1 
       (.I0(p_0_out_carry__3_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[20]));
  (* SOFT_HLUTNM = "soft_lutpair112" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[21]_i_1 
       (.I0(p_0_out_carry__4_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[21]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[22]_i_1 
       (.I0(p_0_out_carry__4_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[22]));
  (* SOFT_HLUTNM = "soft_lutpair111" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[23]_i_1 
       (.I0(p_0_out_carry__4_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[23]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[24]_i_1 
       (.I0(p_0_out_carry__4_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[24]));
  (* SOFT_HLUTNM = "soft_lutpair110" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[25]_i_1 
       (.I0(p_0_out_carry__5_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[25]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[26]_i_1 
       (.I0(p_0_out_carry__5_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[26]));
  (* SOFT_HLUTNM = "soft_lutpair109" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[27]_i_1 
       (.I0(p_0_out_carry__5_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[27]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[28]_i_1 
       (.I0(p_0_out_carry__5_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[28]));
  (* SOFT_HLUTNM = "soft_lutpair108" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[29]_i_1 
       (.I0(p_0_out_carry__6_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[29]));
  (* SOFT_HLUTNM = "soft_lutpair121" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[2]_i_1 
       (.I0(p_0_out_carry_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[30]_i_1 
       (.I0(p_0_out_carry__6_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[30]));
  (* SOFT_HLUTNM = "soft_lutpair107" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[31]_i_1 
       (.I0(p_0_out_carry__6_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[31]));
  LUT5 #(
    .INIT(32'hF5D555D5)) 
    \Count_Out_i[32]_i_1__0 
       (.I0(rst_int_n_reg),
        .I1(Data_valid_reg2),
        .I2(Metrics_Cnt_En_Int),
        .I3(Wr_Lat_Start),
        .I4(Data_valid_reg1),
        .O(\Count_Out_i[32]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair106" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[32]_i_2 
       (.I0(p_0_out_carry__6_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[32]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[3]_i_1 
       (.I0(p_0_out_carry_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair120" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[4]_i_1 
       (.I0(p_0_out_carry_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[4]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[5]_i_1 
       (.I0(p_0_out_carry__0_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[5]));
  (* SOFT_HLUTNM = "soft_lutpair117" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[6]_i_1 
       (.I0(p_0_out_carry__0_n_6),
        .I1(rst_int_n_reg),
        .O(p_1_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair119" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[7]_i_1 
       (.I0(p_0_out_carry__0_n_5),
        .I1(rst_int_n_reg),
        .O(p_1_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[8]_i_1 
       (.I0(p_0_out_carry__0_n_4),
        .I1(rst_int_n_reg),
        .O(p_1_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair118" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \Count_Out_i[9]_i_1 
       (.I0(p_0_out_carry__1_n_7),
        .I1(rst_int_n_reg),
        .O(p_1_in[9]));
  FDRE \Count_Out_i_reg[0] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(\Count_Out_i[0]_i_1_n_0 ),
        .Q(\dout_reg[31] [0]),
        .R(SR));
  FDRE \Count_Out_i_reg[10] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[10]),
        .Q(\dout_reg[31] [10]),
        .R(SR));
  FDRE \Count_Out_i_reg[11] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[11]),
        .Q(\dout_reg[31] [11]),
        .R(SR));
  FDRE \Count_Out_i_reg[12] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[12]),
        .Q(\dout_reg[31] [12]),
        .R(SR));
  FDRE \Count_Out_i_reg[13] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[13]),
        .Q(\dout_reg[31] [13]),
        .R(SR));
  FDRE \Count_Out_i_reg[14] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[14]),
        .Q(\dout_reg[31] [14]),
        .R(SR));
  FDRE \Count_Out_i_reg[15] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[15]),
        .Q(\dout_reg[31] [15]),
        .R(SR));
  FDRE \Count_Out_i_reg[16] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[16]),
        .Q(\dout_reg[31] [16]),
        .R(SR));
  FDRE \Count_Out_i_reg[17] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[17]),
        .Q(\dout_reg[31] [17]),
        .R(SR));
  FDRE \Count_Out_i_reg[18] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[18]),
        .Q(\dout_reg[31] [18]),
        .R(SR));
  FDRE \Count_Out_i_reg[19] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[19]),
        .Q(\dout_reg[31] [19]),
        .R(SR));
  FDRE \Count_Out_i_reg[1] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[1]),
        .Q(\dout_reg[31] [1]),
        .R(SR));
  FDRE \Count_Out_i_reg[20] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[20]),
        .Q(\dout_reg[31] [20]),
        .R(SR));
  FDRE \Count_Out_i_reg[21] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[21]),
        .Q(\dout_reg[31] [21]),
        .R(SR));
  FDRE \Count_Out_i_reg[22] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[22]),
        .Q(\dout_reg[31] [22]),
        .R(SR));
  FDRE \Count_Out_i_reg[23] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[23]),
        .Q(\dout_reg[31] [23]),
        .R(SR));
  FDRE \Count_Out_i_reg[24] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[24]),
        .Q(\dout_reg[31] [24]),
        .R(SR));
  FDRE \Count_Out_i_reg[25] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[25]),
        .Q(\dout_reg[31] [25]),
        .R(SR));
  FDRE \Count_Out_i_reg[26] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[26]),
        .Q(\dout_reg[31] [26]),
        .R(SR));
  FDRE \Count_Out_i_reg[27] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[27]),
        .Q(\dout_reg[31] [27]),
        .R(SR));
  FDRE \Count_Out_i_reg[28] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[28]),
        .Q(\dout_reg[31] [28]),
        .R(SR));
  FDRE \Count_Out_i_reg[29] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[29]),
        .Q(\dout_reg[31] [29]),
        .R(SR));
  FDRE \Count_Out_i_reg[2] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[2]),
        .Q(\dout_reg[31] [2]),
        .R(SR));
  FDRE \Count_Out_i_reg[30] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[30]),
        .Q(\dout_reg[31] [30]),
        .R(SR));
  FDRE \Count_Out_i_reg[31] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[31]),
        .Q(\dout_reg[31] [31]),
        .R(SR));
  FDRE \Count_Out_i_reg[32] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[32]),
        .Q(\dout_reg[31] [32]),
        .R(SR));
  FDRE \Count_Out_i_reg[3] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[3]),
        .Q(\dout_reg[31] [3]),
        .R(SR));
  FDRE \Count_Out_i_reg[4] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[4]),
        .Q(\dout_reg[31] [4]),
        .R(SR));
  FDRE \Count_Out_i_reg[5] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[5]),
        .Q(\dout_reg[31] [5]),
        .R(SR));
  FDRE \Count_Out_i_reg[6] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[6]),
        .Q(\dout_reg[31] [6]),
        .R(SR));
  FDRE \Count_Out_i_reg[7] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[7]),
        .Q(\dout_reg[31] [7]),
        .R(SR));
  FDRE \Count_Out_i_reg[8] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[8]),
        .Q(\dout_reg[31] [8]),
        .R(SR));
  FDRE \Count_Out_i_reg[9] 
       (.C(core_aclk),
        .CE(\Count_Out_i[32]_i_1__0_n_0 ),
        .D(p_1_in[9]),
        .Q(\dout_reg[31] [9]),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    empty_i_1__9
       (.I0(rst_int_n_reg),
        .O(SR));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry
       (.CI(1'b0),
        .CO({p_0_out_carry_n_0,p_0_out_carry_n_1,p_0_out_carry_n_2,p_0_out_carry_n_3}),
        .CYINIT(\dout_reg[31] [0]),
        .DI({\dout_reg[31] [3:1],p_0_out_carry_i_1_n_0}),
        .O({p_0_out_carry_n_4,p_0_out_carry_n_5,p_0_out_carry_n_6,p_0_out_carry_n_7}),
        .S({p_0_out_carry_i_2_n_0,p_0_out_carry_i_3_n_0,p_0_out_carry_i_4_n_0,p_0_out_carry_i_5_n_0}));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__0
       (.CI(p_0_out_carry_n_0),
        .CO({p_0_out_carry__0_n_0,p_0_out_carry__0_n_1,p_0_out_carry__0_n_2,p_0_out_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI(\dout_reg[31] [7:4]),
        .O({p_0_out_carry__0_n_4,p_0_out_carry__0_n_5,p_0_out_carry__0_n_6,p_0_out_carry__0_n_7}),
        .S({p_0_out_carry__0_i_1_n_0,p_0_out_carry__0_i_2_n_0,p_0_out_carry__0_i_3_n_0,p_0_out_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_1
       (.I0(\dout_reg[31] [7]),
        .I1(\dout_reg[31] [8]),
        .O(p_0_out_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_2
       (.I0(\dout_reg[31] [6]),
        .I1(\dout_reg[31] [7]),
        .O(p_0_out_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_3
       (.I0(\dout_reg[31] [5]),
        .I1(\dout_reg[31] [6]),
        .O(p_0_out_carry__0_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__0_i_4
       (.I0(\dout_reg[31] [4]),
        .I1(\dout_reg[31] [5]),
        .O(p_0_out_carry__0_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__1
       (.CI(p_0_out_carry__0_n_0),
        .CO({p_0_out_carry__1_n_0,p_0_out_carry__1_n_1,p_0_out_carry__1_n_2,p_0_out_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI(\dout_reg[31] [11:8]),
        .O({p_0_out_carry__1_n_4,p_0_out_carry__1_n_5,p_0_out_carry__1_n_6,p_0_out_carry__1_n_7}),
        .S({p_0_out_carry__1_i_1_n_0,p_0_out_carry__1_i_2_n_0,p_0_out_carry__1_i_3_n_0,p_0_out_carry__1_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__1_i_1
       (.I0(\dout_reg[31] [11]),
        .I1(\dout_reg[31] [12]),
        .O(p_0_out_carry__1_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__1_i_2
       (.I0(\dout_reg[31] [10]),
        .I1(\dout_reg[31] [11]),
        .O(p_0_out_carry__1_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__1_i_3
       (.I0(\dout_reg[31] [9]),
        .I1(\dout_reg[31] [10]),
        .O(p_0_out_carry__1_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__1_i_4
       (.I0(\dout_reg[31] [8]),
        .I1(\dout_reg[31] [9]),
        .O(p_0_out_carry__1_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__2
       (.CI(p_0_out_carry__1_n_0),
        .CO({p_0_out_carry__2_n_0,p_0_out_carry__2_n_1,p_0_out_carry__2_n_2,p_0_out_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI(\dout_reg[31] [15:12]),
        .O({p_0_out_carry__2_n_4,p_0_out_carry__2_n_5,p_0_out_carry__2_n_6,p_0_out_carry__2_n_7}),
        .S({p_0_out_carry__2_i_1_n_0,p_0_out_carry__2_i_2_n_0,p_0_out_carry__2_i_3_n_0,p_0_out_carry__2_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__2_i_1
       (.I0(\dout_reg[31] [15]),
        .I1(\dout_reg[31] [16]),
        .O(p_0_out_carry__2_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__2_i_2
       (.I0(\dout_reg[31] [14]),
        .I1(\dout_reg[31] [15]),
        .O(p_0_out_carry__2_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__2_i_3
       (.I0(\dout_reg[31] [13]),
        .I1(\dout_reg[31] [14]),
        .O(p_0_out_carry__2_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__2_i_4
       (.I0(\dout_reg[31] [12]),
        .I1(\dout_reg[31] [13]),
        .O(p_0_out_carry__2_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__3
       (.CI(p_0_out_carry__2_n_0),
        .CO({p_0_out_carry__3_n_0,p_0_out_carry__3_n_1,p_0_out_carry__3_n_2,p_0_out_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI(\dout_reg[31] [19:16]),
        .O({p_0_out_carry__3_n_4,p_0_out_carry__3_n_5,p_0_out_carry__3_n_6,p_0_out_carry__3_n_7}),
        .S({p_0_out_carry__3_i_1_n_0,p_0_out_carry__3_i_2_n_0,p_0_out_carry__3_i_3_n_0,p_0_out_carry__3_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__3_i_1
       (.I0(\dout_reg[31] [19]),
        .I1(\dout_reg[31] [20]),
        .O(p_0_out_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__3_i_2
       (.I0(\dout_reg[31] [18]),
        .I1(\dout_reg[31] [19]),
        .O(p_0_out_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__3_i_3
       (.I0(\dout_reg[31] [17]),
        .I1(\dout_reg[31] [18]),
        .O(p_0_out_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__3_i_4
       (.I0(\dout_reg[31] [16]),
        .I1(\dout_reg[31] [17]),
        .O(p_0_out_carry__3_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__4
       (.CI(p_0_out_carry__3_n_0),
        .CO({p_0_out_carry__4_n_0,p_0_out_carry__4_n_1,p_0_out_carry__4_n_2,p_0_out_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI(\dout_reg[31] [23:20]),
        .O({p_0_out_carry__4_n_4,p_0_out_carry__4_n_5,p_0_out_carry__4_n_6,p_0_out_carry__4_n_7}),
        .S({p_0_out_carry__4_i_1_n_0,p_0_out_carry__4_i_2_n_0,p_0_out_carry__4_i_3_n_0,p_0_out_carry__4_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__4_i_1
       (.I0(\dout_reg[31] [23]),
        .I1(\dout_reg[31] [24]),
        .O(p_0_out_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__4_i_2
       (.I0(\dout_reg[31] [22]),
        .I1(\dout_reg[31] [23]),
        .O(p_0_out_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__4_i_3
       (.I0(\dout_reg[31] [21]),
        .I1(\dout_reg[31] [22]),
        .O(p_0_out_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__4_i_4
       (.I0(\dout_reg[31] [20]),
        .I1(\dout_reg[31] [21]),
        .O(p_0_out_carry__4_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__5
       (.CI(p_0_out_carry__4_n_0),
        .CO({p_0_out_carry__5_n_0,p_0_out_carry__5_n_1,p_0_out_carry__5_n_2,p_0_out_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI(\dout_reg[31] [27:24]),
        .O({p_0_out_carry__5_n_4,p_0_out_carry__5_n_5,p_0_out_carry__5_n_6,p_0_out_carry__5_n_7}),
        .S({p_0_out_carry__5_i_1_n_0,p_0_out_carry__5_i_2_n_0,p_0_out_carry__5_i_3_n_0,p_0_out_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__5_i_1
       (.I0(\dout_reg[31] [27]),
        .I1(\dout_reg[31] [28]),
        .O(p_0_out_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__5_i_2
       (.I0(\dout_reg[31] [26]),
        .I1(\dout_reg[31] [27]),
        .O(p_0_out_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__5_i_3
       (.I0(\dout_reg[31] [25]),
        .I1(\dout_reg[31] [26]),
        .O(p_0_out_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__5_i_4
       (.I0(\dout_reg[31] [24]),
        .I1(\dout_reg[31] [25]),
        .O(p_0_out_carry__5_i_4_n_0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 p_0_out_carry__6
       (.CI(p_0_out_carry__5_n_0),
        .CO({NLW_p_0_out_carry__6_CO_UNCONNECTED[3],p_0_out_carry__6_n_1,p_0_out_carry__6_n_2,p_0_out_carry__6_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,\dout_reg[31] [30:28]}),
        .O({p_0_out_carry__6_n_4,p_0_out_carry__6_n_5,p_0_out_carry__6_n_6,p_0_out_carry__6_n_7}),
        .S({p_0_out_carry__6_i_1_n_0,p_0_out_carry__6_i_2_n_0,p_0_out_carry__6_i_3_n_0,p_0_out_carry__6_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__6_i_1
       (.I0(\dout_reg[31] [31]),
        .I1(\dout_reg[31] [32]),
        .O(p_0_out_carry__6_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__6_i_2
       (.I0(\dout_reg[31] [30]),
        .I1(\dout_reg[31] [31]),
        .O(p_0_out_carry__6_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__6_i_3
       (.I0(\dout_reg[31] [29]),
        .I1(\dout_reg[31] [30]),
        .O(p_0_out_carry__6_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry__6_i_4
       (.I0(\dout_reg[31] [28]),
        .I1(\dout_reg[31] [29]),
        .O(p_0_out_carry__6_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    p_0_out_carry_i_1
       (.I0(\dout_reg[31] [1]),
        .O(p_0_out_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_2
       (.I0(\dout_reg[31] [3]),
        .I1(\dout_reg[31] [4]),
        .O(p_0_out_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_3
       (.I0(\dout_reg[31] [2]),
        .I1(\dout_reg[31] [3]),
        .O(p_0_out_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'h9)) 
    p_0_out_carry_i_4
       (.I0(\dout_reg[31] [1]),
        .I1(\dout_reg[31] [2]),
        .O(p_0_out_carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h2)) 
    p_0_out_carry_i_5
       (.I0(\dout_reg[31] [1]),
        .O(p_0_out_carry_i_5_n_0));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_dff_async_reset
   (out,
    core_aclk,
    capture_event);
  output out;
  input core_aclk;
  input capture_event;

  wire capture_event;
  wire core_aclk;
  (* async_reg = "true" *) wire out;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE q_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(capture_event),
        .Q(out));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_dff_async_reset" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_dff_async_reset_0
   (out,
    core_aclk,
    reset_event);
  output out;
  input core_aclk;
  input reset_event;

  wire core_aclk;
  (* async_reg = "true" *) wire out;
  wire reset_event;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE q_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(reset_event),
        .Q(out));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_dff_async_reset" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_dff_async_reset_1
   (out,
    q_reg_0,
    core_aclk,
    capture_event);
  output out;
  input q_reg_0;
  input core_aclk;
  input capture_event;

  wire capture_event;
  wire core_aclk;
  (* async_reg = "true" *) wire out;
  wire q_reg_0;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE q_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(q_reg_0),
        .PRE(capture_event),
        .Q(out));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_dff_async_reset" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_dff_async_reset_2
   (out,
    q_reg_0,
    core_aclk,
    reset_event);
  output out;
  input q_reg_0;
  input core_aclk;
  input reset_event;

  wire core_aclk;
  (* async_reg = "true" *) wire out;
  wire q_reg_0;
  wire reset_event;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  FDPE q_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(q_reg_0),
        .PRE(reset_event),
        .Q(out));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_ext_calc
   (rst_int_n,
    Ext_Event_going_on,
    External_Event_Cnt_En,
    \s_level_out_bus_d4_reg[1] ,
    core_aclk,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[0] ,
    \USE_MON_FIFO.fifo_rd_en_reg_reg ,
    Ext_Event_going_on_reg_0,
    out);
  output rst_int_n;
  output Ext_Event_going_on;
  output External_Event_Cnt_En;
  input \s_level_out_bus_d4_reg[1] ;
  input core_aclk;
  input \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[0] ;
  input \USE_MON_FIFO.fifo_rd_en_reg_reg ;
  input Ext_Event_going_on_reg_0;
  input [0:0]out;

  wire Ext_Event_Valid_d1;
  wire Ext_Event_d1;
  wire Ext_Event_going_on;
  wire Ext_Event_going_on_reg_0;
  wire External_Event_Cnt_En;
  wire External_Event_Cnt_En_i_1_n_0;
  wire \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[0] ;
  wire \USE_MON_FIFO.fifo_rd_en_reg_reg ;
  wire core_aclk;
  wire [0:0]out;
  wire rst_int_n;
  wire \s_level_out_bus_d4_reg[1] ;

  FDRE Ext_Event_Valid_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(\USE_MON_FIFO.fifo_rd_en_reg_reg ),
        .Q(Ext_Event_Valid_d1),
        .R(1'b0));
  FDRE Ext_Event_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[0] ),
        .Q(Ext_Event_d1),
        .R(1'b0));
  FDRE Ext_Event_going_on_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Ext_Event_going_on_reg_0),
        .Q(Ext_Event_going_on),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h80000000)) 
    External_Event_Cnt_En_i_1
       (.I0(Ext_Event_Valid_d1),
        .I1(Ext_Event_going_on),
        .I2(out),
        .I3(Ext_Event_d1),
        .I4(rst_int_n),
        .O(External_Event_Cnt_En_i_1_n_0));
  FDRE External_Event_Cnt_En_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(External_Event_Cnt_En_i_1_n_0),
        .Q(External_Event_Cnt_En),
        .R(1'b0));
  (* KEEP = "yes" *) 
  FDRE rst_int_n_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d4_reg[1] ),
        .Q(rst_int_n),
        .R(1'b0));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_glbl_clk_cnt
   (Q,
    p_in_d1_cdc_from_reg0,
    core_aresetn_0,
    core_aclk,
    out,
    \s_level_out_bus_d4_reg[4] ,
    E,
    core_aresetn);
  output [31:0]Q;
  output p_in_d1_cdc_from_reg0;
  input core_aresetn_0;
  input core_aclk;
  input out;
  input [1:0]\s_level_out_bus_d4_reg[4] ;
  input [0:0]E;
  input core_aresetn;

  wire [0:0]E;
  wire [31:0]Q;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire out;
  wire p_in_d1_cdc_from_reg0;
  wire [1:0]\s_level_out_bus_d4_reg[4] ;

  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter_42 counter_inst
       (.E(E),
        .Q(Q),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(core_aresetn_0),
        .out(out),
        .p_in_d1_cdc_from_reg0(p_in_d1_cdc_from_reg0),
        .\s_level_out_bus_d4_reg[4] (\s_level_out_bus_d4_reg[4] ));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_interrupt_module
   (Intr_Reg_ISR,
    interrupt,
    Q,
    p_14_out,
    s_axi_aclk,
    p_13_out,
    p_12_out,
    p_10_out11_out,
    p_9_out,
    p_8_out,
    p_6_out7_out,
    p_5_out,
    p_4_out,
    p_3_out,
    p_2_out,
    p_1_out,
    p_0_out,
    SR,
    Global_Intr_En,
    E,
    s_axi_wdata);
  output [12:0]Intr_Reg_ISR;
  output interrupt;
  output [11:0]Q;
  input p_14_out;
  input s_axi_aclk;
  input p_13_out;
  input p_12_out;
  input p_10_out11_out;
  input p_9_out;
  input p_8_out;
  input p_6_out7_out;
  input p_5_out;
  input p_4_out;
  input p_3_out;
  input p_2_out;
  input p_1_out;
  input p_0_out;
  input [0:0]SR;
  input Global_Intr_En;
  input [0:0]E;
  input [12:0]s_axi_wdata;

  wire [0:0]E;
  wire Global_Intr_En;
  wire Interrupt0;
  wire Interrupt_i_2_n_0;
  wire Interrupt_i_3_n_0;
  wire Interrupt_i_4_n_0;
  wire Interrupt_i_5_n_0;
  wire Interrupt_i_6_n_0;
  wire [2:2]Intr_Reg_IER;
  wire [12:0]Intr_Reg_ISR;
  wire [11:0]Q;
  wire [0:0]SR;
  wire interrupt;
  wire p_0_out;
  wire p_10_out11_out;
  wire p_12_out;
  wire p_13_out;
  wire p_14_out;
  wire p_1_out;
  wire p_2_out;
  wire p_3_out;
  wire p_4_out;
  wire p_5_out;
  wire p_6_out7_out;
  wire p_8_out;
  wire p_9_out;
  wire s_axi_aclk;
  wire [12:0]s_axi_wdata;

  FDRE \GEN_ISR_REG[0].ISR_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_14_out),
        .Q(Intr_Reg_ISR[0]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[10].ISR_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_2_out),
        .Q(Intr_Reg_ISR[10]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[11].ISR_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_out),
        .Q(Intr_Reg_ISR[11]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[12].ISR_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_0_out),
        .Q(Intr_Reg_ISR[12]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[1].ISR_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_13_out),
        .Q(Intr_Reg_ISR[1]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[2].ISR_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_12_out),
        .Q(Intr_Reg_ISR[2]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[3].ISR_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_10_out11_out),
        .Q(Intr_Reg_ISR[3]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[4].ISR_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_9_out),
        .Q(Intr_Reg_ISR[4]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[5].ISR_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_8_out),
        .Q(Intr_Reg_ISR[5]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[6].ISR_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_6_out7_out),
        .Q(Intr_Reg_ISR[6]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[7].ISR_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_5_out),
        .Q(Intr_Reg_ISR[7]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[8].ISR_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_4_out),
        .Q(Intr_Reg_ISR[8]),
        .R(1'b0));
  FDRE \GEN_ISR_REG[9].ISR_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_3_out),
        .Q(Intr_Reg_ISR[9]),
        .R(1'b0));
  FDRE \IER_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \IER_reg[10] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[10]),
        .Q(Q[9]),
        .R(SR));
  FDRE \IER_reg[11] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[11]),
        .Q(Q[10]),
        .R(SR));
  FDRE \IER_reg[12] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[12]),
        .Q(Q[11]),
        .R(SR));
  FDRE \IER_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \IER_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[2]),
        .Q(Intr_Reg_IER),
        .R(SR));
  FDRE \IER_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[3]),
        .Q(Q[2]),
        .R(SR));
  FDRE \IER_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[4]),
        .Q(Q[3]),
        .R(SR));
  FDRE \IER_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[5]),
        .Q(Q[4]),
        .R(SR));
  FDRE \IER_reg[6] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[6]),
        .Q(Q[5]),
        .R(SR));
  FDRE \IER_reg[7] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[7]),
        .Q(Q[6]),
        .R(SR));
  FDRE \IER_reg[8] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[8]),
        .Q(Q[7]),
        .R(SR));
  FDRE \IER_reg[9] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(s_axi_wdata[9]),
        .Q(Q[8]),
        .R(SR));
  LUT6 #(
    .INIT(64'hDFFFFFFF00000000)) 
    Interrupt_i_1
       (.I0(Interrupt_i_2_n_0),
        .I1(Interrupt_i_3_n_0),
        .I2(Interrupt_i_4_n_0),
        .I3(Interrupt_i_5_n_0),
        .I4(Interrupt_i_6_n_0),
        .I5(Global_Intr_En),
        .O(Interrupt0));
  LUT6 #(
    .INIT(64'h0000077707770777)) 
    Interrupt_i_2
       (.I0(Intr_Reg_ISR[12]),
        .I1(Q[11]),
        .I2(Intr_Reg_ISR[10]),
        .I3(Q[9]),
        .I4(Q[10]),
        .I5(Intr_Reg_ISR[11]),
        .O(Interrupt_i_2_n_0));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    Interrupt_i_3
       (.I0(Q[8]),
        .I1(Intr_Reg_ISR[9]),
        .I2(Intr_Reg_ISR[8]),
        .I3(Q[7]),
        .I4(Intr_Reg_ISR[7]),
        .I5(Q[6]),
        .O(Interrupt_i_3_n_0));
  LUT6 #(
    .INIT(64'h0000077707770777)) 
    Interrupt_i_4
       (.I0(Intr_Reg_ISR[5]),
        .I1(Q[4]),
        .I2(Intr_Reg_ISR[4]),
        .I3(Q[3]),
        .I4(Q[5]),
        .I5(Intr_Reg_ISR[6]),
        .O(Interrupt_i_4_n_0));
  LUT4 #(
    .INIT(16'h0777)) 
    Interrupt_i_5
       (.I0(Intr_Reg_IER),
        .I1(Intr_Reg_ISR[2]),
        .I2(Q[2]),
        .I3(Intr_Reg_ISR[3]),
        .O(Interrupt_i_5_n_0));
  LUT4 #(
    .INIT(16'h0777)) 
    Interrupt_i_6
       (.I0(Q[0]),
        .I1(Intr_Reg_ISR[0]),
        .I2(Q[1]),
        .I3(Intr_Reg_ISR[1]),
        .O(Interrupt_i_6_n_0));
  FDRE Interrupt_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Interrupt0),
        .Q(interrupt),
        .R(SR));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_intr_sync
   (out,
    Intr_In_sync,
    s_out_d1_cdc_to_reg,
    s_out_d1_cdc_to_reg_0,
    core_aresetn,
    p_in_d1_cdc_from_reg0,
    core_aclk,
    SR,
    s_axi_aclk,
    p_in_d1_cdc_from_reg0_0,
    p_in_d1_cdc_from_reg0_1);
  output out;
  output [12:0]Intr_In_sync;
  output s_out_d1_cdc_to_reg;
  output s_out_d1_cdc_to_reg_0;
  input core_aresetn;
  input p_in_d1_cdc_from_reg0;
  input core_aclk;
  input [0:0]SR;
  input s_axi_aclk;
  input p_in_d1_cdc_from_reg0_0;
  input p_in_d1_cdc_from_reg0_1;

  wire [12:0]Intr_In_sync;
  wire [0:0]SR;
  wire core_aclk;
  wire core_aresetn;
  wire out;
  wire p_in_d1_cdc_from_reg0;
  wire p_in_d1_cdc_from_reg0_0;
  wire p_in_d1_cdc_from_reg0_1;
  wire s_axi_aclk;
  wire s_out_d1_cdc_to_reg;
  wire s_out_d1_cdc_to_reg_0;

  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_44 \GEN_SYNC[0].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[0]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .out(out),
        .p_in_d1_cdc_from_reg0(p_in_d1_cdc_from_reg0),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_45 \GEN_SYNC[10].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[10]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_46 \GEN_SYNC[11].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[11]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_47 \GEN_SYNC[12].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[12]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_48 \GEN_SYNC[1].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[1]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .p_in_d1_cdc_from_reg0_0(p_in_d1_cdc_from_reg0_0),
        .s_axi_aclk(s_axi_aclk),
        .s_out_d1_cdc_to_reg_0(s_out_d1_cdc_to_reg));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_49 \GEN_SYNC[2].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[2]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_50 \GEN_SYNC[3].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[3]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .p_in_d1_cdc_from_reg0_1(p_in_d1_cdc_from_reg0_1),
        .s_axi_aclk(s_axi_aclk),
        .s_out_d1_cdc_to_reg_0(s_out_d1_cdc_to_reg_0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_51 \GEN_SYNC[4].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[4]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_52 \GEN_SYNC[5].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[5]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_53 \GEN_SYNC[6].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[6]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_54 \GEN_SYNC[7].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[7]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_55 \GEN_SYNC[8].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[8]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_56 \GEN_SYNC[9].cdc_sync_inst 
       (.Intr_In_sync(Intr_In_sync[9]),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .s_axi_aclk(s_axi_aclk));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_metric_calc
   (F1_Rd_Data,
    F2_Rd_Data,
    Rd_Latency_Fifo_Empty,
    FBC_Rd_Data,
    FSWI_Rd_Data,
    rst_int_n,
    FBC_Rd_Vld,
    S0_Read_Byte_Cnt,
    S0_Read_Byte_Cnt_En,
    rid_match_reg,
    Last_Read_reg,
    First_Read_reg,
    F34_Rd_Vld_reg__0,
    F12_Rd_Vld,
    wid_match_reg,
    Write_Latency_En,
    FSWI_Rd_Vld,
    Mst_Rd_Idle_Cnt_En,
    Num_BValids_En,
    wr_latency_start_d1_reg_0,
    ARID_reg,
    \Rd_Latency_Fifo_Wr_Data_reg[32]_0 ,
    S0_S_Null_Byte_Cnt,
    update_max_Wr_Lat,
    update_min_Wr_Lat,
    No_Wr_Ready,
    Rd_Add_Issue_reg_0,
    Rd_Latency_Fifo_Wr_En,
    Write_going_on,
    \wptr_reg[0] ,
    \dout_reg[31] ,
    \GEN_MUX_N_CNT.Add_in_reg[0] ,
    \GEN_MUX_N_CNT.Add_in_reg[2] ,
    \GEN_MUX_N_CNT.Add_in_reg[2]_0 ,
    \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ,
    \GEN_MUX_N_CNT.Add_in_reg[0]_0 ,
    \wptr_reg[4] ,
    \wptr_reg[4]_0 ,
    Ext_Trig_Metric_en,
    E,
    \wptr_reg[0]_0 ,
    \rptr_reg[4] ,
    \wptr_reg[4]_1 ,
    \wptr_reg[0]_1 ,
    \wptr_reg[0]_2 ,
    \wptr_reg[0]_3 ,
    \wptr_reg[4]_2 ,
    \wptr_reg[4]_3 ,
    \wptr_reg[4]_4 ,
    \wptr_reg[4]_5 ,
    \wptr_reg[4]_6 ,
    \wptr_reg[4]_7 ,
    \wptr_reg[4]_8 ,
    F1_Wr_Data,
    \rptr_reg[4]_0 ,
    \rptr_reg[4]_1 ,
    \rptr_reg[4]_2 ,
    \rptr_reg[4]_3 ,
    \rptr_reg[4]_4 ,
    \rptr_reg[4]_5 ,
    \rptr_reg[4]_6 ,
    \rptr_reg[4]_7 ,
    \rptr_reg[4]_8 ,
    wr_latency_end_d1_reg_0,
    \GEN_MUX_N_CNT.Add_in_Valid_reg ,
    \GEN_MUX_N_CNT.Add_in_Valid_reg_0 ,
    D,
    \GEN_MUX_N_CNT.Add_in_reg[31] ,
    \GEN_MUX_N_CNT.Add_in_reg[0]_1 ,
    \GEN_MUX_N_CNT.Add_in_reg[2]_1 ,
    \GEN_MUX_N_CNT.Add_in_reg[2]_2 ,
    \GEN_MUX_N_CNT.Add_in_reg[2]_3 ,
    \GEN_MUX_N_CNT.Add_in_reg[31]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[31]_1 ,
    \GEN_MUX_N_CNT.Add_in_Valid_reg_1 ,
    Read_going_on,
    S0_Read_Latency,
    \GEN_MUX_N_CNT.Add_in_reg[31]_2 ,
    \dout_reg[61] ,
    \dout_reg[31]_0 ,
    \dout_reg[31]_1 ,
    O366,
    O367,
    core_aclk,
    dout0_0,
    dout0_1,
    dout0_2,
    dout0_3,
    dout0_4,
    \s_level_out_bus_d4_reg[1] ,
    Wtrans_Cnt_En0,
    Rtrans_Cnt_En0,
    Read_Beat_Cnt_En0,
    p_2_out0_out,
    p_40_in,
    First_Read,
    Read_Latency_One,
    Mst_Rd_Idle_Cnt_En0,
    Num_BValids_En0,
    Num_RLasts_En0,
    \USE_MON_FIFO.fifo_rd_en_reg_reg ,
    p_2_out3_out,
    Last_Write,
    Write_Beat,
    Q,
    Rd_Add_Issue6_out,
    First_Write,
    wr_latency_end,
    wr_latency_start,
    Slot_0_Sync_Data_Valid,
    \dout_reg[0] ,
    F34_Rd_Vld_reg_reg_0,
    F34_Rd_Vld_reg_reg_1,
    No_Wr_Ready_reg_0,
    Rd_Lat_Start_CDC_reg,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[40] ,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[42] ,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[41] ,
    Write_going_on_reg_0,
    Write_iss_going_on_reg_0,
    Write_iss_going_on,
    Wr_Idle,
    rd_latency_end,
    \RID_Mask_CDC_reg[0] ,
    \ARID_reg_reg[0]_0 ,
    rd_latency_start,
    out,
    \s_level_out_bus_d4_reg[0] ,
    Rd_Lat_Start,
    Metrics_Cnt_En_Int,
    \s_level_out_bus_d4_reg[0]_0 ,
    Wr_Lat_Start,
    Wr_Lat_End,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ,
    \Read_Latency_Int_reg[1]_0 ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ,
    \Max_Write_Latency_Int_reg[1]_0 ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ,
    \Read_Latency_Int_reg[3]_0 ,
    \Max_Write_Latency_Int_reg[3]_0 ,
    \Read_Latency_Int_reg[4]_0 ,
    \Max_Write_Latency_Int_reg[4]_0 ,
    \Read_Latency_Int_reg[5]_0 ,
    \Max_Write_Latency_Int_reg[5]_0 ,
    \Read_Latency_Int_reg[6]_0 ,
    \Max_Write_Latency_Int_reg[6]_0 ,
    \Read_Latency_Int_reg[7]_0 ,
    \Max_Write_Latency_Int_reg[7]_0 ,
    \Read_Latency_Int_reg[8]_0 ,
    \Max_Write_Latency_Int_reg[8]_0 ,
    \Read_Latency_Int_reg[9]_0 ,
    \Max_Write_Latency_Int_reg[9]_0 ,
    \Read_Latency_Int_reg[10]_0 ,
    \Max_Write_Latency_Int_reg[10]_0 ,
    \Read_Latency_Int_reg[11]_0 ,
    \Max_Write_Latency_Int_reg[11]_0 ,
    \Read_Latency_Int_reg[12]_0 ,
    \Max_Write_Latency_Int_reg[12]_0 ,
    \Read_Latency_Int_reg[13]_0 ,
    \Max_Write_Latency_Int_reg[13]_0 ,
    \Read_Latency_Int_reg[14]_0 ,
    \Max_Write_Latency_Int_reg[14]_0 ,
    \Read_Latency_Int_reg[15]_0 ,
    \Max_Write_Latency_Int_reg[15]_0 ,
    \Read_Latency_Int_reg[16]_0 ,
    \Max_Write_Latency_Int_reg[16]_0 ,
    \Read_Latency_Int_reg[17]_0 ,
    \Max_Write_Latency_Int_reg[17]_0 ,
    \Read_Latency_Int_reg[18]_0 ,
    \Max_Write_Latency_Int_reg[18]_0 ,
    \Read_Latency_Int_reg[19]_0 ,
    \Max_Write_Latency_Int_reg[19]_0 ,
    \Read_Latency_Int_reg[20]_0 ,
    \Max_Write_Latency_Int_reg[20]_0 ,
    \Read_Latency_Int_reg[21]_0 ,
    \Max_Write_Latency_Int_reg[21]_0 ,
    \Read_Latency_Int_reg[22]_0 ,
    \Max_Write_Latency_Int_reg[22]_0 ,
    \Read_Latency_Int_reg[23]_0 ,
    \Max_Write_Latency_Int_reg[23]_0 ,
    \Read_Latency_Int_reg[24]_0 ,
    \Max_Write_Latency_Int_reg[24]_0 ,
    \Read_Latency_Int_reg[25]_0 ,
    \Max_Write_Latency_Int_reg[25]_0 ,
    \Read_Latency_Int_reg[26]_0 ,
    \Max_Write_Latency_Int_reg[26]_0 ,
    \Read_Latency_Int_reg[27]_0 ,
    \Max_Write_Latency_Int_reg[27]_0 ,
    \Read_Latency_Int_reg[28]_0 ,
    \Max_Write_Latency_Int_reg[28]_0 ,
    \Read_Latency_Int_reg[29]_0 ,
    \Max_Write_Latency_Int_reg[29]_0 ,
    \Read_Latency_Int_reg[30]_0 ,
    \Max_Write_Latency_Int_reg[30]_0 ,
    \Read_Latency_Int_reg[31]_0 ,
    \Max_Write_Latency_Int_reg[31]_0 ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_1 ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_2 ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_1 ,
    dout0,
    \Count_Out_i_reg[31] ,
    \Rd_Latency_Fifo_Wr_Data_reg[31]_0 ,
    \Beat_fifo_Wr_data_reg[61]_0 ,
    \Slv_Wr_Idle_Fifo_Wr_data_reg[31]_0 ,
    UNCONN_IN,
    Read_Beat_Cnt_En1,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] ,
    \RID_Mask_CDC_reg[0]_0 ,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] );
  output F1_Rd_Data;
  output F2_Rd_Data;
  output Rd_Latency_Fifo_Empty;
  output FBC_Rd_Data;
  output FSWI_Rd_Data;
  output rst_int_n;
  output FBC_Rd_Vld;
  output [0:0]S0_Read_Byte_Cnt;
  output S0_Read_Byte_Cnt_En;
  output rid_match_reg;
  output Last_Read_reg;
  output First_Read_reg;
  output F34_Rd_Vld_reg__0;
  output F12_Rd_Vld;
  output wid_match_reg;
  output Write_Latency_En;
  output FSWI_Rd_Vld;
  output Mst_Rd_Idle_Cnt_En;
  output Num_BValids_En;
  output wr_latency_start_d1_reg_0;
  output ARID_reg;
  output \Rd_Latency_Fifo_Wr_Data_reg[32]_0 ;
  output [0:0]S0_S_Null_Byte_Cnt;
  output update_max_Wr_Lat;
  output update_min_Wr_Lat;
  output No_Wr_Ready;
  output Rd_Add_Issue_reg_0;
  output Rd_Latency_Fifo_Wr_En;
  output Write_going_on;
  output \wptr_reg[0] ;
  output [32:0]\dout_reg[31] ;
  output \GEN_MUX_N_CNT.Add_in_reg[0] ;
  output [2:0]\GEN_MUX_N_CNT.Add_in_reg[2] ;
  output \GEN_MUX_N_CNT.Add_in_reg[2]_0 ;
  output \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ;
  output [0:0]\GEN_MUX_N_CNT.Add_in_reg[0]_0 ;
  output [4:0]\wptr_reg[4] ;
  output [4:0]\wptr_reg[4]_0 ;
  output Ext_Trig_Metric_en;
  output [0:0]E;
  output [0:0]\wptr_reg[0]_0 ;
  output [4:0]\rptr_reg[4] ;
  output [4:0]\wptr_reg[4]_1 ;
  output [0:0]\wptr_reg[0]_1 ;
  output [0:0]\wptr_reg[0]_2 ;
  output [0:0]\wptr_reg[0]_3 ;
  output [4:0]\wptr_reg[4]_2 ;
  output [4:0]\wptr_reg[4]_3 ;
  output [4:0]\wptr_reg[4]_4 ;
  output [4:0]\wptr_reg[4]_5 ;
  output [4:0]\wptr_reg[4]_6 ;
  output [4:0]\wptr_reg[4]_7 ;
  output [4:0]\wptr_reg[4]_8 ;
  output F1_Wr_Data;
  output [4:0]\rptr_reg[4]_0 ;
  output [4:0]\rptr_reg[4]_1 ;
  output [4:0]\rptr_reg[4]_2 ;
  output [4:0]\rptr_reg[4]_3 ;
  output [4:0]\rptr_reg[4]_4 ;
  output [4:0]\rptr_reg[4]_5 ;
  output [4:0]\rptr_reg[4]_6 ;
  output [4:0]\rptr_reg[4]_7 ;
  output [4:0]\rptr_reg[4]_8 ;
  output wr_latency_end_d1_reg_0;
  output \GEN_MUX_N_CNT.Add_in_Valid_reg ;
  output \GEN_MUX_N_CNT.Add_in_Valid_reg_0 ;
  output [30:0]D;
  output [29:0]\GEN_MUX_N_CNT.Add_in_reg[31] ;
  output [0:0]\GEN_MUX_N_CNT.Add_in_reg[0]_1 ;
  output \GEN_MUX_N_CNT.Add_in_reg[2]_1 ;
  output [1:0]\GEN_MUX_N_CNT.Add_in_reg[2]_2 ;
  output \GEN_MUX_N_CNT.Add_in_reg[2]_3 ;
  output [30:0]\GEN_MUX_N_CNT.Add_in_reg[31]_0 ;
  output [30:0]\GEN_MUX_N_CNT.Add_in_reg[31]_1 ;
  output \GEN_MUX_N_CNT.Add_in_Valid_reg_1 ;
  output Read_going_on;
  output [31:0]S0_Read_Latency;
  output [31:0]\GEN_MUX_N_CNT.Add_in_reg[31]_2 ;
  output [63:0]\dout_reg[61] ;
  output [32:0]\dout_reg[31]_0 ;
  output [31:0]\dout_reg[31]_1 ;
  output O366;
  output O367;
  input core_aclk;
  input dout0_0;
  input dout0_1;
  input dout0_2;
  input dout0_3;
  input dout0_4;
  input \s_level_out_bus_d4_reg[1] ;
  input Wtrans_Cnt_En0;
  input Rtrans_Cnt_En0;
  input Read_Beat_Cnt_En0;
  input p_2_out0_out;
  input p_40_in;
  input First_Read;
  input Read_Latency_One;
  input Mst_Rd_Idle_Cnt_En0;
  input Num_BValids_En0;
  input Num_RLasts_En0;
  input \USE_MON_FIFO.fifo_rd_en_reg_reg ;
  input p_2_out3_out;
  input Last_Write;
  input Write_Beat;
  input [2:0]Q;
  input Rd_Add_Issue6_out;
  input First_Write;
  input wr_latency_end;
  input wr_latency_start;
  input Slot_0_Sync_Data_Valid;
  input \dout_reg[0] ;
  input F34_Rd_Vld_reg_reg_0;
  input F34_Rd_Vld_reg_reg_1;
  input No_Wr_Ready_reg_0;
  input Rd_Lat_Start_CDC_reg;
  input \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[40] ;
  input \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[42] ;
  input \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[41] ;
  input Write_going_on_reg_0;
  input Write_iss_going_on_reg_0;
  input Write_iss_going_on;
  input Wr_Idle;
  input rd_latency_end;
  input \RID_Mask_CDC_reg[0] ;
  input \ARID_reg_reg[0]_0 ;
  input rd_latency_start;
  input [2:0]out;
  input [0:0]\s_level_out_bus_d4_reg[0] ;
  input Rd_Lat_Start;
  input Metrics_Cnt_En_Int;
  input [0:0]\s_level_out_bus_d4_reg[0]_0 ;
  input Wr_Lat_Start;
  input Wr_Lat_End;
  input [2:0]\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ;
  input \Read_Latency_Int_reg[1]_0 ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ;
  input \Max_Write_Latency_Int_reg[1]_0 ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ;
  input \Read_Latency_Int_reg[3]_0 ;
  input \Max_Write_Latency_Int_reg[3]_0 ;
  input \Read_Latency_Int_reg[4]_0 ;
  input \Max_Write_Latency_Int_reg[4]_0 ;
  input \Read_Latency_Int_reg[5]_0 ;
  input \Max_Write_Latency_Int_reg[5]_0 ;
  input \Read_Latency_Int_reg[6]_0 ;
  input \Max_Write_Latency_Int_reg[6]_0 ;
  input \Read_Latency_Int_reg[7]_0 ;
  input \Max_Write_Latency_Int_reg[7]_0 ;
  input \Read_Latency_Int_reg[8]_0 ;
  input \Max_Write_Latency_Int_reg[8]_0 ;
  input \Read_Latency_Int_reg[9]_0 ;
  input \Max_Write_Latency_Int_reg[9]_0 ;
  input \Read_Latency_Int_reg[10]_0 ;
  input \Max_Write_Latency_Int_reg[10]_0 ;
  input \Read_Latency_Int_reg[11]_0 ;
  input \Max_Write_Latency_Int_reg[11]_0 ;
  input \Read_Latency_Int_reg[12]_0 ;
  input \Max_Write_Latency_Int_reg[12]_0 ;
  input \Read_Latency_Int_reg[13]_0 ;
  input \Max_Write_Latency_Int_reg[13]_0 ;
  input \Read_Latency_Int_reg[14]_0 ;
  input \Max_Write_Latency_Int_reg[14]_0 ;
  input \Read_Latency_Int_reg[15]_0 ;
  input \Max_Write_Latency_Int_reg[15]_0 ;
  input \Read_Latency_Int_reg[16]_0 ;
  input \Max_Write_Latency_Int_reg[16]_0 ;
  input \Read_Latency_Int_reg[17]_0 ;
  input \Max_Write_Latency_Int_reg[17]_0 ;
  input \Read_Latency_Int_reg[18]_0 ;
  input \Max_Write_Latency_Int_reg[18]_0 ;
  input \Read_Latency_Int_reg[19]_0 ;
  input \Max_Write_Latency_Int_reg[19]_0 ;
  input \Read_Latency_Int_reg[20]_0 ;
  input \Max_Write_Latency_Int_reg[20]_0 ;
  input \Read_Latency_Int_reg[21]_0 ;
  input \Max_Write_Latency_Int_reg[21]_0 ;
  input \Read_Latency_Int_reg[22]_0 ;
  input \Max_Write_Latency_Int_reg[22]_0 ;
  input \Read_Latency_Int_reg[23]_0 ;
  input \Max_Write_Latency_Int_reg[23]_0 ;
  input \Read_Latency_Int_reg[24]_0 ;
  input \Max_Write_Latency_Int_reg[24]_0 ;
  input \Read_Latency_Int_reg[25]_0 ;
  input \Max_Write_Latency_Int_reg[25]_0 ;
  input \Read_Latency_Int_reg[26]_0 ;
  input \Max_Write_Latency_Int_reg[26]_0 ;
  input \Read_Latency_Int_reg[27]_0 ;
  input \Max_Write_Latency_Int_reg[27]_0 ;
  input \Read_Latency_Int_reg[28]_0 ;
  input \Max_Write_Latency_Int_reg[28]_0 ;
  input \Read_Latency_Int_reg[29]_0 ;
  input \Max_Write_Latency_Int_reg[29]_0 ;
  input \Read_Latency_Int_reg[30]_0 ;
  input \Max_Write_Latency_Int_reg[30]_0 ;
  input \Read_Latency_Int_reg[31]_0 ;
  input \Max_Write_Latency_Int_reg[31]_0 ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_1 ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_2 ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_1 ;
  input [32:0]dout0;
  input [32:0]\Count_Out_i_reg[31] ;
  input [32:0]\Rd_Latency_Fifo_Wr_Data_reg[31]_0 ;
  input [63:0]\Beat_fifo_Wr_data_reg[61]_0 ;
  input [31:0]\Slv_Wr_Idle_Fifo_Wr_data_reg[31]_0 ;
  input [1:0]UNCONN_IN;
  input Read_Beat_Cnt_En1;
  input \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] ;
  input [0:0]\RID_Mask_CDC_reg[0]_0 ;
  input [0:0]\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ;

  wire ARID_reg;
  wire \ARID_reg_reg[0]_0 ;
  wire Beat_fifo_Wr_data;
  wire \Beat_fifo_Wr_data[35]_i_2_n_0 ;
  wire \Beat_fifo_Wr_data[35]_i_3_n_0 ;
  wire \Beat_fifo_Wr_data[35]_i_4_n_0 ;
  wire \Beat_fifo_Wr_data[35]_i_5_n_0 ;
  wire \Beat_fifo_Wr_data[39]_i_2_n_0 ;
  wire \Beat_fifo_Wr_data[39]_i_3_n_0 ;
  wire \Beat_fifo_Wr_data[39]_i_4_n_0 ;
  wire \Beat_fifo_Wr_data[39]_i_5_n_0 ;
  wire \Beat_fifo_Wr_data[43]_i_2_n_0 ;
  wire \Beat_fifo_Wr_data[43]_i_3_n_0 ;
  wire \Beat_fifo_Wr_data[43]_i_4_n_0 ;
  wire \Beat_fifo_Wr_data[43]_i_5_n_0 ;
  wire \Beat_fifo_Wr_data[47]_i_2_n_0 ;
  wire \Beat_fifo_Wr_data[47]_i_3_n_0 ;
  wire \Beat_fifo_Wr_data[47]_i_4_n_0 ;
  wire \Beat_fifo_Wr_data[47]_i_5_n_0 ;
  wire \Beat_fifo_Wr_data[51]_i_2_n_0 ;
  wire \Beat_fifo_Wr_data[51]_i_3_n_0 ;
  wire \Beat_fifo_Wr_data[51]_i_4_n_0 ;
  wire \Beat_fifo_Wr_data[51]_i_5_n_0 ;
  wire \Beat_fifo_Wr_data[55]_i_2_n_0 ;
  wire \Beat_fifo_Wr_data[55]_i_3_n_0 ;
  wire \Beat_fifo_Wr_data[55]_i_4_n_0 ;
  wire \Beat_fifo_Wr_data[55]_i_5_n_0 ;
  wire \Beat_fifo_Wr_data[59]_i_2_n_0 ;
  wire \Beat_fifo_Wr_data[59]_i_3_n_0 ;
  wire \Beat_fifo_Wr_data[59]_i_4_n_0 ;
  wire \Beat_fifo_Wr_data[59]_i_5_n_0 ;
  wire \Beat_fifo_Wr_data[63]_i_3_n_0 ;
  wire \Beat_fifo_Wr_data[63]_i_4_n_0 ;
  wire \Beat_fifo_Wr_data[63]_i_5_n_0 ;
  wire \Beat_fifo_Wr_data[63]_i_6_n_0 ;
  wire \Beat_fifo_Wr_data_reg[35]_i_1_n_0 ;
  wire \Beat_fifo_Wr_data_reg[35]_i_1_n_1 ;
  wire \Beat_fifo_Wr_data_reg[35]_i_1_n_2 ;
  wire \Beat_fifo_Wr_data_reg[35]_i_1_n_3 ;
  wire \Beat_fifo_Wr_data_reg[35]_i_1_n_4 ;
  wire \Beat_fifo_Wr_data_reg[35]_i_1_n_5 ;
  wire \Beat_fifo_Wr_data_reg[35]_i_1_n_6 ;
  wire \Beat_fifo_Wr_data_reg[35]_i_1_n_7 ;
  wire \Beat_fifo_Wr_data_reg[39]_i_1_n_0 ;
  wire \Beat_fifo_Wr_data_reg[39]_i_1_n_1 ;
  wire \Beat_fifo_Wr_data_reg[39]_i_1_n_2 ;
  wire \Beat_fifo_Wr_data_reg[39]_i_1_n_3 ;
  wire \Beat_fifo_Wr_data_reg[39]_i_1_n_4 ;
  wire \Beat_fifo_Wr_data_reg[39]_i_1_n_5 ;
  wire \Beat_fifo_Wr_data_reg[39]_i_1_n_6 ;
  wire \Beat_fifo_Wr_data_reg[39]_i_1_n_7 ;
  wire \Beat_fifo_Wr_data_reg[43]_i_1_n_0 ;
  wire \Beat_fifo_Wr_data_reg[43]_i_1_n_1 ;
  wire \Beat_fifo_Wr_data_reg[43]_i_1_n_2 ;
  wire \Beat_fifo_Wr_data_reg[43]_i_1_n_3 ;
  wire \Beat_fifo_Wr_data_reg[43]_i_1_n_4 ;
  wire \Beat_fifo_Wr_data_reg[43]_i_1_n_5 ;
  wire \Beat_fifo_Wr_data_reg[43]_i_1_n_6 ;
  wire \Beat_fifo_Wr_data_reg[43]_i_1_n_7 ;
  wire \Beat_fifo_Wr_data_reg[47]_i_1_n_0 ;
  wire \Beat_fifo_Wr_data_reg[47]_i_1_n_1 ;
  wire \Beat_fifo_Wr_data_reg[47]_i_1_n_2 ;
  wire \Beat_fifo_Wr_data_reg[47]_i_1_n_3 ;
  wire \Beat_fifo_Wr_data_reg[47]_i_1_n_4 ;
  wire \Beat_fifo_Wr_data_reg[47]_i_1_n_5 ;
  wire \Beat_fifo_Wr_data_reg[47]_i_1_n_6 ;
  wire \Beat_fifo_Wr_data_reg[47]_i_1_n_7 ;
  wire \Beat_fifo_Wr_data_reg[51]_i_1_n_0 ;
  wire \Beat_fifo_Wr_data_reg[51]_i_1_n_1 ;
  wire \Beat_fifo_Wr_data_reg[51]_i_1_n_2 ;
  wire \Beat_fifo_Wr_data_reg[51]_i_1_n_3 ;
  wire \Beat_fifo_Wr_data_reg[51]_i_1_n_4 ;
  wire \Beat_fifo_Wr_data_reg[51]_i_1_n_5 ;
  wire \Beat_fifo_Wr_data_reg[51]_i_1_n_6 ;
  wire \Beat_fifo_Wr_data_reg[51]_i_1_n_7 ;
  wire \Beat_fifo_Wr_data_reg[55]_i_1_n_0 ;
  wire \Beat_fifo_Wr_data_reg[55]_i_1_n_1 ;
  wire \Beat_fifo_Wr_data_reg[55]_i_1_n_2 ;
  wire \Beat_fifo_Wr_data_reg[55]_i_1_n_3 ;
  wire \Beat_fifo_Wr_data_reg[55]_i_1_n_4 ;
  wire \Beat_fifo_Wr_data_reg[55]_i_1_n_5 ;
  wire \Beat_fifo_Wr_data_reg[55]_i_1_n_6 ;
  wire \Beat_fifo_Wr_data_reg[55]_i_1_n_7 ;
  wire \Beat_fifo_Wr_data_reg[59]_i_1_n_0 ;
  wire \Beat_fifo_Wr_data_reg[59]_i_1_n_1 ;
  wire \Beat_fifo_Wr_data_reg[59]_i_1_n_2 ;
  wire \Beat_fifo_Wr_data_reg[59]_i_1_n_3 ;
  wire \Beat_fifo_Wr_data_reg[59]_i_1_n_4 ;
  wire \Beat_fifo_Wr_data_reg[59]_i_1_n_5 ;
  wire \Beat_fifo_Wr_data_reg[59]_i_1_n_6 ;
  wire \Beat_fifo_Wr_data_reg[59]_i_1_n_7 ;
  wire [63:0]\Beat_fifo_Wr_data_reg[61]_0 ;
  wire \Beat_fifo_Wr_data_reg[63]_i_2_n_1 ;
  wire \Beat_fifo_Wr_data_reg[63]_i_2_n_2 ;
  wire \Beat_fifo_Wr_data_reg[63]_i_2_n_3 ;
  wire \Beat_fifo_Wr_data_reg[63]_i_2_n_4 ;
  wire \Beat_fifo_Wr_data_reg[63]_i_2_n_5 ;
  wire \Beat_fifo_Wr_data_reg[63]_i_2_n_6 ;
  wire \Beat_fifo_Wr_data_reg[63]_i_2_n_7 ;
  wire Beat_fifo_Wr_en;
  wire [32:0]\Count_Out_i_reg[31] ;
  wire [30:0]D;
  wire Data_valid_reg1;
  wire Data_valid_reg2;
  wire [0:0]E;
  wire Ext_Trig_Metric_en;
  wire [1:0]Ext_Triggers_Sync;
  wire [1:0]Ext_Triggers_Sync_d1;
  wire F12_Rd_En;
  wire F12_Rd_Vld;
  wire F1_Empty;
  wire F1_Rd_Data;
  wire F1_Wr_Data;
  wire F2_Empty;
  wire F2_Rd_Data;
  wire F34_Rd_En;
  wire F34_Rd_Vld;
  wire F34_Rd_Vld_reg__0;
  wire F34_Rd_Vld_reg_d2;
  wire F34_Rd_Vld_reg_reg_0;
  wire F34_Rd_Vld_reg_reg_1;
  wire F3_Empty;
  wire [31:0]F3_Rd_Data;
  wire F4_Empty;
  wire [32:0]F4_Rd_Data;
  wire F4_WR_LAT_END_n_12;
  wire F4_WR_LAT_END_n_13;
  wire F4_WR_LAT_END_n_14;
  wire F4_WR_LAT_END_n_15;
  wire F4_WR_LAT_END_n_49;
  wire F4_WR_LAT_END_n_50;
  wire F4_WR_LAT_END_n_51;
  wire F4_WR_LAT_END_n_52;
  wire F4_WR_LAT_END_n_53;
  wire F4_WR_LAT_END_n_54;
  wire F4_WR_LAT_END_n_55;
  wire F4_WR_LAT_END_n_56;
  wire F4_WR_LAT_END_n_57;
  wire F4_WR_LAT_END_n_58;
  wire F4_WR_LAT_END_n_59;
  wire F4_WR_LAT_END_n_60;
  wire F4_WR_LAT_END_n_61;
  wire F4_WR_LAT_END_n_62;
  wire F4_WR_LAT_END_n_63;
  wire F4_WR_LAT_END_n_64;
  wire F4_WR_LAT_END_n_65;
  wire F4_WR_LAT_END_n_66;
  wire F4_WR_LAT_END_n_67;
  wire F4_WR_LAT_END_n_68;
  wire F4_WR_LAT_END_n_69;
  wire F4_WR_LAT_END_n_70;
  wire F4_WR_LAT_END_n_71;
  wire F4_WR_LAT_END_n_72;
  wire F4_WR_LAT_END_n_73;
  wire F4_WR_LAT_END_n_74;
  wire F4_WR_LAT_END_n_75;
  wire F4_WR_LAT_END_n_76;
  wire FBC1_Empty;
  wire FBC_Empty;
  wire FBC_Rd_Data;
  wire FBC_Rd_En;
  wire FBC_Rd_Vld;
  wire FSWI1_Empty;
  wire [31:1]FSWI1_Rd_Data;
  wire FSWI_Empty;
  wire FSWI_Rd_Data;
  wire FSWI_Rd_En;
  wire FSWI_Rd_Vld;
  wire FSWI_WR_LAST_CNT_n_47;
  wire FSWI_WR_LAST_CNT_n_48;
  wire FSWI_WR_LAST_CNT_n_49;
  wire FSWI_WR_LAST_CNT_n_50;
  wire FSWI_WR_LAST_CNT_n_51;
  wire FSWI_WR_LAST_CNT_n_52;
  wire FSWI_WR_LAST_CNT_n_53;
  wire FSWI_WR_LAST_CNT_n_54;
  wire FSWI_WR_LAST_CNT_n_55;
  wire FSWI_WR_LAST_CNT_n_56;
  wire FSWI_WR_LAST_CNT_n_57;
  wire FSWI_WR_LAST_CNT_n_58;
  wire FSWI_WR_LAST_CNT_n_59;
  wire FSWI_WR_LAST_CNT_n_60;
  wire FSWI_WR_LAST_CNT_n_61;
  wire FSWI_WR_LAST_CNT_n_62;
  wire FSWI_WR_LAST_CNT_n_63;
  wire FSWI_WR_LAST_CNT_n_64;
  wire FSWI_WR_LAST_CNT_n_65;
  wire FSWI_WR_LAST_CNT_n_66;
  wire FSWI_WR_LAST_CNT_n_67;
  wire FSWI_WR_LAST_CNT_n_68;
  wire FSWI_WR_LAST_CNT_n_69;
  wire FSWI_WR_LAST_CNT_n_70;
  wire FSWI_WR_LAST_CNT_n_71;
  wire FSWI_WR_LAST_CNT_n_72;
  wire FSWI_WR_LAST_CNT_n_73;
  wire FSWI_WR_LAST_CNT_n_74;
  wire FSWI_WR_LAST_CNT_n_75;
  wire FSWI_WR_LAST_CNT_n_76;
  wire FWL1_Empty;
  wire FWL_Empty;
  wire FWL_Rd_En;
  wire FWL_Rd_Vld;
  wire First_Read;
  wire First_Read_reg;
  wire First_Write;
  wire First_Write_d1;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_1 ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ;
  wire [2:0]\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_1 ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_2 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_reg ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_reg_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_reg_1 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[0] ;
  wire [0:0]\GEN_MUX_N_CNT.Add_in_reg[0]_0 ;
  wire [0:0]\GEN_MUX_N_CNT.Add_in_reg[0]_1 ;
  wire [2:0]\GEN_MUX_N_CNT.Add_in_reg[2] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[2]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[2]_1 ;
  wire [1:0]\GEN_MUX_N_CNT.Add_in_reg[2]_2 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[2]_3 ;
  wire [29:0]\GEN_MUX_N_CNT.Add_in_reg[31] ;
  wire [30:0]\GEN_MUX_N_CNT.Add_in_reg[31]_0 ;
  wire [30:0]\GEN_MUX_N_CNT.Add_in_reg[31]_1 ;
  wire [31:0]\GEN_MUX_N_CNT.Add_in_reg[31]_2 ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ;
  wire Last_Read_reg;
  wire Last_Write;
  wire Last_fifo_Wr_en;
  wire Max_Read_Latency_Int0;
  wire Max_Read_Latency_Int1;
  wire \Max_Read_Latency_Int[31]_i_10_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_11_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_13_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_14_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_15_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_16_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_17_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_18_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_19_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_20_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_22_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_23_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_24_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_25_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_26_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_27_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_28_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_29_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_30_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_31_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_32_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_33_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_34_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_35_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_36_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_37_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_4_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_5_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_6_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_7_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_8_n_0 ;
  wire \Max_Read_Latency_Int[31]_i_9_n_0 ;
  wire \Max_Read_Latency_Int_reg[31]_i_12_n_0 ;
  wire \Max_Read_Latency_Int_reg[31]_i_12_n_1 ;
  wire \Max_Read_Latency_Int_reg[31]_i_12_n_2 ;
  wire \Max_Read_Latency_Int_reg[31]_i_12_n_3 ;
  wire \Max_Read_Latency_Int_reg[31]_i_21_n_0 ;
  wire \Max_Read_Latency_Int_reg[31]_i_21_n_1 ;
  wire \Max_Read_Latency_Int_reg[31]_i_21_n_2 ;
  wire \Max_Read_Latency_Int_reg[31]_i_21_n_3 ;
  wire \Max_Read_Latency_Int_reg[31]_i_2_n_1 ;
  wire \Max_Read_Latency_Int_reg[31]_i_2_n_2 ;
  wire \Max_Read_Latency_Int_reg[31]_i_2_n_3 ;
  wire \Max_Read_Latency_Int_reg[31]_i_3_n_0 ;
  wire \Max_Read_Latency_Int_reg[31]_i_3_n_1 ;
  wire \Max_Read_Latency_Int_reg[31]_i_3_n_2 ;
  wire \Max_Read_Latency_Int_reg[31]_i_3_n_3 ;
  wire Max_Write_Latency_Int0;
  wire \Max_Write_Latency_Int_reg[10]_0 ;
  wire \Max_Write_Latency_Int_reg[11]_0 ;
  wire \Max_Write_Latency_Int_reg[12]_0 ;
  wire \Max_Write_Latency_Int_reg[13]_0 ;
  wire \Max_Write_Latency_Int_reg[14]_0 ;
  wire \Max_Write_Latency_Int_reg[15]_0 ;
  wire \Max_Write_Latency_Int_reg[16]_0 ;
  wire \Max_Write_Latency_Int_reg[17]_0 ;
  wire \Max_Write_Latency_Int_reg[18]_0 ;
  wire \Max_Write_Latency_Int_reg[19]_0 ;
  wire \Max_Write_Latency_Int_reg[1]_0 ;
  wire \Max_Write_Latency_Int_reg[20]_0 ;
  wire \Max_Write_Latency_Int_reg[21]_0 ;
  wire \Max_Write_Latency_Int_reg[22]_0 ;
  wire \Max_Write_Latency_Int_reg[23]_0 ;
  wire \Max_Write_Latency_Int_reg[24]_0 ;
  wire \Max_Write_Latency_Int_reg[25]_0 ;
  wire \Max_Write_Latency_Int_reg[26]_0 ;
  wire \Max_Write_Latency_Int_reg[27]_0 ;
  wire \Max_Write_Latency_Int_reg[28]_0 ;
  wire \Max_Write_Latency_Int_reg[29]_0 ;
  wire \Max_Write_Latency_Int_reg[30]_0 ;
  wire \Max_Write_Latency_Int_reg[31]_0 ;
  wire \Max_Write_Latency_Int_reg[3]_0 ;
  wire \Max_Write_Latency_Int_reg[4]_0 ;
  wire \Max_Write_Latency_Int_reg[5]_0 ;
  wire \Max_Write_Latency_Int_reg[6]_0 ;
  wire \Max_Write_Latency_Int_reg[7]_0 ;
  wire \Max_Write_Latency_Int_reg[8]_0 ;
  wire \Max_Write_Latency_Int_reg[9]_0 ;
  wire Metrics_Cnt_En_Int;
  wire Min_Read_Latency_Int0;
  wire Min_Read_Latency_Int1;
  wire \Min_Read_Latency_Int[31]_i_10_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_11_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_13_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_14_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_15_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_16_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_17_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_18_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_19_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_20_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_22_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_23_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_24_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_25_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_26_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_27_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_28_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_29_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_30_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_31_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_32_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_33_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_34_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_35_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_36_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_37_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_4_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_5_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_6_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_7_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_8_n_0 ;
  wire \Min_Read_Latency_Int[31]_i_9_n_0 ;
  wire \Min_Read_Latency_Int_reg[31]_i_12_n_0 ;
  wire \Min_Read_Latency_Int_reg[31]_i_12_n_1 ;
  wire \Min_Read_Latency_Int_reg[31]_i_12_n_2 ;
  wire \Min_Read_Latency_Int_reg[31]_i_12_n_3 ;
  wire \Min_Read_Latency_Int_reg[31]_i_21_n_0 ;
  wire \Min_Read_Latency_Int_reg[31]_i_21_n_1 ;
  wire \Min_Read_Latency_Int_reg[31]_i_21_n_2 ;
  wire \Min_Read_Latency_Int_reg[31]_i_21_n_3 ;
  wire \Min_Read_Latency_Int_reg[31]_i_2_n_1 ;
  wire \Min_Read_Latency_Int_reg[31]_i_2_n_2 ;
  wire \Min_Read_Latency_Int_reg[31]_i_2_n_3 ;
  wire \Min_Read_Latency_Int_reg[31]_i_3_n_0 ;
  wire \Min_Read_Latency_Int_reg[31]_i_3_n_1 ;
  wire \Min_Read_Latency_Int_reg[31]_i_3_n_2 ;
  wire \Min_Read_Latency_Int_reg[31]_i_3_n_3 ;
  wire Min_Write_Latency_Int0;
  wire Mst_Rd_Idle_Cnt_En;
  wire Mst_Rd_Idle_Cnt_En0;
  wire No_Wr_Ready;
  wire No_Wr_Ready_reg_0;
  wire Num_BValids_En;
  wire Num_BValids_En0;
  wire Num_RLasts_En;
  wire Num_RLasts_En0;
  wire O366;
  wire O367;
  wire [2:0]Q;
  wire \RID_Mask_CDC_reg[0] ;
  wire [0:0]\RID_Mask_CDC_reg[0]_0 ;
  wire Rd_Add_Issue6_out;
  wire Rd_Add_Issue_reg_0;
  wire Rd_Lat_Start;
  wire Rd_Lat_Start_CDC_reg;
  wire Rd_Latency_Fifo_Empty;
  wire [32:0]Rd_Latency_Fifo_Rd_Data;
  wire [32:32]Rd_Latency_Fifo_Rd_Data_D1;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[0] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[10] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[11] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[12] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[13] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[14] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[15] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[16] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[17] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[18] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[19] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[1] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[20] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[21] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[22] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[23] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[24] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[25] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[26] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[27] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[28] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[29] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[2] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[30] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[31] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[3] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[4] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[5] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[6] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[7] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[8] ;
  wire \Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[9] ;
  wire Rd_Latency_Fifo_Rd_En;
  wire Rd_Latency_Fifo_Rd_En_D1;
  wire [32:0]\Rd_Latency_Fifo_Wr_Data_reg[31]_0 ;
  wire \Rd_Latency_Fifo_Wr_Data_reg[32]_0 ;
  wire Rd_Latency_Fifo_Wr_En;
  wire Read_Beat_Cnt_En0;
  wire Read_Beat_Cnt_En1;
  wire [31:0]Read_Latency_Cnt_Out;
  wire [32:0]Read_Latency_Cnt_Out_D1;
  wire [32:32]Read_Latency_Cnt_Out_D2;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[0] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[10] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[11] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[12] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[13] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[14] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[15] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[16] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[17] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[18] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[19] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[1] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[20] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[21] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[22] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[23] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[24] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[25] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[26] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[27] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[28] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[29] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[2] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[30] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[31] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[3] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[4] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[5] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[6] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[7] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[8] ;
  wire \Read_Latency_Cnt_Out_D2_reg_n_0_[9] ;
  wire Read_Latency_Cnt_Ovf;
  wire Read_Latency_En;
  wire Read_Latency_En_Int2_out;
  wire [15:15]Read_Latency_Int;
  wire [31:0]Read_Latency_Int1_in;
  wire \Read_Latency_Int[0]_i_1_n_0 ;
  wire \Read_Latency_Int[11]_i_2_n_0 ;
  wire \Read_Latency_Int[11]_i_3_n_0 ;
  wire \Read_Latency_Int[11]_i_4_n_0 ;
  wire \Read_Latency_Int[11]_i_5_n_0 ;
  wire \Read_Latency_Int[11]_i_6_n_0 ;
  wire \Read_Latency_Int[11]_i_7_n_0 ;
  wire \Read_Latency_Int[11]_i_8_n_0 ;
  wire \Read_Latency_Int[11]_i_9_n_0 ;
  wire \Read_Latency_Int[15]_i_2_n_0 ;
  wire \Read_Latency_Int[15]_i_3_n_0 ;
  wire \Read_Latency_Int[15]_i_4_n_0 ;
  wire \Read_Latency_Int[15]_i_5_n_0 ;
  wire \Read_Latency_Int[15]_i_6_n_0 ;
  wire \Read_Latency_Int[15]_i_7_n_0 ;
  wire \Read_Latency_Int[15]_i_8_n_0 ;
  wire \Read_Latency_Int[15]_i_9_n_0 ;
  wire \Read_Latency_Int[19]_i_2_n_0 ;
  wire \Read_Latency_Int[19]_i_3_n_0 ;
  wire \Read_Latency_Int[19]_i_4_n_0 ;
  wire \Read_Latency_Int[19]_i_5_n_0 ;
  wire \Read_Latency_Int[19]_i_6_n_0 ;
  wire \Read_Latency_Int[19]_i_7_n_0 ;
  wire \Read_Latency_Int[19]_i_8_n_0 ;
  wire \Read_Latency_Int[19]_i_9_n_0 ;
  wire \Read_Latency_Int[23]_i_2_n_0 ;
  wire \Read_Latency_Int[23]_i_3_n_0 ;
  wire \Read_Latency_Int[23]_i_4_n_0 ;
  wire \Read_Latency_Int[23]_i_5_n_0 ;
  wire \Read_Latency_Int[23]_i_6_n_0 ;
  wire \Read_Latency_Int[23]_i_7_n_0 ;
  wire \Read_Latency_Int[23]_i_8_n_0 ;
  wire \Read_Latency_Int[23]_i_9_n_0 ;
  wire \Read_Latency_Int[27]_i_2_n_0 ;
  wire \Read_Latency_Int[27]_i_3_n_0 ;
  wire \Read_Latency_Int[27]_i_4_n_0 ;
  wire \Read_Latency_Int[27]_i_5_n_0 ;
  wire \Read_Latency_Int[27]_i_6_n_0 ;
  wire \Read_Latency_Int[27]_i_7_n_0 ;
  wire \Read_Latency_Int[27]_i_8_n_0 ;
  wire \Read_Latency_Int[27]_i_9_n_0 ;
  wire \Read_Latency_Int[31]_i_12_n_0 ;
  wire \Read_Latency_Int[31]_i_13_n_0 ;
  wire \Read_Latency_Int[31]_i_14_n_0 ;
  wire \Read_Latency_Int[31]_i_15_n_0 ;
  wire \Read_Latency_Int[31]_i_16_n_0 ;
  wire \Read_Latency_Int[31]_i_17_n_0 ;
  wire \Read_Latency_Int[31]_i_18_n_0 ;
  wire \Read_Latency_Int[31]_i_19_n_0 ;
  wire \Read_Latency_Int[31]_i_21_n_0 ;
  wire \Read_Latency_Int[31]_i_22_n_0 ;
  wire \Read_Latency_Int[31]_i_23_n_0 ;
  wire \Read_Latency_Int[31]_i_24_n_0 ;
  wire \Read_Latency_Int[31]_i_25_n_0 ;
  wire \Read_Latency_Int[31]_i_26_n_0 ;
  wire \Read_Latency_Int[31]_i_27_n_0 ;
  wire \Read_Latency_Int[31]_i_28_n_0 ;
  wire \Read_Latency_Int[31]_i_30_n_0 ;
  wire \Read_Latency_Int[31]_i_31_n_0 ;
  wire \Read_Latency_Int[31]_i_32_n_0 ;
  wire \Read_Latency_Int[31]_i_33_n_0 ;
  wire \Read_Latency_Int[31]_i_34_n_0 ;
  wire \Read_Latency_Int[31]_i_35_n_0 ;
  wire \Read_Latency_Int[31]_i_36_n_0 ;
  wire \Read_Latency_Int[31]_i_37_n_0 ;
  wire \Read_Latency_Int[31]_i_38_n_0 ;
  wire \Read_Latency_Int[31]_i_39_n_0 ;
  wire \Read_Latency_Int[31]_i_3_n_0 ;
  wire \Read_Latency_Int[31]_i_40_n_0 ;
  wire \Read_Latency_Int[31]_i_41_n_0 ;
  wire \Read_Latency_Int[31]_i_42_n_0 ;
  wire \Read_Latency_Int[31]_i_43_n_0 ;
  wire \Read_Latency_Int[31]_i_44_n_0 ;
  wire \Read_Latency_Int[31]_i_45_n_0 ;
  wire \Read_Latency_Int[31]_i_4_n_0 ;
  wire \Read_Latency_Int[31]_i_5_n_0 ;
  wire \Read_Latency_Int[31]_i_6_n_0 ;
  wire \Read_Latency_Int[31]_i_7_n_0 ;
  wire \Read_Latency_Int[31]_i_8_n_0 ;
  wire \Read_Latency_Int[31]_i_9_n_0 ;
  wire \Read_Latency_Int[3]_i_2_n_0 ;
  wire \Read_Latency_Int[3]_i_3_n_0 ;
  wire \Read_Latency_Int[3]_i_4_n_0 ;
  wire \Read_Latency_Int[3]_i_5_n_0 ;
  wire \Read_Latency_Int[3]_i_6_n_0 ;
  wire \Read_Latency_Int[3]_i_7_n_0 ;
  wire \Read_Latency_Int[3]_i_8_n_0 ;
  wire \Read_Latency_Int[3]_i_9_n_0 ;
  wire \Read_Latency_Int[7]_i_2_n_0 ;
  wire \Read_Latency_Int[7]_i_3_n_0 ;
  wire \Read_Latency_Int[7]_i_4_n_0 ;
  wire \Read_Latency_Int[7]_i_5_n_0 ;
  wire \Read_Latency_Int[7]_i_6_n_0 ;
  wire \Read_Latency_Int[7]_i_7_n_0 ;
  wire \Read_Latency_Int[7]_i_8_n_0 ;
  wire \Read_Latency_Int[7]_i_9_n_0 ;
  wire \Read_Latency_Int_reg[10]_0 ;
  wire \Read_Latency_Int_reg[11]_0 ;
  wire \Read_Latency_Int_reg[11]_i_1_n_0 ;
  wire \Read_Latency_Int_reg[11]_i_1_n_1 ;
  wire \Read_Latency_Int_reg[11]_i_1_n_2 ;
  wire \Read_Latency_Int_reg[11]_i_1_n_3 ;
  wire \Read_Latency_Int_reg[12]_0 ;
  wire \Read_Latency_Int_reg[13]_0 ;
  wire \Read_Latency_Int_reg[14]_0 ;
  wire \Read_Latency_Int_reg[15]_0 ;
  wire \Read_Latency_Int_reg[15]_i_1_n_0 ;
  wire \Read_Latency_Int_reg[15]_i_1_n_1 ;
  wire \Read_Latency_Int_reg[15]_i_1_n_2 ;
  wire \Read_Latency_Int_reg[15]_i_1_n_3 ;
  wire \Read_Latency_Int_reg[16]_0 ;
  wire \Read_Latency_Int_reg[17]_0 ;
  wire \Read_Latency_Int_reg[18]_0 ;
  wire \Read_Latency_Int_reg[19]_0 ;
  wire \Read_Latency_Int_reg[19]_i_1_n_0 ;
  wire \Read_Latency_Int_reg[19]_i_1_n_1 ;
  wire \Read_Latency_Int_reg[19]_i_1_n_2 ;
  wire \Read_Latency_Int_reg[19]_i_1_n_3 ;
  wire \Read_Latency_Int_reg[1]_0 ;
  wire \Read_Latency_Int_reg[20]_0 ;
  wire \Read_Latency_Int_reg[21]_0 ;
  wire \Read_Latency_Int_reg[22]_0 ;
  wire \Read_Latency_Int_reg[23]_0 ;
  wire \Read_Latency_Int_reg[23]_i_1_n_0 ;
  wire \Read_Latency_Int_reg[23]_i_1_n_1 ;
  wire \Read_Latency_Int_reg[23]_i_1_n_2 ;
  wire \Read_Latency_Int_reg[23]_i_1_n_3 ;
  wire \Read_Latency_Int_reg[24]_0 ;
  wire \Read_Latency_Int_reg[25]_0 ;
  wire \Read_Latency_Int_reg[26]_0 ;
  wire \Read_Latency_Int_reg[27]_0 ;
  wire \Read_Latency_Int_reg[27]_i_1_n_0 ;
  wire \Read_Latency_Int_reg[27]_i_1_n_1 ;
  wire \Read_Latency_Int_reg[27]_i_1_n_2 ;
  wire \Read_Latency_Int_reg[27]_i_1_n_3 ;
  wire \Read_Latency_Int_reg[28]_0 ;
  wire \Read_Latency_Int_reg[29]_0 ;
  wire \Read_Latency_Int_reg[30]_0 ;
  wire \Read_Latency_Int_reg[31]_0 ;
  wire \Read_Latency_Int_reg[31]_i_10_n_0 ;
  wire \Read_Latency_Int_reg[31]_i_10_n_1 ;
  wire \Read_Latency_Int_reg[31]_i_10_n_2 ;
  wire \Read_Latency_Int_reg[31]_i_10_n_3 ;
  wire \Read_Latency_Int_reg[31]_i_11_n_0 ;
  wire \Read_Latency_Int_reg[31]_i_11_n_1 ;
  wire \Read_Latency_Int_reg[31]_i_11_n_2 ;
  wire \Read_Latency_Int_reg[31]_i_11_n_3 ;
  wire \Read_Latency_Int_reg[31]_i_20_n_0 ;
  wire \Read_Latency_Int_reg[31]_i_20_n_1 ;
  wire \Read_Latency_Int_reg[31]_i_20_n_2 ;
  wire \Read_Latency_Int_reg[31]_i_20_n_3 ;
  wire \Read_Latency_Int_reg[31]_i_29_n_0 ;
  wire \Read_Latency_Int_reg[31]_i_29_n_1 ;
  wire \Read_Latency_Int_reg[31]_i_29_n_2 ;
  wire \Read_Latency_Int_reg[31]_i_29_n_3 ;
  wire \Read_Latency_Int_reg[31]_i_2_n_1 ;
  wire \Read_Latency_Int_reg[31]_i_2_n_2 ;
  wire \Read_Latency_Int_reg[31]_i_2_n_3 ;
  wire \Read_Latency_Int_reg[3]_0 ;
  wire \Read_Latency_Int_reg[3]_i_1_n_0 ;
  wire \Read_Latency_Int_reg[3]_i_1_n_1 ;
  wire \Read_Latency_Int_reg[3]_i_1_n_2 ;
  wire \Read_Latency_Int_reg[3]_i_1_n_3 ;
  wire \Read_Latency_Int_reg[4]_0 ;
  wire \Read_Latency_Int_reg[5]_0 ;
  wire \Read_Latency_Int_reg[6]_0 ;
  wire \Read_Latency_Int_reg[7]_0 ;
  wire \Read_Latency_Int_reg[7]_i_1_n_0 ;
  wire \Read_Latency_Int_reg[7]_i_1_n_1 ;
  wire \Read_Latency_Int_reg[7]_i_1_n_2 ;
  wire \Read_Latency_Int_reg[7]_i_1_n_3 ;
  wire \Read_Latency_Int_reg[8]_0 ;
  wire \Read_Latency_Int_reg[9]_0 ;
  wire Read_Latency_One;
  wire Read_Latency_One_D1;
  wire Read_Latency_One_D10;
  wire Read_Latency_One_reg_n_0;
  wire Read_going_on;
  wire Read_going_on_i_1_n_0;
  wire Rtrans_Cnt_En;
  wire Rtrans_Cnt_En0;
  wire [2:2]S0_Max_Read_Latency;
  wire [2:2]S0_Min_Read_Latency;
  wire [31:1]S0_Min_Write_Latency;
  wire [0:0]S0_Read_Byte_Cnt;
  wire S0_Read_Byte_Cnt_En;
  wire [31:0]S0_Read_Latency;
  wire [0:0]S0_S_Null_Byte_Cnt;
  wire [31:1]S0_Write_Latency;
  wire Slot_0_Sync_Data_Valid;
  wire \Slv_Wr_Idle_Cnt_i[0]_i_4_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[0]_i_5_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[0]_i_6_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[0]_i_7_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[12]_i_2_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[12]_i_3_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[12]_i_4_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[12]_i_5_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[16]_i_2_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[16]_i_3_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[16]_i_4_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[16]_i_5_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[20]_i_2_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[20]_i_3_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[20]_i_4_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[20]_i_5_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[24]_i_2_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[24]_i_3_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[24]_i_4_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[24]_i_5_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[28]_i_2_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[28]_i_3_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[28]_i_4_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[28]_i_5_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[4]_i_2_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[4]_i_3_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[4]_i_4_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[4]_i_5_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[8]_i_2_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[8]_i_3_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[8]_i_4_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i[8]_i_5_n_0 ;
  wire [31:0]Slv_Wr_Idle_Cnt_i_reg;
  wire \Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_1 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_2 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_3 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_4 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_5 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_6 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_7 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_1 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_2 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_3 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_4 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_5 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_6 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_7 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_1 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_2 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_3 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_4 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_5 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_6 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_7 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_1 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_2 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_3 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_4 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_5 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_6 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_7 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_1 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_2 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_3 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_4 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_5 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_6 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_7 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_1 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_2 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_3 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_4 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_5 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_6 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_7 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_1 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_2 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_3 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_4 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_5 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_6 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_7 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_0 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_1 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_2 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_3 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_4 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_5 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_6 ;
  wire \Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_7 ;
  wire [31:0]\Slv_Wr_Idle_Fifo_Wr_data_reg[31]_0 ;
  wire [1:0]UNCONN_IN;
  wire \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] ;
  wire [0:0]\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ;
  wire \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[40] ;
  wire \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[41] ;
  wire \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[42] ;
  wire \USE_MON_FIFO.fifo_rd_en_reg_reg ;
  wire Wr_Idle;
  wire [31:0]Wr_Lat_Cnt_Diff_reg;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[0] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[10] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[11] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[12] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[13] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[14] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[15] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[16] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[17] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[18] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[19] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[1] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[20] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[21] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[22] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[23] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[24] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[25] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[26] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[27] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[28] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[29] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[2] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[30] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[31] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[3] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[4] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[5] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[6] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[7] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[8] ;
  wire \Wr_Lat_Cnt_Diff_reg1_reg_n_0_[9] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[0] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[10] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[11] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[12] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[13] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[14] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[15] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[16] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[17] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[18] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[19] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[1] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[20] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[21] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[22] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[23] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[24] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[25] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[26] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[27] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[28] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[29] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[2] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[30] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[31] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[3] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[4] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[5] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[6] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[7] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[8] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg_n_0_[9] ;
  wire Wr_Lat_End;
  wire Wr_Lat_Start;
  wire Wr_cnt_ld;
  wire Write_Beat;
  wire \Write_Beat_Cnt_i[0]_i_3_n_0 ;
  wire \Write_Beat_Cnt_i[0]_i_4_n_0 ;
  wire \Write_Beat_Cnt_i[0]_i_5_n_0 ;
  wire \Write_Beat_Cnt_i[0]_i_6_n_0 ;
  wire \Write_Beat_Cnt_i[12]_i_2_n_0 ;
  wire \Write_Beat_Cnt_i[12]_i_3_n_0 ;
  wire \Write_Beat_Cnt_i[12]_i_4_n_0 ;
  wire \Write_Beat_Cnt_i[12]_i_5_n_0 ;
  wire \Write_Beat_Cnt_i[16]_i_2_n_0 ;
  wire \Write_Beat_Cnt_i[16]_i_3_n_0 ;
  wire \Write_Beat_Cnt_i[16]_i_4_n_0 ;
  wire \Write_Beat_Cnt_i[16]_i_5_n_0 ;
  wire \Write_Beat_Cnt_i[20]_i_2_n_0 ;
  wire \Write_Beat_Cnt_i[20]_i_3_n_0 ;
  wire \Write_Beat_Cnt_i[20]_i_4_n_0 ;
  wire \Write_Beat_Cnt_i[20]_i_5_n_0 ;
  wire \Write_Beat_Cnt_i[24]_i_2_n_0 ;
  wire \Write_Beat_Cnt_i[24]_i_3_n_0 ;
  wire \Write_Beat_Cnt_i[24]_i_4_n_0 ;
  wire \Write_Beat_Cnt_i[24]_i_5_n_0 ;
  wire \Write_Beat_Cnt_i[28]_i_2_n_0 ;
  wire \Write_Beat_Cnt_i[28]_i_3_n_0 ;
  wire \Write_Beat_Cnt_i[28]_i_4_n_0 ;
  wire \Write_Beat_Cnt_i[28]_i_5_n_0 ;
  wire \Write_Beat_Cnt_i[4]_i_2_n_0 ;
  wire \Write_Beat_Cnt_i[4]_i_3_n_0 ;
  wire \Write_Beat_Cnt_i[4]_i_4_n_0 ;
  wire \Write_Beat_Cnt_i[4]_i_5_n_0 ;
  wire \Write_Beat_Cnt_i[8]_i_2_n_0 ;
  wire \Write_Beat_Cnt_i[8]_i_3_n_0 ;
  wire \Write_Beat_Cnt_i[8]_i_4_n_0 ;
  wire \Write_Beat_Cnt_i[8]_i_5_n_0 ;
  wire [31:0]Write_Beat_Cnt_i_reg;
  wire \Write_Beat_Cnt_i_reg[0]_i_2_n_0 ;
  wire \Write_Beat_Cnt_i_reg[0]_i_2_n_1 ;
  wire \Write_Beat_Cnt_i_reg[0]_i_2_n_2 ;
  wire \Write_Beat_Cnt_i_reg[0]_i_2_n_3 ;
  wire \Write_Beat_Cnt_i_reg[0]_i_2_n_4 ;
  wire \Write_Beat_Cnt_i_reg[0]_i_2_n_5 ;
  wire \Write_Beat_Cnt_i_reg[0]_i_2_n_6 ;
  wire \Write_Beat_Cnt_i_reg[0]_i_2_n_7 ;
  wire \Write_Beat_Cnt_i_reg[12]_i_1_n_0 ;
  wire \Write_Beat_Cnt_i_reg[12]_i_1_n_1 ;
  wire \Write_Beat_Cnt_i_reg[12]_i_1_n_2 ;
  wire \Write_Beat_Cnt_i_reg[12]_i_1_n_3 ;
  wire \Write_Beat_Cnt_i_reg[12]_i_1_n_4 ;
  wire \Write_Beat_Cnt_i_reg[12]_i_1_n_5 ;
  wire \Write_Beat_Cnt_i_reg[12]_i_1_n_6 ;
  wire \Write_Beat_Cnt_i_reg[12]_i_1_n_7 ;
  wire \Write_Beat_Cnt_i_reg[16]_i_1_n_0 ;
  wire \Write_Beat_Cnt_i_reg[16]_i_1_n_1 ;
  wire \Write_Beat_Cnt_i_reg[16]_i_1_n_2 ;
  wire \Write_Beat_Cnt_i_reg[16]_i_1_n_3 ;
  wire \Write_Beat_Cnt_i_reg[16]_i_1_n_4 ;
  wire \Write_Beat_Cnt_i_reg[16]_i_1_n_5 ;
  wire \Write_Beat_Cnt_i_reg[16]_i_1_n_6 ;
  wire \Write_Beat_Cnt_i_reg[16]_i_1_n_7 ;
  wire \Write_Beat_Cnt_i_reg[20]_i_1_n_0 ;
  wire \Write_Beat_Cnt_i_reg[20]_i_1_n_1 ;
  wire \Write_Beat_Cnt_i_reg[20]_i_1_n_2 ;
  wire \Write_Beat_Cnt_i_reg[20]_i_1_n_3 ;
  wire \Write_Beat_Cnt_i_reg[20]_i_1_n_4 ;
  wire \Write_Beat_Cnt_i_reg[20]_i_1_n_5 ;
  wire \Write_Beat_Cnt_i_reg[20]_i_1_n_6 ;
  wire \Write_Beat_Cnt_i_reg[20]_i_1_n_7 ;
  wire \Write_Beat_Cnt_i_reg[24]_i_1_n_0 ;
  wire \Write_Beat_Cnt_i_reg[24]_i_1_n_1 ;
  wire \Write_Beat_Cnt_i_reg[24]_i_1_n_2 ;
  wire \Write_Beat_Cnt_i_reg[24]_i_1_n_3 ;
  wire \Write_Beat_Cnt_i_reg[24]_i_1_n_4 ;
  wire \Write_Beat_Cnt_i_reg[24]_i_1_n_5 ;
  wire \Write_Beat_Cnt_i_reg[24]_i_1_n_6 ;
  wire \Write_Beat_Cnt_i_reg[24]_i_1_n_7 ;
  wire \Write_Beat_Cnt_i_reg[28]_i_1_n_1 ;
  wire \Write_Beat_Cnt_i_reg[28]_i_1_n_2 ;
  wire \Write_Beat_Cnt_i_reg[28]_i_1_n_3 ;
  wire \Write_Beat_Cnt_i_reg[28]_i_1_n_4 ;
  wire \Write_Beat_Cnt_i_reg[28]_i_1_n_5 ;
  wire \Write_Beat_Cnt_i_reg[28]_i_1_n_6 ;
  wire \Write_Beat_Cnt_i_reg[28]_i_1_n_7 ;
  wire \Write_Beat_Cnt_i_reg[4]_i_1_n_0 ;
  wire \Write_Beat_Cnt_i_reg[4]_i_1_n_1 ;
  wire \Write_Beat_Cnt_i_reg[4]_i_1_n_2 ;
  wire \Write_Beat_Cnt_i_reg[4]_i_1_n_3 ;
  wire \Write_Beat_Cnt_i_reg[4]_i_1_n_4 ;
  wire \Write_Beat_Cnt_i_reg[4]_i_1_n_5 ;
  wire \Write_Beat_Cnt_i_reg[4]_i_1_n_6 ;
  wire \Write_Beat_Cnt_i_reg[4]_i_1_n_7 ;
  wire \Write_Beat_Cnt_i_reg[8]_i_1_n_0 ;
  wire \Write_Beat_Cnt_i_reg[8]_i_1_n_1 ;
  wire \Write_Beat_Cnt_i_reg[8]_i_1_n_2 ;
  wire \Write_Beat_Cnt_i_reg[8]_i_1_n_3 ;
  wire \Write_Beat_Cnt_i_reg[8]_i_1_n_4 ;
  wire \Write_Beat_Cnt_i_reg[8]_i_1_n_5 ;
  wire \Write_Beat_Cnt_i_reg[8]_i_1_n_6 ;
  wire \Write_Beat_Cnt_i_reg[8]_i_1_n_7 ;
  wire Write_Beat_d1;
  wire Write_Byte_Cnt_i;
  wire \Write_Byte_Cnt_i[0]_i_2_n_0 ;
  wire \Write_Byte_Cnt_i[0]_i_3_n_0 ;
  wire \Write_Byte_Cnt_i[0]_i_4_n_0 ;
  wire \Write_Byte_Cnt_i[0]_i_5_n_0 ;
  wire \Write_Byte_Cnt_i[12]_i_2_n_0 ;
  wire \Write_Byte_Cnt_i[12]_i_3_n_0 ;
  wire \Write_Byte_Cnt_i[12]_i_4_n_0 ;
  wire \Write_Byte_Cnt_i[12]_i_5_n_0 ;
  wire \Write_Byte_Cnt_i[16]_i_2_n_0 ;
  wire \Write_Byte_Cnt_i[16]_i_3_n_0 ;
  wire \Write_Byte_Cnt_i[16]_i_4_n_0 ;
  wire \Write_Byte_Cnt_i[16]_i_5_n_0 ;
  wire \Write_Byte_Cnt_i[20]_i_2_n_0 ;
  wire \Write_Byte_Cnt_i[20]_i_3_n_0 ;
  wire \Write_Byte_Cnt_i[20]_i_4_n_0 ;
  wire \Write_Byte_Cnt_i[20]_i_5_n_0 ;
  wire \Write_Byte_Cnt_i[24]_i_2_n_0 ;
  wire \Write_Byte_Cnt_i[24]_i_3_n_0 ;
  wire \Write_Byte_Cnt_i[24]_i_4_n_0 ;
  wire \Write_Byte_Cnt_i[24]_i_5_n_0 ;
  wire \Write_Byte_Cnt_i[28]_i_2_n_0 ;
  wire \Write_Byte_Cnt_i[28]_i_3_n_0 ;
  wire \Write_Byte_Cnt_i[28]_i_4_n_0 ;
  wire \Write_Byte_Cnt_i[28]_i_5_n_0 ;
  wire \Write_Byte_Cnt_i[4]_i_2_n_0 ;
  wire \Write_Byte_Cnt_i[4]_i_3_n_0 ;
  wire \Write_Byte_Cnt_i[4]_i_4_n_0 ;
  wire \Write_Byte_Cnt_i[4]_i_5_n_0 ;
  wire \Write_Byte_Cnt_i[8]_i_2_n_0 ;
  wire \Write_Byte_Cnt_i[8]_i_3_n_0 ;
  wire \Write_Byte_Cnt_i[8]_i_4_n_0 ;
  wire \Write_Byte_Cnt_i[8]_i_5_n_0 ;
  wire [31:0]Write_Byte_Cnt_i_reg;
  wire \Write_Byte_Cnt_i_reg[0]_i_1_n_0 ;
  wire \Write_Byte_Cnt_i_reg[0]_i_1_n_1 ;
  wire \Write_Byte_Cnt_i_reg[0]_i_1_n_2 ;
  wire \Write_Byte_Cnt_i_reg[0]_i_1_n_3 ;
  wire \Write_Byte_Cnt_i_reg[0]_i_1_n_4 ;
  wire \Write_Byte_Cnt_i_reg[0]_i_1_n_5 ;
  wire \Write_Byte_Cnt_i_reg[0]_i_1_n_6 ;
  wire \Write_Byte_Cnt_i_reg[0]_i_1_n_7 ;
  wire \Write_Byte_Cnt_i_reg[12]_i_1_n_0 ;
  wire \Write_Byte_Cnt_i_reg[12]_i_1_n_1 ;
  wire \Write_Byte_Cnt_i_reg[12]_i_1_n_2 ;
  wire \Write_Byte_Cnt_i_reg[12]_i_1_n_3 ;
  wire \Write_Byte_Cnt_i_reg[12]_i_1_n_4 ;
  wire \Write_Byte_Cnt_i_reg[12]_i_1_n_5 ;
  wire \Write_Byte_Cnt_i_reg[12]_i_1_n_6 ;
  wire \Write_Byte_Cnt_i_reg[12]_i_1_n_7 ;
  wire \Write_Byte_Cnt_i_reg[16]_i_1_n_0 ;
  wire \Write_Byte_Cnt_i_reg[16]_i_1_n_1 ;
  wire \Write_Byte_Cnt_i_reg[16]_i_1_n_2 ;
  wire \Write_Byte_Cnt_i_reg[16]_i_1_n_3 ;
  wire \Write_Byte_Cnt_i_reg[16]_i_1_n_4 ;
  wire \Write_Byte_Cnt_i_reg[16]_i_1_n_5 ;
  wire \Write_Byte_Cnt_i_reg[16]_i_1_n_6 ;
  wire \Write_Byte_Cnt_i_reg[16]_i_1_n_7 ;
  wire \Write_Byte_Cnt_i_reg[20]_i_1_n_0 ;
  wire \Write_Byte_Cnt_i_reg[20]_i_1_n_1 ;
  wire \Write_Byte_Cnt_i_reg[20]_i_1_n_2 ;
  wire \Write_Byte_Cnt_i_reg[20]_i_1_n_3 ;
  wire \Write_Byte_Cnt_i_reg[20]_i_1_n_4 ;
  wire \Write_Byte_Cnt_i_reg[20]_i_1_n_5 ;
  wire \Write_Byte_Cnt_i_reg[20]_i_1_n_6 ;
  wire \Write_Byte_Cnt_i_reg[20]_i_1_n_7 ;
  wire \Write_Byte_Cnt_i_reg[24]_i_1_n_0 ;
  wire \Write_Byte_Cnt_i_reg[24]_i_1_n_1 ;
  wire \Write_Byte_Cnt_i_reg[24]_i_1_n_2 ;
  wire \Write_Byte_Cnt_i_reg[24]_i_1_n_3 ;
  wire \Write_Byte_Cnt_i_reg[24]_i_1_n_4 ;
  wire \Write_Byte_Cnt_i_reg[24]_i_1_n_5 ;
  wire \Write_Byte_Cnt_i_reg[24]_i_1_n_6 ;
  wire \Write_Byte_Cnt_i_reg[24]_i_1_n_7 ;
  wire \Write_Byte_Cnt_i_reg[28]_i_1_n_1 ;
  wire \Write_Byte_Cnt_i_reg[28]_i_1_n_2 ;
  wire \Write_Byte_Cnt_i_reg[28]_i_1_n_3 ;
  wire \Write_Byte_Cnt_i_reg[28]_i_1_n_4 ;
  wire \Write_Byte_Cnt_i_reg[28]_i_1_n_5 ;
  wire \Write_Byte_Cnt_i_reg[28]_i_1_n_6 ;
  wire \Write_Byte_Cnt_i_reg[28]_i_1_n_7 ;
  wire \Write_Byte_Cnt_i_reg[4]_i_1_n_0 ;
  wire \Write_Byte_Cnt_i_reg[4]_i_1_n_1 ;
  wire \Write_Byte_Cnt_i_reg[4]_i_1_n_2 ;
  wire \Write_Byte_Cnt_i_reg[4]_i_1_n_3 ;
  wire \Write_Byte_Cnt_i_reg[4]_i_1_n_4 ;
  wire \Write_Byte_Cnt_i_reg[4]_i_1_n_5 ;
  wire \Write_Byte_Cnt_i_reg[4]_i_1_n_6 ;
  wire \Write_Byte_Cnt_i_reg[4]_i_1_n_7 ;
  wire \Write_Byte_Cnt_i_reg[8]_i_1_n_0 ;
  wire \Write_Byte_Cnt_i_reg[8]_i_1_n_1 ;
  wire \Write_Byte_Cnt_i_reg[8]_i_1_n_2 ;
  wire \Write_Byte_Cnt_i_reg[8]_i_1_n_3 ;
  wire \Write_Byte_Cnt_i_reg[8]_i_1_n_4 ;
  wire \Write_Byte_Cnt_i_reg[8]_i_1_n_5 ;
  wire \Write_Byte_Cnt_i_reg[8]_i_1_n_6 ;
  wire \Write_Byte_Cnt_i_reg[8]_i_1_n_7 ;
  wire Write_Latency_En;
  wire Write_Latency_En_Int;
  wire Write_Latency_Int0;
  wire Write_going_on;
  wire Write_going_on_reg_0;
  wire Write_iss_going_on;
  wire Write_iss_going_on_reg_0;
  wire Wtrans_Cnt_En;
  wire Wtrans_Cnt_En0;
  wire awid_match_d1;
  wire core_aclk;
  wire [32:0]dout0;
  wire dout0_0;
  wire dout0_1;
  wire dout0_2;
  wire dout0_3;
  wire dout0_4;
  wire \dout_reg[0] ;
  wire [32:0]\dout_reg[31] ;
  wire [32:0]\dout_reg[31]_0 ;
  wire [31:0]\dout_reg[31]_1 ;
  wire [63:0]\dout_reg[61] ;
  wire empty2__0;
  wire ext_trig_cdc_sync_n_2;
  wire [2:0]out;
  wire p_2_out0_out;
  wire p_2_out3_out;
  wire p_40_in;
  wire rd_latency_end;
  wire rd_latency_fifo_inst_n_1;
  wire rd_latency_fifo_inst_n_2;
  wire rd_latency_start;
  wire rid_match_reg;
  wire [4:0]\rptr_reg[4] ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire [4:0]\rptr_reg[4]_1 ;
  wire [4:0]\rptr_reg[4]_2 ;
  wire [4:0]\rptr_reg[4]_3 ;
  wire [4:0]\rptr_reg[4]_4 ;
  wire [4:0]\rptr_reg[4]_5 ;
  wire [4:0]\rptr_reg[4]_6 ;
  wire [4:0]\rptr_reg[4]_7 ;
  wire [4:0]\rptr_reg[4]_8 ;
  wire rst_int_n;
  wire [0:0]\s_level_out_bus_d4_reg[0] ;
  wire [0:0]\s_level_out_bus_d4_reg[0]_0 ;
  wire \s_level_out_bus_d4_reg[1] ;
  wire update_max_Wr_Lat;
  wire update_max_Wr_Lat_i_10_n_0;
  wire update_max_Wr_Lat_i_11_n_0;
  wire update_max_Wr_Lat_i_13_n_0;
  wire update_max_Wr_Lat_i_14_n_0;
  wire update_max_Wr_Lat_i_15_n_0;
  wire update_max_Wr_Lat_i_16_n_0;
  wire update_max_Wr_Lat_i_17_n_0;
  wire update_max_Wr_Lat_i_18_n_0;
  wire update_max_Wr_Lat_i_19_n_0;
  wire update_max_Wr_Lat_i_20_n_0;
  wire update_max_Wr_Lat_i_22_n_0;
  wire update_max_Wr_Lat_i_23_n_0;
  wire update_max_Wr_Lat_i_24_n_0;
  wire update_max_Wr_Lat_i_25_n_0;
  wire update_max_Wr_Lat_i_26_n_0;
  wire update_max_Wr_Lat_i_27_n_0;
  wire update_max_Wr_Lat_i_28_n_0;
  wire update_max_Wr_Lat_i_29_n_0;
  wire update_max_Wr_Lat_i_30_n_0;
  wire update_max_Wr_Lat_i_31_n_0;
  wire update_max_Wr_Lat_i_32_n_0;
  wire update_max_Wr_Lat_i_33_n_0;
  wire update_max_Wr_Lat_i_34_n_0;
  wire update_max_Wr_Lat_i_35_n_0;
  wire update_max_Wr_Lat_i_36_n_0;
  wire update_max_Wr_Lat_i_37_n_0;
  wire update_max_Wr_Lat_i_4_n_0;
  wire update_max_Wr_Lat_i_5_n_0;
  wire update_max_Wr_Lat_i_6_n_0;
  wire update_max_Wr_Lat_i_7_n_0;
  wire update_max_Wr_Lat_i_8_n_0;
  wire update_max_Wr_Lat_i_9_n_0;
  wire update_max_Wr_Lat_reg_i_12_n_0;
  wire update_max_Wr_Lat_reg_i_12_n_1;
  wire update_max_Wr_Lat_reg_i_12_n_2;
  wire update_max_Wr_Lat_reg_i_12_n_3;
  wire update_max_Wr_Lat_reg_i_21_n_0;
  wire update_max_Wr_Lat_reg_i_21_n_1;
  wire update_max_Wr_Lat_reg_i_21_n_2;
  wire update_max_Wr_Lat_reg_i_21_n_3;
  wire update_max_Wr_Lat_reg_i_2_n_1;
  wire update_max_Wr_Lat_reg_i_2_n_2;
  wire update_max_Wr_Lat_reg_i_2_n_3;
  wire update_max_Wr_Lat_reg_i_3_n_0;
  wire update_max_Wr_Lat_reg_i_3_n_1;
  wire update_max_Wr_Lat_reg_i_3_n_2;
  wire update_max_Wr_Lat_reg_i_3_n_3;
  wire update_min_Wr_Lat;
  wire update_min_Wr_Lat_i_10_n_0;
  wire update_min_Wr_Lat_i_11_n_0;
  wire update_min_Wr_Lat_i_13_n_0;
  wire update_min_Wr_Lat_i_14_n_0;
  wire update_min_Wr_Lat_i_15_n_0;
  wire update_min_Wr_Lat_i_16_n_0;
  wire update_min_Wr_Lat_i_17_n_0;
  wire update_min_Wr_Lat_i_18_n_0;
  wire update_min_Wr_Lat_i_19_n_0;
  wire update_min_Wr_Lat_i_20_n_0;
  wire update_min_Wr_Lat_i_22_n_0;
  wire update_min_Wr_Lat_i_23_n_0;
  wire update_min_Wr_Lat_i_24_n_0;
  wire update_min_Wr_Lat_i_25_n_0;
  wire update_min_Wr_Lat_i_26_n_0;
  wire update_min_Wr_Lat_i_27_n_0;
  wire update_min_Wr_Lat_i_28_n_0;
  wire update_min_Wr_Lat_i_29_n_0;
  wire update_min_Wr_Lat_i_30_n_0;
  wire update_min_Wr_Lat_i_31_n_0;
  wire update_min_Wr_Lat_i_32_n_0;
  wire update_min_Wr_Lat_i_33_n_0;
  wire update_min_Wr_Lat_i_34_n_0;
  wire update_min_Wr_Lat_i_35_n_0;
  wire update_min_Wr_Lat_i_36_n_0;
  wire update_min_Wr_Lat_i_37_n_0;
  wire update_min_Wr_Lat_i_4_n_0;
  wire update_min_Wr_Lat_i_5_n_0;
  wire update_min_Wr_Lat_i_6_n_0;
  wire update_min_Wr_Lat_i_7_n_0;
  wire update_min_Wr_Lat_i_8_n_0;
  wire update_min_Wr_Lat_i_9_n_0;
  wire update_min_Wr_Lat_reg_i_12_n_0;
  wire update_min_Wr_Lat_reg_i_12_n_1;
  wire update_min_Wr_Lat_reg_i_12_n_2;
  wire update_min_Wr_Lat_reg_i_12_n_3;
  wire update_min_Wr_Lat_reg_i_21_n_0;
  wire update_min_Wr_Lat_reg_i_21_n_1;
  wire update_min_Wr_Lat_reg_i_21_n_2;
  wire update_min_Wr_Lat_reg_i_21_n_3;
  wire update_min_Wr_Lat_reg_i_2_n_1;
  wire update_min_Wr_Lat_reg_i_2_n_2;
  wire update_min_Wr_Lat_reg_i_2_n_3;
  wire update_min_Wr_Lat_reg_i_3_n_0;
  wire update_min_Wr_Lat_reg_i_3_n_1;
  wire update_min_Wr_Lat_reg_i_3_n_2;
  wire update_min_Wr_Lat_reg_i_3_n_3;
  wire wid_match_reg;
  wire wid_match_reg_d2;
  wire \wptr_reg[0] ;
  wire [0:0]\wptr_reg[0]_0 ;
  wire [0:0]\wptr_reg[0]_1 ;
  wire [0:0]\wptr_reg[0]_2 ;
  wire [0:0]\wptr_reg[0]_3 ;
  wire [4:0]\wptr_reg[4] ;
  wire [4:0]\wptr_reg[4]_0 ;
  wire [4:0]\wptr_reg[4]_1 ;
  wire [4:0]\wptr_reg[4]_2 ;
  wire [4:0]\wptr_reg[4]_3 ;
  wire [4:0]\wptr_reg[4]_4 ;
  wire [4:0]\wptr_reg[4]_5 ;
  wire [4:0]\wptr_reg[4]_6 ;
  wire [4:0]\wptr_reg[4]_7 ;
  wire [4:0]\wptr_reg[4]_8 ;
  wire \wr_byte_cnt_d1_reg_n_0_[0] ;
  wire \wr_byte_cnt_d1_reg_n_0_[1] ;
  wire \wr_byte_cnt_d1_reg_n_0_[2] ;
  wire wr_latency_end;
  wire wr_latency_end_d1;
  wire wr_latency_end_d1_reg_0;
  wire wr_latency_end_d2;
  wire wr_latency_start;
  wire wr_latency_start_d1;
  wire wr_latency_start_d1_reg_0;
  wire wr_latency_start_d2;
  wire [3:3]\NLW_Beat_fifo_Wr_data_reg[63]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_Max_Read_Latency_Int_reg[31]_i_12_O_UNCONNECTED ;
  wire [3:0]\NLW_Max_Read_Latency_Int_reg[31]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_Max_Read_Latency_Int_reg[31]_i_21_O_UNCONNECTED ;
  wire [3:0]\NLW_Max_Read_Latency_Int_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_Min_Read_Latency_Int_reg[31]_i_12_O_UNCONNECTED ;
  wire [3:0]\NLW_Min_Read_Latency_Int_reg[31]_i_2_O_UNCONNECTED ;
  wire [3:0]\NLW_Min_Read_Latency_Int_reg[31]_i_21_O_UNCONNECTED ;
  wire [3:0]\NLW_Min_Read_Latency_Int_reg[31]_i_3_O_UNCONNECTED ;
  wire [3:0]\NLW_Read_Latency_Int_reg[31]_i_10_O_UNCONNECTED ;
  wire [3:0]\NLW_Read_Latency_Int_reg[31]_i_11_O_UNCONNECTED ;
  wire [3:3]\NLW_Read_Latency_Int_reg[31]_i_2_CO_UNCONNECTED ;
  wire [3:0]\NLW_Read_Latency_Int_reg[31]_i_20_O_UNCONNECTED ;
  wire [3:0]\NLW_Read_Latency_Int_reg[31]_i_29_O_UNCONNECTED ;
  wire [3:3]\NLW_Slv_Wr_Idle_Cnt_i_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_Write_Beat_Cnt_i_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:3]\NLW_Write_Byte_Cnt_i_reg[28]_i_1_CO_UNCONNECTED ;
  wire [3:0]NLW_update_max_Wr_Lat_reg_i_12_O_UNCONNECTED;
  wire [3:0]NLW_update_max_Wr_Lat_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_update_max_Wr_Lat_reg_i_21_O_UNCONNECTED;
  wire [3:0]NLW_update_max_Wr_Lat_reg_i_3_O_UNCONNECTED;
  wire [3:0]NLW_update_min_Wr_Lat_reg_i_12_O_UNCONNECTED;
  wire [3:0]NLW_update_min_Wr_Lat_reg_i_2_O_UNCONNECTED;
  wire [3:0]NLW_update_min_Wr_Lat_reg_i_21_O_UNCONNECTED;
  wire [3:0]NLW_update_min_Wr_Lat_reg_i_3_O_UNCONNECTED;

  FDRE \ARID_reg_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Q[1]),
        .Q(ARID_reg),
        .R(Wr_cnt_ld));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo BEAT_CNT_AWID_MATCH
       (.E(FBC_Rd_En),
        .FBC1_Empty(FBC1_Empty),
        .FBC_Empty(FBC_Empty),
        .FBC_Rd_Data(FBC_Rd_Data),
        .FBC_Rd_Vld_reg(FBC_Rd_Vld),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] [1:0]),
        .\GEN_MUX_N_CNT.Add_in_Valid_reg (\GEN_MUX_N_CNT.Add_in_Valid_reg_0 ),
        .Q(\wptr_reg[4]_5 ),
        .Read_Latency_En(Read_Latency_En),
        .SR(Wr_cnt_ld),
        .core_aclk(core_aclk),
        .dout0_2(dout0_2),
        .\rptr_reg[4]_0 (\rptr_reg[4]_0 ),
        .\s_level_out_bus_d4_reg[0] (\s_level_out_bus_d4_reg[0] ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[35]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[3]),
        .O(\Beat_fifo_Wr_data[35]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Beat_fifo_Wr_data[35]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[2]),
        .I1(\wr_byte_cnt_d1_reg_n_0_[2] ),
        .O(\Beat_fifo_Wr_data[35]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Beat_fifo_Wr_data[35]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[1]),
        .I1(\wr_byte_cnt_d1_reg_n_0_[1] ),
        .O(\Beat_fifo_Wr_data[35]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Beat_fifo_Wr_data[35]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[0]),
        .I1(\wr_byte_cnt_d1_reg_n_0_[0] ),
        .O(\Beat_fifo_Wr_data[35]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[39]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[7]),
        .O(\Beat_fifo_Wr_data[39]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[39]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[6]),
        .O(\Beat_fifo_Wr_data[39]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[39]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[5]),
        .O(\Beat_fifo_Wr_data[39]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[39]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[4]),
        .O(\Beat_fifo_Wr_data[39]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[43]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[11]),
        .O(\Beat_fifo_Wr_data[43]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[43]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[10]),
        .O(\Beat_fifo_Wr_data[43]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[43]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[9]),
        .O(\Beat_fifo_Wr_data[43]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[43]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[8]),
        .O(\Beat_fifo_Wr_data[43]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[47]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[15]),
        .O(\Beat_fifo_Wr_data[47]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[47]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[14]),
        .O(\Beat_fifo_Wr_data[47]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[47]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[13]),
        .O(\Beat_fifo_Wr_data[47]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[47]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[12]),
        .O(\Beat_fifo_Wr_data[47]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[51]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[19]),
        .O(\Beat_fifo_Wr_data[51]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[51]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[18]),
        .O(\Beat_fifo_Wr_data[51]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[51]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[17]),
        .O(\Beat_fifo_Wr_data[51]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[51]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[16]),
        .O(\Beat_fifo_Wr_data[51]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[55]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[23]),
        .O(\Beat_fifo_Wr_data[55]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[55]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[22]),
        .O(\Beat_fifo_Wr_data[55]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[55]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[21]),
        .O(\Beat_fifo_Wr_data[55]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[55]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[20]),
        .O(\Beat_fifo_Wr_data[55]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[59]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[27]),
        .O(\Beat_fifo_Wr_data[59]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[59]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[26]),
        .O(\Beat_fifo_Wr_data[59]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[59]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[25]),
        .O(\Beat_fifo_Wr_data[59]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[59]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[24]),
        .O(\Beat_fifo_Wr_data[59]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h8)) 
    \Beat_fifo_Wr_data[63]_i_1 
       (.I0(rst_int_n),
        .I1(Last_fifo_Wr_en),
        .O(Beat_fifo_Wr_data));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[63]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[31]),
        .O(\Beat_fifo_Wr_data[63]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[63]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[30]),
        .O(\Beat_fifo_Wr_data[63]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[63]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[29]),
        .O(\Beat_fifo_Wr_data[63]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Beat_fifo_Wr_data[63]_i_6 
       (.I0(Write_Byte_Cnt_i_reg[28]),
        .O(\Beat_fifo_Wr_data[63]_i_6_n_0 ));
  FDRE \Beat_fifo_Wr_data_reg[0] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[0]),
        .Q(\dout_reg[61] [0]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[10] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[10]),
        .Q(\dout_reg[61] [10]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[11] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[11]),
        .Q(\dout_reg[61] [11]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[12] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[12]),
        .Q(\dout_reg[61] [12]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[13] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[13]),
        .Q(\dout_reg[61] [13]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[14] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[14]),
        .Q(\dout_reg[61] [14]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[15] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[15]),
        .Q(\dout_reg[61] [15]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[16] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[16]),
        .Q(\dout_reg[61] [16]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[17] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[17]),
        .Q(\dout_reg[61] [17]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[18] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[18]),
        .Q(\dout_reg[61] [18]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[19] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[19]),
        .Q(\dout_reg[61] [19]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[1] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[1]),
        .Q(\dout_reg[61] [1]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[20] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[20]),
        .Q(\dout_reg[61] [20]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[21] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[21]),
        .Q(\dout_reg[61] [21]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[22] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[22]),
        .Q(\dout_reg[61] [22]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[23] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[23]),
        .Q(\dout_reg[61] [23]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[24] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[24]),
        .Q(\dout_reg[61] [24]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[25] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[25]),
        .Q(\dout_reg[61] [25]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[26] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[26]),
        .Q(\dout_reg[61] [26]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[27] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[27]),
        .Q(\dout_reg[61] [27]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[28] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[28]),
        .Q(\dout_reg[61] [28]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[29] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[29]),
        .Q(\dout_reg[61] [29]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[2] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[2]),
        .Q(\dout_reg[61] [2]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[30] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[30]),
        .Q(\dout_reg[61] [30]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[31] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[31]),
        .Q(\dout_reg[61] [31]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[32] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[35]_i_1_n_7 ),
        .Q(\dout_reg[61] [32]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[33] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[35]_i_1_n_6 ),
        .Q(\dout_reg[61] [33]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[34] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[35]_i_1_n_5 ),
        .Q(\dout_reg[61] [34]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[35] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[35]_i_1_n_4 ),
        .Q(\dout_reg[61] [35]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Beat_fifo_Wr_data_reg[35]_i_1 
       (.CI(1'b0),
        .CO({\Beat_fifo_Wr_data_reg[35]_i_1_n_0 ,\Beat_fifo_Wr_data_reg[35]_i_1_n_1 ,\Beat_fifo_Wr_data_reg[35]_i_1_n_2 ,\Beat_fifo_Wr_data_reg[35]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Write_Byte_Cnt_i_reg[3:0]),
        .O({\Beat_fifo_Wr_data_reg[35]_i_1_n_4 ,\Beat_fifo_Wr_data_reg[35]_i_1_n_5 ,\Beat_fifo_Wr_data_reg[35]_i_1_n_6 ,\Beat_fifo_Wr_data_reg[35]_i_1_n_7 }),
        .S({\Beat_fifo_Wr_data[35]_i_2_n_0 ,\Beat_fifo_Wr_data[35]_i_3_n_0 ,\Beat_fifo_Wr_data[35]_i_4_n_0 ,\Beat_fifo_Wr_data[35]_i_5_n_0 }));
  FDRE \Beat_fifo_Wr_data_reg[36] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[39]_i_1_n_7 ),
        .Q(\dout_reg[61] [36]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[37] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[39]_i_1_n_6 ),
        .Q(\dout_reg[61] [37]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[38] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[39]_i_1_n_5 ),
        .Q(\dout_reg[61] [38]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[39] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[39]_i_1_n_4 ),
        .Q(\dout_reg[61] [39]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Beat_fifo_Wr_data_reg[39]_i_1 
       (.CI(\Beat_fifo_Wr_data_reg[35]_i_1_n_0 ),
        .CO({\Beat_fifo_Wr_data_reg[39]_i_1_n_0 ,\Beat_fifo_Wr_data_reg[39]_i_1_n_1 ,\Beat_fifo_Wr_data_reg[39]_i_1_n_2 ,\Beat_fifo_Wr_data_reg[39]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Write_Byte_Cnt_i_reg[7:4]),
        .O({\Beat_fifo_Wr_data_reg[39]_i_1_n_4 ,\Beat_fifo_Wr_data_reg[39]_i_1_n_5 ,\Beat_fifo_Wr_data_reg[39]_i_1_n_6 ,\Beat_fifo_Wr_data_reg[39]_i_1_n_7 }),
        .S({\Beat_fifo_Wr_data[39]_i_2_n_0 ,\Beat_fifo_Wr_data[39]_i_3_n_0 ,\Beat_fifo_Wr_data[39]_i_4_n_0 ,\Beat_fifo_Wr_data[39]_i_5_n_0 }));
  FDRE \Beat_fifo_Wr_data_reg[3] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[3]),
        .Q(\dout_reg[61] [3]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[40] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[43]_i_1_n_7 ),
        .Q(\dout_reg[61] [40]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[41] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[43]_i_1_n_6 ),
        .Q(\dout_reg[61] [41]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[42] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[43]_i_1_n_5 ),
        .Q(\dout_reg[61] [42]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[43] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[43]_i_1_n_4 ),
        .Q(\dout_reg[61] [43]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Beat_fifo_Wr_data_reg[43]_i_1 
       (.CI(\Beat_fifo_Wr_data_reg[39]_i_1_n_0 ),
        .CO({\Beat_fifo_Wr_data_reg[43]_i_1_n_0 ,\Beat_fifo_Wr_data_reg[43]_i_1_n_1 ,\Beat_fifo_Wr_data_reg[43]_i_1_n_2 ,\Beat_fifo_Wr_data_reg[43]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Write_Byte_Cnt_i_reg[11:8]),
        .O({\Beat_fifo_Wr_data_reg[43]_i_1_n_4 ,\Beat_fifo_Wr_data_reg[43]_i_1_n_5 ,\Beat_fifo_Wr_data_reg[43]_i_1_n_6 ,\Beat_fifo_Wr_data_reg[43]_i_1_n_7 }),
        .S({\Beat_fifo_Wr_data[43]_i_2_n_0 ,\Beat_fifo_Wr_data[43]_i_3_n_0 ,\Beat_fifo_Wr_data[43]_i_4_n_0 ,\Beat_fifo_Wr_data[43]_i_5_n_0 }));
  FDRE \Beat_fifo_Wr_data_reg[44] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[47]_i_1_n_7 ),
        .Q(\dout_reg[61] [44]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[45] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[47]_i_1_n_6 ),
        .Q(\dout_reg[61] [45]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[46] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[47]_i_1_n_5 ),
        .Q(\dout_reg[61] [46]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[47] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[47]_i_1_n_4 ),
        .Q(\dout_reg[61] [47]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Beat_fifo_Wr_data_reg[47]_i_1 
       (.CI(\Beat_fifo_Wr_data_reg[43]_i_1_n_0 ),
        .CO({\Beat_fifo_Wr_data_reg[47]_i_1_n_0 ,\Beat_fifo_Wr_data_reg[47]_i_1_n_1 ,\Beat_fifo_Wr_data_reg[47]_i_1_n_2 ,\Beat_fifo_Wr_data_reg[47]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Write_Byte_Cnt_i_reg[15:12]),
        .O({\Beat_fifo_Wr_data_reg[47]_i_1_n_4 ,\Beat_fifo_Wr_data_reg[47]_i_1_n_5 ,\Beat_fifo_Wr_data_reg[47]_i_1_n_6 ,\Beat_fifo_Wr_data_reg[47]_i_1_n_7 }),
        .S({\Beat_fifo_Wr_data[47]_i_2_n_0 ,\Beat_fifo_Wr_data[47]_i_3_n_0 ,\Beat_fifo_Wr_data[47]_i_4_n_0 ,\Beat_fifo_Wr_data[47]_i_5_n_0 }));
  FDRE \Beat_fifo_Wr_data_reg[48] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[51]_i_1_n_7 ),
        .Q(\dout_reg[61] [48]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[49] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[51]_i_1_n_6 ),
        .Q(\dout_reg[61] [49]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[4] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[4]),
        .Q(\dout_reg[61] [4]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[50] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[51]_i_1_n_5 ),
        .Q(\dout_reg[61] [50]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[51] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[51]_i_1_n_4 ),
        .Q(\dout_reg[61] [51]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Beat_fifo_Wr_data_reg[51]_i_1 
       (.CI(\Beat_fifo_Wr_data_reg[47]_i_1_n_0 ),
        .CO({\Beat_fifo_Wr_data_reg[51]_i_1_n_0 ,\Beat_fifo_Wr_data_reg[51]_i_1_n_1 ,\Beat_fifo_Wr_data_reg[51]_i_1_n_2 ,\Beat_fifo_Wr_data_reg[51]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Write_Byte_Cnt_i_reg[19:16]),
        .O({\Beat_fifo_Wr_data_reg[51]_i_1_n_4 ,\Beat_fifo_Wr_data_reg[51]_i_1_n_5 ,\Beat_fifo_Wr_data_reg[51]_i_1_n_6 ,\Beat_fifo_Wr_data_reg[51]_i_1_n_7 }),
        .S({\Beat_fifo_Wr_data[51]_i_2_n_0 ,\Beat_fifo_Wr_data[51]_i_3_n_0 ,\Beat_fifo_Wr_data[51]_i_4_n_0 ,\Beat_fifo_Wr_data[51]_i_5_n_0 }));
  FDRE \Beat_fifo_Wr_data_reg[52] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[55]_i_1_n_7 ),
        .Q(\dout_reg[61] [52]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[53] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[55]_i_1_n_6 ),
        .Q(\dout_reg[61] [53]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[54] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[55]_i_1_n_5 ),
        .Q(\dout_reg[61] [54]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[55] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[55]_i_1_n_4 ),
        .Q(\dout_reg[61] [55]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Beat_fifo_Wr_data_reg[55]_i_1 
       (.CI(\Beat_fifo_Wr_data_reg[51]_i_1_n_0 ),
        .CO({\Beat_fifo_Wr_data_reg[55]_i_1_n_0 ,\Beat_fifo_Wr_data_reg[55]_i_1_n_1 ,\Beat_fifo_Wr_data_reg[55]_i_1_n_2 ,\Beat_fifo_Wr_data_reg[55]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Write_Byte_Cnt_i_reg[23:20]),
        .O({\Beat_fifo_Wr_data_reg[55]_i_1_n_4 ,\Beat_fifo_Wr_data_reg[55]_i_1_n_5 ,\Beat_fifo_Wr_data_reg[55]_i_1_n_6 ,\Beat_fifo_Wr_data_reg[55]_i_1_n_7 }),
        .S({\Beat_fifo_Wr_data[55]_i_2_n_0 ,\Beat_fifo_Wr_data[55]_i_3_n_0 ,\Beat_fifo_Wr_data[55]_i_4_n_0 ,\Beat_fifo_Wr_data[55]_i_5_n_0 }));
  FDRE \Beat_fifo_Wr_data_reg[56] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[59]_i_1_n_7 ),
        .Q(\dout_reg[61] [56]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[57] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[59]_i_1_n_6 ),
        .Q(\dout_reg[61] [57]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[58] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[59]_i_1_n_5 ),
        .Q(\dout_reg[61] [58]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[59] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[59]_i_1_n_4 ),
        .Q(\dout_reg[61] [59]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Beat_fifo_Wr_data_reg[59]_i_1 
       (.CI(\Beat_fifo_Wr_data_reg[55]_i_1_n_0 ),
        .CO({\Beat_fifo_Wr_data_reg[59]_i_1_n_0 ,\Beat_fifo_Wr_data_reg[59]_i_1_n_1 ,\Beat_fifo_Wr_data_reg[59]_i_1_n_2 ,\Beat_fifo_Wr_data_reg[59]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI(Write_Byte_Cnt_i_reg[27:24]),
        .O({\Beat_fifo_Wr_data_reg[59]_i_1_n_4 ,\Beat_fifo_Wr_data_reg[59]_i_1_n_5 ,\Beat_fifo_Wr_data_reg[59]_i_1_n_6 ,\Beat_fifo_Wr_data_reg[59]_i_1_n_7 }),
        .S({\Beat_fifo_Wr_data[59]_i_2_n_0 ,\Beat_fifo_Wr_data[59]_i_3_n_0 ,\Beat_fifo_Wr_data[59]_i_4_n_0 ,\Beat_fifo_Wr_data[59]_i_5_n_0 }));
  FDRE \Beat_fifo_Wr_data_reg[5] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[5]),
        .Q(\dout_reg[61] [5]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[60] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[63]_i_2_n_7 ),
        .Q(\dout_reg[61] [60]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[61] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[63]_i_2_n_6 ),
        .Q(\dout_reg[61] [61]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[62] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[63]_i_2_n_5 ),
        .Q(\dout_reg[61] [62]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[63] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(\Beat_fifo_Wr_data_reg[63]_i_2_n_4 ),
        .Q(\dout_reg[61] [63]),
        .R(1'b0));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Beat_fifo_Wr_data_reg[63]_i_2 
       (.CI(\Beat_fifo_Wr_data_reg[59]_i_1_n_0 ),
        .CO({\NLW_Beat_fifo_Wr_data_reg[63]_i_2_CO_UNCONNECTED [3],\Beat_fifo_Wr_data_reg[63]_i_2_n_1 ,\Beat_fifo_Wr_data_reg[63]_i_2_n_2 ,\Beat_fifo_Wr_data_reg[63]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,Write_Byte_Cnt_i_reg[30:28]}),
        .O({\Beat_fifo_Wr_data_reg[63]_i_2_n_4 ,\Beat_fifo_Wr_data_reg[63]_i_2_n_5 ,\Beat_fifo_Wr_data_reg[63]_i_2_n_6 ,\Beat_fifo_Wr_data_reg[63]_i_2_n_7 }),
        .S({\Beat_fifo_Wr_data[63]_i_3_n_0 ,\Beat_fifo_Wr_data[63]_i_4_n_0 ,\Beat_fifo_Wr_data[63]_i_5_n_0 ,\Beat_fifo_Wr_data[63]_i_6_n_0 }));
  FDRE \Beat_fifo_Wr_data_reg[6] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[6]),
        .Q(\dout_reg[61] [6]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[7] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[7]),
        .Q(\dout_reg[61] [7]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[8] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[8]),
        .Q(\dout_reg[61] [8]),
        .R(1'b0));
  FDRE \Beat_fifo_Wr_data_reg[9] 
       (.C(core_aclk),
        .CE(Beat_fifo_Wr_data),
        .D(Write_Beat_Cnt_i_reg[9]),
        .Q(\dout_reg[61] [9]),
        .R(1'b0));
  FDRE Beat_fifo_Wr_en_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Last_fifo_Wr_en),
        .Q(Beat_fifo_Wr_en),
        .R(Wr_cnt_ld));
  FDRE Data_valid_reg1_reg
       (.C(core_aclk),
        .CE(rst_int_n),
        .D(S0_S_Null_Byte_Cnt),
        .Q(Data_valid_reg1),
        .R(1'b0));
  FDRE Data_valid_reg2_reg
       (.C(core_aclk),
        .CE(rst_int_n),
        .D(Data_valid_reg1),
        .Q(Data_valid_reg2),
        .R(1'b0));
  FDRE Ext_Trig_Metric_en_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(ext_trig_cdc_sync_n_2),
        .Q(Ext_Trig_Metric_en),
        .R(1'b0));
  FDRE \Ext_Triggers_Sync_d1_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Ext_Triggers_Sync[0]),
        .Q(Ext_Triggers_Sync_d1[0]),
        .R(Wr_cnt_ld));
  FDRE \Ext_Triggers_Sync_d1_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Ext_Triggers_Sync[1]),
        .Q(Ext_Triggers_Sync_d1[1]),
        .R(Wr_cnt_ld));
  FDRE F12_Rd_Vld_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(F12_Rd_En),
        .Q(F12_Rd_Vld),
        .R(Wr_cnt_ld));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_36 F1_AWID_MATCH
       (.E(F12_Rd_En),
        .F1_Empty(F1_Empty),
        .F1_Rd_Data(F1_Rd_Data),
        .F2_Empty(F2_Empty),
        .Q(\wptr_reg[4] ),
        .SR(Wr_cnt_ld),
        .core_aclk(core_aclk),
        .dout0_0(dout0_0),
        .\rptr_reg[4]_0 (\rptr_reg[4]_8 ),
        .\s_level_out_bus_d4_reg[0] (\s_level_out_bus_d4_reg[0] ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_37 F2_FIRST_WRITE
       (.E(\wptr_reg[0]_3 ),
        .Ext_Trig_Metric_en_reg(Ext_Trig_Metric_en),
        .F1_Empty(F1_Empty),
        .F2_Empty(F2_Empty),
        .F2_Rd_Data(F2_Rd_Data),
        .Q(\wptr_reg[4]_0 ),
        .SR(Wr_cnt_ld),
        .Slot_0_Sync_Data_Valid(Slot_0_Sync_Data_Valid),
        .\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[37] (Q[2]),
        .Write_iss_going_on_reg(\wptr_reg[0] ),
        .core_aclk(core_aclk),
        .dout0_1(dout0_1),
        .empty_reg_0(F12_Rd_En),
        .out({out[2],out[0]}),
        .\rptr_reg[4]_0 (\rptr_reg[4]_7 ));
  FDRE F34_Rd_Vld_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(F34_Rd_En),
        .Q(F34_Rd_Vld),
        .R(Wr_cnt_ld));
  FDRE F34_Rd_Vld_reg_d2_reg
       (.C(core_aclk),
        .CE(rst_int_n),
        .D(F34_Rd_Vld_reg__0),
        .Q(F34_Rd_Vld_reg_d2),
        .R(1'b0));
  FDRE F34_Rd_Vld_reg_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(F34_Rd_Vld),
        .Q(F34_Rd_Vld_reg__0),
        .R(Wr_cnt_ld));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized0 F3_WR_LAT_START
       (.D(Wr_Lat_Cnt_Diff_reg),
        .E(\wptr_reg[0]_2 ),
        .Ext_Trig_Metric_en_reg(Ext_Trig_Metric_en),
        .F3_Empty(F3_Empty),
        .F4_Empty(F4_Empty),
        .Q(\wptr_reg[4]_2 ),
        .S({F4_WR_LAT_END_n_12,F4_WR_LAT_END_n_13,F4_WR_LAT_END_n_14,F4_WR_LAT_END_n_15}),
        .SR(Wr_cnt_ld),
        .\Wr_Lat_Cnt_Diff_reg_reg[31] (F3_Rd_Data),
        .core_aclk(core_aclk),
        .dout0(dout0),
        .\dout_reg[11]_0 ({F4_WR_LAT_END_n_53,F4_WR_LAT_END_n_54,F4_WR_LAT_END_n_55,F4_WR_LAT_END_n_56}),
        .\dout_reg[15]_0 ({F4_WR_LAT_END_n_57,F4_WR_LAT_END_n_58,F4_WR_LAT_END_n_59,F4_WR_LAT_END_n_60}),
        .\dout_reg[19]_0 ({F4_WR_LAT_END_n_61,F4_WR_LAT_END_n_62,F4_WR_LAT_END_n_63,F4_WR_LAT_END_n_64}),
        .\dout_reg[23]_0 ({F4_WR_LAT_END_n_65,F4_WR_LAT_END_n_66,F4_WR_LAT_END_n_67,F4_WR_LAT_END_n_68}),
        .\dout_reg[27]_0 ({F4_WR_LAT_END_n_69,F4_WR_LAT_END_n_70,F4_WR_LAT_END_n_71,F4_WR_LAT_END_n_72}),
        .\dout_reg[31]_0 ({F4_WR_LAT_END_n_73,F4_WR_LAT_END_n_74,F4_WR_LAT_END_n_75,F4_WR_LAT_END_n_76}),
        .\dout_reg[32]_0 (F4_Rd_Data),
        .\dout_reg[7]_0 ({F4_WR_LAT_END_n_49,F4_WR_LAT_END_n_50,F4_WR_LAT_END_n_51,F4_WR_LAT_END_n_52}),
        .out({out[2],out[0]}),
        .\rptr_reg[4]_0 (\rptr_reg[4]_6 ),
        .\rptr_reg[5]_0 (F34_Rd_En),
        .wr_latency_start_d2(wr_latency_start_d2));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized1 F4_WR_LAT_END
       (.\Count_Out_i_reg[31] (\Count_Out_i_reg[31] ),
        .E(\wptr_reg[0]_1 ),
        .Ext_Trig_Metric_en_reg(Ext_Trig_Metric_en),
        .F3_Empty(F3_Empty),
        .F4_Empty(F4_Empty),
        .Q(\wptr_reg[4]_3 ),
        .S({F4_WR_LAT_END_n_12,F4_WR_LAT_END_n_13,F4_WR_LAT_END_n_14,F4_WR_LAT_END_n_15}),
        .SR(Wr_cnt_ld),
        .\Wr_Lat_Cnt_Diff_reg_reg[11] ({F4_WR_LAT_END_n_53,F4_WR_LAT_END_n_54,F4_WR_LAT_END_n_55,F4_WR_LAT_END_n_56}),
        .\Wr_Lat_Cnt_Diff_reg_reg[15] ({F4_WR_LAT_END_n_57,F4_WR_LAT_END_n_58,F4_WR_LAT_END_n_59,F4_WR_LAT_END_n_60}),
        .\Wr_Lat_Cnt_Diff_reg_reg[19] ({F4_WR_LAT_END_n_61,F4_WR_LAT_END_n_62,F4_WR_LAT_END_n_63,F4_WR_LAT_END_n_64}),
        .\Wr_Lat_Cnt_Diff_reg_reg[23] ({F4_WR_LAT_END_n_65,F4_WR_LAT_END_n_66,F4_WR_LAT_END_n_67,F4_WR_LAT_END_n_68}),
        .\Wr_Lat_Cnt_Diff_reg_reg[27] ({F4_WR_LAT_END_n_69,F4_WR_LAT_END_n_70,F4_WR_LAT_END_n_71,F4_WR_LAT_END_n_72}),
        .\Wr_Lat_Cnt_Diff_reg_reg[31] ({F4_WR_LAT_END_n_73,F4_WR_LAT_END_n_74,F4_WR_LAT_END_n_75,F4_WR_LAT_END_n_76}),
        .\Wr_Lat_Cnt_Diff_reg_reg[3] (F4_Rd_Data),
        .\Wr_Lat_Cnt_Diff_reg_reg[7] ({F4_WR_LAT_END_n_49,F4_WR_LAT_END_n_50,F4_WR_LAT_END_n_51,F4_WR_LAT_END_n_52}),
        .core_aclk(core_aclk),
        .\dout_reg[31]_0 (F3_Rd_Data),
        .empty_reg_0(F34_Rd_En),
        .out({out[2],out[0]}),
        .\rptr_reg[4]_0 (\rptr_reg[4]_5 ),
        .wr_latency_end_d2(wr_latency_end_d2));
  FDRE FBC_Rd_Vld_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(FBC_Rd_En),
        .Q(FBC_Rd_Vld),
        .R(Wr_cnt_ld));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized3 FBC_WR_BEAT_CNT
       (.\Beat_fifo_Wr_data_reg[61] (\Beat_fifo_Wr_data_reg[61]_0 ),
        .Beat_fifo_Wr_en(Beat_fifo_Wr_en),
        .D(D),
        .E(\wptr_reg[0]_0 ),
        .Ext_Trig_Metric_en_reg(Ext_Trig_Metric_en),
        .FBC1_Empty(FBC1_Empty),
        .FBC_Empty(FBC_Empty),
        .FBC_Rd_Vld_reg(FBC_Rd_Vld),
        .FSWI_Rd_Vld_reg(FSWI_Rd_Vld),
        .FSWI_Rd_Vld_reg_0(FSWI_WR_LAST_CNT_n_47),
        .FSWI_Rd_Vld_reg_1(FSWI_WR_LAST_CNT_n_48),
        .FSWI_Rd_Vld_reg_10(FSWI_WR_LAST_CNT_n_57),
        .FSWI_Rd_Vld_reg_11(FSWI_WR_LAST_CNT_n_58),
        .FSWI_Rd_Vld_reg_12(FSWI_WR_LAST_CNT_n_59),
        .FSWI_Rd_Vld_reg_13(FSWI_WR_LAST_CNT_n_60),
        .FSWI_Rd_Vld_reg_14(FSWI_WR_LAST_CNT_n_61),
        .FSWI_Rd_Vld_reg_15(FSWI_WR_LAST_CNT_n_62),
        .FSWI_Rd_Vld_reg_16(FSWI_WR_LAST_CNT_n_63),
        .FSWI_Rd_Vld_reg_17(FSWI_WR_LAST_CNT_n_64),
        .FSWI_Rd_Vld_reg_18(FSWI_WR_LAST_CNT_n_65),
        .FSWI_Rd_Vld_reg_19(FSWI_WR_LAST_CNT_n_66),
        .FSWI_Rd_Vld_reg_2(FSWI_WR_LAST_CNT_n_49),
        .FSWI_Rd_Vld_reg_20(FSWI_WR_LAST_CNT_n_67),
        .FSWI_Rd_Vld_reg_21(FSWI_WR_LAST_CNT_n_68),
        .FSWI_Rd_Vld_reg_22(FSWI_WR_LAST_CNT_n_69),
        .FSWI_Rd_Vld_reg_23(FSWI_WR_LAST_CNT_n_70),
        .FSWI_Rd_Vld_reg_24(FSWI_WR_LAST_CNT_n_71),
        .FSWI_Rd_Vld_reg_25(FSWI_WR_LAST_CNT_n_72),
        .FSWI_Rd_Vld_reg_26(FSWI_WR_LAST_CNT_n_73),
        .FSWI_Rd_Vld_reg_27(FSWI_WR_LAST_CNT_n_74),
        .FSWI_Rd_Vld_reg_28(FSWI_WR_LAST_CNT_n_75),
        .FSWI_Rd_Vld_reg_29(FSWI_WR_LAST_CNT_n_76),
        .FSWI_Rd_Vld_reg_3(FSWI_WR_LAST_CNT_n_50),
        .FSWI_Rd_Vld_reg_4(FSWI_WR_LAST_CNT_n_51),
        .FSWI_Rd_Vld_reg_5(FSWI_WR_LAST_CNT_n_52),
        .FSWI_Rd_Vld_reg_6(FSWI_WR_LAST_CNT_n_53),
        .FSWI_Rd_Vld_reg_7(FSWI_WR_LAST_CNT_n_54),
        .FSWI_Rd_Vld_reg_8(FSWI_WR_LAST_CNT_n_55),
        .FSWI_Rd_Vld_reg_9(FSWI_WR_LAST_CNT_n_56),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .\GEN_MUX_N_CNT.Add_in_reg[0] (\GEN_MUX_N_CNT.Add_in_reg[0] ),
        .\GEN_MUX_N_CNT.Add_in_reg[2] (\GEN_MUX_N_CNT.Add_in_reg[2] ),
        .\GEN_MUX_N_CNT.Add_in_reg[2]_0 (\GEN_MUX_N_CNT.Add_in_reg[2]_0 ),
        .\GEN_MUX_N_CNT.Add_in_reg[31] (\GEN_MUX_N_CNT.Add_in_reg[31] ),
        .\Max_Write_Latency_Int_reg[10] (\Max_Write_Latency_Int_reg[10]_0 ),
        .\Max_Write_Latency_Int_reg[11] (\Max_Write_Latency_Int_reg[11]_0 ),
        .\Max_Write_Latency_Int_reg[12] (\Max_Write_Latency_Int_reg[12]_0 ),
        .\Max_Write_Latency_Int_reg[13] (\Max_Write_Latency_Int_reg[13]_0 ),
        .\Max_Write_Latency_Int_reg[14] (\Max_Write_Latency_Int_reg[14]_0 ),
        .\Max_Write_Latency_Int_reg[15] (\Max_Write_Latency_Int_reg[15]_0 ),
        .\Max_Write_Latency_Int_reg[16] (\Max_Write_Latency_Int_reg[16]_0 ),
        .\Max_Write_Latency_Int_reg[17] (\Max_Write_Latency_Int_reg[17]_0 ),
        .\Max_Write_Latency_Int_reg[18] (\Max_Write_Latency_Int_reg[18]_0 ),
        .\Max_Write_Latency_Int_reg[19] (\Max_Write_Latency_Int_reg[19]_0 ),
        .\Max_Write_Latency_Int_reg[1] (\Max_Write_Latency_Int_reg[1]_0 ),
        .\Max_Write_Latency_Int_reg[20] (\Max_Write_Latency_Int_reg[20]_0 ),
        .\Max_Write_Latency_Int_reg[21] (\Max_Write_Latency_Int_reg[21]_0 ),
        .\Max_Write_Latency_Int_reg[22] (\Max_Write_Latency_Int_reg[22]_0 ),
        .\Max_Write_Latency_Int_reg[23] (\Max_Write_Latency_Int_reg[23]_0 ),
        .\Max_Write_Latency_Int_reg[24] (\Max_Write_Latency_Int_reg[24]_0 ),
        .\Max_Write_Latency_Int_reg[25] (\Max_Write_Latency_Int_reg[25]_0 ),
        .\Max_Write_Latency_Int_reg[26] (\Max_Write_Latency_Int_reg[26]_0 ),
        .\Max_Write_Latency_Int_reg[27] (\Max_Write_Latency_Int_reg[27]_0 ),
        .\Max_Write_Latency_Int_reg[28] (\Max_Write_Latency_Int_reg[28]_0 ),
        .\Max_Write_Latency_Int_reg[29] (\Max_Write_Latency_Int_reg[29]_0 ),
        .\Max_Write_Latency_Int_reg[30] (\Max_Write_Latency_Int_reg[30]_0 ),
        .\Max_Write_Latency_Int_reg[31] (\Max_Write_Latency_Int_reg[31]_0 ),
        .\Max_Write_Latency_Int_reg[3] (\Max_Write_Latency_Int_reg[3]_0 ),
        .\Max_Write_Latency_Int_reg[4] (\Max_Write_Latency_Int_reg[4]_0 ),
        .\Max_Write_Latency_Int_reg[5] (\Max_Write_Latency_Int_reg[5]_0 ),
        .\Max_Write_Latency_Int_reg[6] (\Max_Write_Latency_Int_reg[6]_0 ),
        .\Max_Write_Latency_Int_reg[7] (\Max_Write_Latency_Int_reg[7]_0 ),
        .\Max_Write_Latency_Int_reg[8] (\Max_Write_Latency_Int_reg[8]_0 ),
        .\Max_Write_Latency_Int_reg[9] (\Max_Write_Latency_Int_reg[9]_0 ),
        .\Min_Write_Latency_Int_reg[31] ({S0_Min_Write_Latency[31:3],S0_Min_Write_Latency[1]}),
        .Q(\wptr_reg[4]_4 ),
        .\Read_Latency_Int_reg[10] (\Read_Latency_Int_reg[10]_0 ),
        .\Read_Latency_Int_reg[11] (\Read_Latency_Int_reg[11]_0 ),
        .\Read_Latency_Int_reg[12] (\Read_Latency_Int_reg[12]_0 ),
        .\Read_Latency_Int_reg[13] (\Read_Latency_Int_reg[13]_0 ),
        .\Read_Latency_Int_reg[14] (\Read_Latency_Int_reg[14]_0 ),
        .\Read_Latency_Int_reg[15] (\Read_Latency_Int_reg[15]_0 ),
        .\Read_Latency_Int_reg[16] (\Read_Latency_Int_reg[16]_0 ),
        .\Read_Latency_Int_reg[17] (\Read_Latency_Int_reg[17]_0 ),
        .\Read_Latency_Int_reg[18] (\Read_Latency_Int_reg[18]_0 ),
        .\Read_Latency_Int_reg[19] (\Read_Latency_Int_reg[19]_0 ),
        .\Read_Latency_Int_reg[1] (\Read_Latency_Int_reg[1]_0 ),
        .\Read_Latency_Int_reg[20] (\Read_Latency_Int_reg[20]_0 ),
        .\Read_Latency_Int_reg[21] (\Read_Latency_Int_reg[21]_0 ),
        .\Read_Latency_Int_reg[22] (\Read_Latency_Int_reg[22]_0 ),
        .\Read_Latency_Int_reg[23] (\Read_Latency_Int_reg[23]_0 ),
        .\Read_Latency_Int_reg[24] (\Read_Latency_Int_reg[24]_0 ),
        .\Read_Latency_Int_reg[25] (\Read_Latency_Int_reg[25]_0 ),
        .\Read_Latency_Int_reg[26] (\Read_Latency_Int_reg[26]_0 ),
        .\Read_Latency_Int_reg[27] (\Read_Latency_Int_reg[27]_0 ),
        .\Read_Latency_Int_reg[28] (\Read_Latency_Int_reg[28]_0 ),
        .\Read_Latency_Int_reg[29] (\Read_Latency_Int_reg[29]_0 ),
        .\Read_Latency_Int_reg[30] (\Read_Latency_Int_reg[30]_0 ),
        .\Read_Latency_Int_reg[31] (\Read_Latency_Int_reg[31]_0 ),
        .\Read_Latency_Int_reg[3] (\Read_Latency_Int_reg[3]_0 ),
        .\Read_Latency_Int_reg[4] (\Read_Latency_Int_reg[4]_0 ),
        .\Read_Latency_Int_reg[5] (\Read_Latency_Int_reg[5]_0 ),
        .\Read_Latency_Int_reg[6] (\Read_Latency_Int_reg[6]_0 ),
        .\Read_Latency_Int_reg[7] (\Read_Latency_Int_reg[7]_0 ),
        .\Read_Latency_Int_reg[8] (\Read_Latency_Int_reg[8]_0 ),
        .\Read_Latency_Int_reg[9] (\Read_Latency_Int_reg[9]_0 ),
        .SR(Wr_cnt_ld),
        .core_aclk(core_aclk),
        .\dout_reg[31]_0 (FSWI1_Rd_Data),
        .out({out[2],out[0]}),
        .\rptr_reg[4]_0 (\rptr_reg[4]_1 ),
        .\rptr_reg[5]_0 (FBC_Rd_En));
  FDRE FSWI_Rd_Vld_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(FSWI_Rd_En),
        .Q(FSWI_Rd_Vld),
        .R(Wr_cnt_ld));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized4 FSWI_WR_LAST_CNT
       (.E(E),
        .Ext_Trig_Metric_en_reg(Ext_Trig_Metric_en),
        .FSWI1_Empty(FSWI1_Empty),
        .FSWI_Empty(FSWI_Empty),
        .FSWI_Rd_Vld_reg(FSWI_Rd_Vld),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_1 ),
        .\GEN_MUX_N_CNT.Add_in_reg[10] (FSWI_WR_LAST_CNT_n_55),
        .\GEN_MUX_N_CNT.Add_in_reg[11] (FSWI_WR_LAST_CNT_n_56),
        .\GEN_MUX_N_CNT.Add_in_reg[12] (FSWI_WR_LAST_CNT_n_57),
        .\GEN_MUX_N_CNT.Add_in_reg[13] (FSWI_WR_LAST_CNT_n_58),
        .\GEN_MUX_N_CNT.Add_in_reg[14] (FSWI_WR_LAST_CNT_n_59),
        .\GEN_MUX_N_CNT.Add_in_reg[15] (FSWI_WR_LAST_CNT_n_60),
        .\GEN_MUX_N_CNT.Add_in_reg[16] (FSWI_WR_LAST_CNT_n_61),
        .\GEN_MUX_N_CNT.Add_in_reg[17] (FSWI_WR_LAST_CNT_n_62),
        .\GEN_MUX_N_CNT.Add_in_reg[18] (FSWI_WR_LAST_CNT_n_63),
        .\GEN_MUX_N_CNT.Add_in_reg[19] (FSWI_WR_LAST_CNT_n_64),
        .\GEN_MUX_N_CNT.Add_in_reg[1] (FSWI_WR_LAST_CNT_n_47),
        .\GEN_MUX_N_CNT.Add_in_reg[20] (FSWI_WR_LAST_CNT_n_65),
        .\GEN_MUX_N_CNT.Add_in_reg[21] (FSWI_WR_LAST_CNT_n_66),
        .\GEN_MUX_N_CNT.Add_in_reg[22] (FSWI_WR_LAST_CNT_n_67),
        .\GEN_MUX_N_CNT.Add_in_reg[23] (FSWI_WR_LAST_CNT_n_68),
        .\GEN_MUX_N_CNT.Add_in_reg[24] (FSWI_WR_LAST_CNT_n_69),
        .\GEN_MUX_N_CNT.Add_in_reg[25] (FSWI_WR_LAST_CNT_n_70),
        .\GEN_MUX_N_CNT.Add_in_reg[26] (FSWI_WR_LAST_CNT_n_71),
        .\GEN_MUX_N_CNT.Add_in_reg[27] (FSWI_WR_LAST_CNT_n_72),
        .\GEN_MUX_N_CNT.Add_in_reg[28] (FSWI_WR_LAST_CNT_n_73),
        .\GEN_MUX_N_CNT.Add_in_reg[29] (FSWI_WR_LAST_CNT_n_74),
        .\GEN_MUX_N_CNT.Add_in_reg[2] (\GEN_MUX_N_CNT.Add_in_reg[2]_1 ),
        .\GEN_MUX_N_CNT.Add_in_reg[30] (FSWI_WR_LAST_CNT_n_75),
        .\GEN_MUX_N_CNT.Add_in_reg[31] (FSWI_WR_LAST_CNT_n_76),
        .\GEN_MUX_N_CNT.Add_in_reg[3] (FSWI_WR_LAST_CNT_n_48),
        .\GEN_MUX_N_CNT.Add_in_reg[4] (FSWI_WR_LAST_CNT_n_49),
        .\GEN_MUX_N_CNT.Add_in_reg[5] (FSWI_WR_LAST_CNT_n_50),
        .\GEN_MUX_N_CNT.Add_in_reg[6] (FSWI_WR_LAST_CNT_n_51),
        .\GEN_MUX_N_CNT.Add_in_reg[7] (FSWI_WR_LAST_CNT_n_52),
        .\GEN_MUX_N_CNT.Add_in_reg[8] (FSWI_WR_LAST_CNT_n_53),
        .\GEN_MUX_N_CNT.Add_in_reg[9] (FSWI_WR_LAST_CNT_n_54),
        .\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] (\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ),
        .Last_fifo_Wr_en(Last_fifo_Wr_en),
        .\Min_Write_Latency_Int_reg[2] (S0_Min_Write_Latency[2]),
        .Q({FSWI1_Rd_Data,\GEN_MUX_N_CNT.Add_in_reg[0]_0 }),
        .SR(Wr_cnt_ld),
        .\Slv_Wr_Idle_Fifo_Wr_data_reg[31] (\Slv_Wr_Idle_Fifo_Wr_data_reg[31]_0 ),
        .\Write_Latency_Int_reg[31] ({S0_Write_Latency[31:3],S0_Write_Latency[1]}),
        .core_aclk(core_aclk),
        .empty2__0(empty2__0),
        .out({out[2],out[0]}),
        .\rptr_reg[4]_0 (\rptr_reg[4]_3 ),
        .\rptr_reg[5]_0 (FSWI_Rd_En),
        .\wptr_reg[4]_0 (\wptr_reg[4]_7 ));
  FDRE FWL_Rd_Vld_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(FWL_Rd_En),
        .Q(FWL_Rd_Vld),
        .R(Wr_cnt_ld));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_38 FWL_WR_LAST_CNT
       (.E(FWL_Rd_En),
        .Ext_Trig_Metric_en_reg(Ext_Trig_Metric_en),
        .Ext_Trig_Metric_en_reg_0(E),
        .FWL1_Empty(FWL1_Empty),
        .FWL_Empty(FWL_Empty),
        .Last_fifo_Wr_en(Last_fifo_Wr_en),
        .SR(Wr_cnt_ld),
        .core_aclk(core_aclk),
        .empty2__0(empty2__0),
        .out({out[2],out[0]}));
  FDRE First_Read_reg_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(First_Read),
        .Q(First_Read_reg),
        .R(Wr_cnt_ld));
  FDRE First_Write_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(First_Write),
        .Q(First_Write_d1),
        .R(Wr_cnt_ld));
  FDRE \GEN_ARSIZE_F1.Mst_Rd_Idle_Cnt_En_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Mst_Rd_Idle_Cnt_En0),
        .Q(Mst_Rd_Idle_Cnt_En),
        .R(Wr_cnt_ld));
  FDRE \GEN_ARSIZE_F1.Num_BValids_En_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Num_BValids_En0),
        .Q(Num_BValids_En),
        .R(Wr_cnt_ld));
  FDRE \GEN_ARSIZE_F1.Num_RLasts_En_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Num_RLasts_En0),
        .Q(Num_RLasts_En),
        .R(Wr_cnt_ld));
  FDRE \GEN_ARSIZE_F1.Read_Beat_Cnt_En_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Beat_Cnt_En0),
        .Q(S0_Read_Byte_Cnt_En),
        .R(Wr_cnt_ld));
  FDRE \GEN_ARSIZE_F1.Read_Byte_Cnt_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(1'b1),
        .Q(S0_Read_Byte_Cnt),
        .R(Wr_cnt_ld));
  FDRE \GEN_ARSIZE_F1.Rtrans_Cnt_En_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rtrans_Cnt_En0),
        .Q(Rtrans_Cnt_En),
        .R(Wr_cnt_ld));
  FDRE \GEN_ARSIZE_F1.Wtrans_Cnt_En_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Wtrans_Cnt_En0),
        .Q(Wtrans_Cnt_En),
        .R(Wr_cnt_ld));
  LUT4 #(
    .INIT(16'hF888)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_6 
       (.I0(S0_Max_Read_Latency),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_2 ),
        .I2(S0_Min_Read_Latency),
        .I3(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_1 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[2]_3 ));
  LUT4 #(
    .INIT(16'h00AC)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_13 
       (.I0(Rtrans_Cnt_En),
        .I1(Wtrans_Cnt_En),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] [0]),
        .I3(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] [2]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_reg_1 ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_39 IDLE_CNT_AWID_MATCH
       (.E(FSWI_Rd_En),
        .F1_Wr_Data(F1_Wr_Data),
        .FSWI1_Empty(FSWI1_Empty),
        .FSWI_Empty(FSWI_Empty),
        .FSWI_Rd_Data(FSWI_Rd_Data),
        .Q(\wptr_reg[4]_8 ),
        .SR(Wr_cnt_ld),
        .awid_match_d1(awid_match_d1),
        .core_aclk(core_aclk),
        .dout0_4(dout0_4),
        .out(out[1]),
        .\rptr_reg[4]_0 (\rptr_reg[4]_2 ),
        .\s_level_out_bus_d4_reg[0] (\s_level_out_bus_d4_reg[0] ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_40 LAST_CNT_AWID_MATCH
       (.E(FWL_Rd_En),
        .FWL1_Empty(FWL1_Empty),
        .FWL_Empty(FWL_Empty),
        .FWL_Rd_Vld(FWL_Rd_Vld),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ({\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] [2],\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] [0]}),
        .\GEN_MUX_N_CNT.Add_in_Valid_reg (\GEN_MUX_N_CNT.Add_in_Valid_reg ),
        .Num_RLasts_En(Num_RLasts_En),
        .Q(\wptr_reg[4]_6 ),
        .SR(Wr_cnt_ld),
        .core_aclk(core_aclk),
        .dout0_3(dout0_3),
        .\rptr_reg[4]_0 (\rptr_reg[4]_4 ),
        .\s_level_out_bus_d4_reg[0] (\s_level_out_bus_d4_reg[0] ));
  FDRE Last_Read_reg_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_40_in),
        .Q(Last_Read_reg),
        .R(Wr_cnt_ld));
  FDRE Last_Write_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Last_Write),
        .Q(Last_fifo_Wr_en),
        .R(Wr_cnt_ld));
  LUT2 #(
    .INIT(4'h8)) 
    \Max_Read_Latency_Int[31]_i_1 
       (.I0(Max_Read_Latency_Int1),
        .I1(Read_Latency_En),
        .O(Max_Read_Latency_Int0));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_10 
       (.I0(S0_Read_Latency[26]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [25]),
        .I2(S0_Read_Latency[27]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [26]),
        .O(\Max_Read_Latency_Int[31]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_11 
       (.I0(S0_Read_Latency[24]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [23]),
        .I2(S0_Read_Latency[25]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [24]),
        .O(\Max_Read_Latency_Int[31]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_13 
       (.I0(S0_Read_Latency[22]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [21]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [22]),
        .I3(S0_Read_Latency[23]),
        .O(\Max_Read_Latency_Int[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_14 
       (.I0(S0_Read_Latency[20]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [19]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [20]),
        .I3(S0_Read_Latency[21]),
        .O(\Max_Read_Latency_Int[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_15 
       (.I0(S0_Read_Latency[18]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [17]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [18]),
        .I3(S0_Read_Latency[19]),
        .O(\Max_Read_Latency_Int[31]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_16 
       (.I0(S0_Read_Latency[16]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [15]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [16]),
        .I3(S0_Read_Latency[17]),
        .O(\Max_Read_Latency_Int[31]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_17 
       (.I0(S0_Read_Latency[22]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [21]),
        .I2(S0_Read_Latency[23]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [22]),
        .O(\Max_Read_Latency_Int[31]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_18 
       (.I0(S0_Read_Latency[20]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [19]),
        .I2(S0_Read_Latency[21]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [20]),
        .O(\Max_Read_Latency_Int[31]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_19 
       (.I0(S0_Read_Latency[18]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [17]),
        .I2(S0_Read_Latency[19]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [18]),
        .O(\Max_Read_Latency_Int[31]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_20 
       (.I0(S0_Read_Latency[16]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [15]),
        .I2(S0_Read_Latency[17]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [16]),
        .O(\Max_Read_Latency_Int[31]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_22 
       (.I0(S0_Read_Latency[14]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [13]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [14]),
        .I3(S0_Read_Latency[15]),
        .O(\Max_Read_Latency_Int[31]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_23 
       (.I0(S0_Read_Latency[12]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [11]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [12]),
        .I3(S0_Read_Latency[13]),
        .O(\Max_Read_Latency_Int[31]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_24 
       (.I0(S0_Read_Latency[10]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [9]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [10]),
        .I3(S0_Read_Latency[11]),
        .O(\Max_Read_Latency_Int[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_25 
       (.I0(S0_Read_Latency[8]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [7]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [8]),
        .I3(S0_Read_Latency[9]),
        .O(\Max_Read_Latency_Int[31]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_26 
       (.I0(S0_Read_Latency[14]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [13]),
        .I2(S0_Read_Latency[15]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [14]),
        .O(\Max_Read_Latency_Int[31]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_27 
       (.I0(S0_Read_Latency[12]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [11]),
        .I2(S0_Read_Latency[13]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [12]),
        .O(\Max_Read_Latency_Int[31]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_28 
       (.I0(S0_Read_Latency[10]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [9]),
        .I2(S0_Read_Latency[11]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [10]),
        .O(\Max_Read_Latency_Int[31]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_29 
       (.I0(S0_Read_Latency[8]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [7]),
        .I2(S0_Read_Latency[9]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [8]),
        .O(\Max_Read_Latency_Int[31]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_30 
       (.I0(S0_Read_Latency[6]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [5]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [6]),
        .I3(S0_Read_Latency[7]),
        .O(\Max_Read_Latency_Int[31]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_31 
       (.I0(S0_Read_Latency[4]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [3]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [4]),
        .I3(S0_Read_Latency[5]),
        .O(\Max_Read_Latency_Int[31]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_32 
       (.I0(S0_Read_Latency[2]),
        .I1(S0_Max_Read_Latency),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [2]),
        .I3(S0_Read_Latency[3]),
        .O(\Max_Read_Latency_Int[31]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_33 
       (.I0(S0_Read_Latency[0]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [0]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [1]),
        .I3(S0_Read_Latency[1]),
        .O(\Max_Read_Latency_Int[31]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_34 
       (.I0(S0_Read_Latency[6]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [5]),
        .I2(S0_Read_Latency[7]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [6]),
        .O(\Max_Read_Latency_Int[31]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_35 
       (.I0(S0_Read_Latency[4]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [3]),
        .I2(S0_Read_Latency[5]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [4]),
        .O(\Max_Read_Latency_Int[31]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_36 
       (.I0(S0_Read_Latency[2]),
        .I1(S0_Max_Read_Latency),
        .I2(S0_Read_Latency[3]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [2]),
        .O(\Max_Read_Latency_Int[31]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_37 
       (.I0(S0_Read_Latency[0]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [0]),
        .I2(S0_Read_Latency[1]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [1]),
        .O(\Max_Read_Latency_Int[31]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_4 
       (.I0(S0_Read_Latency[30]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [29]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [30]),
        .I3(S0_Read_Latency[31]),
        .O(\Max_Read_Latency_Int[31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_5 
       (.I0(S0_Read_Latency[28]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [27]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [28]),
        .I3(S0_Read_Latency[29]),
        .O(\Max_Read_Latency_Int[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_6 
       (.I0(S0_Read_Latency[26]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [25]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [26]),
        .I3(S0_Read_Latency[27]),
        .O(\Max_Read_Latency_Int[31]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Max_Read_Latency_Int[31]_i_7 
       (.I0(S0_Read_Latency[24]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [23]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [24]),
        .I3(S0_Read_Latency[25]),
        .O(\Max_Read_Latency_Int[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_8 
       (.I0(S0_Read_Latency[30]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [29]),
        .I2(S0_Read_Latency[31]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [30]),
        .O(\Max_Read_Latency_Int[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Max_Read_Latency_Int[31]_i_9 
       (.I0(S0_Read_Latency[28]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [27]),
        .I2(S0_Read_Latency[29]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [28]),
        .O(\Max_Read_Latency_Int[31]_i_9_n_0 ));
  FDRE \Max_Read_Latency_Int_reg[0] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[0]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [0]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[10] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[10]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [9]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[11] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[11]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [10]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[12] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[12]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [11]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[13] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[13]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [12]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[14] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[14]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [13]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[15] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[15]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [14]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[16] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[16]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [15]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[17] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[17]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [16]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[18] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[18]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [17]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[19] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[19]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [18]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[1] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[1]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [1]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[20] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[20]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [19]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[21] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[21]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [20]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[22] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[22]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [21]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[23] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[23]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [22]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[24] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[24]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [23]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[25] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[25]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [24]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[26] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[26]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [25]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[27] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[27]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [26]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[28] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[28]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [27]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[29] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[29]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [28]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[2] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[2]),
        .Q(S0_Max_Read_Latency),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[30] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[30]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [29]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[31] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[31]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [30]),
        .R(Wr_cnt_ld));
  CARRY4 \Max_Read_Latency_Int_reg[31]_i_12 
       (.CI(\Max_Read_Latency_Int_reg[31]_i_21_n_0 ),
        .CO({\Max_Read_Latency_Int_reg[31]_i_12_n_0 ,\Max_Read_Latency_Int_reg[31]_i_12_n_1 ,\Max_Read_Latency_Int_reg[31]_i_12_n_2 ,\Max_Read_Latency_Int_reg[31]_i_12_n_3 }),
        .CYINIT(1'b0),
        .DI({\Max_Read_Latency_Int[31]_i_22_n_0 ,\Max_Read_Latency_Int[31]_i_23_n_0 ,\Max_Read_Latency_Int[31]_i_24_n_0 ,\Max_Read_Latency_Int[31]_i_25_n_0 }),
        .O(\NLW_Max_Read_Latency_Int_reg[31]_i_12_O_UNCONNECTED [3:0]),
        .S({\Max_Read_Latency_Int[31]_i_26_n_0 ,\Max_Read_Latency_Int[31]_i_27_n_0 ,\Max_Read_Latency_Int[31]_i_28_n_0 ,\Max_Read_Latency_Int[31]_i_29_n_0 }));
  CARRY4 \Max_Read_Latency_Int_reg[31]_i_2 
       (.CI(\Max_Read_Latency_Int_reg[31]_i_3_n_0 ),
        .CO({Max_Read_Latency_Int1,\Max_Read_Latency_Int_reg[31]_i_2_n_1 ,\Max_Read_Latency_Int_reg[31]_i_2_n_2 ,\Max_Read_Latency_Int_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({\Max_Read_Latency_Int[31]_i_4_n_0 ,\Max_Read_Latency_Int[31]_i_5_n_0 ,\Max_Read_Latency_Int[31]_i_6_n_0 ,\Max_Read_Latency_Int[31]_i_7_n_0 }),
        .O(\NLW_Max_Read_Latency_Int_reg[31]_i_2_O_UNCONNECTED [3:0]),
        .S({\Max_Read_Latency_Int[31]_i_8_n_0 ,\Max_Read_Latency_Int[31]_i_9_n_0 ,\Max_Read_Latency_Int[31]_i_10_n_0 ,\Max_Read_Latency_Int[31]_i_11_n_0 }));
  CARRY4 \Max_Read_Latency_Int_reg[31]_i_21 
       (.CI(1'b0),
        .CO({\Max_Read_Latency_Int_reg[31]_i_21_n_0 ,\Max_Read_Latency_Int_reg[31]_i_21_n_1 ,\Max_Read_Latency_Int_reg[31]_i_21_n_2 ,\Max_Read_Latency_Int_reg[31]_i_21_n_3 }),
        .CYINIT(1'b0),
        .DI({\Max_Read_Latency_Int[31]_i_30_n_0 ,\Max_Read_Latency_Int[31]_i_31_n_0 ,\Max_Read_Latency_Int[31]_i_32_n_0 ,\Max_Read_Latency_Int[31]_i_33_n_0 }),
        .O(\NLW_Max_Read_Latency_Int_reg[31]_i_21_O_UNCONNECTED [3:0]),
        .S({\Max_Read_Latency_Int[31]_i_34_n_0 ,\Max_Read_Latency_Int[31]_i_35_n_0 ,\Max_Read_Latency_Int[31]_i_36_n_0 ,\Max_Read_Latency_Int[31]_i_37_n_0 }));
  CARRY4 \Max_Read_Latency_Int_reg[31]_i_3 
       (.CI(\Max_Read_Latency_Int_reg[31]_i_12_n_0 ),
        .CO({\Max_Read_Latency_Int_reg[31]_i_3_n_0 ,\Max_Read_Latency_Int_reg[31]_i_3_n_1 ,\Max_Read_Latency_Int_reg[31]_i_3_n_2 ,\Max_Read_Latency_Int_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({\Max_Read_Latency_Int[31]_i_13_n_0 ,\Max_Read_Latency_Int[31]_i_14_n_0 ,\Max_Read_Latency_Int[31]_i_15_n_0 ,\Max_Read_Latency_Int[31]_i_16_n_0 }),
        .O(\NLW_Max_Read_Latency_Int_reg[31]_i_3_O_UNCONNECTED [3:0]),
        .S({\Max_Read_Latency_Int[31]_i_17_n_0 ,\Max_Read_Latency_Int[31]_i_18_n_0 ,\Max_Read_Latency_Int[31]_i_19_n_0 ,\Max_Read_Latency_Int[31]_i_20_n_0 }));
  FDRE \Max_Read_Latency_Int_reg[3] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[3]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [2]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[4] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[4]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [3]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[5] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[5]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [4]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[6] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[6]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [5]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[7] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[7]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [6]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[8] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[8]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [7]),
        .R(Wr_cnt_ld));
  FDRE \Max_Read_Latency_Int_reg[9] 
       (.C(core_aclk),
        .CE(Max_Read_Latency_Int0),
        .D(S0_Read_Latency[9]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_0 [8]),
        .R(Wr_cnt_ld));
  LUT3 #(
    .INIT(8'h80)) 
    \Max_Write_Latency_Int[31]_i_1 
       (.I0(F34_Rd_Vld_reg_d2),
        .I1(wid_match_reg_d2),
        .I2(update_max_Wr_Lat),
        .O(Max_Write_Latency_Int0));
  FDRE \Max_Write_Latency_Int_reg[0] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[0] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [0]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[10] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[10] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [10]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[11] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[11] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [11]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[12] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[12] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [12]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[13] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[13] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [13]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[14] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[14] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [14]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[15] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[15] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [15]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[16] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[16] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [16]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[17] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[17] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [17]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[18] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[18] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [18]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[19] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[19] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [19]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[1] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[1] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [1]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[20] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[20] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [20]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[21] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[21] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [21]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[22] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[22] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [22]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[23] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[23] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [23]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[24] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[24] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [24]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[25] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[25] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [25]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[26] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[26] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [26]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[27] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[27] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [27]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[28] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[28] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [28]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[29] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[29] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [29]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[2] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[2] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [2]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[30] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[30] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [30]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[31] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[31] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [31]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[3] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[3] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [3]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[4] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[4] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [4]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[5] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[5] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [5]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[6] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[6] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [6]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[7] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[7] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [7]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[8] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[8] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [8]),
        .R(Wr_cnt_ld));
  FDRE \Max_Write_Latency_Int_reg[9] 
       (.C(core_aclk),
        .CE(Max_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[9] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [9]),
        .R(Wr_cnt_ld));
  LUT2 #(
    .INIT(4'h8)) 
    \Min_Read_Latency_Int[31]_i_1 
       (.I0(Min_Read_Latency_Int1),
        .I1(Read_Latency_En),
        .O(Min_Read_Latency_Int0));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_10 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [25]),
        .I1(S0_Read_Latency[26]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [26]),
        .I3(S0_Read_Latency[27]),
        .O(\Min_Read_Latency_Int[31]_i_10_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_11 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [23]),
        .I1(S0_Read_Latency[24]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [24]),
        .I3(S0_Read_Latency[25]),
        .O(\Min_Read_Latency_Int[31]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_13 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [21]),
        .I1(S0_Read_Latency[22]),
        .I2(S0_Read_Latency[23]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [22]),
        .O(\Min_Read_Latency_Int[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_14 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [19]),
        .I1(S0_Read_Latency[20]),
        .I2(S0_Read_Latency[21]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [20]),
        .O(\Min_Read_Latency_Int[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_15 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [17]),
        .I1(S0_Read_Latency[18]),
        .I2(S0_Read_Latency[19]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [18]),
        .O(\Min_Read_Latency_Int[31]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_16 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [15]),
        .I1(S0_Read_Latency[16]),
        .I2(S0_Read_Latency[17]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [16]),
        .O(\Min_Read_Latency_Int[31]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_17 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [21]),
        .I1(S0_Read_Latency[22]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [22]),
        .I3(S0_Read_Latency[23]),
        .O(\Min_Read_Latency_Int[31]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_18 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [19]),
        .I1(S0_Read_Latency[20]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [20]),
        .I3(S0_Read_Latency[21]),
        .O(\Min_Read_Latency_Int[31]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_19 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [17]),
        .I1(S0_Read_Latency[18]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [18]),
        .I3(S0_Read_Latency[19]),
        .O(\Min_Read_Latency_Int[31]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_20 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [15]),
        .I1(S0_Read_Latency[16]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [16]),
        .I3(S0_Read_Latency[17]),
        .O(\Min_Read_Latency_Int[31]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_22 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [13]),
        .I1(S0_Read_Latency[14]),
        .I2(S0_Read_Latency[15]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [14]),
        .O(\Min_Read_Latency_Int[31]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_23 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [11]),
        .I1(S0_Read_Latency[12]),
        .I2(S0_Read_Latency[13]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [12]),
        .O(\Min_Read_Latency_Int[31]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_24 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [9]),
        .I1(S0_Read_Latency[10]),
        .I2(S0_Read_Latency[11]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [10]),
        .O(\Min_Read_Latency_Int[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_25 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [7]),
        .I1(S0_Read_Latency[8]),
        .I2(S0_Read_Latency[9]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [8]),
        .O(\Min_Read_Latency_Int[31]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_26 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [13]),
        .I1(S0_Read_Latency[14]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [14]),
        .I3(S0_Read_Latency[15]),
        .O(\Min_Read_Latency_Int[31]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_27 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [11]),
        .I1(S0_Read_Latency[12]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [12]),
        .I3(S0_Read_Latency[13]),
        .O(\Min_Read_Latency_Int[31]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_28 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [9]),
        .I1(S0_Read_Latency[10]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [10]),
        .I3(S0_Read_Latency[11]),
        .O(\Min_Read_Latency_Int[31]_i_28_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_29 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [7]),
        .I1(S0_Read_Latency[8]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [8]),
        .I3(S0_Read_Latency[9]),
        .O(\Min_Read_Latency_Int[31]_i_29_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_30 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [5]),
        .I1(S0_Read_Latency[6]),
        .I2(S0_Read_Latency[7]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [6]),
        .O(\Min_Read_Latency_Int[31]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_31 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [3]),
        .I1(S0_Read_Latency[4]),
        .I2(S0_Read_Latency[5]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [4]),
        .O(\Min_Read_Latency_Int[31]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_32 
       (.I0(S0_Min_Read_Latency),
        .I1(S0_Read_Latency[2]),
        .I2(S0_Read_Latency[3]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [2]),
        .O(\Min_Read_Latency_Int[31]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_33 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [0]),
        .I1(S0_Read_Latency[0]),
        .I2(S0_Read_Latency[1]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [1]),
        .O(\Min_Read_Latency_Int[31]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_34 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [5]),
        .I1(S0_Read_Latency[6]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [6]),
        .I3(S0_Read_Latency[7]),
        .O(\Min_Read_Latency_Int[31]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_35 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [3]),
        .I1(S0_Read_Latency[4]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [4]),
        .I3(S0_Read_Latency[5]),
        .O(\Min_Read_Latency_Int[31]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_36 
       (.I0(S0_Min_Read_Latency),
        .I1(S0_Read_Latency[2]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [2]),
        .I3(S0_Read_Latency[3]),
        .O(\Min_Read_Latency_Int[31]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_37 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [0]),
        .I1(S0_Read_Latency[0]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [1]),
        .I3(S0_Read_Latency[1]),
        .O(\Min_Read_Latency_Int[31]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_4 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [29]),
        .I1(S0_Read_Latency[30]),
        .I2(S0_Read_Latency[31]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [30]),
        .O(\Min_Read_Latency_Int[31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [27]),
        .I1(S0_Read_Latency[28]),
        .I2(S0_Read_Latency[29]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [28]),
        .O(\Min_Read_Latency_Int[31]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_6 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [25]),
        .I1(S0_Read_Latency[26]),
        .I2(S0_Read_Latency[27]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [26]),
        .O(\Min_Read_Latency_Int[31]_i_6_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Min_Read_Latency_Int[31]_i_7 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [23]),
        .I1(S0_Read_Latency[24]),
        .I2(S0_Read_Latency[25]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [24]),
        .O(\Min_Read_Latency_Int[31]_i_7_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_8 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [29]),
        .I1(S0_Read_Latency[30]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [30]),
        .I3(S0_Read_Latency[31]),
        .O(\Min_Read_Latency_Int[31]_i_8_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Min_Read_Latency_Int[31]_i_9 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [27]),
        .I1(S0_Read_Latency[28]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [28]),
        .I3(S0_Read_Latency[29]),
        .O(\Min_Read_Latency_Int[31]_i_9_n_0 ));
  FDSE \Min_Read_Latency_Int_reg[0] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[0]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [0]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[10] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[10]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [9]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[11] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[11]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [10]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[12] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[12]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [11]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[13] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[13]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [12]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[14] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[14]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [13]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[15] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[15]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [14]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[16] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[16]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [15]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[17] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[17]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [16]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[18] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[18]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [17]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[19] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[19]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [18]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[1] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[1]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [1]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[20] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[20]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [19]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[21] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[21]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [20]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[22] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[22]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [21]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[23] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[23]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [22]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[24] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[24]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [23]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[25] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[25]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [24]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[26] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[26]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [25]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[27] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[27]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [26]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[28] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[28]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [27]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[29] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[29]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [28]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[2] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[2]),
        .Q(S0_Min_Read_Latency),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[30] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[30]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [29]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[31] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[31]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [30]),
        .S(Wr_cnt_ld));
  CARRY4 \Min_Read_Latency_Int_reg[31]_i_12 
       (.CI(\Min_Read_Latency_Int_reg[31]_i_21_n_0 ),
        .CO({\Min_Read_Latency_Int_reg[31]_i_12_n_0 ,\Min_Read_Latency_Int_reg[31]_i_12_n_1 ,\Min_Read_Latency_Int_reg[31]_i_12_n_2 ,\Min_Read_Latency_Int_reg[31]_i_12_n_3 }),
        .CYINIT(1'b0),
        .DI({\Min_Read_Latency_Int[31]_i_22_n_0 ,\Min_Read_Latency_Int[31]_i_23_n_0 ,\Min_Read_Latency_Int[31]_i_24_n_0 ,\Min_Read_Latency_Int[31]_i_25_n_0 }),
        .O(\NLW_Min_Read_Latency_Int_reg[31]_i_12_O_UNCONNECTED [3:0]),
        .S({\Min_Read_Latency_Int[31]_i_26_n_0 ,\Min_Read_Latency_Int[31]_i_27_n_0 ,\Min_Read_Latency_Int[31]_i_28_n_0 ,\Min_Read_Latency_Int[31]_i_29_n_0 }));
  CARRY4 \Min_Read_Latency_Int_reg[31]_i_2 
       (.CI(\Min_Read_Latency_Int_reg[31]_i_3_n_0 ),
        .CO({Min_Read_Latency_Int1,\Min_Read_Latency_Int_reg[31]_i_2_n_1 ,\Min_Read_Latency_Int_reg[31]_i_2_n_2 ,\Min_Read_Latency_Int_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({\Min_Read_Latency_Int[31]_i_4_n_0 ,\Min_Read_Latency_Int[31]_i_5_n_0 ,\Min_Read_Latency_Int[31]_i_6_n_0 ,\Min_Read_Latency_Int[31]_i_7_n_0 }),
        .O(\NLW_Min_Read_Latency_Int_reg[31]_i_2_O_UNCONNECTED [3:0]),
        .S({\Min_Read_Latency_Int[31]_i_8_n_0 ,\Min_Read_Latency_Int[31]_i_9_n_0 ,\Min_Read_Latency_Int[31]_i_10_n_0 ,\Min_Read_Latency_Int[31]_i_11_n_0 }));
  CARRY4 \Min_Read_Latency_Int_reg[31]_i_21 
       (.CI(1'b0),
        .CO({\Min_Read_Latency_Int_reg[31]_i_21_n_0 ,\Min_Read_Latency_Int_reg[31]_i_21_n_1 ,\Min_Read_Latency_Int_reg[31]_i_21_n_2 ,\Min_Read_Latency_Int_reg[31]_i_21_n_3 }),
        .CYINIT(1'b0),
        .DI({\Min_Read_Latency_Int[31]_i_30_n_0 ,\Min_Read_Latency_Int[31]_i_31_n_0 ,\Min_Read_Latency_Int[31]_i_32_n_0 ,\Min_Read_Latency_Int[31]_i_33_n_0 }),
        .O(\NLW_Min_Read_Latency_Int_reg[31]_i_21_O_UNCONNECTED [3:0]),
        .S({\Min_Read_Latency_Int[31]_i_34_n_0 ,\Min_Read_Latency_Int[31]_i_35_n_0 ,\Min_Read_Latency_Int[31]_i_36_n_0 ,\Min_Read_Latency_Int[31]_i_37_n_0 }));
  CARRY4 \Min_Read_Latency_Int_reg[31]_i_3 
       (.CI(\Min_Read_Latency_Int_reg[31]_i_12_n_0 ),
        .CO({\Min_Read_Latency_Int_reg[31]_i_3_n_0 ,\Min_Read_Latency_Int_reg[31]_i_3_n_1 ,\Min_Read_Latency_Int_reg[31]_i_3_n_2 ,\Min_Read_Latency_Int_reg[31]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({\Min_Read_Latency_Int[31]_i_13_n_0 ,\Min_Read_Latency_Int[31]_i_14_n_0 ,\Min_Read_Latency_Int[31]_i_15_n_0 ,\Min_Read_Latency_Int[31]_i_16_n_0 }),
        .O(\NLW_Min_Read_Latency_Int_reg[31]_i_3_O_UNCONNECTED [3:0]),
        .S({\Min_Read_Latency_Int[31]_i_17_n_0 ,\Min_Read_Latency_Int[31]_i_18_n_0 ,\Min_Read_Latency_Int[31]_i_19_n_0 ,\Min_Read_Latency_Int[31]_i_20_n_0 }));
  FDSE \Min_Read_Latency_Int_reg[3] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[3]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [2]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[4] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[4]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [3]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[5] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[5]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [4]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[6] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[6]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [5]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[7] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[7]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [6]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[8] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[8]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [7]),
        .S(Wr_cnt_ld));
  FDSE \Min_Read_Latency_Int_reg[9] 
       (.C(core_aclk),
        .CE(Min_Read_Latency_Int0),
        .D(S0_Read_Latency[9]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[31]_1 [8]),
        .S(Wr_cnt_ld));
  LUT3 #(
    .INIT(8'h80)) 
    \Min_Write_Latency_Int[31]_i_1 
       (.I0(F34_Rd_Vld_reg_d2),
        .I1(wid_match_reg_d2),
        .I2(update_min_Wr_Lat),
        .O(Min_Write_Latency_Int0));
  FDSE \Min_Write_Latency_Int_reg[0] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[0] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[0]_1 ),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[10] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[10] ),
        .Q(S0_Min_Write_Latency[10]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[11] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[11] ),
        .Q(S0_Min_Write_Latency[11]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[12] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[12] ),
        .Q(S0_Min_Write_Latency[12]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[13] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[13] ),
        .Q(S0_Min_Write_Latency[13]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[14] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[14] ),
        .Q(S0_Min_Write_Latency[14]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[15] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[15] ),
        .Q(S0_Min_Write_Latency[15]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[16] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[16] ),
        .Q(S0_Min_Write_Latency[16]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[17] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[17] ),
        .Q(S0_Min_Write_Latency[17]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[18] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[18] ),
        .Q(S0_Min_Write_Latency[18]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[19] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[19] ),
        .Q(S0_Min_Write_Latency[19]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[1] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[1] ),
        .Q(S0_Min_Write_Latency[1]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[20] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[20] ),
        .Q(S0_Min_Write_Latency[20]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[21] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[21] ),
        .Q(S0_Min_Write_Latency[21]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[22] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[22] ),
        .Q(S0_Min_Write_Latency[22]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[23] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[23] ),
        .Q(S0_Min_Write_Latency[23]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[24] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[24] ),
        .Q(S0_Min_Write_Latency[24]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[25] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[25] ),
        .Q(S0_Min_Write_Latency[25]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[26] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[26] ),
        .Q(S0_Min_Write_Latency[26]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[27] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[27] ),
        .Q(S0_Min_Write_Latency[27]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[28] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[28] ),
        .Q(S0_Min_Write_Latency[28]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[29] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[29] ),
        .Q(S0_Min_Write_Latency[29]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[2] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[2] ),
        .Q(S0_Min_Write_Latency[2]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[30] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[30] ),
        .Q(S0_Min_Write_Latency[30]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[31] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[31] ),
        .Q(S0_Min_Write_Latency[31]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[3] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[3] ),
        .Q(S0_Min_Write_Latency[3]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[4] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[4] ),
        .Q(S0_Min_Write_Latency[4]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[5] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[5] ),
        .Q(S0_Min_Write_Latency[5]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[6] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[6] ),
        .Q(S0_Min_Write_Latency[6]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[7] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[7] ),
        .Q(S0_Min_Write_Latency[7]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[8] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[8] ),
        .Q(S0_Min_Write_Latency[8]),
        .S(Wr_cnt_ld));
  FDSE \Min_Write_Latency_Int_reg[9] 
       (.C(core_aclk),
        .CE(Min_Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[9] ),
        .Q(S0_Min_Write_Latency[9]),
        .S(Wr_cnt_ld));
  FDRE No_Rd_Ready_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Lat_Start_CDC_reg),
        .Q(Rd_Add_Issue_reg_0),
        .R(1'b0));
  FDRE No_Wr_Ready_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(No_Wr_Ready_reg_0),
        .Q(No_Wr_Ready),
        .R(1'b0));
  FDRE Rd_Add_Issue_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Add_Issue6_out),
        .Q(\Rd_Latency_Fifo_Wr_Data_reg[32]_0 ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[0]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[0] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[10]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[10] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[11]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[11] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[12]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[12] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[13]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[13] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[14]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[14] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[15]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[15] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[16]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[16] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[17]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[17] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[18]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[18] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[19]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[19] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[1]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[1] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[20]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[20] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[21]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[21] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[22]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[22] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[23]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[23] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[24]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[24] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[25]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[25] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[26]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[26] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[27]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[27] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[28]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[28] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[29]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[29] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[2]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[2] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[30]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[30] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[31]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[31] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[32]),
        .Q(Rd_Latency_Fifo_Rd_Data_D1),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[3]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[3] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[4]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[4] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[5]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[5] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[6]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[6] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[7]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[7] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[8]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[8] ),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Rd_Data_D1_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_Data[9]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[9] ),
        .R(Wr_cnt_ld));
  FDRE Rd_Latency_Fifo_Rd_En_D1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Rd_Latency_Fifo_Rd_En),
        .Q(Rd_Latency_Fifo_Rd_En_D1),
        .R(Wr_cnt_ld));
  FDRE Rd_Latency_Fifo_Rd_En_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(rd_latency_fifo_inst_n_1),
        .Q(Rd_Latency_Fifo_Rd_En),
        .R(1'b0));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[0] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[0]),
        .Q(\dout_reg[31]_0 [0]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[10] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[10]),
        .Q(\dout_reg[31]_0 [10]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[11] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[11]),
        .Q(\dout_reg[31]_0 [11]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[12] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[12]),
        .Q(\dout_reg[31]_0 [12]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[13] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[13]),
        .Q(\dout_reg[31]_0 [13]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[14] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[14]),
        .Q(\dout_reg[31]_0 [14]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[15] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[15]),
        .Q(\dout_reg[31]_0 [15]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[16] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[16]),
        .Q(\dout_reg[31]_0 [16]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[17] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[17]),
        .Q(\dout_reg[31]_0 [17]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[18] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[18]),
        .Q(\dout_reg[31]_0 [18]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[19] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[19]),
        .Q(\dout_reg[31]_0 [19]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[1] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[1]),
        .Q(\dout_reg[31]_0 [1]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[20] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[20]),
        .Q(\dout_reg[31]_0 [20]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[21] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[21]),
        .Q(\dout_reg[31]_0 [21]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[22] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[22]),
        .Q(\dout_reg[31]_0 [22]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[23] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[23]),
        .Q(\dout_reg[31]_0 [23]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[24] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[24]),
        .Q(\dout_reg[31]_0 [24]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[25] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[25]),
        .Q(\dout_reg[31]_0 [25]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[26] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[26]),
        .Q(\dout_reg[31]_0 [26]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[27] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[27]),
        .Q(\dout_reg[31]_0 [27]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[28] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[28]),
        .Q(\dout_reg[31]_0 [28]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[29] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[29]),
        .Q(\dout_reg[31]_0 [29]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[2] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[2]),
        .Q(\dout_reg[31]_0 [2]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[30] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[30]),
        .Q(\dout_reg[31]_0 [30]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[31] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[31]),
        .Q(\dout_reg[31]_0 [31]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[32] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Ovf),
        .Q(\dout_reg[31]_0 [32]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[3] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[3]),
        .Q(\dout_reg[31]_0 [3]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[4] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[4]),
        .Q(\dout_reg[31]_0 [4]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[5] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[5]),
        .Q(\dout_reg[31]_0 [5]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[6] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[6]),
        .Q(\dout_reg[31]_0 [6]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[7] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[7]),
        .Q(\dout_reg[31]_0 [7]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[8] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[8]),
        .Q(\dout_reg[31]_0 [8]),
        .R(Wr_cnt_ld));
  FDRE \Rd_Latency_Fifo_Wr_Data_reg[9] 
       (.C(core_aclk),
        .CE(\RID_Mask_CDC_reg[0]_0 ),
        .D(Read_Latency_Cnt_Out[9]),
        .Q(\dout_reg[31]_0 [9]),
        .R(Wr_cnt_ld));
  FDRE Rd_Latency_Fifo_Wr_En_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(rd_latency_fifo_inst_n_2),
        .Q(Rd_Latency_Fifo_Wr_En),
        .R(1'b0));
  FDRE \Read_Latency_Cnt_Out_D1_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[0]),
        .Q(Read_Latency_Cnt_Out_D1[0]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[10]),
        .Q(Read_Latency_Cnt_Out_D1[10]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[11]),
        .Q(Read_Latency_Cnt_Out_D1[11]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[12]),
        .Q(Read_Latency_Cnt_Out_D1[12]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[13]),
        .Q(Read_Latency_Cnt_Out_D1[13]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[14]),
        .Q(Read_Latency_Cnt_Out_D1[14]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[15]),
        .Q(Read_Latency_Cnt_Out_D1[15]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[16]),
        .Q(Read_Latency_Cnt_Out_D1[16]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[17]),
        .Q(Read_Latency_Cnt_Out_D1[17]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[18]),
        .Q(Read_Latency_Cnt_Out_D1[18]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[19]),
        .Q(Read_Latency_Cnt_Out_D1[19]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[1]),
        .Q(Read_Latency_Cnt_Out_D1[1]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[20]),
        .Q(Read_Latency_Cnt_Out_D1[20]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[21]),
        .Q(Read_Latency_Cnt_Out_D1[21]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[22]),
        .Q(Read_Latency_Cnt_Out_D1[22]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[23]),
        .Q(Read_Latency_Cnt_Out_D1[23]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[24]),
        .Q(Read_Latency_Cnt_Out_D1[24]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[25]),
        .Q(Read_Latency_Cnt_Out_D1[25]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[26]),
        .Q(Read_Latency_Cnt_Out_D1[26]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[27]),
        .Q(Read_Latency_Cnt_Out_D1[27]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[28]),
        .Q(Read_Latency_Cnt_Out_D1[28]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[29]),
        .Q(Read_Latency_Cnt_Out_D1[29]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[2]),
        .Q(Read_Latency_Cnt_Out_D1[2]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[30]),
        .Q(Read_Latency_Cnt_Out_D1[30]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[31]),
        .Q(Read_Latency_Cnt_Out_D1[31]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Ovf),
        .Q(Read_Latency_Cnt_Out_D1[32]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[3]),
        .Q(Read_Latency_Cnt_Out_D1[3]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[4]),
        .Q(Read_Latency_Cnt_Out_D1[4]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[5]),
        .Q(Read_Latency_Cnt_Out_D1[5]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[6]),
        .Q(Read_Latency_Cnt_Out_D1[6]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[7]),
        .Q(Read_Latency_Cnt_Out_D1[7]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[8]),
        .Q(Read_Latency_Cnt_Out_D1[8]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D1_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out[9]),
        .Q(Read_Latency_Cnt_Out_D1[9]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[0]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[0] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[10]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[10] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[11]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[11] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[12]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[12] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[13]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[13] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[14]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[14] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[15]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[15] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[16]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[16] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[17]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[17] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[18]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[18] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[19]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[19] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[1]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[1] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[20]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[20] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[21]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[21] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[22]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[22] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[23]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[23] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[24]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[24] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[25]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[25] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[26]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[26] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[27]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[27] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[28]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[28] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[29]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[29] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[2]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[2] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[30]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[30] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[31]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[31] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[32]),
        .Q(Read_Latency_Cnt_Out_D2),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[3]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[3] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[4]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[4] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[5]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[5] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[6]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[6] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[7]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[7] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[8]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[8] ),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Cnt_Out_D2_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_Cnt_Out_D1[9]),
        .Q(\Read_Latency_Cnt_Out_D2_reg_n_0_[9] ),
        .R(Wr_cnt_ld));
  LUT6 #(
    .INIT(64'hA800A8000000A800)) 
    Read_Latency_En_Int_i_1
       (.I0(rst_int_n),
        .I1(Rd_Latency_Fifo_Rd_En_D1),
        .I2(Read_Latency_One_D1),
        .I3(out[0]),
        .I4(out[2]),
        .I5(Ext_Trig_Metric_en),
        .O(Read_Latency_En_Int2_out));
  FDRE Read_Latency_En_Int_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_En_Int2_out),
        .Q(Read_Latency_En),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFBF8)) 
    \Read_Latency_Int[0]_i_1 
       (.I0(Read_Latency_Int1_in[0]),
        .I1(Rd_Latency_Fifo_Rd_En_D1),
        .I2(Read_Latency_One_D1),
        .I3(S0_Read_Latency[0]),
        .O(\Read_Latency_Int[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[11]_i_2 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[11] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[11] ),
        .O(\Read_Latency_Int[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[11]_i_3 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[10] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[10] ),
        .O(\Read_Latency_Int[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[11]_i_4 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[9] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[9] ),
        .O(\Read_Latency_Int[11]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[11]_i_5 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[8] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[8] ),
        .O(\Read_Latency_Int[11]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[11]_i_6 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[11] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[11] ),
        .O(\Read_Latency_Int[11]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[11]_i_7 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[10] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[10] ),
        .O(\Read_Latency_Int[11]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[11]_i_8 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[9] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[9] ),
        .O(\Read_Latency_Int[11]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[11]_i_9 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[8] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[8] ),
        .O(\Read_Latency_Int[11]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[15]_i_2 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[15] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[15] ),
        .O(\Read_Latency_Int[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[15]_i_3 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[14] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[14] ),
        .O(\Read_Latency_Int[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[15]_i_4 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[13] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[13] ),
        .O(\Read_Latency_Int[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[15]_i_5 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[12] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[12] ),
        .O(\Read_Latency_Int[15]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[15]_i_6 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[15] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[15] ),
        .O(\Read_Latency_Int[15]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[15]_i_7 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[14] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[14] ),
        .O(\Read_Latency_Int[15]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[15]_i_8 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[13] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[13] ),
        .O(\Read_Latency_Int[15]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[15]_i_9 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[12] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[12] ),
        .O(\Read_Latency_Int[15]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[19]_i_2 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[19] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[19] ),
        .O(\Read_Latency_Int[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[19]_i_3 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[18] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[18] ),
        .O(\Read_Latency_Int[19]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[19]_i_4 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[17] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[17] ),
        .O(\Read_Latency_Int[19]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[19]_i_5 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[16] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[16] ),
        .O(\Read_Latency_Int[19]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[19]_i_6 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[19] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[19] ),
        .O(\Read_Latency_Int[19]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[19]_i_7 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[18] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[18] ),
        .O(\Read_Latency_Int[19]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[19]_i_8 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[17] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[17] ),
        .O(\Read_Latency_Int[19]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[19]_i_9 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[16] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[16] ),
        .O(\Read_Latency_Int[19]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[23]_i_2 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[23] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[23] ),
        .O(\Read_Latency_Int[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[23]_i_3 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[22] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[22] ),
        .O(\Read_Latency_Int[23]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[23]_i_4 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[21] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[21] ),
        .O(\Read_Latency_Int[23]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[23]_i_5 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[20] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[20] ),
        .O(\Read_Latency_Int[23]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[23]_i_6 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[23] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[23] ),
        .O(\Read_Latency_Int[23]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[23]_i_7 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[22] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[22] ),
        .O(\Read_Latency_Int[23]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[23]_i_8 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[21] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[21] ),
        .O(\Read_Latency_Int[23]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[23]_i_9 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[20] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[20] ),
        .O(\Read_Latency_Int[23]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[27]_i_2 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[27] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[27] ),
        .O(\Read_Latency_Int[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[27]_i_3 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[26] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[26] ),
        .O(\Read_Latency_Int[27]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[27]_i_4 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[25] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[25] ),
        .O(\Read_Latency_Int[27]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[27]_i_5 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[24] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[24] ),
        .O(\Read_Latency_Int[27]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[27]_i_6 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[27] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[27] ),
        .O(\Read_Latency_Int[27]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[27]_i_7 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[26] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[26] ),
        .O(\Read_Latency_Int[27]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[27]_i_8 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[25] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[25] ),
        .O(\Read_Latency_Int[27]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[27]_i_9 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[24] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[24] ),
        .O(\Read_Latency_Int[27]_i_9_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \Read_Latency_Int[31]_i_1 
       (.I0(Read_Latency_One_D1),
        .I1(rst_int_n),
        .O(Read_Latency_Int));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_12 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[30] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[30] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[31] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[31] ),
        .O(\Read_Latency_Int[31]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_13 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[28] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[28] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[29] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[29] ),
        .O(\Read_Latency_Int[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_14 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[26] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[26] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[27] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[27] ),
        .O(\Read_Latency_Int[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_15 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[24] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[24] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[25] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[25] ),
        .O(\Read_Latency_Int[31]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_16 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[30] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[30] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[31] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[31] ),
        .O(\Read_Latency_Int[31]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_17 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[28] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[28] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[29] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[29] ),
        .O(\Read_Latency_Int[31]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_18 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[26] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[26] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[27] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[27] ),
        .O(\Read_Latency_Int[31]_i_18_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_19 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[24] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[24] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[25] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[25] ),
        .O(\Read_Latency_Int[31]_i_19_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_21 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[22] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[22] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[23] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[23] ),
        .O(\Read_Latency_Int[31]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_22 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[20] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[20] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[21] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[21] ),
        .O(\Read_Latency_Int[31]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_23 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[18] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[18] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[19] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[19] ),
        .O(\Read_Latency_Int[31]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_24 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[16] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[16] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[17] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[17] ),
        .O(\Read_Latency_Int[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_25 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[22] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[22] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[23] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[23] ),
        .O(\Read_Latency_Int[31]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_26 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[20] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[20] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[21] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[21] ),
        .O(\Read_Latency_Int[31]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_27 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[18] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[18] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[19] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[19] ),
        .O(\Read_Latency_Int[31]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_28 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[16] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[16] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[17] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[17] ),
        .O(\Read_Latency_Int[31]_i_28_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[31]_i_3 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[30] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[30] ),
        .O(\Read_Latency_Int[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_30 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[14] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[14] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[15] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[15] ),
        .O(\Read_Latency_Int[31]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_31 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[12] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[12] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[13] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[13] ),
        .O(\Read_Latency_Int[31]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_32 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[10] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[10] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[11] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[11] ),
        .O(\Read_Latency_Int[31]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_33 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[8] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[8] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[9] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[9] ),
        .O(\Read_Latency_Int[31]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_34 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[14] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[14] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[15] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[15] ),
        .O(\Read_Latency_Int[31]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_35 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[12] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[12] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[13] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[13] ),
        .O(\Read_Latency_Int[31]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_36 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[10] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[10] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[11] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[11] ),
        .O(\Read_Latency_Int[31]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_37 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[8] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[8] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[9] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[9] ),
        .O(\Read_Latency_Int[31]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_38 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[6] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[6] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[7] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[7] ),
        .O(\Read_Latency_Int[31]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_39 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[4] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[4] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[5] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[5] ),
        .O(\Read_Latency_Int[31]_i_39_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[31]_i_4 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[29] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[29] ),
        .O(\Read_Latency_Int[31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_40 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[2] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[2] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[3] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[3] ),
        .O(\Read_Latency_Int[31]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Read_Latency_Int[31]_i_41 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[0] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[0] ),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[1] ),
        .I3(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[1] ),
        .O(\Read_Latency_Int[31]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_42 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[6] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[6] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[7] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[7] ),
        .O(\Read_Latency_Int[31]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_43 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[4] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[4] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[5] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[5] ),
        .O(\Read_Latency_Int[31]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_44 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[2] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[2] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[3] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[3] ),
        .O(\Read_Latency_Int[31]_i_44_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Read_Latency_Int[31]_i_45 
       (.I0(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[0] ),
        .I1(\Read_Latency_Cnt_Out_D2_reg_n_0_[0] ),
        .I2(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[1] ),
        .I3(\Read_Latency_Cnt_Out_D2_reg_n_0_[1] ),
        .O(\Read_Latency_Int[31]_i_45_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[31]_i_5 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[28] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[28] ),
        .O(\Read_Latency_Int[31]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[31]_i_6 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[31] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[31] ),
        .O(\Read_Latency_Int[31]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[31]_i_7 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[30] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[30] ),
        .O(\Read_Latency_Int[31]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[31]_i_8 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[29] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[29] ),
        .O(\Read_Latency_Int[31]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[31]_i_9 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[28] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[28] ),
        .O(\Read_Latency_Int[31]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[3]_i_2 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[3] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[3] ),
        .O(\Read_Latency_Int[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[3]_i_3 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[2] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[2] ),
        .O(\Read_Latency_Int[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[3]_i_4 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[1] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[1] ),
        .O(\Read_Latency_Int[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[3]_i_5 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[0] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[0] ),
        .O(\Read_Latency_Int[3]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[3]_i_6 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[3] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[3] ),
        .O(\Read_Latency_Int[3]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[3]_i_7 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[2] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[2] ),
        .O(\Read_Latency_Int[3]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[3]_i_8 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[1] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[1] ),
        .O(\Read_Latency_Int[3]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[3]_i_9 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[0] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[0] ),
        .O(\Read_Latency_Int[3]_i_9_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[7]_i_2 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[7] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[7] ),
        .O(\Read_Latency_Int[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[7]_i_3 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[6] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[6] ),
        .O(\Read_Latency_Int[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[7]_i_4 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[5] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[5] ),
        .O(\Read_Latency_Int[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Read_Latency_Int[7]_i_5 
       (.I0(Rd_Latency_Fifo_Rd_Data_D1),
        .I1(Read_Latency_Cnt_Out_D2),
        .I2(\Read_Latency_Cnt_Out_D2_reg_n_0_[4] ),
        .I3(\Read_Latency_Int_reg[31]_i_10_n_0 ),
        .I4(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[4] ),
        .O(\Read_Latency_Int[7]_i_5_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[7]_i_6 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[7] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[7] ),
        .O(\Read_Latency_Int[7]_i_6_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[7]_i_7 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[6] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[6] ),
        .O(\Read_Latency_Int[7]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[7]_i_8 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[5] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[5] ),
        .O(\Read_Latency_Int[7]_i_8_n_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    \Read_Latency_Int[7]_i_9 
       (.I0(\Read_Latency_Cnt_Out_D2_reg_n_0_[4] ),
        .I1(\Rd_Latency_Fifo_Rd_Data_D1_reg_n_0_[4] ),
        .O(\Read_Latency_Int[7]_i_9_n_0 ));
  FDRE \Read_Latency_Int_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Read_Latency_Int[0]_i_1_n_0 ),
        .Q(S0_Read_Latency[0]),
        .R(Wr_cnt_ld));
  FDRE \Read_Latency_Int_reg[10] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[10]),
        .Q(S0_Read_Latency[10]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[11] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[11]),
        .Q(S0_Read_Latency[11]),
        .R(Read_Latency_Int));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Read_Latency_Int_reg[11]_i_1 
       (.CI(\Read_Latency_Int_reg[7]_i_1_n_0 ),
        .CO({\Read_Latency_Int_reg[11]_i_1_n_0 ,\Read_Latency_Int_reg[11]_i_1_n_1 ,\Read_Latency_Int_reg[11]_i_1_n_2 ,\Read_Latency_Int_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[11]_i_2_n_0 ,\Read_Latency_Int[11]_i_3_n_0 ,\Read_Latency_Int[11]_i_4_n_0 ,\Read_Latency_Int[11]_i_5_n_0 }),
        .O(Read_Latency_Int1_in[11:8]),
        .S({\Read_Latency_Int[11]_i_6_n_0 ,\Read_Latency_Int[11]_i_7_n_0 ,\Read_Latency_Int[11]_i_8_n_0 ,\Read_Latency_Int[11]_i_9_n_0 }));
  FDRE \Read_Latency_Int_reg[12] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[12]),
        .Q(S0_Read_Latency[12]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[13] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[13]),
        .Q(S0_Read_Latency[13]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[14] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[14]),
        .Q(S0_Read_Latency[14]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[15] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[15]),
        .Q(S0_Read_Latency[15]),
        .R(Read_Latency_Int));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Read_Latency_Int_reg[15]_i_1 
       (.CI(\Read_Latency_Int_reg[11]_i_1_n_0 ),
        .CO({\Read_Latency_Int_reg[15]_i_1_n_0 ,\Read_Latency_Int_reg[15]_i_1_n_1 ,\Read_Latency_Int_reg[15]_i_1_n_2 ,\Read_Latency_Int_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[15]_i_2_n_0 ,\Read_Latency_Int[15]_i_3_n_0 ,\Read_Latency_Int[15]_i_4_n_0 ,\Read_Latency_Int[15]_i_5_n_0 }),
        .O(Read_Latency_Int1_in[15:12]),
        .S({\Read_Latency_Int[15]_i_6_n_0 ,\Read_Latency_Int[15]_i_7_n_0 ,\Read_Latency_Int[15]_i_8_n_0 ,\Read_Latency_Int[15]_i_9_n_0 }));
  FDRE \Read_Latency_Int_reg[16] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[16]),
        .Q(S0_Read_Latency[16]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[17] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[17]),
        .Q(S0_Read_Latency[17]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[18] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[18]),
        .Q(S0_Read_Latency[18]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[19] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[19]),
        .Q(S0_Read_Latency[19]),
        .R(Read_Latency_Int));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Read_Latency_Int_reg[19]_i_1 
       (.CI(\Read_Latency_Int_reg[15]_i_1_n_0 ),
        .CO({\Read_Latency_Int_reg[19]_i_1_n_0 ,\Read_Latency_Int_reg[19]_i_1_n_1 ,\Read_Latency_Int_reg[19]_i_1_n_2 ,\Read_Latency_Int_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[19]_i_2_n_0 ,\Read_Latency_Int[19]_i_3_n_0 ,\Read_Latency_Int[19]_i_4_n_0 ,\Read_Latency_Int[19]_i_5_n_0 }),
        .O(Read_Latency_Int1_in[19:16]),
        .S({\Read_Latency_Int[19]_i_6_n_0 ,\Read_Latency_Int[19]_i_7_n_0 ,\Read_Latency_Int[19]_i_8_n_0 ,\Read_Latency_Int[19]_i_9_n_0 }));
  FDRE \Read_Latency_Int_reg[1] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[1]),
        .Q(S0_Read_Latency[1]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[20] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[20]),
        .Q(S0_Read_Latency[20]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[21] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[21]),
        .Q(S0_Read_Latency[21]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[22] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[22]),
        .Q(S0_Read_Latency[22]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[23] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[23]),
        .Q(S0_Read_Latency[23]),
        .R(Read_Latency_Int));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Read_Latency_Int_reg[23]_i_1 
       (.CI(\Read_Latency_Int_reg[19]_i_1_n_0 ),
        .CO({\Read_Latency_Int_reg[23]_i_1_n_0 ,\Read_Latency_Int_reg[23]_i_1_n_1 ,\Read_Latency_Int_reg[23]_i_1_n_2 ,\Read_Latency_Int_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[23]_i_2_n_0 ,\Read_Latency_Int[23]_i_3_n_0 ,\Read_Latency_Int[23]_i_4_n_0 ,\Read_Latency_Int[23]_i_5_n_0 }),
        .O(Read_Latency_Int1_in[23:20]),
        .S({\Read_Latency_Int[23]_i_6_n_0 ,\Read_Latency_Int[23]_i_7_n_0 ,\Read_Latency_Int[23]_i_8_n_0 ,\Read_Latency_Int[23]_i_9_n_0 }));
  FDRE \Read_Latency_Int_reg[24] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[24]),
        .Q(S0_Read_Latency[24]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[25] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[25]),
        .Q(S0_Read_Latency[25]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[26] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[26]),
        .Q(S0_Read_Latency[26]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[27] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[27]),
        .Q(S0_Read_Latency[27]),
        .R(Read_Latency_Int));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Read_Latency_Int_reg[27]_i_1 
       (.CI(\Read_Latency_Int_reg[23]_i_1_n_0 ),
        .CO({\Read_Latency_Int_reg[27]_i_1_n_0 ,\Read_Latency_Int_reg[27]_i_1_n_1 ,\Read_Latency_Int_reg[27]_i_1_n_2 ,\Read_Latency_Int_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[27]_i_2_n_0 ,\Read_Latency_Int[27]_i_3_n_0 ,\Read_Latency_Int[27]_i_4_n_0 ,\Read_Latency_Int[27]_i_5_n_0 }),
        .O(Read_Latency_Int1_in[27:24]),
        .S({\Read_Latency_Int[27]_i_6_n_0 ,\Read_Latency_Int[27]_i_7_n_0 ,\Read_Latency_Int[27]_i_8_n_0 ,\Read_Latency_Int[27]_i_9_n_0 }));
  FDRE \Read_Latency_Int_reg[28] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[28]),
        .Q(S0_Read_Latency[28]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[29] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[29]),
        .Q(S0_Read_Latency[29]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[2] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[2]),
        .Q(S0_Read_Latency[2]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[30] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[30]),
        .Q(S0_Read_Latency[30]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[31] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[31]),
        .Q(S0_Read_Latency[31]),
        .R(Read_Latency_Int));
  CARRY4 \Read_Latency_Int_reg[31]_i_10 
       (.CI(\Read_Latency_Int_reg[31]_i_11_n_0 ),
        .CO({\Read_Latency_Int_reg[31]_i_10_n_0 ,\Read_Latency_Int_reg[31]_i_10_n_1 ,\Read_Latency_Int_reg[31]_i_10_n_2 ,\Read_Latency_Int_reg[31]_i_10_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[31]_i_12_n_0 ,\Read_Latency_Int[31]_i_13_n_0 ,\Read_Latency_Int[31]_i_14_n_0 ,\Read_Latency_Int[31]_i_15_n_0 }),
        .O(\NLW_Read_Latency_Int_reg[31]_i_10_O_UNCONNECTED [3:0]),
        .S({\Read_Latency_Int[31]_i_16_n_0 ,\Read_Latency_Int[31]_i_17_n_0 ,\Read_Latency_Int[31]_i_18_n_0 ,\Read_Latency_Int[31]_i_19_n_0 }));
  CARRY4 \Read_Latency_Int_reg[31]_i_11 
       (.CI(\Read_Latency_Int_reg[31]_i_20_n_0 ),
        .CO({\Read_Latency_Int_reg[31]_i_11_n_0 ,\Read_Latency_Int_reg[31]_i_11_n_1 ,\Read_Latency_Int_reg[31]_i_11_n_2 ,\Read_Latency_Int_reg[31]_i_11_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[31]_i_21_n_0 ,\Read_Latency_Int[31]_i_22_n_0 ,\Read_Latency_Int[31]_i_23_n_0 ,\Read_Latency_Int[31]_i_24_n_0 }),
        .O(\NLW_Read_Latency_Int_reg[31]_i_11_O_UNCONNECTED [3:0]),
        .S({\Read_Latency_Int[31]_i_25_n_0 ,\Read_Latency_Int[31]_i_26_n_0 ,\Read_Latency_Int[31]_i_27_n_0 ,\Read_Latency_Int[31]_i_28_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Read_Latency_Int_reg[31]_i_2 
       (.CI(\Read_Latency_Int_reg[27]_i_1_n_0 ),
        .CO({\NLW_Read_Latency_Int_reg[31]_i_2_CO_UNCONNECTED [3],\Read_Latency_Int_reg[31]_i_2_n_1 ,\Read_Latency_Int_reg[31]_i_2_n_2 ,\Read_Latency_Int_reg[31]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\Read_Latency_Int[31]_i_3_n_0 ,\Read_Latency_Int[31]_i_4_n_0 ,\Read_Latency_Int[31]_i_5_n_0 }),
        .O(Read_Latency_Int1_in[31:28]),
        .S({\Read_Latency_Int[31]_i_6_n_0 ,\Read_Latency_Int[31]_i_7_n_0 ,\Read_Latency_Int[31]_i_8_n_0 ,\Read_Latency_Int[31]_i_9_n_0 }));
  CARRY4 \Read_Latency_Int_reg[31]_i_20 
       (.CI(\Read_Latency_Int_reg[31]_i_29_n_0 ),
        .CO({\Read_Latency_Int_reg[31]_i_20_n_0 ,\Read_Latency_Int_reg[31]_i_20_n_1 ,\Read_Latency_Int_reg[31]_i_20_n_2 ,\Read_Latency_Int_reg[31]_i_20_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[31]_i_30_n_0 ,\Read_Latency_Int[31]_i_31_n_0 ,\Read_Latency_Int[31]_i_32_n_0 ,\Read_Latency_Int[31]_i_33_n_0 }),
        .O(\NLW_Read_Latency_Int_reg[31]_i_20_O_UNCONNECTED [3:0]),
        .S({\Read_Latency_Int[31]_i_34_n_0 ,\Read_Latency_Int[31]_i_35_n_0 ,\Read_Latency_Int[31]_i_36_n_0 ,\Read_Latency_Int[31]_i_37_n_0 }));
  CARRY4 \Read_Latency_Int_reg[31]_i_29 
       (.CI(1'b0),
        .CO({\Read_Latency_Int_reg[31]_i_29_n_0 ,\Read_Latency_Int_reg[31]_i_29_n_1 ,\Read_Latency_Int_reg[31]_i_29_n_2 ,\Read_Latency_Int_reg[31]_i_29_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[31]_i_38_n_0 ,\Read_Latency_Int[31]_i_39_n_0 ,\Read_Latency_Int[31]_i_40_n_0 ,\Read_Latency_Int[31]_i_41_n_0 }),
        .O(\NLW_Read_Latency_Int_reg[31]_i_29_O_UNCONNECTED [3:0]),
        .S({\Read_Latency_Int[31]_i_42_n_0 ,\Read_Latency_Int[31]_i_43_n_0 ,\Read_Latency_Int[31]_i_44_n_0 ,\Read_Latency_Int[31]_i_45_n_0 }));
  FDRE \Read_Latency_Int_reg[3] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[3]),
        .Q(S0_Read_Latency[3]),
        .R(Read_Latency_Int));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Read_Latency_Int_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\Read_Latency_Int_reg[3]_i_1_n_0 ,\Read_Latency_Int_reg[3]_i_1_n_1 ,\Read_Latency_Int_reg[3]_i_1_n_2 ,\Read_Latency_Int_reg[3]_i_1_n_3 }),
        .CYINIT(1'b1),
        .DI({\Read_Latency_Int[3]_i_2_n_0 ,\Read_Latency_Int[3]_i_3_n_0 ,\Read_Latency_Int[3]_i_4_n_0 ,\Read_Latency_Int[3]_i_5_n_0 }),
        .O(Read_Latency_Int1_in[3:0]),
        .S({\Read_Latency_Int[3]_i_6_n_0 ,\Read_Latency_Int[3]_i_7_n_0 ,\Read_Latency_Int[3]_i_8_n_0 ,\Read_Latency_Int[3]_i_9_n_0 }));
  FDRE \Read_Latency_Int_reg[4] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[4]),
        .Q(S0_Read_Latency[4]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[5] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[5]),
        .Q(S0_Read_Latency[5]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[6] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[6]),
        .Q(S0_Read_Latency[6]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[7] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[7]),
        .Q(S0_Read_Latency[7]),
        .R(Read_Latency_Int));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Read_Latency_Int_reg[7]_i_1 
       (.CI(\Read_Latency_Int_reg[3]_i_1_n_0 ),
        .CO({\Read_Latency_Int_reg[7]_i_1_n_0 ,\Read_Latency_Int_reg[7]_i_1_n_1 ,\Read_Latency_Int_reg[7]_i_1_n_2 ,\Read_Latency_Int_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Read_Latency_Int[7]_i_2_n_0 ,\Read_Latency_Int[7]_i_3_n_0 ,\Read_Latency_Int[7]_i_4_n_0 ,\Read_Latency_Int[7]_i_5_n_0 }),
        .O(Read_Latency_Int1_in[7:4]),
        .S({\Read_Latency_Int[7]_i_6_n_0 ,\Read_Latency_Int[7]_i_7_n_0 ,\Read_Latency_Int[7]_i_8_n_0 ,\Read_Latency_Int[7]_i_9_n_0 }));
  FDRE \Read_Latency_Int_reg[8] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[8]),
        .Q(S0_Read_Latency[8]),
        .R(Read_Latency_Int));
  FDRE \Read_Latency_Int_reg[9] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_D1),
        .D(Read_Latency_Int1_in[9]),
        .Q(S0_Read_Latency[9]),
        .R(Read_Latency_Int));
  FDRE Read_Latency_One_D1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_One_D10),
        .Q(Read_Latency_One_D1),
        .R(Wr_cnt_ld));
  FDRE Read_Latency_One_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_Latency_One),
        .Q(Read_Latency_One_reg_n_0),
        .R(Wr_cnt_ld));
  LUT5 #(
    .INIT(32'h0C888888)) 
    Read_going_on_i_1
       (.I0(Read_going_on),
        .I1(rst_int_n),
        .I2(Q[0]),
        .I3(Read_Beat_Cnt_En1),
        .I4(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] ),
        .O(Read_going_on_i_1_n_0));
  FDRE Read_going_on_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Read_going_on_i_1_n_0),
        .Q(Read_going_on),
        .R(1'b0));
  FDRE \S_Null_Byte_Cnt_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Slot_0_Sync_Data_Valid),
        .Q(S0_S_Null_Byte_Cnt),
        .R(Wr_cnt_ld));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[0]_i_4 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[3]),
        .O(\Slv_Wr_Idle_Cnt_i[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[0]_i_5 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[2]),
        .O(\Slv_Wr_Idle_Cnt_i[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[0]_i_6 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[1]),
        .O(\Slv_Wr_Idle_Cnt_i[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \Slv_Wr_Idle_Cnt_i[0]_i_7 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[0]),
        .O(\Slv_Wr_Idle_Cnt_i[0]_i_7_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[12]_i_2 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[15]),
        .O(\Slv_Wr_Idle_Cnt_i[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[12]_i_3 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[14]),
        .O(\Slv_Wr_Idle_Cnt_i[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[12]_i_4 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[13]),
        .O(\Slv_Wr_Idle_Cnt_i[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[12]_i_5 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[12]),
        .O(\Slv_Wr_Idle_Cnt_i[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[16]_i_2 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[19]),
        .O(\Slv_Wr_Idle_Cnt_i[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[16]_i_3 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[18]),
        .O(\Slv_Wr_Idle_Cnt_i[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[16]_i_4 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[17]),
        .O(\Slv_Wr_Idle_Cnt_i[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[16]_i_5 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[16]),
        .O(\Slv_Wr_Idle_Cnt_i[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[20]_i_2 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[23]),
        .O(\Slv_Wr_Idle_Cnt_i[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[20]_i_3 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[22]),
        .O(\Slv_Wr_Idle_Cnt_i[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[20]_i_4 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[21]),
        .O(\Slv_Wr_Idle_Cnt_i[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[20]_i_5 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[20]),
        .O(\Slv_Wr_Idle_Cnt_i[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[24]_i_2 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[27]),
        .O(\Slv_Wr_Idle_Cnt_i[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[24]_i_3 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[26]),
        .O(\Slv_Wr_Idle_Cnt_i[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[24]_i_4 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[25]),
        .O(\Slv_Wr_Idle_Cnt_i[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[24]_i_5 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[24]),
        .O(\Slv_Wr_Idle_Cnt_i[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[28]_i_2 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[31]),
        .O(\Slv_Wr_Idle_Cnt_i[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[28]_i_3 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[30]),
        .O(\Slv_Wr_Idle_Cnt_i[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[28]_i_4 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[29]),
        .O(\Slv_Wr_Idle_Cnt_i[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[28]_i_5 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[28]),
        .O(\Slv_Wr_Idle_Cnt_i[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[4]_i_2 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[7]),
        .O(\Slv_Wr_Idle_Cnt_i[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[4]_i_3 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[6]),
        .O(\Slv_Wr_Idle_Cnt_i[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[4]_i_4 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[5]),
        .O(\Slv_Wr_Idle_Cnt_i[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[4]_i_5 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[4]),
        .O(\Slv_Wr_Idle_Cnt_i[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[8]_i_2 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[11]),
        .O(\Slv_Wr_Idle_Cnt_i[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[8]_i_3 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[10]),
        .O(\Slv_Wr_Idle_Cnt_i[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[8]_i_4 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[9]),
        .O(\Slv_Wr_Idle_Cnt_i[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Slv_Wr_Idle_Cnt_i[8]_i_5 
       (.I0(Slv_Wr_Idle_Cnt_i_reg[8]),
        .O(\Slv_Wr_Idle_Cnt_i[8]_i_5_n_0 ));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[0] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_7 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[0]),
        .R(Write_iss_going_on));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Slv_Wr_Idle_Cnt_i_reg[0]_i_3 
       (.CI(1'b0),
        .CO({\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_0 ,\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_1 ,\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_2 ,\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_4 ,\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_5 ,\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_6 ,\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_7 }),
        .S({\Slv_Wr_Idle_Cnt_i[0]_i_4_n_0 ,\Slv_Wr_Idle_Cnt_i[0]_i_5_n_0 ,\Slv_Wr_Idle_Cnt_i[0]_i_6_n_0 ,\Slv_Wr_Idle_Cnt_i[0]_i_7_n_0 }));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[10] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_5 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[10]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[11] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_4 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[11]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[12] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_7 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[12]),
        .R(Write_iss_going_on));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Slv_Wr_Idle_Cnt_i_reg[12]_i_1 
       (.CI(\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_0 ),
        .CO({\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_0 ,\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_1 ,\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_2 ,\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_4 ,\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_5 ,\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_6 ,\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_7 }),
        .S({\Slv_Wr_Idle_Cnt_i[12]_i_2_n_0 ,\Slv_Wr_Idle_Cnt_i[12]_i_3_n_0 ,\Slv_Wr_Idle_Cnt_i[12]_i_4_n_0 ,\Slv_Wr_Idle_Cnt_i[12]_i_5_n_0 }));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[13] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_6 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[13]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[14] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_5 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[14]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[15] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_4 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[15]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[16] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_7 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[16]),
        .R(Write_iss_going_on));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Slv_Wr_Idle_Cnt_i_reg[16]_i_1 
       (.CI(\Slv_Wr_Idle_Cnt_i_reg[12]_i_1_n_0 ),
        .CO({\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_0 ,\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_1 ,\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_2 ,\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_4 ,\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_5 ,\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_6 ,\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_7 }),
        .S({\Slv_Wr_Idle_Cnt_i[16]_i_2_n_0 ,\Slv_Wr_Idle_Cnt_i[16]_i_3_n_0 ,\Slv_Wr_Idle_Cnt_i[16]_i_4_n_0 ,\Slv_Wr_Idle_Cnt_i[16]_i_5_n_0 }));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[17] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_6 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[17]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[18] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_5 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[18]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[19] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_4 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[19]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[1] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_6 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[1]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[20] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_7 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[20]),
        .R(Write_iss_going_on));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Slv_Wr_Idle_Cnt_i_reg[20]_i_1 
       (.CI(\Slv_Wr_Idle_Cnt_i_reg[16]_i_1_n_0 ),
        .CO({\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_0 ,\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_1 ,\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_2 ,\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_4 ,\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_5 ,\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_6 ,\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_7 }),
        .S({\Slv_Wr_Idle_Cnt_i[20]_i_2_n_0 ,\Slv_Wr_Idle_Cnt_i[20]_i_3_n_0 ,\Slv_Wr_Idle_Cnt_i[20]_i_4_n_0 ,\Slv_Wr_Idle_Cnt_i[20]_i_5_n_0 }));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[21] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_6 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[21]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[22] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_5 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[22]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[23] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_4 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[23]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[24] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_7 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[24]),
        .R(Write_iss_going_on));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Slv_Wr_Idle_Cnt_i_reg[24]_i_1 
       (.CI(\Slv_Wr_Idle_Cnt_i_reg[20]_i_1_n_0 ),
        .CO({\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_0 ,\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_1 ,\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_2 ,\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_4 ,\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_5 ,\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_6 ,\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_7 }),
        .S({\Slv_Wr_Idle_Cnt_i[24]_i_2_n_0 ,\Slv_Wr_Idle_Cnt_i[24]_i_3_n_0 ,\Slv_Wr_Idle_Cnt_i[24]_i_4_n_0 ,\Slv_Wr_Idle_Cnt_i[24]_i_5_n_0 }));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[25] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_6 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[25]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[26] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_5 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[26]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[27] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_4 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[27]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[28] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_7 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[28]),
        .R(Write_iss_going_on));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Slv_Wr_Idle_Cnt_i_reg[28]_i_1 
       (.CI(\Slv_Wr_Idle_Cnt_i_reg[24]_i_1_n_0 ),
        .CO({\NLW_Slv_Wr_Idle_Cnt_i_reg[28]_i_1_CO_UNCONNECTED [3],\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_1 ,\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_2 ,\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_4 ,\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_5 ,\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_6 ,\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_7 }),
        .S({\Slv_Wr_Idle_Cnt_i[28]_i_2_n_0 ,\Slv_Wr_Idle_Cnt_i[28]_i_3_n_0 ,\Slv_Wr_Idle_Cnt_i[28]_i_4_n_0 ,\Slv_Wr_Idle_Cnt_i[28]_i_5_n_0 }));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[29] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_6 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[29]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[2] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_5 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[2]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[30] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_5 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[30]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[31] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[28]_i_1_n_4 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[31]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[3] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_4 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[3]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[4] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_7 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[4]),
        .R(Write_iss_going_on));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Slv_Wr_Idle_Cnt_i_reg[4]_i_1 
       (.CI(\Slv_Wr_Idle_Cnt_i_reg[0]_i_3_n_0 ),
        .CO({\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_0 ,\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_1 ,\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_2 ,\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_4 ,\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_5 ,\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_6 ,\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_7 }),
        .S({\Slv_Wr_Idle_Cnt_i[4]_i_2_n_0 ,\Slv_Wr_Idle_Cnt_i[4]_i_3_n_0 ,\Slv_Wr_Idle_Cnt_i[4]_i_4_n_0 ,\Slv_Wr_Idle_Cnt_i[4]_i_5_n_0 }));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[5] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_6 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[5]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[6] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_5 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[6]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[7] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_4 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[7]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[8] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_7 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[8]),
        .R(Write_iss_going_on));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Slv_Wr_Idle_Cnt_i_reg[8]_i_1 
       (.CI(\Slv_Wr_Idle_Cnt_i_reg[4]_i_1_n_0 ),
        .CO({\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_0 ,\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_1 ,\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_2 ,\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_4 ,\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_5 ,\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_6 ,\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_7 }),
        .S({\Slv_Wr_Idle_Cnt_i[8]_i_2_n_0 ,\Slv_Wr_Idle_Cnt_i[8]_i_3_n_0 ,\Slv_Wr_Idle_Cnt_i[8]_i_4_n_0 ,\Slv_Wr_Idle_Cnt_i[8]_i_5_n_0 }));
  FDRE \Slv_Wr_Idle_Cnt_i_reg[9] 
       (.C(core_aclk),
        .CE(Wr_Idle),
        .D(\Slv_Wr_Idle_Cnt_i_reg[8]_i_1_n_6 ),
        .Q(Slv_Wr_Idle_Cnt_i_reg[9]),
        .R(Write_iss_going_on));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[0] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[0]),
        .Q(\dout_reg[31]_1 [0]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[10] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[10]),
        .Q(\dout_reg[31]_1 [10]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[11] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[11]),
        .Q(\dout_reg[31]_1 [11]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[12] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[12]),
        .Q(\dout_reg[31]_1 [12]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[13] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[13]),
        .Q(\dout_reg[31]_1 [13]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[14] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[14]),
        .Q(\dout_reg[31]_1 [14]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[15] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[15]),
        .Q(\dout_reg[31]_1 [15]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[16] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[16]),
        .Q(\dout_reg[31]_1 [16]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[17] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[17]),
        .Q(\dout_reg[31]_1 [17]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[18] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[18]),
        .Q(\dout_reg[31]_1 [18]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[19] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[19]),
        .Q(\dout_reg[31]_1 [19]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[1] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[1]),
        .Q(\dout_reg[31]_1 [1]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[20] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[20]),
        .Q(\dout_reg[31]_1 [20]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[21] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[21]),
        .Q(\dout_reg[31]_1 [21]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[22] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[22]),
        .Q(\dout_reg[31]_1 [22]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[23] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[23]),
        .Q(\dout_reg[31]_1 [23]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[24] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[24]),
        .Q(\dout_reg[31]_1 [24]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[25] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[25]),
        .Q(\dout_reg[31]_1 [25]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[26] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[26]),
        .Q(\dout_reg[31]_1 [26]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[27] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[27]),
        .Q(\dout_reg[31]_1 [27]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[28] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[28]),
        .Q(\dout_reg[31]_1 [28]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[29] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[29]),
        .Q(\dout_reg[31]_1 [29]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[2] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[2]),
        .Q(\dout_reg[31]_1 [2]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[30] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[30]),
        .Q(\dout_reg[31]_1 [30]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[31] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[31]),
        .Q(\dout_reg[31]_1 [31]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[3] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[3]),
        .Q(\dout_reg[31]_1 [3]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[4] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[4]),
        .Q(\dout_reg[31]_1 [4]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[5] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[5]),
        .Q(\dout_reg[31]_1 [5]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[6] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[6]),
        .Q(\dout_reg[31]_1 [6]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[7] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[7]),
        .Q(\dout_reg[31]_1 [7]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[8] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[8]),
        .Q(\dout_reg[31]_1 [8]),
        .R(1'b0));
  FDRE \Slv_Wr_Idle_Fifo_Wr_data_reg[9] 
       (.C(core_aclk),
        .CE(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] ),
        .D(Slv_Wr_Idle_Cnt_i_reg[9]),
        .Q(\dout_reg[31]_1 [9]),
        .R(1'b0));
  FDRE Wr_Add_Issue_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(\USE_MON_FIFO.fifo_rd_en_reg_reg ),
        .Q(wr_latency_start_d1_reg_0),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[0] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[0] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[10] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[10] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[11] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[11] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[12] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[12] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[13] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[13] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[14] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[14] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[15] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[15] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[16] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[16] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[17] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[17] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[18] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[18] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[19] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[19] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[1] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[1] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[20] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[20] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[21] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[21] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[22] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[22] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[23] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[23] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[24] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[24] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[25] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[25] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[26] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[26] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[27] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[27] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[28] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[28] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[29] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[29] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[2] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[2] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[30] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[30] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[31] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[31] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[3] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[3] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[4] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[4] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[5] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[5] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[6] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[6] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[7] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[7] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[8] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[8] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg1_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[9] ),
        .Q(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[9] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[0] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[0]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[0] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[10] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[10]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[10] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[11] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[11]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[11] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[12] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[12]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[12] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[13] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[13]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[13] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[14] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[14]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[14] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[15] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[15]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[15] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[16] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[16]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[16] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[17] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[17]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[17] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[18] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[18]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[18] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[19] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[19]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[19] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[1] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[1]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[1] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[20] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[20]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[20] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[21] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[21]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[21] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[22] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[22]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[22] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[23] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[23]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[23] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[24] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[24]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[24] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[25] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[25]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[25] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[26] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[26]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[26] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[27] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[27]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[27] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[28] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[28]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[28] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[29] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[29]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[29] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[2] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[2]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[2] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[30] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[30]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[30] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[31] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[31]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[31] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[3] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[3]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[3] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[4] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[4]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[4] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[5] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[5]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[5] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[6] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[6]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[6] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[7] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[7]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[7] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[8] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[8]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[8] ),
        .R(Wr_cnt_ld));
  FDRE \Wr_Lat_Cnt_Diff_reg_reg[9] 
       (.C(core_aclk),
        .CE(F34_Rd_Vld),
        .D(Wr_Lat_Cnt_Diff_reg[9]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[9] ),
        .R(Wr_cnt_ld));
  LUT2 #(
    .INIT(4'hB)) 
    \Write_Beat_Cnt_i[0]_i_1 
       (.I0(Last_fifo_Wr_en),
        .I1(rst_int_n),
        .O(Write_Byte_Cnt_i));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[0]_i_3 
       (.I0(Write_Beat_Cnt_i_reg[3]),
        .O(\Write_Beat_Cnt_i[0]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[0]_i_4 
       (.I0(Write_Beat_Cnt_i_reg[2]),
        .O(\Write_Beat_Cnt_i[0]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[0]_i_5 
       (.I0(Write_Beat_Cnt_i_reg[1]),
        .O(\Write_Beat_Cnt_i[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h1)) 
    \Write_Beat_Cnt_i[0]_i_6 
       (.I0(Write_Beat_Cnt_i_reg[0]),
        .O(\Write_Beat_Cnt_i[0]_i_6_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[12]_i_2 
       (.I0(Write_Beat_Cnt_i_reg[15]),
        .O(\Write_Beat_Cnt_i[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[12]_i_3 
       (.I0(Write_Beat_Cnt_i_reg[14]),
        .O(\Write_Beat_Cnt_i[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[12]_i_4 
       (.I0(Write_Beat_Cnt_i_reg[13]),
        .O(\Write_Beat_Cnt_i[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[12]_i_5 
       (.I0(Write_Beat_Cnt_i_reg[12]),
        .O(\Write_Beat_Cnt_i[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[16]_i_2 
       (.I0(Write_Beat_Cnt_i_reg[19]),
        .O(\Write_Beat_Cnt_i[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[16]_i_3 
       (.I0(Write_Beat_Cnt_i_reg[18]),
        .O(\Write_Beat_Cnt_i[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[16]_i_4 
       (.I0(Write_Beat_Cnt_i_reg[17]),
        .O(\Write_Beat_Cnt_i[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[16]_i_5 
       (.I0(Write_Beat_Cnt_i_reg[16]),
        .O(\Write_Beat_Cnt_i[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[20]_i_2 
       (.I0(Write_Beat_Cnt_i_reg[23]),
        .O(\Write_Beat_Cnt_i[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[20]_i_3 
       (.I0(Write_Beat_Cnt_i_reg[22]),
        .O(\Write_Beat_Cnt_i[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[20]_i_4 
       (.I0(Write_Beat_Cnt_i_reg[21]),
        .O(\Write_Beat_Cnt_i[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[20]_i_5 
       (.I0(Write_Beat_Cnt_i_reg[20]),
        .O(\Write_Beat_Cnt_i[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[24]_i_2 
       (.I0(Write_Beat_Cnt_i_reg[27]),
        .O(\Write_Beat_Cnt_i[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[24]_i_3 
       (.I0(Write_Beat_Cnt_i_reg[26]),
        .O(\Write_Beat_Cnt_i[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[24]_i_4 
       (.I0(Write_Beat_Cnt_i_reg[25]),
        .O(\Write_Beat_Cnt_i[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[24]_i_5 
       (.I0(Write_Beat_Cnt_i_reg[24]),
        .O(\Write_Beat_Cnt_i[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[28]_i_2 
       (.I0(Write_Beat_Cnt_i_reg[31]),
        .O(\Write_Beat_Cnt_i[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[28]_i_3 
       (.I0(Write_Beat_Cnt_i_reg[30]),
        .O(\Write_Beat_Cnt_i[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[28]_i_4 
       (.I0(Write_Beat_Cnt_i_reg[29]),
        .O(\Write_Beat_Cnt_i[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[28]_i_5 
       (.I0(Write_Beat_Cnt_i_reg[28]),
        .O(\Write_Beat_Cnt_i[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[4]_i_2 
       (.I0(Write_Beat_Cnt_i_reg[7]),
        .O(\Write_Beat_Cnt_i[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[4]_i_3 
       (.I0(Write_Beat_Cnt_i_reg[6]),
        .O(\Write_Beat_Cnt_i[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[4]_i_4 
       (.I0(Write_Beat_Cnt_i_reg[5]),
        .O(\Write_Beat_Cnt_i[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[4]_i_5 
       (.I0(Write_Beat_Cnt_i_reg[4]),
        .O(\Write_Beat_Cnt_i[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[8]_i_2 
       (.I0(Write_Beat_Cnt_i_reg[11]),
        .O(\Write_Beat_Cnt_i[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[8]_i_3 
       (.I0(Write_Beat_Cnt_i_reg[10]),
        .O(\Write_Beat_Cnt_i[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[8]_i_4 
       (.I0(Write_Beat_Cnt_i_reg[9]),
        .O(\Write_Beat_Cnt_i[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Beat_Cnt_i[8]_i_5 
       (.I0(Write_Beat_Cnt_i_reg[8]),
        .O(\Write_Beat_Cnt_i[8]_i_5_n_0 ));
  FDSE \Write_Beat_Cnt_i_reg[0] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[0]_i_2_n_7 ),
        .Q(Write_Beat_Cnt_i_reg[0]),
        .S(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Beat_Cnt_i_reg[0]_i_2 
       (.CI(1'b0),
        .CO({\Write_Beat_Cnt_i_reg[0]_i_2_n_0 ,\Write_Beat_Cnt_i_reg[0]_i_2_n_1 ,\Write_Beat_Cnt_i_reg[0]_i_2_n_2 ,\Write_Beat_Cnt_i_reg[0]_i_2_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\Write_Beat_Cnt_i_reg[0]_i_2_n_4 ,\Write_Beat_Cnt_i_reg[0]_i_2_n_5 ,\Write_Beat_Cnt_i_reg[0]_i_2_n_6 ,\Write_Beat_Cnt_i_reg[0]_i_2_n_7 }),
        .S({\Write_Beat_Cnt_i[0]_i_3_n_0 ,\Write_Beat_Cnt_i[0]_i_4_n_0 ,\Write_Beat_Cnt_i[0]_i_5_n_0 ,\Write_Beat_Cnt_i[0]_i_6_n_0 }));
  FDRE \Write_Beat_Cnt_i_reg[10] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[8]_i_1_n_5 ),
        .Q(Write_Beat_Cnt_i_reg[10]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[11] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[8]_i_1_n_4 ),
        .Q(Write_Beat_Cnt_i_reg[11]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[12] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[12]_i_1_n_7 ),
        .Q(Write_Beat_Cnt_i_reg[12]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Beat_Cnt_i_reg[12]_i_1 
       (.CI(\Write_Beat_Cnt_i_reg[8]_i_1_n_0 ),
        .CO({\Write_Beat_Cnt_i_reg[12]_i_1_n_0 ,\Write_Beat_Cnt_i_reg[12]_i_1_n_1 ,\Write_Beat_Cnt_i_reg[12]_i_1_n_2 ,\Write_Beat_Cnt_i_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Beat_Cnt_i_reg[12]_i_1_n_4 ,\Write_Beat_Cnt_i_reg[12]_i_1_n_5 ,\Write_Beat_Cnt_i_reg[12]_i_1_n_6 ,\Write_Beat_Cnt_i_reg[12]_i_1_n_7 }),
        .S({\Write_Beat_Cnt_i[12]_i_2_n_0 ,\Write_Beat_Cnt_i[12]_i_3_n_0 ,\Write_Beat_Cnt_i[12]_i_4_n_0 ,\Write_Beat_Cnt_i[12]_i_5_n_0 }));
  FDRE \Write_Beat_Cnt_i_reg[13] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[12]_i_1_n_6 ),
        .Q(Write_Beat_Cnt_i_reg[13]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[14] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[12]_i_1_n_5 ),
        .Q(Write_Beat_Cnt_i_reg[14]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[15] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[12]_i_1_n_4 ),
        .Q(Write_Beat_Cnt_i_reg[15]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[16] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[16]_i_1_n_7 ),
        .Q(Write_Beat_Cnt_i_reg[16]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Beat_Cnt_i_reg[16]_i_1 
       (.CI(\Write_Beat_Cnt_i_reg[12]_i_1_n_0 ),
        .CO({\Write_Beat_Cnt_i_reg[16]_i_1_n_0 ,\Write_Beat_Cnt_i_reg[16]_i_1_n_1 ,\Write_Beat_Cnt_i_reg[16]_i_1_n_2 ,\Write_Beat_Cnt_i_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Beat_Cnt_i_reg[16]_i_1_n_4 ,\Write_Beat_Cnt_i_reg[16]_i_1_n_5 ,\Write_Beat_Cnt_i_reg[16]_i_1_n_6 ,\Write_Beat_Cnt_i_reg[16]_i_1_n_7 }),
        .S({\Write_Beat_Cnt_i[16]_i_2_n_0 ,\Write_Beat_Cnt_i[16]_i_3_n_0 ,\Write_Beat_Cnt_i[16]_i_4_n_0 ,\Write_Beat_Cnt_i[16]_i_5_n_0 }));
  FDRE \Write_Beat_Cnt_i_reg[17] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[16]_i_1_n_6 ),
        .Q(Write_Beat_Cnt_i_reg[17]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[18] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[16]_i_1_n_5 ),
        .Q(Write_Beat_Cnt_i_reg[18]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[19] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[16]_i_1_n_4 ),
        .Q(Write_Beat_Cnt_i_reg[19]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[1] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[0]_i_2_n_6 ),
        .Q(Write_Beat_Cnt_i_reg[1]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[20] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[20]_i_1_n_7 ),
        .Q(Write_Beat_Cnt_i_reg[20]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Beat_Cnt_i_reg[20]_i_1 
       (.CI(\Write_Beat_Cnt_i_reg[16]_i_1_n_0 ),
        .CO({\Write_Beat_Cnt_i_reg[20]_i_1_n_0 ,\Write_Beat_Cnt_i_reg[20]_i_1_n_1 ,\Write_Beat_Cnt_i_reg[20]_i_1_n_2 ,\Write_Beat_Cnt_i_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Beat_Cnt_i_reg[20]_i_1_n_4 ,\Write_Beat_Cnt_i_reg[20]_i_1_n_5 ,\Write_Beat_Cnt_i_reg[20]_i_1_n_6 ,\Write_Beat_Cnt_i_reg[20]_i_1_n_7 }),
        .S({\Write_Beat_Cnt_i[20]_i_2_n_0 ,\Write_Beat_Cnt_i[20]_i_3_n_0 ,\Write_Beat_Cnt_i[20]_i_4_n_0 ,\Write_Beat_Cnt_i[20]_i_5_n_0 }));
  FDRE \Write_Beat_Cnt_i_reg[21] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[20]_i_1_n_6 ),
        .Q(Write_Beat_Cnt_i_reg[21]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[22] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[20]_i_1_n_5 ),
        .Q(Write_Beat_Cnt_i_reg[22]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[23] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[20]_i_1_n_4 ),
        .Q(Write_Beat_Cnt_i_reg[23]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[24] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[24]_i_1_n_7 ),
        .Q(Write_Beat_Cnt_i_reg[24]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Beat_Cnt_i_reg[24]_i_1 
       (.CI(\Write_Beat_Cnt_i_reg[20]_i_1_n_0 ),
        .CO({\Write_Beat_Cnt_i_reg[24]_i_1_n_0 ,\Write_Beat_Cnt_i_reg[24]_i_1_n_1 ,\Write_Beat_Cnt_i_reg[24]_i_1_n_2 ,\Write_Beat_Cnt_i_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Beat_Cnt_i_reg[24]_i_1_n_4 ,\Write_Beat_Cnt_i_reg[24]_i_1_n_5 ,\Write_Beat_Cnt_i_reg[24]_i_1_n_6 ,\Write_Beat_Cnt_i_reg[24]_i_1_n_7 }),
        .S({\Write_Beat_Cnt_i[24]_i_2_n_0 ,\Write_Beat_Cnt_i[24]_i_3_n_0 ,\Write_Beat_Cnt_i[24]_i_4_n_0 ,\Write_Beat_Cnt_i[24]_i_5_n_0 }));
  FDRE \Write_Beat_Cnt_i_reg[25] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[24]_i_1_n_6 ),
        .Q(Write_Beat_Cnt_i_reg[25]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[26] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[24]_i_1_n_5 ),
        .Q(Write_Beat_Cnt_i_reg[26]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[27] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[24]_i_1_n_4 ),
        .Q(Write_Beat_Cnt_i_reg[27]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[28] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[28]_i_1_n_7 ),
        .Q(Write_Beat_Cnt_i_reg[28]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Beat_Cnt_i_reg[28]_i_1 
       (.CI(\Write_Beat_Cnt_i_reg[24]_i_1_n_0 ),
        .CO({\NLW_Write_Beat_Cnt_i_reg[28]_i_1_CO_UNCONNECTED [3],\Write_Beat_Cnt_i_reg[28]_i_1_n_1 ,\Write_Beat_Cnt_i_reg[28]_i_1_n_2 ,\Write_Beat_Cnt_i_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Beat_Cnt_i_reg[28]_i_1_n_4 ,\Write_Beat_Cnt_i_reg[28]_i_1_n_5 ,\Write_Beat_Cnt_i_reg[28]_i_1_n_6 ,\Write_Beat_Cnt_i_reg[28]_i_1_n_7 }),
        .S({\Write_Beat_Cnt_i[28]_i_2_n_0 ,\Write_Beat_Cnt_i[28]_i_3_n_0 ,\Write_Beat_Cnt_i[28]_i_4_n_0 ,\Write_Beat_Cnt_i[28]_i_5_n_0 }));
  FDRE \Write_Beat_Cnt_i_reg[29] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[28]_i_1_n_6 ),
        .Q(Write_Beat_Cnt_i_reg[29]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[2] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[0]_i_2_n_5 ),
        .Q(Write_Beat_Cnt_i_reg[2]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[30] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[28]_i_1_n_5 ),
        .Q(Write_Beat_Cnt_i_reg[30]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[31] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[28]_i_1_n_4 ),
        .Q(Write_Beat_Cnt_i_reg[31]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[3] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[0]_i_2_n_4 ),
        .Q(Write_Beat_Cnt_i_reg[3]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[4] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[4]_i_1_n_7 ),
        .Q(Write_Beat_Cnt_i_reg[4]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Beat_Cnt_i_reg[4]_i_1 
       (.CI(\Write_Beat_Cnt_i_reg[0]_i_2_n_0 ),
        .CO({\Write_Beat_Cnt_i_reg[4]_i_1_n_0 ,\Write_Beat_Cnt_i_reg[4]_i_1_n_1 ,\Write_Beat_Cnt_i_reg[4]_i_1_n_2 ,\Write_Beat_Cnt_i_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Beat_Cnt_i_reg[4]_i_1_n_4 ,\Write_Beat_Cnt_i_reg[4]_i_1_n_5 ,\Write_Beat_Cnt_i_reg[4]_i_1_n_6 ,\Write_Beat_Cnt_i_reg[4]_i_1_n_7 }),
        .S({\Write_Beat_Cnt_i[4]_i_2_n_0 ,\Write_Beat_Cnt_i[4]_i_3_n_0 ,\Write_Beat_Cnt_i[4]_i_4_n_0 ,\Write_Beat_Cnt_i[4]_i_5_n_0 }));
  FDRE \Write_Beat_Cnt_i_reg[5] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[4]_i_1_n_6 ),
        .Q(Write_Beat_Cnt_i_reg[5]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[6] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[4]_i_1_n_5 ),
        .Q(Write_Beat_Cnt_i_reg[6]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[7] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[4]_i_1_n_4 ),
        .Q(Write_Beat_Cnt_i_reg[7]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Beat_Cnt_i_reg[8] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[8]_i_1_n_7 ),
        .Q(Write_Beat_Cnt_i_reg[8]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Beat_Cnt_i_reg[8]_i_1 
       (.CI(\Write_Beat_Cnt_i_reg[4]_i_1_n_0 ),
        .CO({\Write_Beat_Cnt_i_reg[8]_i_1_n_0 ,\Write_Beat_Cnt_i_reg[8]_i_1_n_1 ,\Write_Beat_Cnt_i_reg[8]_i_1_n_2 ,\Write_Beat_Cnt_i_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Beat_Cnt_i_reg[8]_i_1_n_4 ,\Write_Beat_Cnt_i_reg[8]_i_1_n_5 ,\Write_Beat_Cnt_i_reg[8]_i_1_n_6 ,\Write_Beat_Cnt_i_reg[8]_i_1_n_7 }),
        .S({\Write_Beat_Cnt_i[8]_i_2_n_0 ,\Write_Beat_Cnt_i[8]_i_3_n_0 ,\Write_Beat_Cnt_i[8]_i_4_n_0 ,\Write_Beat_Cnt_i[8]_i_5_n_0 }));
  FDRE \Write_Beat_Cnt_i_reg[9] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Beat_Cnt_i_reg[8]_i_1_n_6 ),
        .Q(Write_Beat_Cnt_i_reg[9]),
        .R(Write_Byte_Cnt_i));
  FDRE Write_Beat_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Write_Beat),
        .Q(Write_Beat_d1),
        .R(Wr_cnt_ld));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[0]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[3]),
        .O(\Write_Byte_Cnt_i[0]_i_2_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Write_Byte_Cnt_i[0]_i_3 
       (.I0(\wr_byte_cnt_d1_reg_n_0_[2] ),
        .I1(Write_Byte_Cnt_i_reg[2]),
        .O(\Write_Byte_Cnt_i[0]_i_3_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Write_Byte_Cnt_i[0]_i_4 
       (.I0(\wr_byte_cnt_d1_reg_n_0_[1] ),
        .I1(Write_Byte_Cnt_i_reg[1]),
        .O(\Write_Byte_Cnt_i[0]_i_4_n_0 ));
  LUT2 #(
    .INIT(4'h6)) 
    \Write_Byte_Cnt_i[0]_i_5 
       (.I0(\wr_byte_cnt_d1_reg_n_0_[0] ),
        .I1(Write_Byte_Cnt_i_reg[0]),
        .O(\Write_Byte_Cnt_i[0]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[12]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[15]),
        .O(\Write_Byte_Cnt_i[12]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[12]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[14]),
        .O(\Write_Byte_Cnt_i[12]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[12]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[13]),
        .O(\Write_Byte_Cnt_i[12]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[12]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[12]),
        .O(\Write_Byte_Cnt_i[12]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[16]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[19]),
        .O(\Write_Byte_Cnt_i[16]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[16]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[18]),
        .O(\Write_Byte_Cnt_i[16]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[16]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[17]),
        .O(\Write_Byte_Cnt_i[16]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[16]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[16]),
        .O(\Write_Byte_Cnt_i[16]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[20]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[23]),
        .O(\Write_Byte_Cnt_i[20]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[20]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[22]),
        .O(\Write_Byte_Cnt_i[20]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[20]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[21]),
        .O(\Write_Byte_Cnt_i[20]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[20]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[20]),
        .O(\Write_Byte_Cnt_i[20]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[24]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[27]),
        .O(\Write_Byte_Cnt_i[24]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[24]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[26]),
        .O(\Write_Byte_Cnt_i[24]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[24]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[25]),
        .O(\Write_Byte_Cnt_i[24]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[24]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[24]),
        .O(\Write_Byte_Cnt_i[24]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[28]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[31]),
        .O(\Write_Byte_Cnt_i[28]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[28]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[30]),
        .O(\Write_Byte_Cnt_i[28]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[28]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[29]),
        .O(\Write_Byte_Cnt_i[28]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[28]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[28]),
        .O(\Write_Byte_Cnt_i[28]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[4]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[7]),
        .O(\Write_Byte_Cnt_i[4]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[4]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[6]),
        .O(\Write_Byte_Cnt_i[4]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[4]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[5]),
        .O(\Write_Byte_Cnt_i[4]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[4]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[4]),
        .O(\Write_Byte_Cnt_i[4]_i_5_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[8]_i_2 
       (.I0(Write_Byte_Cnt_i_reg[11]),
        .O(\Write_Byte_Cnt_i[8]_i_2_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[8]_i_3 
       (.I0(Write_Byte_Cnt_i_reg[10]),
        .O(\Write_Byte_Cnt_i[8]_i_3_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[8]_i_4 
       (.I0(Write_Byte_Cnt_i_reg[9]),
        .O(\Write_Byte_Cnt_i[8]_i_4_n_0 ));
  LUT1 #(
    .INIT(2'h2)) 
    \Write_Byte_Cnt_i[8]_i_5 
       (.I0(Write_Byte_Cnt_i_reg[8]),
        .O(\Write_Byte_Cnt_i[8]_i_5_n_0 ));
  FDRE \Write_Byte_Cnt_i_reg[0] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[0]_i_1_n_7 ),
        .Q(Write_Byte_Cnt_i_reg[0]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Byte_Cnt_i_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\Write_Byte_Cnt_i_reg[0]_i_1_n_0 ,\Write_Byte_Cnt_i_reg[0]_i_1_n_1 ,\Write_Byte_Cnt_i_reg[0]_i_1_n_2 ,\Write_Byte_Cnt_i_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\wr_byte_cnt_d1_reg_n_0_[2] ,\wr_byte_cnt_d1_reg_n_0_[1] ,\wr_byte_cnt_d1_reg_n_0_[0] }),
        .O({\Write_Byte_Cnt_i_reg[0]_i_1_n_4 ,\Write_Byte_Cnt_i_reg[0]_i_1_n_5 ,\Write_Byte_Cnt_i_reg[0]_i_1_n_6 ,\Write_Byte_Cnt_i_reg[0]_i_1_n_7 }),
        .S({\Write_Byte_Cnt_i[0]_i_2_n_0 ,\Write_Byte_Cnt_i[0]_i_3_n_0 ,\Write_Byte_Cnt_i[0]_i_4_n_0 ,\Write_Byte_Cnt_i[0]_i_5_n_0 }));
  FDRE \Write_Byte_Cnt_i_reg[10] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[8]_i_1_n_5 ),
        .Q(Write_Byte_Cnt_i_reg[10]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[11] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[8]_i_1_n_4 ),
        .Q(Write_Byte_Cnt_i_reg[11]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[12] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[12]_i_1_n_7 ),
        .Q(Write_Byte_Cnt_i_reg[12]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Byte_Cnt_i_reg[12]_i_1 
       (.CI(\Write_Byte_Cnt_i_reg[8]_i_1_n_0 ),
        .CO({\Write_Byte_Cnt_i_reg[12]_i_1_n_0 ,\Write_Byte_Cnt_i_reg[12]_i_1_n_1 ,\Write_Byte_Cnt_i_reg[12]_i_1_n_2 ,\Write_Byte_Cnt_i_reg[12]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Byte_Cnt_i_reg[12]_i_1_n_4 ,\Write_Byte_Cnt_i_reg[12]_i_1_n_5 ,\Write_Byte_Cnt_i_reg[12]_i_1_n_6 ,\Write_Byte_Cnt_i_reg[12]_i_1_n_7 }),
        .S({\Write_Byte_Cnt_i[12]_i_2_n_0 ,\Write_Byte_Cnt_i[12]_i_3_n_0 ,\Write_Byte_Cnt_i[12]_i_4_n_0 ,\Write_Byte_Cnt_i[12]_i_5_n_0 }));
  FDRE \Write_Byte_Cnt_i_reg[13] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[12]_i_1_n_6 ),
        .Q(Write_Byte_Cnt_i_reg[13]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[14] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[12]_i_1_n_5 ),
        .Q(Write_Byte_Cnt_i_reg[14]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[15] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[12]_i_1_n_4 ),
        .Q(Write_Byte_Cnt_i_reg[15]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[16] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[16]_i_1_n_7 ),
        .Q(Write_Byte_Cnt_i_reg[16]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Byte_Cnt_i_reg[16]_i_1 
       (.CI(\Write_Byte_Cnt_i_reg[12]_i_1_n_0 ),
        .CO({\Write_Byte_Cnt_i_reg[16]_i_1_n_0 ,\Write_Byte_Cnt_i_reg[16]_i_1_n_1 ,\Write_Byte_Cnt_i_reg[16]_i_1_n_2 ,\Write_Byte_Cnt_i_reg[16]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Byte_Cnt_i_reg[16]_i_1_n_4 ,\Write_Byte_Cnt_i_reg[16]_i_1_n_5 ,\Write_Byte_Cnt_i_reg[16]_i_1_n_6 ,\Write_Byte_Cnt_i_reg[16]_i_1_n_7 }),
        .S({\Write_Byte_Cnt_i[16]_i_2_n_0 ,\Write_Byte_Cnt_i[16]_i_3_n_0 ,\Write_Byte_Cnt_i[16]_i_4_n_0 ,\Write_Byte_Cnt_i[16]_i_5_n_0 }));
  FDRE \Write_Byte_Cnt_i_reg[17] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[16]_i_1_n_6 ),
        .Q(Write_Byte_Cnt_i_reg[17]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[18] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[16]_i_1_n_5 ),
        .Q(Write_Byte_Cnt_i_reg[18]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[19] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[16]_i_1_n_4 ),
        .Q(Write_Byte_Cnt_i_reg[19]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[1] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[0]_i_1_n_6 ),
        .Q(Write_Byte_Cnt_i_reg[1]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[20] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[20]_i_1_n_7 ),
        .Q(Write_Byte_Cnt_i_reg[20]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Byte_Cnt_i_reg[20]_i_1 
       (.CI(\Write_Byte_Cnt_i_reg[16]_i_1_n_0 ),
        .CO({\Write_Byte_Cnt_i_reg[20]_i_1_n_0 ,\Write_Byte_Cnt_i_reg[20]_i_1_n_1 ,\Write_Byte_Cnt_i_reg[20]_i_1_n_2 ,\Write_Byte_Cnt_i_reg[20]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Byte_Cnt_i_reg[20]_i_1_n_4 ,\Write_Byte_Cnt_i_reg[20]_i_1_n_5 ,\Write_Byte_Cnt_i_reg[20]_i_1_n_6 ,\Write_Byte_Cnt_i_reg[20]_i_1_n_7 }),
        .S({\Write_Byte_Cnt_i[20]_i_2_n_0 ,\Write_Byte_Cnt_i[20]_i_3_n_0 ,\Write_Byte_Cnt_i[20]_i_4_n_0 ,\Write_Byte_Cnt_i[20]_i_5_n_0 }));
  FDRE \Write_Byte_Cnt_i_reg[21] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[20]_i_1_n_6 ),
        .Q(Write_Byte_Cnt_i_reg[21]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[22] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[20]_i_1_n_5 ),
        .Q(Write_Byte_Cnt_i_reg[22]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[23] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[20]_i_1_n_4 ),
        .Q(Write_Byte_Cnt_i_reg[23]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[24] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[24]_i_1_n_7 ),
        .Q(Write_Byte_Cnt_i_reg[24]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Byte_Cnt_i_reg[24]_i_1 
       (.CI(\Write_Byte_Cnt_i_reg[20]_i_1_n_0 ),
        .CO({\Write_Byte_Cnt_i_reg[24]_i_1_n_0 ,\Write_Byte_Cnt_i_reg[24]_i_1_n_1 ,\Write_Byte_Cnt_i_reg[24]_i_1_n_2 ,\Write_Byte_Cnt_i_reg[24]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Byte_Cnt_i_reg[24]_i_1_n_4 ,\Write_Byte_Cnt_i_reg[24]_i_1_n_5 ,\Write_Byte_Cnt_i_reg[24]_i_1_n_6 ,\Write_Byte_Cnt_i_reg[24]_i_1_n_7 }),
        .S({\Write_Byte_Cnt_i[24]_i_2_n_0 ,\Write_Byte_Cnt_i[24]_i_3_n_0 ,\Write_Byte_Cnt_i[24]_i_4_n_0 ,\Write_Byte_Cnt_i[24]_i_5_n_0 }));
  FDRE \Write_Byte_Cnt_i_reg[25] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[24]_i_1_n_6 ),
        .Q(Write_Byte_Cnt_i_reg[25]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[26] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[24]_i_1_n_5 ),
        .Q(Write_Byte_Cnt_i_reg[26]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[27] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[24]_i_1_n_4 ),
        .Q(Write_Byte_Cnt_i_reg[27]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[28] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[28]_i_1_n_7 ),
        .Q(Write_Byte_Cnt_i_reg[28]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Byte_Cnt_i_reg[28]_i_1 
       (.CI(\Write_Byte_Cnt_i_reg[24]_i_1_n_0 ),
        .CO({\NLW_Write_Byte_Cnt_i_reg[28]_i_1_CO_UNCONNECTED [3],\Write_Byte_Cnt_i_reg[28]_i_1_n_1 ,\Write_Byte_Cnt_i_reg[28]_i_1_n_2 ,\Write_Byte_Cnt_i_reg[28]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Byte_Cnt_i_reg[28]_i_1_n_4 ,\Write_Byte_Cnt_i_reg[28]_i_1_n_5 ,\Write_Byte_Cnt_i_reg[28]_i_1_n_6 ,\Write_Byte_Cnt_i_reg[28]_i_1_n_7 }),
        .S({\Write_Byte_Cnt_i[28]_i_2_n_0 ,\Write_Byte_Cnt_i[28]_i_3_n_0 ,\Write_Byte_Cnt_i[28]_i_4_n_0 ,\Write_Byte_Cnt_i[28]_i_5_n_0 }));
  FDRE \Write_Byte_Cnt_i_reg[29] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[28]_i_1_n_6 ),
        .Q(Write_Byte_Cnt_i_reg[29]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[2] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[0]_i_1_n_5 ),
        .Q(Write_Byte_Cnt_i_reg[2]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[30] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[28]_i_1_n_5 ),
        .Q(Write_Byte_Cnt_i_reg[30]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[31] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[28]_i_1_n_4 ),
        .Q(Write_Byte_Cnt_i_reg[31]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[3] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[0]_i_1_n_4 ),
        .Q(Write_Byte_Cnt_i_reg[3]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[4] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[4]_i_1_n_7 ),
        .Q(Write_Byte_Cnt_i_reg[4]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Byte_Cnt_i_reg[4]_i_1 
       (.CI(\Write_Byte_Cnt_i_reg[0]_i_1_n_0 ),
        .CO({\Write_Byte_Cnt_i_reg[4]_i_1_n_0 ,\Write_Byte_Cnt_i_reg[4]_i_1_n_1 ,\Write_Byte_Cnt_i_reg[4]_i_1_n_2 ,\Write_Byte_Cnt_i_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Byte_Cnt_i_reg[4]_i_1_n_4 ,\Write_Byte_Cnt_i_reg[4]_i_1_n_5 ,\Write_Byte_Cnt_i_reg[4]_i_1_n_6 ,\Write_Byte_Cnt_i_reg[4]_i_1_n_7 }),
        .S({\Write_Byte_Cnt_i[4]_i_2_n_0 ,\Write_Byte_Cnt_i[4]_i_3_n_0 ,\Write_Byte_Cnt_i[4]_i_4_n_0 ,\Write_Byte_Cnt_i[4]_i_5_n_0 }));
  FDRE \Write_Byte_Cnt_i_reg[5] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[4]_i_1_n_6 ),
        .Q(Write_Byte_Cnt_i_reg[5]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[6] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[4]_i_1_n_5 ),
        .Q(Write_Byte_Cnt_i_reg[6]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[7] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[4]_i_1_n_4 ),
        .Q(Write_Byte_Cnt_i_reg[7]),
        .R(Write_Byte_Cnt_i));
  FDRE \Write_Byte_Cnt_i_reg[8] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[8]_i_1_n_7 ),
        .Q(Write_Byte_Cnt_i_reg[8]),
        .R(Write_Byte_Cnt_i));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Write_Byte_Cnt_i_reg[8]_i_1 
       (.CI(\Write_Byte_Cnt_i_reg[4]_i_1_n_0 ),
        .CO({\Write_Byte_Cnt_i_reg[8]_i_1_n_0 ,\Write_Byte_Cnt_i_reg[8]_i_1_n_1 ,\Write_Byte_Cnt_i_reg[8]_i_1_n_2 ,\Write_Byte_Cnt_i_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\Write_Byte_Cnt_i_reg[8]_i_1_n_4 ,\Write_Byte_Cnt_i_reg[8]_i_1_n_5 ,\Write_Byte_Cnt_i_reg[8]_i_1_n_6 ,\Write_Byte_Cnt_i_reg[8]_i_1_n_7 }),
        .S({\Write_Byte_Cnt_i[8]_i_2_n_0 ,\Write_Byte_Cnt_i[8]_i_3_n_0 ,\Write_Byte_Cnt_i[8]_i_4_n_0 ,\Write_Byte_Cnt_i[8]_i_5_n_0 }));
  FDRE \Write_Byte_Cnt_i_reg[9] 
       (.C(core_aclk),
        .CE(Write_Beat_d1),
        .D(\Write_Byte_Cnt_i_reg[8]_i_1_n_6 ),
        .Q(Write_Byte_Cnt_i_reg[9]),
        .R(Write_Byte_Cnt_i));
  LUT6 #(
    .INIT(64'h8000800000008000)) 
    Write_Latency_En_Int_i_1
       (.I0(rst_int_n),
        .I1(wid_match_reg_d2),
        .I2(F34_Rd_Vld_reg_d2),
        .I3(out[0]),
        .I4(out[2]),
        .I5(Ext_Trig_Metric_en),
        .O(Write_Latency_En_Int));
  FDRE Write_Latency_En_Int_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Write_Latency_En_Int),
        .Q(Write_Latency_En),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h8)) 
    \Write_Latency_Int[31]_i_1 
       (.I0(wid_match_reg_d2),
        .I1(F34_Rd_Vld_reg_d2),
        .O(Write_Latency_Int0));
  FDRE \Write_Latency_Int_reg[0] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[0] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[2]_2 [0]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[10] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[10] ),
        .Q(S0_Write_Latency[10]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[11] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[11] ),
        .Q(S0_Write_Latency[11]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[12] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[12] ),
        .Q(S0_Write_Latency[12]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[13] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[13] ),
        .Q(S0_Write_Latency[13]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[14] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[14] ),
        .Q(S0_Write_Latency[14]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[15] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[15] ),
        .Q(S0_Write_Latency[15]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[16] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[16] ),
        .Q(S0_Write_Latency[16]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[17] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[17] ),
        .Q(S0_Write_Latency[17]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[18] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[18] ),
        .Q(S0_Write_Latency[18]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[19] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[19] ),
        .Q(S0_Write_Latency[19]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[1] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[1] ),
        .Q(S0_Write_Latency[1]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[20] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[20] ),
        .Q(S0_Write_Latency[20]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[21] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[21] ),
        .Q(S0_Write_Latency[21]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[22] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[22] ),
        .Q(S0_Write_Latency[22]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[23] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[23] ),
        .Q(S0_Write_Latency[23]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[24] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[24] ),
        .Q(S0_Write_Latency[24]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[25] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[25] ),
        .Q(S0_Write_Latency[25]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[26] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[26] ),
        .Q(S0_Write_Latency[26]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[27] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[27] ),
        .Q(S0_Write_Latency[27]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[28] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[28] ),
        .Q(S0_Write_Latency[28]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[29] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[29] ),
        .Q(S0_Write_Latency[29]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[2] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[2] ),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[2]_2 [1]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[30] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[30] ),
        .Q(S0_Write_Latency[30]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[31] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[31] ),
        .Q(S0_Write_Latency[31]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[3] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[3] ),
        .Q(S0_Write_Latency[3]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[4] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[4] ),
        .Q(S0_Write_Latency[4]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[5] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[5] ),
        .Q(S0_Write_Latency[5]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[6] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[6] ),
        .Q(S0_Write_Latency[6]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[7] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[7] ),
        .Q(S0_Write_Latency[7]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[8] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[8] ),
        .Q(S0_Write_Latency[8]),
        .R(Wr_cnt_ld));
  FDRE \Write_Latency_Int_reg[9] 
       (.C(core_aclk),
        .CE(Write_Latency_Int0),
        .D(\Wr_Lat_Cnt_Diff_reg1_reg_n_0_[9] ),
        .Q(S0_Write_Latency[9]),
        .R(Wr_cnt_ld));
  FDRE Write_going_on_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Write_going_on_reg_0),
        .Q(Write_going_on),
        .R(1'b0));
  FDRE Write_iss_going_on_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(Write_iss_going_on_reg_0),
        .Q(\wptr_reg[0] ),
        .R(1'b0));
  FDRE awid_match_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_2_out3_out),
        .Q(awid_match_d1),
        .R(Wr_cnt_ld));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized5 ext_trig_cdc_sync
       (.D(Ext_Triggers_Sync),
        .Ext_Trig_Metric_en_reg(ext_trig_cdc_sync_n_2),
        .Ext_Trig_Metric_en_reg_0(Ext_Trig_Metric_en),
        .Q(Ext_Triggers_Sync_d1),
        .SR(Wr_cnt_ld),
        .UNCONN_IN(UNCONN_IN),
        .core_aclk(core_aclk),
        .out(out[2]),
        .rst_int_n_reg(rst_int_n));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter_ovf rd_latency_cnt_inst
       (.Metrics_Cnt_En_Int(Metrics_Cnt_En_Int),
        .Q({Read_Latency_Cnt_Ovf,Read_Latency_Cnt_Out}),
        .Rd_Lat_Start(Rd_Lat_Start),
        .S0_S_Null_Byte_Cnt(S0_S_Null_Byte_Cnt),
        .SR(Wr_cnt_ld),
        .Slot_0_Sync_Data_Valid(Slot_0_Sync_Data_Valid),
        .core_aclk(core_aclk),
        .rst_int_n_reg(rst_int_n));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized2 rd_latency_fifo_inst
       (.\ARID_reg_reg[0] (\ARID_reg_reg[0]_0 ),
        .Q(\rptr_reg[4] ),
        .\RID_Mask_CDC_reg[0] (\RID_Mask_CDC_reg[0] ),
        .\Rd_Latency_Fifo_Rd_Data_D1_reg[32] (Rd_Latency_Fifo_Rd_Data),
        .Rd_Latency_Fifo_Rd_En(Rd_Latency_Fifo_Rd_En),
        .Rd_Latency_Fifo_Rd_En_reg(rd_latency_fifo_inst_n_1),
        .\Rd_Latency_Fifo_Wr_Data_reg[31] (\Rd_Latency_Fifo_Wr_Data_reg[31]_0 ),
        .Rd_Latency_Fifo_Wr_En_reg(rd_latency_fifo_inst_n_2),
        .Read_Latency_One_D1(Read_Latency_One_D1),
        .Read_Latency_One_D10(Read_Latency_One_D10),
        .Read_Latency_One_D1_reg(Rd_Latency_Fifo_Empty),
        .Read_Latency_One_reg(Read_Latency_One_reg_n_0),
        .SR(Wr_cnt_ld),
        .core_aclk(core_aclk),
        .rd_latency_end(rd_latency_end),
        .rd_latency_start(rd_latency_start),
        .rst_int_n_reg(rst_int_n),
        .\s_level_out_bus_d4_reg[0] (\s_level_out_bus_d4_reg[0]_0 ),
        .\wptr_reg[4]_0 (\wptr_reg[4]_1 ));
  FDRE rid_match_reg_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(p_2_out0_out),
        .Q(rid_match_reg),
        .R(Wr_cnt_ld));
  (* KEEP = "yes" *) 
  FDRE rst_int_n_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(\s_level_out_bus_d4_reg[1] ),
        .Q(rst_int_n),
        .R(1'b0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_10
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[26] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [26]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[27] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [27]),
        .O(update_max_Wr_Lat_i_10_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_11
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[24] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [24]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[25] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [25]),
        .O(update_max_Wr_Lat_i_11_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_13
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[22] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [22]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [23]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[23] ),
        .O(update_max_Wr_Lat_i_13_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_14
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[20] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [20]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [21]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[21] ),
        .O(update_max_Wr_Lat_i_14_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_15
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[18] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [18]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [19]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[19] ),
        .O(update_max_Wr_Lat_i_15_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_16
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[16] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [16]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [17]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[17] ),
        .O(update_max_Wr_Lat_i_16_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_17
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[22] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [22]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[23] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [23]),
        .O(update_max_Wr_Lat_i_17_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_18
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[20] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [20]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[21] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [21]),
        .O(update_max_Wr_Lat_i_18_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_19
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[18] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [18]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[19] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [19]),
        .O(update_max_Wr_Lat_i_19_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_20
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[16] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [16]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[17] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [17]),
        .O(update_max_Wr_Lat_i_20_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_22
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[14] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [14]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [15]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[15] ),
        .O(update_max_Wr_Lat_i_22_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_23
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[12] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [12]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [13]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[13] ),
        .O(update_max_Wr_Lat_i_23_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_24
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[10] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [10]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [11]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[11] ),
        .O(update_max_Wr_Lat_i_24_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_25
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[8] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [8]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [9]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[9] ),
        .O(update_max_Wr_Lat_i_25_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_26
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[14] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [14]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[15] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [15]),
        .O(update_max_Wr_Lat_i_26_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_27
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[12] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [12]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[13] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [13]),
        .O(update_max_Wr_Lat_i_27_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_28
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[10] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [10]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[11] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [11]),
        .O(update_max_Wr_Lat_i_28_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_29
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[8] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [8]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[9] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [9]),
        .O(update_max_Wr_Lat_i_29_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_30
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[6] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [6]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [7]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[7] ),
        .O(update_max_Wr_Lat_i_30_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_31
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[4] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [4]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [5]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[5] ),
        .O(update_max_Wr_Lat_i_31_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_32
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[2] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [2]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [3]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[3] ),
        .O(update_max_Wr_Lat_i_32_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_33
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[0] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [0]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [1]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[1] ),
        .O(update_max_Wr_Lat_i_33_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_34
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[6] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [6]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[7] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [7]),
        .O(update_max_Wr_Lat_i_34_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_35
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[4] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [4]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[5] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [5]),
        .O(update_max_Wr_Lat_i_35_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_36
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[2] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [2]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[3] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [3]),
        .O(update_max_Wr_Lat_i_36_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_37
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[0] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [0]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[1] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [1]),
        .O(update_max_Wr_Lat_i_37_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_4
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[30] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [30]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [31]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[31] ),
        .O(update_max_Wr_Lat_i_4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_5
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[28] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [28]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [29]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[29] ),
        .O(update_max_Wr_Lat_i_5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_6
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[26] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [26]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [27]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[27] ),
        .O(update_max_Wr_Lat_i_6_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_max_Wr_Lat_i_7
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[24] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [24]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [25]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[25] ),
        .O(update_max_Wr_Lat_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_8
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[30] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [30]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[31] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [31]),
        .O(update_max_Wr_Lat_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_max_Wr_Lat_i_9
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[28] ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [28]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[29] ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[31]_2 [29]),
        .O(update_max_Wr_Lat_i_9_n_0));
  FDRE update_max_Wr_Lat_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(F34_Rd_Vld_reg_reg_0),
        .Q(update_max_Wr_Lat),
        .R(Wr_cnt_ld));
  CARRY4 update_max_Wr_Lat_reg_i_12
       (.CI(update_max_Wr_Lat_reg_i_21_n_0),
        .CO({update_max_Wr_Lat_reg_i_12_n_0,update_max_Wr_Lat_reg_i_12_n_1,update_max_Wr_Lat_reg_i_12_n_2,update_max_Wr_Lat_reg_i_12_n_3}),
        .CYINIT(1'b0),
        .DI({update_max_Wr_Lat_i_22_n_0,update_max_Wr_Lat_i_23_n_0,update_max_Wr_Lat_i_24_n_0,update_max_Wr_Lat_i_25_n_0}),
        .O(NLW_update_max_Wr_Lat_reg_i_12_O_UNCONNECTED[3:0]),
        .S({update_max_Wr_Lat_i_26_n_0,update_max_Wr_Lat_i_27_n_0,update_max_Wr_Lat_i_28_n_0,update_max_Wr_Lat_i_29_n_0}));
  CARRY4 update_max_Wr_Lat_reg_i_2
       (.CI(update_max_Wr_Lat_reg_i_3_n_0),
        .CO({O366,update_max_Wr_Lat_reg_i_2_n_1,update_max_Wr_Lat_reg_i_2_n_2,update_max_Wr_Lat_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({update_max_Wr_Lat_i_4_n_0,update_max_Wr_Lat_i_5_n_0,update_max_Wr_Lat_i_6_n_0,update_max_Wr_Lat_i_7_n_0}),
        .O(NLW_update_max_Wr_Lat_reg_i_2_O_UNCONNECTED[3:0]),
        .S({update_max_Wr_Lat_i_8_n_0,update_max_Wr_Lat_i_9_n_0,update_max_Wr_Lat_i_10_n_0,update_max_Wr_Lat_i_11_n_0}));
  CARRY4 update_max_Wr_Lat_reg_i_21
       (.CI(1'b0),
        .CO({update_max_Wr_Lat_reg_i_21_n_0,update_max_Wr_Lat_reg_i_21_n_1,update_max_Wr_Lat_reg_i_21_n_2,update_max_Wr_Lat_reg_i_21_n_3}),
        .CYINIT(1'b0),
        .DI({update_max_Wr_Lat_i_30_n_0,update_max_Wr_Lat_i_31_n_0,update_max_Wr_Lat_i_32_n_0,update_max_Wr_Lat_i_33_n_0}),
        .O(NLW_update_max_Wr_Lat_reg_i_21_O_UNCONNECTED[3:0]),
        .S({update_max_Wr_Lat_i_34_n_0,update_max_Wr_Lat_i_35_n_0,update_max_Wr_Lat_i_36_n_0,update_max_Wr_Lat_i_37_n_0}));
  CARRY4 update_max_Wr_Lat_reg_i_3
       (.CI(update_max_Wr_Lat_reg_i_12_n_0),
        .CO({update_max_Wr_Lat_reg_i_3_n_0,update_max_Wr_Lat_reg_i_3_n_1,update_max_Wr_Lat_reg_i_3_n_2,update_max_Wr_Lat_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({update_max_Wr_Lat_i_13_n_0,update_max_Wr_Lat_i_14_n_0,update_max_Wr_Lat_i_15_n_0,update_max_Wr_Lat_i_16_n_0}),
        .O(NLW_update_max_Wr_Lat_reg_i_3_O_UNCONNECTED[3:0]),
        .S({update_max_Wr_Lat_i_17_n_0,update_max_Wr_Lat_i_18_n_0,update_max_Wr_Lat_i_19_n_0,update_max_Wr_Lat_i_20_n_0}));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_10
       (.I0(S0_Min_Write_Latency[26]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[26] ),
        .I2(S0_Min_Write_Latency[27]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[27] ),
        .O(update_min_Wr_Lat_i_10_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_11
       (.I0(S0_Min_Write_Latency[24]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[24] ),
        .I2(S0_Min_Write_Latency[25]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[25] ),
        .O(update_min_Wr_Lat_i_11_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_13
       (.I0(S0_Min_Write_Latency[22]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[22] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[23] ),
        .I3(S0_Min_Write_Latency[23]),
        .O(update_min_Wr_Lat_i_13_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_14
       (.I0(S0_Min_Write_Latency[20]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[20] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[21] ),
        .I3(S0_Min_Write_Latency[21]),
        .O(update_min_Wr_Lat_i_14_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_15
       (.I0(S0_Min_Write_Latency[18]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[18] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[19] ),
        .I3(S0_Min_Write_Latency[19]),
        .O(update_min_Wr_Lat_i_15_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_16
       (.I0(S0_Min_Write_Latency[16]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[16] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[17] ),
        .I3(S0_Min_Write_Latency[17]),
        .O(update_min_Wr_Lat_i_16_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_17
       (.I0(S0_Min_Write_Latency[22]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[22] ),
        .I2(S0_Min_Write_Latency[23]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[23] ),
        .O(update_min_Wr_Lat_i_17_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_18
       (.I0(S0_Min_Write_Latency[20]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[20] ),
        .I2(S0_Min_Write_Latency[21]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[21] ),
        .O(update_min_Wr_Lat_i_18_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_19
       (.I0(S0_Min_Write_Latency[18]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[18] ),
        .I2(S0_Min_Write_Latency[19]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[19] ),
        .O(update_min_Wr_Lat_i_19_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_20
       (.I0(S0_Min_Write_Latency[16]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[16] ),
        .I2(S0_Min_Write_Latency[17]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[17] ),
        .O(update_min_Wr_Lat_i_20_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_22
       (.I0(S0_Min_Write_Latency[14]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[14] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[15] ),
        .I3(S0_Min_Write_Latency[15]),
        .O(update_min_Wr_Lat_i_22_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_23
       (.I0(S0_Min_Write_Latency[12]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[12] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[13] ),
        .I3(S0_Min_Write_Latency[13]),
        .O(update_min_Wr_Lat_i_23_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_24
       (.I0(S0_Min_Write_Latency[10]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[10] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[11] ),
        .I3(S0_Min_Write_Latency[11]),
        .O(update_min_Wr_Lat_i_24_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_25
       (.I0(S0_Min_Write_Latency[8]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[8] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[9] ),
        .I3(S0_Min_Write_Latency[9]),
        .O(update_min_Wr_Lat_i_25_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_26
       (.I0(S0_Min_Write_Latency[14]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[14] ),
        .I2(S0_Min_Write_Latency[15]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[15] ),
        .O(update_min_Wr_Lat_i_26_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_27
       (.I0(S0_Min_Write_Latency[12]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[12] ),
        .I2(S0_Min_Write_Latency[13]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[13] ),
        .O(update_min_Wr_Lat_i_27_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_28
       (.I0(S0_Min_Write_Latency[10]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[10] ),
        .I2(S0_Min_Write_Latency[11]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[11] ),
        .O(update_min_Wr_Lat_i_28_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_29
       (.I0(S0_Min_Write_Latency[8]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[8] ),
        .I2(S0_Min_Write_Latency[9]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[9] ),
        .O(update_min_Wr_Lat_i_29_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_30
       (.I0(S0_Min_Write_Latency[6]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[6] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[7] ),
        .I3(S0_Min_Write_Latency[7]),
        .O(update_min_Wr_Lat_i_30_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_31
       (.I0(S0_Min_Write_Latency[4]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[4] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[5] ),
        .I3(S0_Min_Write_Latency[5]),
        .O(update_min_Wr_Lat_i_31_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_32
       (.I0(S0_Min_Write_Latency[2]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[2] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[3] ),
        .I3(S0_Min_Write_Latency[3]),
        .O(update_min_Wr_Lat_i_32_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_33
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[0]_1 ),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[0] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[1] ),
        .I3(S0_Min_Write_Latency[1]),
        .O(update_min_Wr_Lat_i_33_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_34
       (.I0(S0_Min_Write_Latency[6]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[6] ),
        .I2(S0_Min_Write_Latency[7]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[7] ),
        .O(update_min_Wr_Lat_i_34_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_35
       (.I0(S0_Min_Write_Latency[4]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[4] ),
        .I2(S0_Min_Write_Latency[5]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[5] ),
        .O(update_min_Wr_Lat_i_35_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_36
       (.I0(S0_Min_Write_Latency[2]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[2] ),
        .I2(S0_Min_Write_Latency[3]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[3] ),
        .O(update_min_Wr_Lat_i_36_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_37
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[0]_1 ),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[0] ),
        .I2(S0_Min_Write_Latency[1]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[1] ),
        .O(update_min_Wr_Lat_i_37_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_4
       (.I0(S0_Min_Write_Latency[30]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[30] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[31] ),
        .I3(S0_Min_Write_Latency[31]),
        .O(update_min_Wr_Lat_i_4_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_5
       (.I0(S0_Min_Write_Latency[28]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[28] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[29] ),
        .I3(S0_Min_Write_Latency[29]),
        .O(update_min_Wr_Lat_i_5_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_6
       (.I0(S0_Min_Write_Latency[26]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[26] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[27] ),
        .I3(S0_Min_Write_Latency[27]),
        .O(update_min_Wr_Lat_i_6_n_0));
  LUT4 #(
    .INIT(16'h2F02)) 
    update_min_Wr_Lat_i_7
       (.I0(S0_Min_Write_Latency[24]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[24] ),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[25] ),
        .I3(S0_Min_Write_Latency[25]),
        .O(update_min_Wr_Lat_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_8
       (.I0(S0_Min_Write_Latency[30]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[30] ),
        .I2(S0_Min_Write_Latency[31]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[31] ),
        .O(update_min_Wr_Lat_i_8_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    update_min_Wr_Lat_i_9
       (.I0(S0_Min_Write_Latency[28]),
        .I1(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[28] ),
        .I2(S0_Min_Write_Latency[29]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg_n_0_[29] ),
        .O(update_min_Wr_Lat_i_9_n_0));
  FDRE update_min_Wr_Lat_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(F34_Rd_Vld_reg_reg_1),
        .Q(update_min_Wr_Lat),
        .R(Wr_cnt_ld));
  CARRY4 update_min_Wr_Lat_reg_i_12
       (.CI(update_min_Wr_Lat_reg_i_21_n_0),
        .CO({update_min_Wr_Lat_reg_i_12_n_0,update_min_Wr_Lat_reg_i_12_n_1,update_min_Wr_Lat_reg_i_12_n_2,update_min_Wr_Lat_reg_i_12_n_3}),
        .CYINIT(1'b0),
        .DI({update_min_Wr_Lat_i_22_n_0,update_min_Wr_Lat_i_23_n_0,update_min_Wr_Lat_i_24_n_0,update_min_Wr_Lat_i_25_n_0}),
        .O(NLW_update_min_Wr_Lat_reg_i_12_O_UNCONNECTED[3:0]),
        .S({update_min_Wr_Lat_i_26_n_0,update_min_Wr_Lat_i_27_n_0,update_min_Wr_Lat_i_28_n_0,update_min_Wr_Lat_i_29_n_0}));
  CARRY4 update_min_Wr_Lat_reg_i_2
       (.CI(update_min_Wr_Lat_reg_i_3_n_0),
        .CO({O367,update_min_Wr_Lat_reg_i_2_n_1,update_min_Wr_Lat_reg_i_2_n_2,update_min_Wr_Lat_reg_i_2_n_3}),
        .CYINIT(1'b0),
        .DI({update_min_Wr_Lat_i_4_n_0,update_min_Wr_Lat_i_5_n_0,update_min_Wr_Lat_i_6_n_0,update_min_Wr_Lat_i_7_n_0}),
        .O(NLW_update_min_Wr_Lat_reg_i_2_O_UNCONNECTED[3:0]),
        .S({update_min_Wr_Lat_i_8_n_0,update_min_Wr_Lat_i_9_n_0,update_min_Wr_Lat_i_10_n_0,update_min_Wr_Lat_i_11_n_0}));
  CARRY4 update_min_Wr_Lat_reg_i_21
       (.CI(1'b0),
        .CO({update_min_Wr_Lat_reg_i_21_n_0,update_min_Wr_Lat_reg_i_21_n_1,update_min_Wr_Lat_reg_i_21_n_2,update_min_Wr_Lat_reg_i_21_n_3}),
        .CYINIT(1'b0),
        .DI({update_min_Wr_Lat_i_30_n_0,update_min_Wr_Lat_i_31_n_0,update_min_Wr_Lat_i_32_n_0,update_min_Wr_Lat_i_33_n_0}),
        .O(NLW_update_min_Wr_Lat_reg_i_21_O_UNCONNECTED[3:0]),
        .S({update_min_Wr_Lat_i_34_n_0,update_min_Wr_Lat_i_35_n_0,update_min_Wr_Lat_i_36_n_0,update_min_Wr_Lat_i_37_n_0}));
  CARRY4 update_min_Wr_Lat_reg_i_3
       (.CI(update_min_Wr_Lat_reg_i_12_n_0),
        .CO({update_min_Wr_Lat_reg_i_3_n_0,update_min_Wr_Lat_reg_i_3_n_1,update_min_Wr_Lat_reg_i_3_n_2,update_min_Wr_Lat_reg_i_3_n_3}),
        .CYINIT(1'b0),
        .DI({update_min_Wr_Lat_i_13_n_0,update_min_Wr_Lat_i_14_n_0,update_min_Wr_Lat_i_15_n_0,update_min_Wr_Lat_i_16_n_0}),
        .O(NLW_update_min_Wr_Lat_reg_i_3_O_UNCONNECTED[3:0]),
        .S({update_min_Wr_Lat_i_17_n_0,update_min_Wr_Lat_i_18_n_0,update_min_Wr_Lat_i_19_n_0,update_min_Wr_Lat_i_20_n_0}));
  FDRE wid_match_reg_d2_reg
       (.C(core_aclk),
        .CE(rst_int_n),
        .D(wid_match_reg),
        .Q(wid_match_reg_d2),
        .R(1'b0));
  FDRE wid_match_reg_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(\dout_reg[0] ),
        .Q(wid_match_reg),
        .R(Wr_cnt_ld));
  FDRE \wr_byte_cnt_d1_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[41] ),
        .Q(\wr_byte_cnt_d1_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \wr_byte_cnt_d1_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[42] ),
        .Q(\wr_byte_cnt_d1_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \wr_byte_cnt_d1_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[40] ),
        .Q(\wr_byte_cnt_d1_reg_n_0_[2] ),
        .R(1'b0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter_ovf_41 wr_latency_cnt_inst
       (.Data_valid_reg1(Data_valid_reg1),
        .Data_valid_reg2(Data_valid_reg2),
        .Metrics_Cnt_En_Int(Metrics_Cnt_En_Int),
        .SR(Wr_cnt_ld),
        .Wr_Lat_Start(Wr_Lat_Start),
        .core_aclk(core_aclk),
        .\dout_reg[31] (\dout_reg[31] ),
        .rst_int_n_reg(rst_int_n));
  LUT4 #(
    .INIT(16'h00B8)) 
    wr_latency_end_d1_i_2
       (.I0(First_Write_d1),
        .I1(Wr_Lat_End),
        .I2(Last_fifo_Wr_en),
        .I3(Wr_Lat_Start),
        .O(wr_latency_end_d1_reg_0));
  FDRE wr_latency_end_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(wr_latency_end),
        .Q(wr_latency_end_d1),
        .R(Wr_cnt_ld));
  FDRE wr_latency_end_d2_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(wr_latency_end_d1),
        .Q(wr_latency_end_d2),
        .R(Wr_cnt_ld));
  FDRE wr_latency_start_d1_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(wr_latency_start),
        .Q(wr_latency_start_d1),
        .R(Wr_cnt_ld));
  FDRE wr_latency_start_d2_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(wr_latency_start_d1),
        .Q(wr_latency_start_d2),
        .R(Wr_cnt_ld));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_metric_counters
   (p_in_d1_cdc_from_reg0,
    Q,
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ,
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ,
    core_aresetn_0,
    core_aclk,
    \s_level_out_bus_d4_reg[2] ,
    DI,
    S,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ,
    Add_in_Valid,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] ,
    p_in_d1_cdc_from_reg,
    out,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ,
    core_aresetn,
    Metrics_Cnt_Reset_Final__0,
    D,
    FBC_Rd_Vld_reg);
  output p_in_d1_cdc_from_reg0;
  output [15:0]Q;
  output [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ;
  output [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ;
  input core_aresetn_0;
  input core_aclk;
  input [0:0]\s_level_out_bus_d4_reg[2] ;
  input [3:0]DI;
  input [3:0]S;
  input [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ;
  input [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ;
  input Add_in_Valid;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] ;
  input p_in_d1_cdc_from_reg;
  input [0:0]out;
  input [15:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ;
  input core_aresetn;
  input Metrics_Cnt_Reset_Final__0;
  input [31:0]D;
  input [31:0]FBC_Rd_Vld_reg;

  wire Add_in_Valid;
  wire [31:0]D;
  wire [3:0]DI;
  wire [31:0]FBC_Rd_Vld_reg;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] ;
  wire [15:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ;
  wire [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ;
  wire [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ;
  wire [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ;
  wire [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ;
  wire Metrics_Cnt_Reset_Final__0;
  wire [15:0]Q;
  wire [3:0]S;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire [0:0]out;
  wire p_in_d1_cdc_from_reg;
  wire p_in_d1_cdc_from_reg0;
  wire [0:0]\s_level_out_bus_d4_reg[2] ;

  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_metric_sel_n_cnt axi_perf_mon_v5_0_13_metric_sel_n_cnt_inst_0
       (.Add_in_Valid(Add_in_Valid),
        .D(D),
        .DI(DI),
        .FBC_Rd_Vld_reg(FBC_Rd_Vld_reg),
        .\GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] (\GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] ),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] (\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] (\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 (\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ),
        .\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] (\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ),
        .\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] (\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ),
        .Metrics_Cnt_Reset_Final__0(Metrics_Cnt_Reset_Final__0),
        .Q(Q),
        .S(S),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(core_aresetn_0),
        .out(out),
        .p_in_d1_cdc_from_reg(p_in_d1_cdc_from_reg),
        .p_in_d1_cdc_from_reg0(p_in_d1_cdc_from_reg0),
        .\s_level_out_bus_d4_reg[2] (\s_level_out_bus_d4_reg[2] ));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_metric_sel_n_cnt
   (p_in_d1_cdc_from_reg0,
    Q,
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ,
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ,
    core_aresetn_0,
    core_aclk,
    \s_level_out_bus_d4_reg[2] ,
    DI,
    S,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ,
    Add_in_Valid,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] ,
    p_in_d1_cdc_from_reg,
    out,
    \GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ,
    core_aresetn,
    Metrics_Cnt_Reset_Final__0,
    D,
    FBC_Rd_Vld_reg);
  output p_in_d1_cdc_from_reg0;
  output [15:0]Q;
  output [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ;
  output [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ;
  input core_aresetn_0;
  input core_aclk;
  input [0:0]\s_level_out_bus_d4_reg[2] ;
  input [3:0]DI;
  input [3:0]S;
  input [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ;
  input [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ;
  input Add_in_Valid;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] ;
  input p_in_d1_cdc_from_reg;
  input [0:0]out;
  input [15:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ;
  input core_aresetn;
  input Metrics_Cnt_Reset_Final__0;
  input [31:0]D;
  input [31:0]FBC_Rd_Vld_reg;

  wire Add_in_Valid;
  wire [31:0]D;
  wire [3:0]DI;
  wire [31:0]FBC_Rd_Vld_reg;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] ;
  wire [15:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ;
  wire [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ;
  wire [3:0]\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_reg_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[16] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[17] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[18] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[19] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[20] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[21] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[22] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[23] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[24] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[25] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[26] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[27] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[28] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[29] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[30] ;
  wire \GEN_MUX_N_CNT.Add_in_reg_n_0_[31] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[0] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[10] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[11] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[12] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[13] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[14] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[15] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[16] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[17] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[18] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[19] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[1] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[20] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[21] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[22] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[23] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[24] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[25] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[26] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[27] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[28] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[29] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[2] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[30] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[31] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[3] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[4] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[5] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[6] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[7] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[8] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[9] ;
  wire [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ;
  wire [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ;
  wire Metrics_Cnt_Reset_Final__0;
  wire [15:0]Q;
  wire [3:0]S;
  wire accumulate;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire [0:0]out;
  wire p_in_d1_cdc_from_reg;
  wire p_in_d1_cdc_from_reg0;
  wire [0:0]\s_level_out_bus_d4_reg[2] ;

  FDRE \GEN_MUX_N_CNT.Add_in_Valid_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Add_in_Valid),
        .Q(\GEN_MUX_N_CNT.Add_in_Valid_reg_n_0 ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[10]),
        .Q(Q[10]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[11]),
        .Q(Q[11]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[12]),
        .Q(Q[12]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[13]),
        .Q(Q[13]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[14]),
        .Q(Q[14]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[15]),
        .Q(Q[15]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[16]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[16] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[17]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[17] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[18]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[18] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[19]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[19] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[20]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[20] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[21]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[21] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[22]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[22] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[23]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[23] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[24]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[24] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[25]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[25] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[26]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[26] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[27]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[27] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[28]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[28] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[29]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[29] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[2]),
        .Q(Q[2]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[30]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[30] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[31]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg_n_0_[31] ),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[3]),
        .Q(Q[3]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[4]),
        .Q(Q[4]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[5]),
        .Q(Q[5]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[6]),
        .Q(Q[6]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[7]),
        .Q(Q[7]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[8]),
        .Q(Q[8]),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.Add_in_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(D[9]),
        .Q(Q[9]),
        .R(core_aresetn_0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_acc_n_incr \GEN_MUX_N_CNT.acc_n_incr_inst 
       (.DI(DI),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] (\GEN_METRIC_0.Range_Reg_0_CDC_reg[15] ),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] (\GEN_METRIC_0.Range_Reg_0_CDC_reg[30] ),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 (\GEN_METRIC_0.Range_Reg_0_CDC_reg[30]_0 ),
        .\GEN_MUX_N_CNT.Add_in_Valid_reg (\GEN_MUX_N_CNT.Add_in_Valid_reg_n_0 ),
        .\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] ({\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[31] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[30] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[29] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[28] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[27] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[26] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[25] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[24] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[23] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[22] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[21] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[20] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[19] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[18] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[17] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[16] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[15] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[14] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[13] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[12] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[11] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[10] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[9] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[8] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[7] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[6] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[5] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[4] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[3] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[2] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[1] ,\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[0] }),
        .\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] (\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ),
        .\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] (\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ),
        .Metrics_Cnt_Reset_Final__0(Metrics_Cnt_Reset_Final__0),
        .Q({\GEN_MUX_N_CNT.Add_in_reg_n_0_[31] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[30] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[29] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[28] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[27] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[26] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[25] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[24] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[23] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[22] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[21] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[20] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[19] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[18] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[17] ,\GEN_MUX_N_CNT.Add_in_reg_n_0_[16] ,Q}),
        .S(S),
        .accumulate(accumulate),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(core_aresetn_0),
        .out(out),
        .p_in_d1_cdc_from_reg(p_in_d1_cdc_from_reg),
        .p_in_d1_cdc_from_reg0(p_in_d1_cdc_from_reg0),
        .\s_level_out_bus_d4_reg[2] (\s_level_out_bus_d4_reg[2] ));
  FDRE \GEN_MUX_N_CNT.accumulate_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] ),
        .Q(accumulate),
        .R(core_aresetn_0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[0]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[0] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[10] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[10]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[10] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[11] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[11]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[11] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[12] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[12]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[12] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[13] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[13]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[13] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[14] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[14]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[14] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[15] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[15]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[15] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[16] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[16]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[16] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[17] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[17]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[17] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[18] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[18]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[18] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[19] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[19]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[19] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[1] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[1]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[1] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[20] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[20]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[20] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[21] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[21]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[21] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[22] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[22]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[22] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[23] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[23]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[23] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[24] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[24]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[24] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[25] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[25]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[25] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[26] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[26]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[26] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[27] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[27]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[27] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[28] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[28]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[28] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[29] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[29]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[29] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[2] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[2]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[2] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[30] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[30]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[30] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[31]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[31] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[3] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[3]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[3] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[4] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[4]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[4] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[5] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[5]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[5] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[6] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[6]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[6] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[7] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[7]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[7] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[8] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[8]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[8] ),
        .R(1'b0));
  FDRE \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[9] 
       (.C(core_aclk),
        .CE(core_aresetn),
        .D(FBC_Rd_Vld_reg[9]),
        .Q(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg_n_0_[9] ),
        .R(1'b0));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_mon_fifo
   (Slot_0_Sync_Data_Valid,
    \wr_byte_cnt_d1_reg[0] ,
    Q,
    \wr_byte_cnt_d1_reg[1] ,
    \wr_byte_cnt_d1_reg[2] ,
    Write_going_on_reg,
    Write_iss_going_on_reg,
    Num_RLasts_En0,
    Num_BValids_En0,
    Mst_Rd_Idle_Cnt_En0,
    Read_Beat_Cnt_En0,
    Rtrans_Cnt_En0,
    Wtrans_Cnt_En0,
    p_40_in,
    First_Read,
    Read_going_on_reg,
    wr_latency_start,
    Wr_Add_Issue_reg,
    Wr_Idle,
    \Slv_Wr_Idle_Fifo_Wr_data_reg[31] ,
    Write_iss_going_on,
    Last_Write,
    First_Write,
    Write_Beat,
    rd_latency_start,
    Rd_Add_Issue6_out,
    slot_0_axi_aclk,
    core_aclk,
    din,
    core_aresetn_0,
    slot_0_axi_aresetn,
    core_aresetn,
    rst_int_n,
    Write_going_on,
    Write_iss_going_on_reg_0,
    Metrics_Cnt_En_Int,
    Read_Beat_Cnt_En1,
    \s_level_out_bus_d4_reg[0] ,
    \WID_Mask_CDC_reg[0] ,
    out,
    \RID_Mask_CDC_reg[0] ,
    Read_going_on,
    Wr_Lat_Start,
    Wr_Add_Issue_reg_0,
    No_Wr_Ready,
    Rd_Lat_Start,
    Rd_Add_Issue_reg,
    No_Rd_Ready_reg);
  output Slot_0_Sync_Data_Valid;
  output \wr_byte_cnt_d1_reg[0] ;
  output [9:0]Q;
  output \wr_byte_cnt_d1_reg[1] ;
  output \wr_byte_cnt_d1_reg[2] ;
  output Write_going_on_reg;
  output Write_iss_going_on_reg;
  output Num_RLasts_En0;
  output Num_BValids_En0;
  output Mst_Rd_Idle_Cnt_En0;
  output Read_Beat_Cnt_En0;
  output Rtrans_Cnt_En0;
  output Wtrans_Cnt_En0;
  output p_40_in;
  output First_Read;
  output Read_going_on_reg;
  output wr_latency_start;
  output Wr_Add_Issue_reg;
  output Wr_Idle;
  output [0:0]\Slv_Wr_Idle_Fifo_Wr_data_reg[31] ;
  output Write_iss_going_on;
  output Last_Write;
  output First_Write;
  output Write_Beat;
  output rd_latency_start;
  output Rd_Add_Issue6_out;
  input slot_0_axi_aclk;
  input core_aclk;
  input [29:0]din;
  input core_aresetn_0;
  input slot_0_axi_aresetn;
  input core_aresetn;
  input rst_int_n;
  input Write_going_on;
  input Write_iss_going_on_reg_0;
  input Metrics_Cnt_En_Int;
  input Read_Beat_Cnt_En1;
  input \s_level_out_bus_d4_reg[0] ;
  input [0:0]\WID_Mask_CDC_reg[0] ;
  input [0:0]out;
  input [0:0]\RID_Mask_CDC_reg[0] ;
  input Read_going_on;
  input Wr_Lat_Start;
  input Wr_Add_Issue_reg_0;
  input No_Wr_Ready;
  input Rd_Lat_Start;
  input Rd_Add_Issue_reg;
  input No_Rd_Ready_reg;

  wire [67:0]Fifo_Data_Out;
  wire First_Read;
  wire First_Write;
  wire Last_Write;
  wire Metrics_Cnt_En_Int;
  wire Mst_Rd_Idle_Cnt_En0;
  wire No_Rd_Ready_reg;
  wire No_Wr_Ready;
  wire Num_BValids_En0;
  wire Num_RLasts_En0;
  wire [9:0]Q;
  wire [0:0]\RID_Mask_CDC_reg[0] ;
  wire Rd_Add_Issue6_out;
  wire Rd_Add_Issue_reg;
  wire Rd_Lat_Start;
  wire Read_Beat_Cnt_En0;
  wire Read_Beat_Cnt_En1;
  wire Read_going_on;
  wire Read_going_on_reg;
  wire Rtrans_Cnt_En0;
  wire [42:0]Slot_0_Sync_Data_Out;
  wire Slot_0_Sync_Data_Valid;
  wire [0:0]\Slv_Wr_Idle_Fifo_Wr_data_reg[31] ;
  wire [0:0]\WID_Mask_CDC_reg[0] ;
  wire Wr_Add_Issue_reg;
  wire Wr_Add_Issue_reg_0;
  wire Wr_Idle;
  wire Wr_Lat_Start;
  wire Write_Beat;
  wire Write_going_on;
  wire Write_going_on_reg;
  wire Write_iss_going_on;
  wire Write_iss_going_on_reg;
  wire Write_iss_going_on_reg_0;
  wire Wtrans_Cnt_En0;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire [29:0]din;
  wire fifo_rd_en;
  wire [0:0]out;
  wire p_40_in;
  wire rd_latency_start;
  wire rst_int_n;
  wire \s_level_out_bus_d4_reg[0] ;
  wire slot_0_axi_aclk;
  wire slot_0_axi_aresetn;
  wire \wr_byte_cnt_d1_reg[0] ;
  wire \wr_byte_cnt_d1_reg[1] ;
  wire \wr_byte_cnt_d1_reg[2] ;
  wire wr_latency_start;

  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    First_Read_reg_i_1
       (.I0(Slot_0_Sync_Data_Valid),
        .I1(Slot_0_Sync_Data_Out[0]),
        .I2(Slot_0_Sync_Data_Out[1]),
        .I3(Read_going_on),
        .O(First_Read));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT4 #(
    .INIT(16'h0080)) 
    First_Write_d1_i_1
       (.I0(Slot_0_Sync_Data_Out[36]),
        .I1(Q[5]),
        .I2(Slot_0_Sync_Data_Valid),
        .I3(Write_going_on),
        .O(First_Write));
  LUT6 #(
    .INIT(64'h0808000808080808)) 
    \GEN_ARSIZE_F1.Mst_Rd_Idle_Cnt_En_i_1 
       (.I0(\s_level_out_bus_d4_reg[0] ),
        .I1(Slot_0_Sync_Data_Out[1]),
        .I2(Slot_0_Sync_Data_Out[0]),
        .I3(Q[1]),
        .I4(\RID_Mask_CDC_reg[0] ),
        .I5(out),
        .O(Mst_Rd_Idle_Cnt_En0));
  LUT6 #(
    .INIT(64'h8080008080808080)) 
    \GEN_ARSIZE_F1.Num_BValids_En_i_1 
       (.I0(\s_level_out_bus_d4_reg[0] ),
        .I1(Slot_0_Sync_Data_Out[31]),
        .I2(Slot_0_Sync_Data_Out[32]),
        .I3(Slot_0_Sync_Data_Out[35]),
        .I4(\WID_Mask_CDC_reg[0] ),
        .I5(out),
        .O(Num_BValids_En0));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \GEN_ARSIZE_F1.Num_RLasts_En_i_1 
       (.I0(Metrics_Cnt_En_Int),
        .I1(Slot_0_Sync_Data_Valid),
        .I2(Slot_0_Sync_Data_Out[1]),
        .I3(Slot_0_Sync_Data_Out[0]),
        .I4(Q[0]),
        .I5(Read_Beat_Cnt_En1),
        .O(Num_RLasts_En0));
  LUT6 #(
    .INIT(64'h8080008080808080)) 
    \GEN_ARSIZE_F1.Read_Beat_Cnt_En_i_1 
       (.I0(Slot_0_Sync_Data_Out[0]),
        .I1(Slot_0_Sync_Data_Out[1]),
        .I2(\s_level_out_bus_d4_reg[0] ),
        .I3(Q[1]),
        .I4(\RID_Mask_CDC_reg[0] ),
        .I5(out),
        .O(Read_Beat_Cnt_En0));
  LUT6 #(
    .INIT(64'h8080008080808080)) 
    \GEN_ARSIZE_F1.Rtrans_Cnt_En_i_1 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(\s_level_out_bus_d4_reg[0] ),
        .I3(Q[4]),
        .I4(\RID_Mask_CDC_reg[0] ),
        .I5(out),
        .O(Rtrans_Cnt_En0));
  LUT6 #(
    .INIT(64'h8080008080808080)) 
    \GEN_ARSIZE_F1.Wtrans_Cnt_En_i_1 
       (.I0(\s_level_out_bus_d4_reg[0] ),
        .I1(Q[7]),
        .I2(Q[8]),
        .I3(Q[9]),
        .I4(\WID_Mask_CDC_reg[0] ),
        .I5(out),
        .O(Wtrans_Cnt_En0));
  LUT4 #(
    .INIT(16'h8000)) 
    Last_Read_reg_i_1
       (.I0(Slot_0_Sync_Data_Valid),
        .I1(Slot_0_Sync_Data_Out[0]),
        .I2(Slot_0_Sync_Data_Out[1]),
        .I3(Q[0]),
        .O(p_40_in));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT4 #(
    .INIT(16'h8000)) 
    Last_Write_d1_i_1
       (.I0(Slot_0_Sync_Data_Out[36]),
        .I1(Q[5]),
        .I2(Slot_0_Sync_Data_Valid),
        .I3(Q[6]),
        .O(Last_Write));
  LUT4 #(
    .INIT(16'h0400)) 
    Rd_Add_Issue_i_1
       (.I0(No_Rd_Ready_reg),
        .I1(Slot_0_Sync_Data_Valid),
        .I2(Rd_Lat_Start),
        .I3(Q[3]),
        .O(Rd_Add_Issue6_out));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    \Rd_Latency_Fifo_Wr_Data[32]_i_2 
       (.I0(Q[2]),
        .I1(Q[3]),
        .I2(Slot_0_Sync_Data_Valid),
        .I3(Rd_Lat_Start),
        .I4(Rd_Add_Issue_reg),
        .O(rd_latency_start));
  (* SOFT_HLUTNM = "soft_lutpair145" *) 
  LUT3 #(
    .INIT(8'h80)) 
    Read_going_on_i_3
       (.I0(Slot_0_Sync_Data_Out[1]),
        .I1(Slot_0_Sync_Data_Out[0]),
        .I2(Slot_0_Sync_Data_Valid),
        .O(Read_going_on_reg));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h8000FFFF)) 
    \Slv_Wr_Idle_Cnt_i[0]_i_1 
       (.I0(Q[6]),
        .I1(Slot_0_Sync_Data_Valid),
        .I2(Q[5]),
        .I3(Slot_0_Sync_Data_Out[36]),
        .I4(rst_int_n),
        .O(Write_iss_going_on));
  (* SOFT_HLUTNM = "soft_lutpair146" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \Slv_Wr_Idle_Cnt_i[0]_i_2 
       (.I0(Slot_0_Sync_Data_Valid),
        .I1(Q[5]),
        .I2(Slot_0_Sync_Data_Out[36]),
        .O(Wr_Idle));
  (* SOFT_HLUTNM = "soft_lutpair144" *) 
  LUT5 #(
    .INIT(32'h80000000)) 
    \Slv_Wr_Idle_Fifo_Wr_data[31]_i_1 
       (.I0(Q[6]),
        .I1(Slot_0_Sync_Data_Valid),
        .I2(Q[5]),
        .I3(Slot_0_Sync_Data_Out[36]),
        .I4(rst_int_n),
        .O(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] ));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[0]),
        .Q(Slot_0_Sync_Data_Out[0]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[1]),
        .Q(Slot_0_Sync_Data_Out[1]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[2]),
        .Q(Q[0]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[30]),
        .Q(Q[4]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[31]),
        .Q(Slot_0_Sync_Data_Out[31]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[32]),
        .Q(Slot_0_Sync_Data_Out[32]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[35] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[35]),
        .Q(Slot_0_Sync_Data_Out[35]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[36] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[36]),
        .Q(Slot_0_Sync_Data_Out[36]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[37] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[37]),
        .Q(Q[5]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[38] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[38]),
        .Q(Q[6]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[39] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[39]),
        .Q(Slot_0_Sync_Data_Out[39]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[40] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[40]),
        .Q(Slot_0_Sync_Data_Out[40]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[41] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[41]),
        .Q(Slot_0_Sync_Data_Out[41]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[42] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[42]),
        .Q(Slot_0_Sync_Data_Out[42]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[43] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[43]),
        .Q(Q[7]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[44] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[44]),
        .Q(Q[8]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[5]),
        .Q(Q[1]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[67]),
        .Q(Q[9]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[6]),
        .Q(Q[2]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[7]),
        .Q(Q[3]),
        .R(core_aresetn_0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_async_fifo \USE_MON_FIFO.async_fifo_inst 
       (.D({Fifo_Data_Out[67],Fifo_Data_Out[44:35],Fifo_Data_Out[32:30],Fifo_Data_Out[7:5],Fifo_Data_Out[2:0]}),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .din(din),
        .rd_en(fifo_rd_en),
        .slot_0_axi_aclk(slot_0_axi_aclk),
        .slot_0_axi_aresetn(slot_0_axi_aresetn));
  FDRE \USE_MON_FIFO.fifo_rd_en_reg_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(fifo_rd_en),
        .Q(Slot_0_Sync_Data_Valid),
        .R(core_aresetn_0));
  LUT3 #(
    .INIT(8'h08)) 
    Wr_Add_Issue_i_1
       (.I0(Slot_0_Sync_Data_Valid),
        .I1(Q[8]),
        .I2(No_Wr_Ready),
        .O(Wr_Add_Issue_reg));
  (* SOFT_HLUTNM = "soft_lutpair147" *) 
  LUT3 #(
    .INIT(8'h80)) 
    Write_Beat_d1_i_1
       (.I0(Slot_0_Sync_Data_Valid),
        .I1(Q[5]),
        .I2(Slot_0_Sync_Data_Out[36]),
        .O(Write_Beat));
  LUT6 #(
    .INIT(64'h08888888C8888888)) 
    Write_going_on_i_1
       (.I0(Write_going_on),
        .I1(rst_int_n),
        .I2(Slot_0_Sync_Data_Out[36]),
        .I3(Q[5]),
        .I4(Slot_0_Sync_Data_Valid),
        .I5(Q[6]),
        .O(Write_going_on_reg));
  LUT6 #(
    .INIT(64'h0C888888CC888888)) 
    Write_iss_going_on_i_1
       (.I0(Write_iss_going_on_reg_0),
        .I1(rst_int_n),
        .I2(Slot_0_Sync_Data_Out[36]),
        .I3(Q[5]),
        .I4(Slot_0_Sync_Data_Valid),
        .I5(Q[6]),
        .O(Write_iss_going_on_reg));
  LUT6 #(
    .INIT(64'h6996000000000000)) 
    \wr_byte_cnt_d1[0]_i_1 
       (.I0(Slot_0_Sync_Data_Out[41]),
        .I1(Slot_0_Sync_Data_Out[42]),
        .I2(Slot_0_Sync_Data_Out[39]),
        .I3(Slot_0_Sync_Data_Out[40]),
        .I4(Slot_0_Sync_Data_Valid),
        .I5(rst_int_n),
        .O(\wr_byte_cnt_d1_reg[0] ));
  LUT6 #(
    .INIT(64'h7EE8000000000000)) 
    \wr_byte_cnt_d1[1]_i_1 
       (.I0(Slot_0_Sync_Data_Out[42]),
        .I1(Slot_0_Sync_Data_Out[39]),
        .I2(Slot_0_Sync_Data_Out[40]),
        .I3(Slot_0_Sync_Data_Out[41]),
        .I4(Slot_0_Sync_Data_Valid),
        .I5(rst_int_n),
        .O(\wr_byte_cnt_d1_reg[1] ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \wr_byte_cnt_d1[2]_i_1 
       (.I0(Slot_0_Sync_Data_Out[40]),
        .I1(Slot_0_Sync_Data_Out[39]),
        .I2(Slot_0_Sync_Data_Out[41]),
        .I3(Slot_0_Sync_Data_Out[42]),
        .I4(Slot_0_Sync_Data_Valid),
        .I5(rst_int_n),
        .O(\wr_byte_cnt_d1_reg[2] ));
  LUT5 #(
    .INIT(32'h80FF8000)) 
    wr_latency_start_d1_i_1
       (.I0(Q[8]),
        .I1(Slot_0_Sync_Data_Valid),
        .I2(Q[7]),
        .I3(Wr_Lat_Start),
        .I4(Wr_Add_Issue_reg_0),
        .O(wr_latency_start));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_mon_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_mon_fifo__parameterized0
   (Ext_Event_going_on_reg,
    Ext_Event_Valid_d1_reg,
    Ext_Event_d1_reg,
    ext_clk_0,
    core_aclk,
    UNCONN_IN,
    core_aresetn_0,
    Ext_Event_going_on,
    rst_int_n,
    ext_rstn_0,
    core_aresetn);
  output Ext_Event_going_on_reg;
  output Ext_Event_Valid_d1_reg;
  output Ext_Event_d1_reg;
  input ext_clk_0;
  input core_aclk;
  input [2:0]UNCONN_IN;
  input core_aresetn_0;
  input Ext_Event_going_on;
  input rst_int_n;
  input ext_rstn_0;
  input core_aresetn;

  wire [2:1]Ext_Event0_Sync_Data_Out;
  wire Ext_Event0_Sync_Data_Valid;
  wire Ext_Event_Valid_d1_reg;
  wire Ext_Event_d1_reg;
  wire Ext_Event_going_on;
  wire Ext_Event_going_on_reg;
  wire [2:0]Fifo_Data_Out;
  wire [2:0]UNCONN_IN;
  wire \USE_MON_FIFO.Fifo_Data_Out_Reg_reg_n_0_[0] ;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire ext_clk_0;
  wire ext_rstn_0;
  wire fifo_rd_en;
  wire rst_int_n;

  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT2 #(
    .INIT(4'h8)) 
    Ext_Event_Valid_d1_i_1
       (.I0(Ext_Event0_Sync_Data_Valid),
        .I1(rst_int_n),
        .O(Ext_Event_Valid_d1_reg));
  LUT2 #(
    .INIT(4'h8)) 
    Ext_Event_d1_i_1
       (.I0(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg_n_0_[0] ),
        .I1(rst_int_n),
        .O(Ext_Event_d1_reg));
  (* SOFT_HLUTNM = "soft_lutpair133" *) 
  LUT5 #(
    .INIT(32'h00E0A0A0)) 
    Ext_Event_going_on_i_1
       (.I0(Ext_Event_going_on),
        .I1(Ext_Event0_Sync_Data_Out[2]),
        .I2(rst_int_n),
        .I3(Ext_Event0_Sync_Data_Out[1]),
        .I4(Ext_Event0_Sync_Data_Valid),
        .O(Ext_Event_going_on_reg));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[0]),
        .Q(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg_n_0_[0] ),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[1]),
        .Q(Ext_Event0_Sync_Data_Out[1]),
        .R(core_aresetn_0));
  FDRE \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(Fifo_Data_Out[2]),
        .Q(Ext_Event0_Sync_Data_Out[2]),
        .R(core_aresetn_0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_async_fifo__parameterized0 \USE_MON_FIFO.async_fifo_inst 
       (.D(Fifo_Data_Out),
        .UNCONN_IN(UNCONN_IN),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .ext_clk_0(ext_clk_0),
        .ext_rstn_0(ext_rstn_0),
        .rd_en(fifo_rd_en));
  FDRE \USE_MON_FIFO.fifo_rd_en_reg_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(fifo_rd_en),
        .Q(Ext_Event0_Sync_Data_Valid),
        .R(core_aresetn_0));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_register_module
   (out,
    s_out_d5_reg,
    s_out_d6_reg,
    \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ,
    s_out_d1_cdc_to_reg,
    s_out_d5_reg_0,
    s_out_d6_reg_0,
    SR,
    D,
    Wr_Lat_Start,
    Wr_Lat_End,
    Rd_Lat_Start,
    \IP2Bus_Data_sampled_reg[31] ,
    Lat_Sample_Reg_Rd_En_d3,
    Global_Intr_En,
    \s_level_out_bus_d1_cdc_to_reg[2] ,
    rvalid_reg,
    \Accum_i_reg[15] ,
    Q,
    Read_Latency_One,
    p_2_out0_out,
    rd_latency_end,
    rid_match_reg_reg,
    Rd_Latency_Fifo_Rd_En_reg,
    \Rd_Latency_Fifo_Wr_Data_reg[32] ,
    Rd_Latency_Fifo_Wr_En_reg,
    wr_latency_end,
    p_2_out3_out,
    awid_match_d1_reg,
    S,
    \IP2Bus_Data_reg[15]_0 ,
    DI,
    Incr_by_1_reg,
    Incr_by_1_reg_0,
    Add_in_Valid,
    \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ,
    \GEN_MUX_N_CNT.accumulate_reg ,
    \GEN_MUX_N_CNT.Add_in_reg[2] ,
    \GEN_MUX_N_CNT.Add_in_reg[0] ,
    \GEN_MUX_N_CNT.Add_in_reg[0]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[2]_0 ,
    \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] ,
    \GEN_MUX_N_CNT.Add_in_reg[31] ,
    \GEN_MUX_N_CNT.Add_in_reg[2]_1 ,
    \GEN_MUX_N_CNT.Add_in_reg[1] ,
    \GEN_MUX_N_CNT.Add_in_reg[3] ,
    \GEN_MUX_N_CNT.Add_in_reg[4] ,
    \GEN_MUX_N_CNT.Add_in_reg[5] ,
    \GEN_MUX_N_CNT.Add_in_reg[6] ,
    \GEN_MUX_N_CNT.Add_in_reg[7] ,
    \GEN_MUX_N_CNT.Add_in_reg[8] ,
    \GEN_MUX_N_CNT.Add_in_reg[9] ,
    \GEN_MUX_N_CNT.Add_in_reg[10] ,
    \GEN_MUX_N_CNT.Add_in_reg[11] ,
    \GEN_MUX_N_CNT.Add_in_reg[12] ,
    \GEN_MUX_N_CNT.Add_in_reg[13] ,
    \GEN_MUX_N_CNT.Add_in_reg[14] ,
    \GEN_MUX_N_CNT.Add_in_reg[15] ,
    \GEN_MUX_N_CNT.Add_in_reg[16] ,
    \GEN_MUX_N_CNT.Add_in_reg[17] ,
    \GEN_MUX_N_CNT.Add_in_reg[18] ,
    \GEN_MUX_N_CNT.Add_in_reg[19] ,
    \GEN_MUX_N_CNT.Add_in_reg[20] ,
    \GEN_MUX_N_CNT.Add_in_reg[21] ,
    \GEN_MUX_N_CNT.Add_in_reg[22] ,
    \GEN_MUX_N_CNT.Add_in_reg[23] ,
    \GEN_MUX_N_CNT.Add_in_reg[24] ,
    \GEN_MUX_N_CNT.Add_in_reg[25] ,
    \GEN_MUX_N_CNT.Add_in_reg[26] ,
    \GEN_MUX_N_CNT.Add_in_reg[27] ,
    \GEN_MUX_N_CNT.Add_in_reg[28] ,
    \GEN_MUX_N_CNT.Add_in_reg[29] ,
    \GEN_MUX_N_CNT.Add_in_reg[30] ,
    \GEN_MUX_N_CNT.Add_in_reg[31]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[1]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[1]_1 ,
    \GEN_MUX_N_CNT.Add_in_reg[1]_2 ,
    \GEN_MUX_N_CNT.Add_in_reg[3]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[4]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[5]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[6]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[7]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[8]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[9]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[10]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[11]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[12]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[13]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[14]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[15]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[16]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[17]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[18]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[19]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[20]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[21]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[22]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[23]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[24]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[25]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[26]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[27]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[28]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[29]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[30]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[31]_1 ,
    \IP2Bus_Data_reg[31]_0 ,
    \IP2Bus_Data_sampled_reg[31]_0 ,
    core_aclk,
    Bus2IP_RdCE,
    E,
    s_axi_aclk,
    core_aresetn_0,
    s_out_re,
    p_in_d1_cdc_from_reg0,
    s_out_re_0,
    Global_Clk_Cnt_MSB_Rd_En,
    Global_Clk_Cnt_LSB_Rd_En,
    Incr_Reg_Set_Rd_En,
    Samp_Metric_Cnt_Reg_Set_Rd_En,
    Samp_Incr_Reg_Set_Rd_En,
    Metric_Cnt_Reg_Set_Rd_En,
    Control_Set_Wr_En,
    s_axi_wdata,
    Addr_3downto0_is_0xC,
    Addr_3downto0_is_0x8,
    Addr_3downto0_is_0x4,
    Metric_Sel_Reg_0_Rd_En,
    Sel_Reg_Set_Rd_En,
    p_23_in,
    Global_Clk_Cnt_Set_Rd_En,
    Event_Log_Set_Rd_En,
    \bus2ip_addr_i_reg[1] ,
    Addr_7downto4_is_0x0,
    Rng_Reg_Set_Rd_En,
    \bus2ip_addr_i_reg[1]_0 ,
    \bus2ip_addr_i_reg[3] ,
    \bus2ip_addr_i_reg[3]_0 ,
    Intr_Reg_Set_Rd_En,
    ID_Mask_Rd_En,
    Latency_ID_Rd_En,
    Control_Set_Rd_En,
    \bus2ip_addr_i_reg[6] ,
    \bus2ip_addr_i_reg[6]_0 ,
    Status_Reg_Set_Rd_En,
    Global_Intr_En_reg_0,
    Interval_Cnt_En_reg_0,
    Interval_Cnt_Ld_reg_0,
    Reset_On_Sample_Int_Lapse_reg_0,
    s_axi_rready,
    rvalid_reg_0,
    \s_level_out_bus_d4_reg[2] ,
    Sample_Interval_Cnt_Lapse,
    \s_level_out_bus_d4_reg[5] ,
    core_aresetn,
    Rd_Latency_Fifo_Empty,
    rid_match_reg,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] ,
    Last_Read_reg,
    First_Read_reg,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] ,
    ARID_reg,
    rd_latency_start,
    Read_going_on,
    Write_Beat,
    Write_going_on,
    First_Write_d1_reg,
    \GEN_MUX_N_CNT.Add_in_reg[15]_1 ,
    \GEN_ARSIZE_F1.Num_RLasts_En_reg ,
    Write_Beat_Cnt_En,
    \GEN_ARSIZE_F1.Rtrans_Cnt_En_reg ,
    Num_BValids_En,
    \dout_reg[0] ,
    Write_Latency_En,
    FSWI_Rd_Data,
    FSWI_Rd_Vld,
    FSWI_Rd_Vld_reg,
    S0_Read_Byte_Cnt_En,
    \dout_reg[0]_0 ,
    Mst_Rd_Idle_Cnt_En,
    External_Event_Cnt_En,
    \Min_Read_Latency_Int_reg[31] ,
    FBC_Rd_Vld_reg,
    \Min_Write_Latency_Int_reg[0] ,
    \Write_Latency_Int_reg[2] ,
    \dout_reg[34] ,
    FBC_Rd_Vld,
    \Min_Write_Latency_Int_reg[2] ,
    \Max_Write_Latency_Int_reg[31] ,
    \Max_Read_Latency_Int_reg[2] ,
    S0_Read_Byte_Cnt,
    FBC_Rd_Vld_reg_0,
    S0_Read_Latency,
    \Max_Read_Latency_Int_reg[31] ,
    S0_S_Null_Byte_Cnt,
    \bus2ip_addr_i_reg[9] ,
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ,
    \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ,
    \Incrementer_reg[31] ,
    \Accum_i_reg[31] ,
    write_req_reg,
    \bus2ip_addr_i_reg[5] ,
    \bus2ip_addr_i_reg[5]_0 ,
    \bus2ip_addr_i_reg[7] ,
    \bus2ip_addr_i_reg[6]_1 ,
    \Count_Out_i_reg[31] ,
    s_axi_aresetn,
    \IER_reg[12] ,
    Intr_Reg_ISR);
  output out;
  output s_out_d5_reg;
  output s_out_d6_reg;
  output \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ;
  output s_out_d1_cdc_to_reg;
  output s_out_d5_reg_0;
  output s_out_d6_reg_0;
  output [0:0]SR;
  output [8:0]D;
  output Wr_Lat_Start;
  output Wr_Lat_End;
  output Rd_Lat_Start;
  output [0:0]\IP2Bus_Data_sampled_reg[31] ;
  output Lat_Sample_Reg_Rd_En_d3;
  output Global_Intr_En;
  output [2:0]\s_level_out_bus_d1_cdc_to_reg[2] ;
  output rvalid_reg;
  output [0:0]\Accum_i_reg[15] ;
  output [2:0]Q;
  output Read_Latency_One;
  output p_2_out0_out;
  output rd_latency_end;
  output [0:0]rid_match_reg_reg;
  output Rd_Latency_Fifo_Rd_En_reg;
  output [0:0]\Rd_Latency_Fifo_Wr_Data_reg[32] ;
  output Rd_Latency_Fifo_Wr_En_reg;
  output wr_latency_end;
  output p_2_out3_out;
  output [0:0]awid_match_d1_reg;
  output [3:0]S;
  output [15:0]\IP2Bus_Data_reg[15]_0 ;
  output [3:0]DI;
  output [3:0]Incr_by_1_reg;
  output [3:0]Incr_by_1_reg_0;
  output Add_in_Valid;
  output [0:0]\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ;
  output \GEN_MUX_N_CNT.accumulate_reg ;
  output [1:0]\GEN_MUX_N_CNT.Add_in_reg[2] ;
  output \GEN_MUX_N_CNT.Add_in_reg[0] ;
  output \GEN_MUX_N_CNT.Add_in_reg[0]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[2]_0 ;
  output \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] ;
  output \GEN_MUX_N_CNT.Add_in_reg[31] ;
  output \GEN_MUX_N_CNT.Add_in_reg[2]_1 ;
  output \GEN_MUX_N_CNT.Add_in_reg[1] ;
  output \GEN_MUX_N_CNT.Add_in_reg[3] ;
  output \GEN_MUX_N_CNT.Add_in_reg[4] ;
  output \GEN_MUX_N_CNT.Add_in_reg[5] ;
  output \GEN_MUX_N_CNT.Add_in_reg[6] ;
  output \GEN_MUX_N_CNT.Add_in_reg[7] ;
  output \GEN_MUX_N_CNT.Add_in_reg[8] ;
  output \GEN_MUX_N_CNT.Add_in_reg[9] ;
  output \GEN_MUX_N_CNT.Add_in_reg[10] ;
  output \GEN_MUX_N_CNT.Add_in_reg[11] ;
  output \GEN_MUX_N_CNT.Add_in_reg[12] ;
  output \GEN_MUX_N_CNT.Add_in_reg[13] ;
  output \GEN_MUX_N_CNT.Add_in_reg[14] ;
  output \GEN_MUX_N_CNT.Add_in_reg[15] ;
  output \GEN_MUX_N_CNT.Add_in_reg[16] ;
  output \GEN_MUX_N_CNT.Add_in_reg[17] ;
  output \GEN_MUX_N_CNT.Add_in_reg[18] ;
  output \GEN_MUX_N_CNT.Add_in_reg[19] ;
  output \GEN_MUX_N_CNT.Add_in_reg[20] ;
  output \GEN_MUX_N_CNT.Add_in_reg[21] ;
  output \GEN_MUX_N_CNT.Add_in_reg[22] ;
  output \GEN_MUX_N_CNT.Add_in_reg[23] ;
  output \GEN_MUX_N_CNT.Add_in_reg[24] ;
  output \GEN_MUX_N_CNT.Add_in_reg[25] ;
  output \GEN_MUX_N_CNT.Add_in_reg[26] ;
  output \GEN_MUX_N_CNT.Add_in_reg[27] ;
  output \GEN_MUX_N_CNT.Add_in_reg[28] ;
  output \GEN_MUX_N_CNT.Add_in_reg[29] ;
  output \GEN_MUX_N_CNT.Add_in_reg[30] ;
  output \GEN_MUX_N_CNT.Add_in_reg[31]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[1]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[1]_1 ;
  output \GEN_MUX_N_CNT.Add_in_reg[1]_2 ;
  output \GEN_MUX_N_CNT.Add_in_reg[3]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[4]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[5]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[6]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[7]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[8]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[9]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[10]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[11]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[12]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[13]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[14]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[15]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[16]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[17]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[18]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[19]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[20]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[21]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[22]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[23]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[24]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[25]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[26]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[27]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[28]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[29]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[30]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[31]_1 ;
  output [31:0]\IP2Bus_Data_reg[31]_0 ;
  output [31:0]\IP2Bus_Data_sampled_reg[31]_0 ;
  input core_aclk;
  input Bus2IP_RdCE;
  input [0:0]E;
  input s_axi_aclk;
  input core_aresetn_0;
  input s_out_re;
  input p_in_d1_cdc_from_reg0;
  input s_out_re_0;
  input Global_Clk_Cnt_MSB_Rd_En;
  input Global_Clk_Cnt_LSB_Rd_En;
  input Incr_Reg_Set_Rd_En;
  input Samp_Metric_Cnt_Reg_Set_Rd_En;
  input Samp_Incr_Reg_Set_Rd_En;
  input Metric_Cnt_Reg_Set_Rd_En;
  input Control_Set_Wr_En;
  input [31:0]s_axi_wdata;
  input Addr_3downto0_is_0xC;
  input Addr_3downto0_is_0x8;
  input Addr_3downto0_is_0x4;
  input Metric_Sel_Reg_0_Rd_En;
  input Sel_Reg_Set_Rd_En;
  input p_23_in;
  input Global_Clk_Cnt_Set_Rd_En;
  input Event_Log_Set_Rd_En;
  input \bus2ip_addr_i_reg[1] ;
  input Addr_7downto4_is_0x0;
  input Rng_Reg_Set_Rd_En;
  input \bus2ip_addr_i_reg[1]_0 ;
  input \bus2ip_addr_i_reg[3] ;
  input \bus2ip_addr_i_reg[3]_0 ;
  input Intr_Reg_Set_Rd_En;
  input ID_Mask_Rd_En;
  input Latency_ID_Rd_En;
  input Control_Set_Rd_En;
  input \bus2ip_addr_i_reg[6] ;
  input \bus2ip_addr_i_reg[6]_0 ;
  input Status_Reg_Set_Rd_En;
  input Global_Intr_En_reg_0;
  input Interval_Cnt_En_reg_0;
  input Interval_Cnt_Ld_reg_0;
  input Reset_On_Sample_Int_Lapse_reg_0;
  input s_axi_rready;
  input rvalid_reg_0;
  input [0:0]\s_level_out_bus_d4_reg[2] ;
  input Sample_Interval_Cnt_Lapse;
  input [1:0]\s_level_out_bus_d4_reg[5] ;
  input core_aresetn;
  input Rd_Latency_Fifo_Empty;
  input rid_match_reg;
  input [4:0]\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] ;
  input Last_Read_reg;
  input First_Read_reg;
  input \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] ;
  input ARID_reg;
  input rd_latency_start;
  input Read_going_on;
  input Write_Beat;
  input Write_going_on;
  input First_Write_d1_reg;
  input [15:0]\GEN_MUX_N_CNT.Add_in_reg[15]_1 ;
  input \GEN_ARSIZE_F1.Num_RLasts_En_reg ;
  input Write_Beat_Cnt_En;
  input \GEN_ARSIZE_F1.Rtrans_Cnt_En_reg ;
  input Num_BValids_En;
  input \dout_reg[0] ;
  input Write_Latency_En;
  input FSWI_Rd_Data;
  input FSWI_Rd_Vld;
  input FSWI_Rd_Vld_reg;
  input S0_Read_Byte_Cnt_En;
  input [0:0]\dout_reg[0]_0 ;
  input Mst_Rd_Idle_Cnt_En;
  input External_Event_Cnt_En;
  input [30:0]\Min_Read_Latency_Int_reg[31] ;
  input FBC_Rd_Vld_reg;
  input [0:0]\Min_Write_Latency_Int_reg[0] ;
  input [1:0]\Write_Latency_Int_reg[2] ;
  input [2:0]\dout_reg[34] ;
  input FBC_Rd_Vld;
  input \Min_Write_Latency_Int_reg[2] ;
  input [31:0]\Max_Write_Latency_Int_reg[31] ;
  input \Max_Read_Latency_Int_reg[2] ;
  input [0:0]S0_Read_Byte_Cnt;
  input FBC_Rd_Vld_reg_0;
  input [31:0]S0_Read_Latency;
  input [30:0]\Max_Read_Latency_Int_reg[31] ;
  input [0:0]S0_S_Null_Byte_Cnt;
  input [7:0]\bus2ip_addr_i_reg[9] ;
  input [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ;
  input [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ;
  input [31:0]\Incrementer_reg[31] ;
  input [31:0]\Accum_i_reg[31] ;
  input [0:0]write_req_reg;
  input [0:0]\bus2ip_addr_i_reg[5] ;
  input [0:0]\bus2ip_addr_i_reg[5]_0 ;
  input [0:0]\bus2ip_addr_i_reg[7] ;
  input [0:0]\bus2ip_addr_i_reg[6]_1 ;
  input [31:0]\Count_Out_i_reg[31] ;
  input s_axi_aresetn;
  input [11:0]\IER_reg[12] ;
  input [12:0]Intr_Reg_ISR;

  wire ARID_reg;
  wire [0:0]\Accum_i_reg[15] ;
  wire [31:0]\Accum_i_reg[31] ;
  wire Add_in_Valid;
  wire Addr_3downto0_is_0x4;
  wire Addr_3downto0_is_0x8;
  wire Addr_3downto0_is_0xC;
  wire Addr_7downto4_is_0x0;
  wire Bus2IP_RdCE;
  wire Control_Set_Rd_En;
  wire Control_Set_Wr_En;
  wire [31:0]\Count_Out_i_reg[31] ;
  wire [8:0]D;
  wire [3:0]DI;
  wire [0:0]E;
  wire Event_Log_Set_Rd_En;
  wire External_Event_Cnt_En;
  wire FBC_Rd_Vld;
  wire FBC_Rd_Vld_reg;
  wire FBC_Rd_Vld_reg_0;
  wire FSWI_Rd_Data;
  wire FSWI_Rd_Vld;
  wire FSWI_Rd_Vld_reg;
  wire First_Read_reg;
  wire First_Write_d1_reg;
  wire \GEN_ARSIZE_F1.Num_RLasts_En_reg ;
  wire \GEN_ARSIZE_F1.Rtrans_Cnt_En_reg ;
  wire \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_34_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_36_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_37_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_38_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_39_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_40_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_41_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_42_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_43_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_44_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_45_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_46_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_47_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_48_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_49_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_50_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_51_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_52_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_53_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_54_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_55_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_56_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_57_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_58_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_59_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_60_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_61_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_62_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_63_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_64_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_65_n_0 ;
  wire \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_66_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_10_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_11_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_13_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_4_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_5_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_6_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_7_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_8_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[0]_i_9_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[2]_i_10_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[2]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[2]_i_5_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[2]_i_8_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[2]_i_9_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_10_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_11_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_12_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_14_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_3_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_4_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_5_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_6_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_i_9_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[0] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[0]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[10] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[10]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[11] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[11]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[12] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[12]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[13] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[13]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[14] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[14]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[15] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[15]_0 ;
  wire [15:0]\GEN_MUX_N_CNT.Add_in_reg[15]_1 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[16] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[16]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[17] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[17]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[18] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[18]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[19] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[19]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[1] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[1]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[1]_1 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[1]_2 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[20] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[20]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[21] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[21]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[22] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[22]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[23] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[23]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[24] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[24]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[25] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[25]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[26] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[26]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[27] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[27]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[28] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[28]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[29] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[29]_0 ;
  wire [1:0]\GEN_MUX_N_CNT.Add_in_reg[2] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[2]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[2]_1 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[30] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[30]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[31] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[31]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[31]_1 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[3] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[3]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[4] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[4]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[5] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[5]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[6] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[6]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[7] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[7]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[8] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[8]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[9] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[9]_0 ;
  wire \GEN_MUX_N_CNT.accumulate_reg ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_3_n_0 ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_4_n_0 ;
  wire [0:0]\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] ;
  wire [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] ;
  wire [31:0]\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] ;
  wire Global_Clk_Cnt_LSB_Rd_En;
  wire Global_Clk_Cnt_MSB_Rd_En;
  wire Global_Clk_Cnt_Set_Rd_En;
  wire Global_Intr_En;
  wire Global_Intr_En_reg_0;
  wire ID_Mask_Rd_En;
  wire [11:0]\IER_reg[12] ;
  wire \IP2Bus_Data[12]_i_7_n_0 ;
  wire \IP2Bus_Data[31]_i_15_n_0 ;
  wire \IP2Bus_Data[31]_i_16_n_0 ;
  wire [15:0]\IP2Bus_Data_reg[15]_0 ;
  wire [31:0]\IP2Bus_Data_reg[31]_0 ;
  wire [0:0]\IP2Bus_Data_sampled_reg[31] ;
  wire [31:0]\IP2Bus_Data_sampled_reg[31]_0 ;
  wire Incr_Reg_Set_Rd_En;
  wire [3:0]Incr_by_1_reg;
  wire [3:0]Incr_by_1_reg_0;
  wire [31:0]\Incrementer_reg[31] ;
  wire Interval_Cnt_En_reg_0;
  wire Interval_Cnt_Ld_reg_0;
  wire [12:0]Intr_Reg_ISR;
  wire Intr_Reg_Set_Rd_En;
  wire Last_Read_reg;
  wire Lat_Addr_3downto0_is_0x4;
  wire Lat_Addr_3downto0_is_0x8;
  wire Lat_Addr_3downto0_is_0xC;
  wire Lat_Addr_7downto4_is_0x0;
  wire [7:0]Lat_Addr_9downto2_CDC;
  wire Lat_Control_Set_Rd_En;
  wire Lat_Enlog_Reg_Set_Rd_En;
  wire Lat_Event_Log_Set_Rd_En;
  wire [31:0]Lat_Global_Clk_Cnt_LSB_CDCR;
  wire Lat_Global_Clk_Cnt_LSB_Rd_En;
  wire Lat_Global_Clk_Cnt_MSB_Rd_En;
  wire Lat_Global_Clk_Cnt_Set_Rd_En;
  wire Lat_ID_Mask_Rd_En;
  wire Lat_Incr_Reg_Set_Rd_En;
  wire Lat_Intr_Reg_GIE_Rd_En;
  wire Lat_Intr_Reg_IER_Rd_En;
  wire Lat_Intr_Reg_ISR_Rd_En;
  wire Lat_Intr_Reg_Set_Rd_En;
  wire Lat_Latency_ID_Rd_En;
  wire Lat_Metric_Cnt_Reg_Set_Rd_En;
  wire Lat_Metric_Sel_Reg_0_Rd_En;
  wire Lat_Rng_Reg_Set_Rd_En;
  wire Lat_Samp_Incr_Reg_Set_Rd_En;
  wire Lat_Samp_Metric_Cnt_Reg_Set_Rd_En;
  wire Lat_Sample_Interval_Rd_En;
  wire Lat_Sample_Reg_Rd_En;
  wire Lat_Sample_Reg_Rd_En_d3;
  wire Lat_Sel_Reg_Set_Rd_En;
  wire Lat_Status_Reg_FOC_Rd_En;
  wire Lat_Status_Reg_Set_Rd_En;
  wire Lat_Status_Reg_WIF_Rd_En;
  wire Latency_ID_Rd_En;
  wire \Latency_RID_CDC_reg_n_0_[0] ;
  wire \Latency_RID_CDC_reg_n_0_[10] ;
  wire \Latency_RID_CDC_reg_n_0_[11] ;
  wire \Latency_RID_CDC_reg_n_0_[12] ;
  wire \Latency_RID_CDC_reg_n_0_[13] ;
  wire \Latency_RID_CDC_reg_n_0_[14] ;
  wire \Latency_RID_CDC_reg_n_0_[15] ;
  wire \Latency_RID_CDC_reg_n_0_[1] ;
  wire \Latency_RID_CDC_reg_n_0_[2] ;
  wire \Latency_RID_CDC_reg_n_0_[3] ;
  wire \Latency_RID_CDC_reg_n_0_[4] ;
  wire \Latency_RID_CDC_reg_n_0_[5] ;
  wire \Latency_RID_CDC_reg_n_0_[6] ;
  wire \Latency_RID_CDC_reg_n_0_[7] ;
  wire \Latency_RID_CDC_reg_n_0_[8] ;
  wire \Latency_RID_CDC_reg_n_0_[9] ;
  wire \Latency_WID_CDC_reg_n_0_[0] ;
  wire \Latency_WID_CDC_reg_n_0_[10] ;
  wire \Latency_WID_CDC_reg_n_0_[11] ;
  wire \Latency_WID_CDC_reg_n_0_[12] ;
  wire \Latency_WID_CDC_reg_n_0_[13] ;
  wire \Latency_WID_CDC_reg_n_0_[14] ;
  wire \Latency_WID_CDC_reg_n_0_[15] ;
  wire \Latency_WID_CDC_reg_n_0_[1] ;
  wire \Latency_WID_CDC_reg_n_0_[2] ;
  wire \Latency_WID_CDC_reg_n_0_[3] ;
  wire \Latency_WID_CDC_reg_n_0_[4] ;
  wire \Latency_WID_CDC_reg_n_0_[5] ;
  wire \Latency_WID_CDC_reg_n_0_[6] ;
  wire \Latency_WID_CDC_reg_n_0_[7] ;
  wire \Latency_WID_CDC_reg_n_0_[8] ;
  wire \Latency_WID_CDC_reg_n_0_[9] ;
  wire \Max_Read_Latency_Int_reg[2] ;
  wire [30:0]\Max_Read_Latency_Int_reg[31] ;
  wire [31:0]\Max_Write_Latency_Int_reg[31] ;
  wire Metric_Cnt_Reg_Set_Rd_En;
  wire [7:1]Metric_Sel_0;
  wire Metric_Sel_Reg_0_Rd_En;
  wire [31:0]Metric_ram_Out_Reg_CDCR;
  wire [30:0]\Min_Read_Latency_Int_reg[31] ;
  wire [0:0]\Min_Write_Latency_Int_reg[0] ;
  wire \Min_Write_Latency_Int_reg[2] ;
  wire Mst_Rd_Idle_Cnt_En;
  wire Num_BValids_En;
  wire [2:0]Q;
  wire \RID_Mask_CDC_reg_n_0_[10] ;
  wire \RID_Mask_CDC_reg_n_0_[11] ;
  wire \RID_Mask_CDC_reg_n_0_[12] ;
  wire \RID_Mask_CDC_reg_n_0_[13] ;
  wire \RID_Mask_CDC_reg_n_0_[14] ;
  wire \RID_Mask_CDC_reg_n_0_[15] ;
  wire \RID_Mask_CDC_reg_n_0_[1] ;
  wire \RID_Mask_CDC_reg_n_0_[2] ;
  wire \RID_Mask_CDC_reg_n_0_[3] ;
  wire \RID_Mask_CDC_reg_n_0_[4] ;
  wire \RID_Mask_CDC_reg_n_0_[5] ;
  wire \RID_Mask_CDC_reg_n_0_[6] ;
  wire \RID_Mask_CDC_reg_n_0_[7] ;
  wire \RID_Mask_CDC_reg_n_0_[8] ;
  wire \RID_Mask_CDC_reg_n_0_[9] ;
  wire RValid;
  wire [31:16]Range_Reg_0;
  wire Rd_Lat_End;
  wire Rd_Lat_Start;
  wire Rd_Latency_Fifo_Empty;
  wire Rd_Latency_Fifo_Rd_En_reg;
  wire [0:0]\Rd_Latency_Fifo_Wr_Data_reg[32] ;
  wire Rd_Latency_Fifo_Wr_En_reg;
  wire Read_Latency_One;
  wire Read_Latency_One_i_3_n_0;
  wire Read_going_on;
  wire Reset_On_Sample_Int_Lapse_reg_0;
  wire Rng_Reg_Set_Rd_En;
  wire [3:0]S;
  wire [0:0]S0_Read_Byte_Cnt;
  wire S0_Read_Byte_Cnt_En;
  wire [31:0]S0_Read_Latency;
  wire [0:0]S0_S_Null_Byte_Cnt;
  wire [0:0]SR;
  wire Samp_Incr_Reg_Set_Rd_En;
  wire Samp_Metric_Cnt_Reg_Set_Rd_En;
  wire Sample_Interval_Cnt_Lapse;
  wire Sample_Reg_Rd_First;
  wire [31:0]Sample_Time_Diff;
  wire [31:0]Sample_Time_Diff_Reg;
  wire Sel_Reg_Set_Rd_En;
  wire Status_Reg_Set_Rd_En;
  wire \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] ;
  wire [4:0]\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] ;
  wire \WID_Mask_CDC_reg_n_0_[10] ;
  wire \WID_Mask_CDC_reg_n_0_[11] ;
  wire \WID_Mask_CDC_reg_n_0_[12] ;
  wire \WID_Mask_CDC_reg_n_0_[13] ;
  wire \WID_Mask_CDC_reg_n_0_[14] ;
  wire \WID_Mask_CDC_reg_n_0_[15] ;
  wire \WID_Mask_CDC_reg_n_0_[1] ;
  wire \WID_Mask_CDC_reg_n_0_[2] ;
  wire \WID_Mask_CDC_reg_n_0_[3] ;
  wire \WID_Mask_CDC_reg_n_0_[4] ;
  wire \WID_Mask_CDC_reg_n_0_[5] ;
  wire \WID_Mask_CDC_reg_n_0_[6] ;
  wire \WID_Mask_CDC_reg_n_0_[7] ;
  wire \WID_Mask_CDC_reg_n_0_[8] ;
  wire \WID_Mask_CDC_reg_n_0_[9] ;
  wire Wr_Lat_End;
  wire Wr_Lat_Start;
  wire Write_Beat;
  wire Write_Beat_Cnt_En;
  wire Write_Latency_En;
  wire [1:0]\Write_Latency_Int_reg[2] ;
  wire Write_going_on;
  wire [0:0]awid_match_d1_reg;
  wire \bus2ip_addr_i_reg[1] ;
  wire \bus2ip_addr_i_reg[1]_0 ;
  wire \bus2ip_addr_i_reg[3] ;
  wire \bus2ip_addr_i_reg[3]_0 ;
  wire [0:0]\bus2ip_addr_i_reg[5] ;
  wire [0:0]\bus2ip_addr_i_reg[5]_0 ;
  wire \bus2ip_addr_i_reg[6] ;
  wire \bus2ip_addr_i_reg[6]_0 ;
  wire [0:0]\bus2ip_addr_i_reg[6]_1 ;
  wire [0:0]\bus2ip_addr_i_reg[7] ;
  wire [7:0]\bus2ip_addr_i_reg[9] ;
  wire cdc_sync_inst2_n_36;
  wire cdc_sync_inst2_n_37;
  wire cdc_sync_inst2_n_4;
  wire cdc_sync_inst2_n_5;
  wire cdc_sync_inst2_n_6;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire \dout_reg[0] ;
  wire [0:0]\dout_reg[0]_0 ;
  wire [2:0]\dout_reg[34] ;
  wire [31:0]metric_ram_data_in__0;
  wire out;
  wire [31:2]p_1_in;
  wire p_23_in;
  wire p_2_out0_out;
  wire p_2_out3_out;
  wire p_in_d1_cdc_from_reg0;
  wire rd_latency_end;
  wire rd_latency_start;
  wire rid_match_reg;
  wire [0:0]rid_match_reg_reg;
  wire rvalid_reg;
  wire rvalid_reg_0;
  wire s_axi_aclk;
  wire s_axi_aresetn;
  wire s_axi_rready;
  wire [31:0]s_axi_wdata;
  wire [2:0]\s_level_out_bus_d1_cdc_to_reg[2] ;
  wire [0:0]\s_level_out_bus_d4_reg[2] ;
  wire [1:0]\s_level_out_bus_d4_reg[5] ;
  wire s_out_d1_cdc_to_reg;
  wire s_out_d5_reg;
  wire s_out_d5_reg_0;
  wire s_out_d6_reg;
  wire s_out_d6_reg_0;
  wire s_out_re;
  wire s_out_re_0;
  wire [31:0]sync_eventlog_cur_cnt;
  wire wr_latency_end;
  wire [0:0]write_req_reg;
  wire [15:14]\NLW_GEN_METRIC_RAM.Metric_ram_CDCR_reg_DOBDO_UNCONNECTED ;
  wire [1:0]\NLW_GEN_METRIC_RAM.Metric_ram_CDCR_reg_DOPBDOP_UNCONNECTED ;

  FDRE En_Id_Based_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[3]),
        .Q(D[5]),
        .R(SR));
  FDRE Event_Log_En_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[8]),
        .Q(D[2]),
        .R(SR));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[0] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [0]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[0]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[10] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [10]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[10]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[11] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [11]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[11]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[12] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [12]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[12]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[13] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [13]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[13]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[14] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [14]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[14]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[15] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [15]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[15]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[16] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [16]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[16]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[17] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [17]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[17]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[18] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [18]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[18]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[19] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [19]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[19]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[1] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [1]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[1]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[20] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [20]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[20]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[21] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [21]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[21]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[22] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [22]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[22]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[23] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [23]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[23]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[24] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [24]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[24]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[25] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [25]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[25]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[26] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [26]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[26]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[27] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [27]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[27]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[28] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [28]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[28]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[29] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [29]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[29]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[2] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [2]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[2]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[30] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [30]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[30]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [31]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[31]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[3] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [3]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[3]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[4] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [4]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[4]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[5] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [5]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[5]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[6] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [6]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[6]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[7] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [7]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[7]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[8] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [8]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[8]),
        .R(core_aresetn_0));
  FDRE \GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[9] 
       (.C(core_aclk),
        .CE(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .D(\Count_Out_i_reg[31] [9]),
        .Q(Lat_Global_Clk_Cnt_LSB_CDCR[9]),
        .R(core_aresetn_0));
  FDRE \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[7] ),
        .D(s_axi_wdata[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[7] ),
        .D(s_axi_wdata[1]),
        .Q(Metric_Sel_0[1]),
        .R(SR));
  FDRE \GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[7] ),
        .D(s_axi_wdata[2]),
        .Q(Q[1]),
        .R(SR));
  FDRE \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[7] ),
        .D(s_axi_wdata[3]),
        .Q(Q[2]),
        .R(SR));
  FDRE \GEN_METRIC_0.Metric_Sel_0_CDC_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[7] ),
        .D(s_axi_wdata[4]),
        .Q(Metric_Sel_0[4]),
        .R(SR));
  FDRE \GEN_METRIC_0.Metric_Sel_0_CDC_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[7] ),
        .D(s_axi_wdata[5]),
        .Q(Metric_Sel_0[5]),
        .R(SR));
  FDRE \GEN_METRIC_0.Metric_Sel_0_CDC_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[7] ),
        .D(s_axi_wdata[6]),
        .Q(Metric_Sel_0[6]),
        .R(SR));
  FDRE \GEN_METRIC_0.Metric_Sel_0_CDC_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[7] ),
        .D(s_axi_wdata[7]),
        .Q(Metric_Sel_0[7]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[0] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[0]),
        .Q(\IP2Bus_Data_reg[15]_0 [0]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[10] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[10]),
        .Q(\IP2Bus_Data_reg[15]_0 [10]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[11] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[11]),
        .Q(\IP2Bus_Data_reg[15]_0 [11]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[12] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[12]),
        .Q(\IP2Bus_Data_reg[15]_0 [12]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[13] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[13]),
        .Q(\IP2Bus_Data_reg[15]_0 [13]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[14] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[14]),
        .Q(\IP2Bus_Data_reg[15]_0 [14]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[15] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[15]),
        .Q(\IP2Bus_Data_reg[15]_0 [15]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[16] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[16]),
        .Q(Range_Reg_0[16]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[17] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[17]),
        .Q(Range_Reg_0[17]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[18] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[18]),
        .Q(Range_Reg_0[18]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[19] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[19]),
        .Q(Range_Reg_0[19]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[1] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[1]),
        .Q(\IP2Bus_Data_reg[15]_0 [1]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[20] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[20]),
        .Q(Range_Reg_0[20]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[21] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[21]),
        .Q(Range_Reg_0[21]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[22] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[22]),
        .Q(Range_Reg_0[22]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[23] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[23]),
        .Q(Range_Reg_0[23]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[24] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[24]),
        .Q(Range_Reg_0[24]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[25] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[25]),
        .Q(Range_Reg_0[25]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[26] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[26]),
        .Q(Range_Reg_0[26]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[27] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[27]),
        .Q(Range_Reg_0[27]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[28] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[28]),
        .Q(Range_Reg_0[28]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[29] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[29]),
        .Q(Range_Reg_0[29]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[2] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[2]),
        .Q(\IP2Bus_Data_reg[15]_0 [2]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[30] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[30]),
        .Q(Range_Reg_0[30]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[31] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[31]),
        .Q(Range_Reg_0[31]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[3] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[3]),
        .Q(\IP2Bus_Data_reg[15]_0 [3]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[4] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[4]),
        .Q(\IP2Bus_Data_reg[15]_0 [4]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[5] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[5]),
        .Q(\IP2Bus_Data_reg[15]_0 [5]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[6] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[6]),
        .Q(\IP2Bus_Data_reg[15]_0 [6]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[7] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[7]),
        .Q(\IP2Bus_Data_reg[15]_0 [7]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[8] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[8]),
        .Q(\IP2Bus_Data_reg[15]_0 [8]),
        .R(SR));
  FDRE \GEN_METRIC_0.Range_Reg_0_CDC_reg[9] 
       (.C(s_axi_aclk),
        .CE(write_req_reg),
        .D(s_axi_wdata[9]),
        .Q(\IP2Bus_Data_reg[15]_0 [9]),
        .R(SR));
  (* CLOCK_DOMAINS = "COMMON" *) 
  (* \MEM.PORTA.DATA_BIT_LAYOUT  = "p2_d16" *) 
  (* \MEM.PORTB.DATA_BIT_LAYOUT  = "p0_d14" *) 
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-6 {cell *THIS*}}" *) 
  (* RTL_RAM_BITS = "8192" *) 
  (* RTL_RAM_NAME = "GEN_METRIC_RAM.Metric_ram_CDCR" *) 
  (* bram_addr_begin = "0" *) 
  (* bram_addr_end = "255" *) 
  (* bram_ext_slice_begin = "18" *) 
  (* bram_ext_slice_end = "31" *) 
  (* bram_slice_begin = "0" *) 
  (* bram_slice_end = "17" *) 
  RAMB18E1 #(
    .DOA_REG(0),
    .DOB_REG(0),
    .INIT_A(18'h00000),
    .INIT_B(18'h00000),
    .RAM_MODE("TDP"),
    .RDADDR_COLLISION_HWCONFIG("DELAYED_WRITE"),
    .READ_WIDTH_A(18),
    .READ_WIDTH_B(18),
    .RSTREG_PRIORITY_A("RSTREG"),
    .RSTREG_PRIORITY_B("RSTREG"),
    .SIM_COLLISION_CHECK("ALL"),
    .SIM_DEVICE("7SERIES"),
    .SRVAL_A(18'h00000),
    .SRVAL_B(18'h00000),
    .WRITE_MODE_A("READ_FIRST"),
    .WRITE_MODE_B("READ_FIRST"),
    .WRITE_WIDTH_A(18),
    .WRITE_WIDTH_B(18)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg 
       (.ADDRARDADDR({1'b0,1'b1,Lat_Addr_9downto2_CDC,1'b1,1'b1,1'b1,1'b1}),
        .ADDRBWRADDR({1'b1,1'b1,Lat_Addr_9downto2_CDC,1'b1,1'b1,1'b1,1'b1}),
        .CLKARDCLK(core_aclk),
        .CLKBWRCLK(core_aclk),
        .DIADI(metric_ram_data_in__0[15:0]),
        .DIBDI({1'b1,1'b1,metric_ram_data_in__0[31:18]}),
        .DIPADIP(metric_ram_data_in__0[17:16]),
        .DIPBDIP({1'b1,1'b1}),
        .DOADO(Metric_ram_Out_Reg_CDCR[15:0]),
        .DOBDO({\NLW_GEN_METRIC_RAM.Metric_ram_CDCR_reg_DOBDO_UNCONNECTED [15:14],Metric_ram_Out_Reg_CDCR[31:18]}),
        .DOPADOP(Metric_ram_Out_Reg_CDCR[17:16]),
        .DOPBDOP(\NLW_GEN_METRIC_RAM.Metric_ram_CDCR_reg_DOPBDOP_UNCONNECTED [1:0]),
        .ENARDEN(1'b1),
        .ENBWREN(1'b1),
        .REGCEAREGCE(1'b0),
        .REGCEB(1'b0),
        .RSTRAMARSTRAM(1'b0),
        .RSTRAMB(1'b0),
        .RSTREGARSTREG(1'b0),
        .RSTREGB(1'b0),
        .WEA({\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ,\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 }),
        .WEBWE({1'b0,1'b0,\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ,\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 }));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_1 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_34_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [15]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [15]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[15]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_10 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_44_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [6]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [6]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[6]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_11 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_45_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [5]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [5]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[5]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_12 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_46_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [4]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [4]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[4]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_13 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_47_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [3]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [3]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[3]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_14 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_48_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [2]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [2]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[2]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_15 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_49_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [1]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [1]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[1]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_16 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_50_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [0]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [0]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[0]));
  LUT6 #(
    .INIT(64'hAAAAFEAE00000000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_17 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_51_n_0 ),
        .I1(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [31]),
        .I2(Lat_Addr_9downto2_CDC[0]),
        .I3(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [31]),
        .I4(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .O(metric_ram_data_in__0[31]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_18 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_52_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [30]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [30]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[30]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_19 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_53_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [29]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [29]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[29]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_2 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_36_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [14]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [14]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[14]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_20 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_54_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [28]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [28]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[28]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_21 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_55_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [27]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [27]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[27]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_22 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_56_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [26]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [26]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[26]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_23 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_57_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [25]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [25]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[25]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_24 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_58_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [24]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [24]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[24]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_25 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_59_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [23]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [23]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[23]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_26 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_60_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [22]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [22]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[22]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_27 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_61_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [21]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [21]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[21]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_28 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_62_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [20]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [20]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[20]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_29 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_63_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [19]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [19]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[19]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_3 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_37_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [13]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [13]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[13]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_30 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_64_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [18]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [18]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[18]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_31 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_65_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [17]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [17]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[17]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_32 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_66_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [16]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [16]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[16]));
  LUT5 #(
    .INIT(32'h00000001)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33 
       (.I0(Lat_Addr_9downto2_CDC[5]),
        .I1(Lat_Addr_9downto2_CDC[4]),
        .I2(Lat_Addr_9downto2_CDC[2]),
        .I3(Lat_Addr_9downto2_CDC[1]),
        .I4(Lat_Addr_9downto2_CDC[3]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_34 
       (.I0(\Incrementer_reg[31] [15]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [15]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_34_n_0 ));
  LUT2 #(
    .INIT(4'hB)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35 
       (.I0(Lat_Addr_9downto2_CDC[6]),
        .I1(Lat_Addr_9downto2_CDC[7]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_36 
       (.I0(\Incrementer_reg[31] [14]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [14]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_36_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_37 
       (.I0(\Incrementer_reg[31] [13]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [13]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_37_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_38 
       (.I0(\Incrementer_reg[31] [12]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [12]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_38_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_39 
       (.I0(\Incrementer_reg[31] [11]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [11]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_39_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_4 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_38_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [12]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [12]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[12]));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_40 
       (.I0(\Incrementer_reg[31] [10]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [10]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_40_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_41 
       (.I0(\Incrementer_reg[31] [9]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [9]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_41_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_42 
       (.I0(\Incrementer_reg[31] [8]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [8]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_42_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_43 
       (.I0(\Incrementer_reg[31] [7]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [7]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_43_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_44 
       (.I0(\Incrementer_reg[31] [6]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [6]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_44_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_45 
       (.I0(\Incrementer_reg[31] [5]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [5]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_45_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_46 
       (.I0(\Incrementer_reg[31] [4]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [4]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_46_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_47 
       (.I0(\Incrementer_reg[31] [3]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [3]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_47_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_48 
       (.I0(\Incrementer_reg[31] [2]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [2]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_48_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_49 
       (.I0(\Incrementer_reg[31] [1]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [1]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_49_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_5 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_39_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [11]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [11]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[11]));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_50 
       (.I0(\Incrementer_reg[31] [0]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [0]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_50_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_51 
       (.I0(\Incrementer_reg[31] [31]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [31]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_51_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_52 
       (.I0(\Incrementer_reg[31] [30]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [30]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_52_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_53 
       (.I0(\Incrementer_reg[31] [29]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [29]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_53_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_54 
       (.I0(\Incrementer_reg[31] [28]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [28]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_54_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_55 
       (.I0(\Incrementer_reg[31] [27]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [27]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_55_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_56 
       (.I0(\Incrementer_reg[31] [26]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [26]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_56_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_57 
       (.I0(\Incrementer_reg[31] [25]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [25]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_57_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_58 
       (.I0(\Incrementer_reg[31] [24]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [24]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_58_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_59 
       (.I0(\Incrementer_reg[31] [23]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [23]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_59_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_6 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_40_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [10]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [10]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[10]));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_60 
       (.I0(\Incrementer_reg[31] [22]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [22]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_60_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_61 
       (.I0(\Incrementer_reg[31] [21]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [21]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_61_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_62 
       (.I0(\Incrementer_reg[31] [20]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [20]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_62_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_63 
       (.I0(\Incrementer_reg[31] [19]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [19]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_63_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_64 
       (.I0(\Incrementer_reg[31] [18]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [18]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_64_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_65 
       (.I0(\Incrementer_reg[31] [17]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [17]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_65_n_0 ));
  LUT5 #(
    .INIT(32'h00B80000)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_66 
       (.I0(\Incrementer_reg[31] [16]),
        .I1(Lat_Addr_9downto2_CDC[0]),
        .I2(\Accum_i_reg[31] [16]),
        .I3(Lat_Addr_9downto2_CDC[7]),
        .I4(Lat_Addr_9downto2_CDC[6]),
        .O(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_66_n_0 ));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_7 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_41_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [9]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [9]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[9]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_8 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_42_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [8]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [8]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[8]));
  LUT6 #(
    .INIT(64'h88888888AAA888A8)) 
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_9 
       (.I0(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_33_n_0 ),
        .I1(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_43_n_0 ),
        .I2(\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] [7]),
        .I3(Lat_Addr_9downto2_CDC[0]),
        .I4(\GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] [7]),
        .I5(\GEN_METRIC_RAM.Metric_ram_CDCR_reg_i_35_n_0 ),
        .O(metric_ram_data_in__0[7]));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFEAAA)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[0]_i_2_n_0 ),
        .I1(FSWI_Rd_Vld),
        .I2(\dout_reg[0]_0 ),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[0] ),
        .I4(\GEN_MUX_N_CNT.Add_in[0]_i_4_n_0 ),
        .I5(\GEN_MUX_N_CNT.Add_in[0]_i_5_n_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[2] [0]));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_10 
       (.I0(Q[1]),
        .I1(Metric_Sel_0[1]),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_10_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_11 
       (.I0(Q[0]),
        .I1(Q[2]),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT5 #(
    .INIT(32'hE2000000)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_13 
       (.I0(\Max_Write_Latency_Int_reg[31] [0]),
        .I1(Metric_Sel_0[1]),
        .I2(\Max_Read_Latency_Int_reg[31] [0]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF04003531)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_2 
       (.I0(Metric_Sel_0[1]),
        .I1(Metric_Sel_0[4]),
        .I2(Q[2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(\GEN_MUX_N_CNT.Add_in[0]_i_6_n_0 ),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h40000000)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_3 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Metric_Sel_0[1]),
        .I3(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I4(Q[1]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[0] ));
  LUT6 #(
    .INIT(64'hAAFFAAAAAAEAAAAA)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_4 
       (.I0(\GEN_MUX_N_CNT.Add_in[0]_i_7_n_0 ),
        .I1(\Min_Read_Latency_Int_reg[31] [0]),
        .I2(\GEN_MUX_N_CNT.Add_in[2]_i_9_n_0 ),
        .I3(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_3_n_0 ),
        .I4(\GEN_MUX_N_CNT.Add_in[0]_i_8_n_0 ),
        .I5(Metric_Sel_0[4]),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAAAEAAAEAAA)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[0]_i_9_n_0 ),
        .I1(Metric_Sel_0[4]),
        .I2(\GEN_MUX_N_CNT.Add_in[0]_i_10_n_0 ),
        .I3(\GEN_MUX_N_CNT.Add_in[0]_i_11_n_0 ),
        .I4(\Write_Latency_Int_reg[2] [0]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[0]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000000008)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_6 
       (.I0(\GEN_MUX_N_CNT.Add_in_Valid_i_11_n_0 ),
        .I1(S0_Read_Latency[0]),
        .I2(Metric_Sel_0[1]),
        .I3(Metric_Sel_0[5]),
        .I4(Metric_Sel_0[6]),
        .I5(Metric_Sel_0[7]),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_6_n_0 ));
  LUT6 #(
    .INIT(64'h00000C0000000808)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_7 
       (.I0(FBC_Rd_Vld_reg),
        .I1(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I2(Metric_Sel_0[1]),
        .I3(\Min_Write_Latency_Int_reg[0] ),
        .I4(Q[0]),
        .I5(Q[2]),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_8 
       (.I0(Q[2]),
        .I1(Q[0]),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_8_n_0 ));
  LUT6 #(
    .INIT(64'h888C888888888888)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_9 
       (.I0(\GEN_MUX_N_CNT.Add_in[0]_i_13_n_0 ),
        .I1(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(\dout_reg[34] [1]),
        .I5(FBC_Rd_Vld),
        .O(\GEN_MUX_N_CNT.Add_in[0]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[10]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[10]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[10] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[10]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [10]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [9]),
        .I4(\Max_Read_Latency_Int_reg[31] [9]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[10]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair165" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[11]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[11]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[11] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[11]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [11]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [10]),
        .I4(\Max_Read_Latency_Int_reg[31] [10]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[11]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[12]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[12]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[12] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[12]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [12]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [11]),
        .I4(\Max_Read_Latency_Int_reg[31] [11]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[12]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[13]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[13]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[13] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[13]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [13]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [12]),
        .I4(\Max_Read_Latency_Int_reg[31] [12]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[13]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[14]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[14]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[14] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[14]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [14]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [13]),
        .I4(\Max_Read_Latency_Int_reg[31] [13]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[14]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[15]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[15]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[15] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[15]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [15]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [14]),
        .I4(\Max_Read_Latency_Int_reg[31] [14]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[15]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[16]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[16]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[16] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[16]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [16]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [15]),
        .I4(\Max_Read_Latency_Int_reg[31] [15]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[16]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[17]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[17]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[17] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[17]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [17]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [16]),
        .I4(\Max_Read_Latency_Int_reg[31] [16]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[17]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[18]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[18]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[18] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[18]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [18]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [17]),
        .I4(\Max_Read_Latency_Int_reg[31] [17]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[18]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[19]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[19]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[19] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[19]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [19]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [18]),
        .I4(\Max_Read_Latency_Int_reg[31] [18]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[19]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair157" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[1]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[1]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[1] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[1]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [1]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [1]),
        .I4(\Max_Read_Latency_Int_reg[31] [1]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[1]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[20]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[20]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[20] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[20]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [20]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [19]),
        .I4(\Max_Read_Latency_Int_reg[31] [19]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[20]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair166" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[21]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[21]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[21] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[21]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [21]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [20]),
        .I4(\Max_Read_Latency_Int_reg[31] [20]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[21]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[22]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[22]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[22] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[22]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [22]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [21]),
        .I4(\Max_Read_Latency_Int_reg[31] [21]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[22]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair167" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[23]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[23]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[23] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[23]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [23]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [22]),
        .I4(\Max_Read_Latency_Int_reg[31] [22]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[23]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[24]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[24]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[24] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[24]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [24]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [23]),
        .I4(\Max_Read_Latency_Int_reg[31] [23]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[24]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[25]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[25]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[25] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[25]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [25]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [24]),
        .I4(\Max_Read_Latency_Int_reg[31] [24]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[25]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair168" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[26]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[26]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[26] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[26]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [26]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [25]),
        .I4(\Max_Read_Latency_Int_reg[31] [25]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[26]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair170" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[27]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[27]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[27] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[27]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [27]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [26]),
        .I4(\Max_Read_Latency_Int_reg[31] [26]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[27]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[28]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[28]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[28] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[28]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [28]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [27]),
        .I4(\Max_Read_Latency_Int_reg[31] [27]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[28]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair171" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[29]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[29]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[29] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[29]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [29]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [28]),
        .I4(\Max_Read_Latency_Int_reg[31] [28]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[29]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFFFEEE)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_2_n_0 ),
        .I1(\Min_Write_Latency_Int_reg[2] ),
        .I2(\Max_Write_Latency_Int_reg[31] [2]),
        .I3(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I4(\GEN_MUX_N_CNT.Add_in[2]_i_5_n_0 ),
        .I5(\Max_Read_Latency_Int_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[2] [1]));
  LUT6 #(
    .INIT(64'h0000000000000080)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_10 
       (.I0(Q[1]),
        .I1(Metric_Sel_0[4]),
        .I2(S0_S_Null_Byte_Cnt),
        .I3(Metric_Sel_0[1]),
        .I4(Q[2]),
        .I5(Q[0]),
        .O(\GEN_MUX_N_CNT.Add_in[2]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_2 
       (.I0(\GEN_MUX_N_CNT.Add_in_reg[2]_1 ),
        .I1(FBC_Rd_Vld_reg_0),
        .I2(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I3(S0_Read_Latency[2]),
        .I4(\Write_Latency_Int_reg[2] [1]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[0]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in[2]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h08000000)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_4 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Metric_Sel_0[1]),
        .I3(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I4(Q[1]),
        .O(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFEAAAEAAAEAAA)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_8_n_0 ),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[2]_0 ),
        .I2(\dout_reg[34] [2]),
        .I3(FBC_Rd_Vld),
        .I4(\GEN_MUX_N_CNT.Add_in[2]_i_9_n_0 ),
        .I5(\GEN_MUX_N_CNT.Add_in[2]_i_10_n_0 ),
        .O(\GEN_MUX_N_CNT.Add_in[2]_i_5_n_0 ));
  LUT6 #(
    .INIT(64'h0200000000000000)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_8 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Metric_Sel_0[1]),
        .I4(S0_Read_Byte_Cnt),
        .I5(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .O(\GEN_MUX_N_CNT.Add_in[2]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_9 
       (.I0(Metric_Sel_0[7]),
        .I1(Metric_Sel_0[6]),
        .I2(Metric_Sel_0[5]),
        .O(\GEN_MUX_N_CNT.Add_in[2]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[30]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[30]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[30] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[30]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [30]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [29]),
        .I4(\Max_Read_Latency_Int_reg[31] [29]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[30]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'h10000000)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_10 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Metric_Sel_0[1]),
        .I3(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I4(Q[1]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair154" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_11 
       (.I0(Metric_Sel_0[7]),
        .I1(Metric_Sel_0[6]),
        .I2(Metric_Sel_0[5]),
        .I3(Metric_Sel_0[4]),
        .O(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ));
  LUT5 #(
    .INIT(32'h40000000)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_12 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Metric_Sel_0[1]),
        .I3(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I4(Q[1]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_13 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Metric_Sel_0[1]),
        .I3(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I4(Q[1]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair172" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[31]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair153" *) 
  LUT5 #(
    .INIT(32'h04000000)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_5 
       (.I0(Q[0]),
        .I1(Q[2]),
        .I2(Metric_Sel_0[1]),
        .I3(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I4(Q[1]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_6 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [31]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [30]),
        .I4(\Max_Read_Latency_Int_reg[31] [30]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_7 
       (.I0(Metric_Sel_0[1]),
        .I1(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[0]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[2]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair152" *) 
  LUT5 #(
    .INIT(32'h00000040)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_8 
       (.I0(Q[1]),
        .I1(Metric_Sel_0[1]),
        .I2(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I3(Q[0]),
        .I4(Q[2]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[2]_0 ));
  LUT5 #(
    .INIT(32'h04000000)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_9 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Metric_Sel_0[1]),
        .I3(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I4(Q[1]),
        .O(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair158" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[3]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[3]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[3] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[3]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [3]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [2]),
        .I4(\Max_Read_Latency_Int_reg[31] [2]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair159" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[4]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[4]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[4] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[4]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [4]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [3]),
        .I4(\Max_Read_Latency_Int_reg[31] [3]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[4]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair160" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[5]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[5]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[5] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[5]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [5]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [4]),
        .I4(\Max_Read_Latency_Int_reg[31] [4]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[5]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair161" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[6]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[6]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[6] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[6]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [6]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [5]),
        .I4(\Max_Read_Latency_Int_reg[31] [5]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[6]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair162" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[7]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[7]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[7] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[7]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [7]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [6]),
        .I4(\Max_Read_Latency_Int_reg[31] [6]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[7]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair163" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[8]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[8]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[8] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[8]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [8]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [7]),
        .I4(\Max_Read_Latency_Int_reg[31] [7]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[8]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair164" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[9]_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_9_n_0 ),
        .I1(S0_Read_Latency[9]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[9] ));
  LUT6 #(
    .INIT(64'hFFFFF888F888F888)) 
    \GEN_MUX_N_CNT.Add_in[9]_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in[2]_i_4_n_0 ),
        .I1(\Max_Write_Latency_Int_reg[31] [9]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[1]_1 ),
        .I3(\Min_Read_Latency_Int_reg[31] [8]),
        .I4(\Max_Read_Latency_Int_reg[31] [8]),
        .I5(\GEN_MUX_N_CNT.Add_in_reg[1]_2 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[9]_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in_Valid_i_2_n_0 ),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_i_3_n_0 ),
        .I2(\GEN_MUX_N_CNT.Add_in_Valid_i_4_n_0 ),
        .I3(\GEN_MUX_N_CNT.Add_in_Valid_i_5_n_0 ),
        .I4(\GEN_MUX_N_CNT.Add_in_Valid_i_6_n_0 ),
        .O(Add_in_Valid));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_10 
       (.I0(Metric_Sel_0[4]),
        .I1(Q[2]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_10_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair173" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_11 
       (.I0(Q[0]),
        .I1(Q[2]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_11_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_12 
       (.I0(Metric_Sel_0[5]),
        .I1(Metric_Sel_0[4]),
        .I2(Metric_Sel_0[1]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_12_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair149" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_14 
       (.I0(Q[0]),
        .I1(Q[2]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_14_n_0 ));
  LUT6 #(
    .INIT(64'hAA00EA0000000000)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_2 
       (.I0(\GEN_ARSIZE_F1.Num_RLasts_En_reg ),
        .I1(\GEN_MUX_N_CNT.Add_in[0]_i_11_n_0 ),
        .I2(Write_Beat_Cnt_En),
        .I3(\GEN_MUX_N_CNT.Add_in_Valid_i_9_n_0 ),
        .I4(Q[1]),
        .I5(Metric_Sel_0[1]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_2_n_0 ));
  LUT6 #(
    .INIT(64'h5555C00055550000)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_3 
       (.I0(\GEN_MUX_N_CNT.Add_in_Valid_i_10_n_0 ),
        .I1(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I2(S0_Read_Byte_Cnt_En),
        .I3(Metric_Sel_0[1]),
        .I4(Q[1]),
        .I5(\GEN_MUX_N_CNT.Add_in_Valid_i_11_n_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h4440004000400040)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_4 
       (.I0(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_3_n_0 ),
        .I1(\GEN_MUX_N_CNT.Add_in_Valid_i_9_n_0 ),
        .I2(Write_Latency_En),
        .I3(Q[0]),
        .I4(FSWI_Rd_Data),
        .I5(FSWI_Rd_Vld),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h8080808080F08080)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_5 
       (.I0(\GEN_MUX_N_CNT.Add_in_Valid_i_12_n_0 ),
        .I1(Mst_Rd_Idle_Cnt_En),
        .I2(\GEN_MUX_N_CNT.Add_in[0]_i_8_n_0 ),
        .I3(Metric_Sel_0[5]),
        .I4(External_Event_Cnt_En),
        .I5(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_3_n_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_5_n_0 ));
  LUT6 #(
    .INIT(64'hFFFF0000F4440000)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_6 
       (.I0(Q[1]),
        .I1(\GEN_ARSIZE_F1.Rtrans_Cnt_En_reg ),
        .I2(Num_BValids_En),
        .I3(\GEN_MUX_N_CNT.Add_in_Valid_i_14_n_0 ),
        .I4(\GEN_MUX_N_CNT.Add_in_Valid_i_12_n_0 ),
        .I5(\dout_reg[0] ),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair155" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_9 
       (.I0(Metric_Sel_0[4]),
        .I1(Metric_Sel_0[5]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_i_9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair156" *) 
  LUT3 #(
    .INIT(8'hBF)) 
    \GEN_MUX_N_CNT.accumulate_i_1 
       (.I0(Metric_Sel_0[4]),
        .I1(Q[2]),
        .I2(Q[1]),
        .O(\GEN_MUX_N_CNT.accumulate_reg ));
  LUT6 #(
    .INIT(64'hFFFFFFFFAAAFFAEF)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_1 
       (.I0(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_2_n_0 ),
        .I1(Metric_Sel_0[4]),
        .I2(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_3_n_0 ),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_4_n_0 ),
        .O(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ));
  LUT6 #(
    .INIT(64'h0000700000000000)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_2 
       (.I0(Metric_Sel_0[1]),
        .I1(Q[1]),
        .I2(\dout_reg[34] [0]),
        .I3(FBC_Rd_Vld),
        .I4(Q[2]),
        .I5(\GEN_MUX_N_CNT.Add_in[2]_i_9_n_0 ),
        .O(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair169" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_3 
       (.I0(Metric_Sel_0[1]),
        .I1(Q[1]),
        .O(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'hF444444444774477)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_4 
       (.I0(Metric_Sel_0[4]),
        .I1(Q[2]),
        .I2(FSWI_Rd_Vld_reg),
        .I3(Q[1]),
        .I4(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I5(Metric_Sel_0[1]),
        .O(\GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair151" *) 
  LUT5 #(
    .INIT(32'h00020200)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[31]_i_2 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_11_n_0 ),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[1]),
        .I4(Metric_Sel_0[1]),
        .O(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[31] ));
  (* equivalent_register_removal = "no" *) 
  FDRE \GEN_SAMPLE_REG_ASYNC.Lat_Sample_Reg_Rd_En_d3_reg 
       (.C(core_aclk),
        .CE(1'b1),
        .D(out),
        .Q(Lat_Sample_Reg_Rd_En_d3),
        .R(core_aresetn_0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized2 \GEN_SAMPLE_REG_ASYNC.sample_reg_read_inst 
       (.\Accum_i_reg[15] (\Accum_i_reg[15] ),
        .Lat_Sample_Reg_Rd_En(Lat_Sample_Reg_Rd_En),
        .Lat_Sample_Reg_Rd_En_d3(Lat_Sample_Reg_Rd_En_d3),
        .Sample_Interval_Cnt_Lapse(Sample_Interval_Cnt_Lapse),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(core_aresetn_0),
        .out(out),
        .\s_level_out_bus_d4_reg[1] (\s_level_out_bus_d4_reg[5] [0]),
        .\s_level_out_bus_d4_reg[2] (\s_level_out_bus_d4_reg[2] ));
  FDRE Global_Clk_Cnt_En_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[16]),
        .Q(D[3]),
        .R(SR));
  FDRE Global_Clk_Cnt_Reset_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[17]),
        .Q(D[4]),
        .R(SR));
  FDRE Global_Intr_En_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Global_Intr_En_reg_0),
        .Q(Global_Intr_En),
        .R(SR));
  FDRE IP2Bus_DataValid_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(RValid),
        .Q(\IP2Bus_Data_sampled_reg[31] ),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \IP2Bus_Data[12]_i_7 
       (.I0(Lat_Intr_Reg_ISR_Rd_En),
        .I1(Lat_Intr_Reg_IER_Rd_En),
        .O(\IP2Bus_Data[12]_i_7_n_0 ));
  LUT2 #(
    .INIT(4'h1)) 
    \IP2Bus_Data[31]_i_15 
       (.I0(Lat_Rng_Reg_Set_Rd_En),
        .I1(Lat_Enlog_Reg_Set_Rd_En),
        .O(\IP2Bus_Data[31]_i_15_n_0 ));
  LUT5 #(
    .INIT(32'h0000FFFE)) 
    \IP2Bus_Data[31]_i_16 
       (.I0(Lat_Samp_Incr_Reg_Set_Rd_En),
        .I1(Lat_Metric_Cnt_Reg_Set_Rd_En),
        .I2(Lat_Samp_Metric_Cnt_Reg_Set_Rd_En),
        .I3(Lat_Incr_Reg_Set_Rd_En),
        .I4(Lat_Event_Log_Set_Rd_En),
        .O(\IP2Bus_Data[31]_i_16_n_0 ));
  FDRE \IP2Bus_Data_reg[0] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(cdc_sync_inst2_n_6),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [0]),
        .R(1'b0));
  FDRE \IP2Bus_Data_reg[10] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[10]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [10]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[11] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[11]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [11]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[12] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[12]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [12]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[13] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[13]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [13]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[14] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[14]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [14]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[15] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[15]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [15]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[16] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[16]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [16]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[17] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[17]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [17]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[18] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[18]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [18]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[19] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[19]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [19]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[1] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(cdc_sync_inst2_n_5),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [1]),
        .R(1'b0));
  FDRE \IP2Bus_Data_reg[20] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[20]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [20]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[21] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[21]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [21]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[22] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[22]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [22]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[23] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[23]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [23]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[24] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[24]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [24]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[25] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[25]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [25]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[26] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[26]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [26]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[27] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[27]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [27]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[28] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[28]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [28]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[29] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[29]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [29]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[2] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[2]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [2]),
        .R(cdc_sync_inst2_n_36));
  FDRE \IP2Bus_Data_reg[30] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[30]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [30]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[31] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[31]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [31]),
        .R(cdc_sync_inst2_n_37));
  FDRE \IP2Bus_Data_reg[3] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[3]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [3]),
        .R(cdc_sync_inst2_n_36));
  FDRE \IP2Bus_Data_reg[4] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[4]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [4]),
        .R(cdc_sync_inst2_n_36));
  FDRE \IP2Bus_Data_reg[5] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[5]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [5]),
        .R(cdc_sync_inst2_n_36));
  FDRE \IP2Bus_Data_reg[6] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[6]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [6]),
        .R(cdc_sync_inst2_n_36));
  FDRE \IP2Bus_Data_reg[7] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[7]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [7]),
        .R(cdc_sync_inst2_n_36));
  FDRE \IP2Bus_Data_reg[8] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(cdc_sync_inst2_n_4),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [8]),
        .R(1'b0));
  FDRE \IP2Bus_Data_reg[9] 
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(p_1_in[9]),
        .Q(\IP2Bus_Data_sampled_reg[31]_0 [9]),
        .R(cdc_sync_inst2_n_37));
  LUT4 #(
    .INIT(16'h2F02)) 
    Incr_by_12_carry__0_i_1
       (.I0(Range_Reg_0[30]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [14]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [15]),
        .I3(Range_Reg_0[31]),
        .O(Incr_by_1_reg_0[3]));
  LUT4 #(
    .INIT(16'h2F02)) 
    Incr_by_12_carry__0_i_2
       (.I0(Range_Reg_0[28]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [12]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [13]),
        .I3(Range_Reg_0[29]),
        .O(Incr_by_1_reg_0[2]));
  LUT4 #(
    .INIT(16'h2F02)) 
    Incr_by_12_carry__0_i_3
       (.I0(Range_Reg_0[26]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [10]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [11]),
        .I3(Range_Reg_0[27]),
        .O(Incr_by_1_reg_0[1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    Incr_by_12_carry__0_i_4
       (.I0(Range_Reg_0[24]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [8]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [9]),
        .I3(Range_Reg_0[25]),
        .O(Incr_by_1_reg_0[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    Incr_by_12_carry__0_i_5
       (.I0(Range_Reg_0[30]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [14]),
        .I2(Range_Reg_0[31]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [15]),
        .O(Incr_by_1_reg[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    Incr_by_12_carry__0_i_6
       (.I0(Range_Reg_0[28]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [12]),
        .I2(Range_Reg_0[29]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [13]),
        .O(Incr_by_1_reg[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    Incr_by_12_carry__0_i_7
       (.I0(Range_Reg_0[26]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [10]),
        .I2(Range_Reg_0[27]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [11]),
        .O(Incr_by_1_reg[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    Incr_by_12_carry__0_i_8
       (.I0(Range_Reg_0[24]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [8]),
        .I2(Range_Reg_0[25]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [9]),
        .O(Incr_by_1_reg[0]));
  LUT4 #(
    .INIT(16'h2F02)) 
    Incr_by_12_carry_i_1
       (.I0(Range_Reg_0[22]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [6]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [7]),
        .I3(Range_Reg_0[23]),
        .O(DI[3]));
  LUT4 #(
    .INIT(16'h2F02)) 
    Incr_by_12_carry_i_2
       (.I0(Range_Reg_0[20]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [4]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [5]),
        .I3(Range_Reg_0[21]),
        .O(DI[2]));
  LUT4 #(
    .INIT(16'h2F02)) 
    Incr_by_12_carry_i_3
       (.I0(Range_Reg_0[18]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [2]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [3]),
        .I3(Range_Reg_0[19]),
        .O(DI[1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    Incr_by_12_carry_i_4
       (.I0(Range_Reg_0[16]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [0]),
        .I2(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [1]),
        .I3(Range_Reg_0[17]),
        .O(DI[0]));
  LUT4 #(
    .INIT(16'h9009)) 
    Incr_by_12_carry_i_5
       (.I0(Range_Reg_0[22]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [6]),
        .I2(Range_Reg_0[23]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [7]),
        .O(S[3]));
  LUT4 #(
    .INIT(16'h9009)) 
    Incr_by_12_carry_i_6
       (.I0(Range_Reg_0[20]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [4]),
        .I2(Range_Reg_0[21]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [5]),
        .O(S[2]));
  LUT4 #(
    .INIT(16'h9009)) 
    Incr_by_12_carry_i_7
       (.I0(Range_Reg_0[18]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [2]),
        .I2(Range_Reg_0[19]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [3]),
        .O(S[1]));
  LUT4 #(
    .INIT(16'h9009)) 
    Incr_by_12_carry_i_8
       (.I0(Range_Reg_0[16]),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [0]),
        .I2(Range_Reg_0[17]),
        .I3(\GEN_MUX_N_CNT.Add_in_reg[15]_1 [1]),
        .O(S[0]));
  FDRE Interval_Cnt_En_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Interval_Cnt_En_reg_0),
        .Q(\s_level_out_bus_d1_cdc_to_reg[2] [0]),
        .R(SR));
  FDRE Interval_Cnt_Ld_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Interval_Cnt_Ld_reg_0),
        .Q(\s_level_out_bus_d1_cdc_to_reg[2] [1]),
        .R(SR));
  FDRE Lat_Addr_3downto0_is_0x4_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Addr_3downto0_is_0x4),
        .Q(Lat_Addr_3downto0_is_0x4),
        .R(SR));
  FDRE Lat_Addr_3downto0_is_0x8_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Addr_3downto0_is_0x8),
        .Q(Lat_Addr_3downto0_is_0x8),
        .R(SR));
  FDRE Lat_Addr_3downto0_is_0xC_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Addr_3downto0_is_0xC),
        .Q(Lat_Addr_3downto0_is_0xC),
        .R(SR));
  FDRE Lat_Addr_7downto4_is_0x0_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Addr_7downto4_is_0x0),
        .Q(Lat_Addr_7downto4_is_0x0),
        .R(SR));
  FDRE \Lat_Addr_9downto2_CDC_reg[0] 
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[9] [0]),
        .Q(Lat_Addr_9downto2_CDC[0]),
        .R(SR));
  FDRE \Lat_Addr_9downto2_CDC_reg[1] 
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[9] [1]),
        .Q(Lat_Addr_9downto2_CDC[1]),
        .R(SR));
  FDRE \Lat_Addr_9downto2_CDC_reg[2] 
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[9] [2]),
        .Q(Lat_Addr_9downto2_CDC[2]),
        .R(SR));
  FDRE \Lat_Addr_9downto2_CDC_reg[3] 
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[9] [3]),
        .Q(Lat_Addr_9downto2_CDC[3]),
        .R(SR));
  FDRE \Lat_Addr_9downto2_CDC_reg[4] 
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[9] [4]),
        .Q(Lat_Addr_9downto2_CDC[4]),
        .R(SR));
  FDRE \Lat_Addr_9downto2_CDC_reg[5] 
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[9] [5]),
        .Q(Lat_Addr_9downto2_CDC[5]),
        .R(SR));
  FDRE \Lat_Addr_9downto2_CDC_reg[6] 
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[9] [6]),
        .Q(Lat_Addr_9downto2_CDC[6]),
        .R(SR));
  FDRE \Lat_Addr_9downto2_CDC_reg[7] 
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[9] [7]),
        .Q(Lat_Addr_9downto2_CDC[7]),
        .R(SR));
  FDRE Lat_Control_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Control_Set_Rd_En),
        .Q(Lat_Control_Set_Rd_En),
        .R(SR));
  FDRE Lat_Enlog_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[1] ),
        .Q(Lat_Enlog_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Event_Log_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Event_Log_Set_Rd_En),
        .Q(Lat_Event_Log_Set_Rd_En),
        .R(SR));
  FDRE Lat_Global_Clk_Cnt_LSB_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Global_Clk_Cnt_LSB_Rd_En),
        .Q(Lat_Global_Clk_Cnt_LSB_Rd_En),
        .R(SR));
  FDRE Lat_Global_Clk_Cnt_MSB_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Global_Clk_Cnt_MSB_Rd_En),
        .Q(Lat_Global_Clk_Cnt_MSB_Rd_En),
        .R(SR));
  FDRE Lat_Global_Clk_Cnt_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Global_Clk_Cnt_Set_Rd_En),
        .Q(Lat_Global_Clk_Cnt_Set_Rd_En),
        .R(SR));
  FDRE Lat_ID_Mask_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(ID_Mask_Rd_En),
        .Q(Lat_ID_Mask_Rd_En),
        .R(SR));
  FDRE Lat_Incr_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Incr_Reg_Set_Rd_En),
        .Q(Lat_Incr_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Intr_Reg_GIE_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[3]_0 ),
        .Q(Lat_Intr_Reg_GIE_Rd_En),
        .R(SR));
  FDRE Lat_Intr_Reg_IER_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[3] ),
        .Q(Lat_Intr_Reg_IER_Rd_En),
        .R(SR));
  FDRE Lat_Intr_Reg_ISR_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[1]_0 ),
        .Q(Lat_Intr_Reg_ISR_Rd_En),
        .R(SR));
  FDRE Lat_Intr_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Intr_Reg_Set_Rd_En),
        .Q(Lat_Intr_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Latency_ID_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Latency_ID_Rd_En),
        .Q(Lat_Latency_ID_Rd_En),
        .R(SR));
  FDRE Lat_Metric_Cnt_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Metric_Cnt_Reg_Set_Rd_En),
        .Q(Lat_Metric_Cnt_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Metric_Sel_Reg_0_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Metric_Sel_Reg_0_Rd_En),
        .Q(Lat_Metric_Sel_Reg_0_Rd_En),
        .R(SR));
  FDRE Lat_Rng_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Rng_Reg_Set_Rd_En),
        .Q(Lat_Rng_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Samp_Incr_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Samp_Incr_Reg_Set_Rd_En),
        .Q(Lat_Samp_Incr_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Samp_Metric_Cnt_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Samp_Metric_Cnt_Reg_Set_Rd_En),
        .Q(Lat_Samp_Metric_Cnt_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Sample_Interval_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(p_23_in),
        .Q(Lat_Sample_Interval_Rd_En),
        .R(SR));
  FDRE Lat_Sample_Reg_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(E),
        .Q(Lat_Sample_Reg_Rd_En),
        .R(SR));
  FDRE Lat_Sel_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Sel_Reg_Set_Rd_En),
        .Q(Lat_Sel_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Status_Reg_FOC_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[6]_0 ),
        .Q(Lat_Status_Reg_FOC_Rd_En),
        .R(SR));
  FDRE Lat_Status_Reg_Set_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(Status_Reg_Set_Rd_En),
        .Q(Lat_Status_Reg_Set_Rd_En),
        .R(SR));
  FDRE Lat_Status_Reg_WIF_Rd_En_reg
       (.C(s_axi_aclk),
        .CE(Bus2IP_RdCE),
        .D(\bus2ip_addr_i_reg[6] ),
        .Q(Lat_Status_Reg_WIF_Rd_En),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[0] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[16]),
        .Q(\Latency_RID_CDC_reg_n_0_[0] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[10] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[26]),
        .Q(\Latency_RID_CDC_reg_n_0_[10] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[11] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[27]),
        .Q(\Latency_RID_CDC_reg_n_0_[11] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[12] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[28]),
        .Q(\Latency_RID_CDC_reg_n_0_[12] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[13] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[29]),
        .Q(\Latency_RID_CDC_reg_n_0_[13] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[14] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[30]),
        .Q(\Latency_RID_CDC_reg_n_0_[14] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[15] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[31]),
        .Q(\Latency_RID_CDC_reg_n_0_[15] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[1] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[17]),
        .Q(\Latency_RID_CDC_reg_n_0_[1] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[18]),
        .Q(\Latency_RID_CDC_reg_n_0_[2] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[19]),
        .Q(\Latency_RID_CDC_reg_n_0_[3] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[20]),
        .Q(\Latency_RID_CDC_reg_n_0_[4] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[21]),
        .Q(\Latency_RID_CDC_reg_n_0_[5] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[22]),
        .Q(\Latency_RID_CDC_reg_n_0_[6] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[23]),
        .Q(\Latency_RID_CDC_reg_n_0_[7] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[24]),
        .Q(\Latency_RID_CDC_reg_n_0_[8] ),
        .R(SR));
  FDRE \Latency_RID_CDC_reg[9] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[25]),
        .Q(\Latency_RID_CDC_reg_n_0_[9] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[0] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[0]),
        .Q(\Latency_WID_CDC_reg_n_0_[0] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[10] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[10]),
        .Q(\Latency_WID_CDC_reg_n_0_[10] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[11] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[11]),
        .Q(\Latency_WID_CDC_reg_n_0_[11] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[12] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[12]),
        .Q(\Latency_WID_CDC_reg_n_0_[12] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[13] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[13]),
        .Q(\Latency_WID_CDC_reg_n_0_[13] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[14] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[14]),
        .Q(\Latency_WID_CDC_reg_n_0_[14] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[15] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[15]),
        .Q(\Latency_WID_CDC_reg_n_0_[15] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[1] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[1]),
        .Q(\Latency_WID_CDC_reg_n_0_[1] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[2]),
        .Q(\Latency_WID_CDC_reg_n_0_[2] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[3]),
        .Q(\Latency_WID_CDC_reg_n_0_[3] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[4]),
        .Q(\Latency_WID_CDC_reg_n_0_[4] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[5]),
        .Q(\Latency_WID_CDC_reg_n_0_[5] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[6]),
        .Q(\Latency_WID_CDC_reg_n_0_[6] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[7]),
        .Q(\Latency_WID_CDC_reg_n_0_[7] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[8]),
        .Q(\Latency_WID_CDC_reg_n_0_[8] ),
        .R(SR));
  FDRE \Latency_WID_CDC_reg[9] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5]_0 ),
        .D(s_axi_wdata[9]),
        .Q(\Latency_WID_CDC_reg_n_0_[9] ),
        .R(SR));
  FDRE Metrics_Cnt_En_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[0]),
        .Q(D[0]),
        .R(SR));
  FDRE Metrics_Cnt_Reset_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[1]),
        .Q(D[1]),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[0] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[16]),
        .Q(rid_match_reg_reg),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[10] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[26]),
        .Q(\RID_Mask_CDC_reg_n_0_[10] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[11] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[27]),
        .Q(\RID_Mask_CDC_reg_n_0_[11] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[12] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[28]),
        .Q(\RID_Mask_CDC_reg_n_0_[12] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[13] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[29]),
        .Q(\RID_Mask_CDC_reg_n_0_[13] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[14] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[30]),
        .Q(\RID_Mask_CDC_reg_n_0_[14] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[15] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[31]),
        .Q(\RID_Mask_CDC_reg_n_0_[15] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[1] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[17]),
        .Q(\RID_Mask_CDC_reg_n_0_[1] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[18]),
        .Q(\RID_Mask_CDC_reg_n_0_[2] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[19]),
        .Q(\RID_Mask_CDC_reg_n_0_[3] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[20]),
        .Q(\RID_Mask_CDC_reg_n_0_[4] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[21]),
        .Q(\RID_Mask_CDC_reg_n_0_[5] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[22]),
        .Q(\RID_Mask_CDC_reg_n_0_[6] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[23]),
        .Q(\RID_Mask_CDC_reg_n_0_[7] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[24]),
        .Q(\RID_Mask_CDC_reg_n_0_[8] ),
        .R(SR));
  FDRE \RID_Mask_CDC_reg[9] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[25]),
        .Q(\RID_Mask_CDC_reg_n_0_[9] ),
        .R(SR));
  FDRE Rd_Lat_End_CDC_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[7]),
        .Q(Rd_Lat_End),
        .R(SR));
  FDRE Rd_Lat_Start_CDC_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[6]),
        .Q(Rd_Lat_Start),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT5 #(
    .INIT(32'h40004F00)) 
    Rd_Latency_Fifo_Rd_En_i_2
       (.I0(rid_match_reg_reg),
        .I1(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] [1]),
        .I2(Rd_Lat_Start),
        .I3(\s_level_out_bus_d4_reg[5] [1]),
        .I4(rid_match_reg),
        .O(Rd_Latency_Fifo_Rd_En_reg));
  LUT6 #(
    .INIT(64'hBFBBBFFF00000000)) 
    \Rd_Latency_Fifo_Wr_Data[32]_i_1 
       (.I0(rid_match_reg_reg),
        .I1(\s_level_out_bus_d4_reg[5] [1]),
        .I2(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] [2]),
        .I3(Rd_Lat_Start),
        .I4(ARID_reg),
        .I5(rd_latency_start),
        .O(\Rd_Latency_Fifo_Wr_Data_reg[32] ));
  LUT5 #(
    .INIT(32'hFFFF1DFF)) 
    Rd_Latency_Fifo_Wr_En_i_2
       (.I0(ARID_reg),
        .I1(Rd_Lat_Start),
        .I2(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] [2]),
        .I3(\s_level_out_bus_d4_reg[5] [1]),
        .I4(rid_match_reg_reg),
        .O(Rd_Latency_Fifo_Wr_En_reg));
  LUT6 #(
    .INIT(64'h8A8AAA0A00000000)) 
    Read_Latency_One_i_1
       (.I0(Rd_Latency_Fifo_Empty),
        .I1(p_2_out0_out),
        .I2(\s_level_out_bus_d4_reg[5] [1]),
        .I3(rid_match_reg),
        .I4(Rd_Lat_Start),
        .I5(rd_latency_end),
        .O(Read_Latency_One));
  LUT6 #(
    .INIT(64'hFFFF0E040E040E04)) 
    Read_Latency_One_i_2
       (.I0(Rd_Lat_End),
        .I1(Last_Read_reg),
        .I2(Rd_Lat_Start),
        .I3(First_Read_reg),
        .I4(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[1] ),
        .I5(Read_Latency_One_i_3_n_0),
        .O(rd_latency_end));
  LUT4 #(
    .INIT(16'h2E00)) 
    Read_Latency_One_i_3
       (.I0(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] [0]),
        .I1(Rd_Lat_End),
        .I2(Read_going_on),
        .I3(Rd_Lat_Start),
        .O(Read_Latency_One_i_3_n_0));
  FDSE Reset_On_Sample_Int_Lapse_reg
       (.C(s_axi_aclk),
        .CE(1'b1),
        .D(Reset_On_Sample_Int_Lapse_reg_0),
        .Q(\s_level_out_bus_d1_cdc_to_reg[2] [2]),
        .S(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[0] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[0]),
        .Q(\IP2Bus_Data_reg[31]_0 [0]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[10] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[10]),
        .Q(\IP2Bus_Data_reg[31]_0 [10]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[11] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[11]),
        .Q(\IP2Bus_Data_reg[31]_0 [11]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[12] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[12]),
        .Q(\IP2Bus_Data_reg[31]_0 [12]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[13] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[13]),
        .Q(\IP2Bus_Data_reg[31]_0 [13]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[14] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[14]),
        .Q(\IP2Bus_Data_reg[31]_0 [14]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[15] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[15]),
        .Q(\IP2Bus_Data_reg[31]_0 [15]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[16] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[16]),
        .Q(\IP2Bus_Data_reg[31]_0 [16]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[17] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[17]),
        .Q(\IP2Bus_Data_reg[31]_0 [17]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[18] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[18]),
        .Q(\IP2Bus_Data_reg[31]_0 [18]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[19] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[19]),
        .Q(\IP2Bus_Data_reg[31]_0 [19]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[1] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[1]),
        .Q(\IP2Bus_Data_reg[31]_0 [1]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[20] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[20]),
        .Q(\IP2Bus_Data_reg[31]_0 [20]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[21] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[21]),
        .Q(\IP2Bus_Data_reg[31]_0 [21]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[22] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[22]),
        .Q(\IP2Bus_Data_reg[31]_0 [22]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[23] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[23]),
        .Q(\IP2Bus_Data_reg[31]_0 [23]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[24] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[24]),
        .Q(\IP2Bus_Data_reg[31]_0 [24]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[25] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[25]),
        .Q(\IP2Bus_Data_reg[31]_0 [25]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[26] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[26]),
        .Q(\IP2Bus_Data_reg[31]_0 [26]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[27] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[27]),
        .Q(\IP2Bus_Data_reg[31]_0 [27]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[28] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[28]),
        .Q(\IP2Bus_Data_reg[31]_0 [28]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[29] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[29]),
        .Q(\IP2Bus_Data_reg[31]_0 [29]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[2]),
        .Q(\IP2Bus_Data_reg[31]_0 [2]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[30] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[30]),
        .Q(\IP2Bus_Data_reg[31]_0 [30]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[31] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[31]),
        .Q(\IP2Bus_Data_reg[31]_0 [31]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[3]),
        .Q(\IP2Bus_Data_reg[31]_0 [3]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[4]),
        .Q(\IP2Bus_Data_reg[31]_0 [4]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[5]),
        .Q(\IP2Bus_Data_reg[31]_0 [5]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[6]),
        .Q(\IP2Bus_Data_reg[31]_0 [6]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[7]),
        .Q(\IP2Bus_Data_reg[31]_0 [7]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[8]),
        .Q(\IP2Bus_Data_reg[31]_0 [8]),
        .R(SR));
  FDRE \Sample_Interval_i_reg_CDC_reg[9] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[6]_1 ),
        .D(s_axi_wdata[9]),
        .Q(\IP2Bus_Data_reg[31]_0 [9]),
        .R(SR));
  FDRE Sample_Reg_Rd_First_reg
       (.C(s_axi_aclk),
        .CE(E),
        .D(E),
        .Q(Sample_Reg_Rd_First),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[0] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[0]),
        .Q(Sample_Time_Diff_Reg[0]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[10] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[10]),
        .Q(Sample_Time_Diff_Reg[10]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[11] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[11]),
        .Q(Sample_Time_Diff_Reg[11]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[12] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[12]),
        .Q(Sample_Time_Diff_Reg[12]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[13] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[13]),
        .Q(Sample_Time_Diff_Reg[13]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[14] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[14]),
        .Q(Sample_Time_Diff_Reg[14]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[15] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[15]),
        .Q(Sample_Time_Diff_Reg[15]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[16] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[16]),
        .Q(Sample_Time_Diff_Reg[16]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[17] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[17]),
        .Q(Sample_Time_Diff_Reg[17]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[18] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[18]),
        .Q(Sample_Time_Diff_Reg[18]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[19] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[19]),
        .Q(Sample_Time_Diff_Reg[19]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[1] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[1]),
        .Q(Sample_Time_Diff_Reg[1]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[20] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[20]),
        .Q(Sample_Time_Diff_Reg[20]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[21] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[21]),
        .Q(Sample_Time_Diff_Reg[21]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[22] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[22]),
        .Q(Sample_Time_Diff_Reg[22]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[23] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[23]),
        .Q(Sample_Time_Diff_Reg[23]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[24] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[24]),
        .Q(Sample_Time_Diff_Reg[24]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[25] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[25]),
        .Q(Sample_Time_Diff_Reg[25]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[26] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[26]),
        .Q(Sample_Time_Diff_Reg[26]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[27] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[27]),
        .Q(Sample_Time_Diff_Reg[27]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[28] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[28]),
        .Q(Sample_Time_Diff_Reg[28]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[29] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[29]),
        .Q(Sample_Time_Diff_Reg[29]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[2] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[2]),
        .Q(Sample_Time_Diff_Reg[2]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[30] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[30]),
        .Q(Sample_Time_Diff_Reg[30]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[31] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[31]),
        .Q(Sample_Time_Diff_Reg[31]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[3] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[3]),
        .Q(Sample_Time_Diff_Reg[3]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[4] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[4]),
        .Q(Sample_Time_Diff_Reg[4]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[5] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[5]),
        .Q(Sample_Time_Diff_Reg[5]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[6] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[6]),
        .Q(Sample_Time_Diff_Reg[6]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[7] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[7]),
        .Q(Sample_Time_Diff_Reg[7]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[8] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[8]),
        .Q(Sample_Time_Diff_Reg[8]),
        .R(SR));
  FDRE \Sample_Time_Diff_Reg_reg[9] 
       (.C(s_axi_aclk),
        .CE(E),
        .D(Sample_Time_Diff[9]),
        .Q(Sample_Time_Diff_Reg[9]),
        .R(SR));
  FDRE Streaming_FIFO_Reset_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[25]),
        .Q(D[6]),
        .R(SR));
  FDRE Use_Ext_Trigger_Log_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[9]),
        .Q(D[8]),
        .R(SR));
  FDRE Use_Ext_Trigger_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[2]),
        .Q(D[7]),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[0] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[0]),
        .Q(awid_match_d1_reg),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[10] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[10]),
        .Q(\WID_Mask_CDC_reg_n_0_[10] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[11] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[11]),
        .Q(\WID_Mask_CDC_reg_n_0_[11] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[12] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[12]),
        .Q(\WID_Mask_CDC_reg_n_0_[12] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[13] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[13]),
        .Q(\WID_Mask_CDC_reg_n_0_[13] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[14] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[14]),
        .Q(\WID_Mask_CDC_reg_n_0_[14] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[15] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[15]),
        .Q(\WID_Mask_CDC_reg_n_0_[15] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[1] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[1]),
        .Q(\WID_Mask_CDC_reg_n_0_[1] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[2] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[2]),
        .Q(\WID_Mask_CDC_reg_n_0_[2] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[3] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[3]),
        .Q(\WID_Mask_CDC_reg_n_0_[3] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[4] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[4]),
        .Q(\WID_Mask_CDC_reg_n_0_[4] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[5] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[5]),
        .Q(\WID_Mask_CDC_reg_n_0_[5] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[6] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[6]),
        .Q(\WID_Mask_CDC_reg_n_0_[6] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[7] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[7]),
        .Q(\WID_Mask_CDC_reg_n_0_[7] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[8] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[8]),
        .Q(\WID_Mask_CDC_reg_n_0_[8] ),
        .R(SR));
  FDRE \WID_Mask_CDC_reg[9] 
       (.C(s_axi_aclk),
        .CE(\bus2ip_addr_i_reg[5] ),
        .D(s_axi_wdata[9]),
        .Q(\WID_Mask_CDC_reg_n_0_[9] ),
        .R(SR));
  FDRE Wr_Lat_End_CDC_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[5]),
        .Q(Wr_Lat_End),
        .R(SR));
  FDRE Wr_Lat_Start_CDC_reg
       (.C(s_axi_aclk),
        .CE(Control_Set_Wr_En),
        .D(s_axi_wdata[4]),
        .Q(Wr_Lat_Start),
        .R(SR));
  LUT2 #(
    .INIT(4'hB)) 
    awid_match_d1_i_1
       (.I0(awid_match_d1_reg),
        .I1(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] [4]),
        .O(p_2_out3_out));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync cdc_sync_inst1
       (.Bus2IP_RdCE(Bus2IP_RdCE),
        .E(\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31]_0 ),
        .SR(SR),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn_0),
        .s_axi_aclk(s_axi_aclk),
        .s_out_d5_reg_0(s_out_d5_reg),
        .s_out_d6_reg_0(s_out_d6_reg),
        .s_out_re(s_out_re));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync_3 cdc_sync_inst2
       (.D(sync_eventlog_cur_cnt),
        .\GEN_GLOBAL_CLK_32.Lat_Global_Clk_Cnt_LSB_CDCR_reg[31] (Lat_Global_Clk_Cnt_LSB_CDCR),
        .\GEN_METRIC_0.Range_Reg_0_CDC_reg[31] ({Range_Reg_0,\IP2Bus_Data_reg[15]_0 }),
        .Global_Intr_En(Global_Intr_En),
        .\IER_reg[12] (\IER_reg[12] ),
        .\IP2Bus_Data_reg[0] (cdc_sync_inst2_n_6),
        .\IP2Bus_Data_reg[1] (cdc_sync_inst2_n_5),
        .\IP2Bus_Data_reg[31] (cdc_sync_inst2_n_37),
        .\IP2Bus_Data_reg[7] (cdc_sync_inst2_n_36),
        .\IP2Bus_Data_reg[8] (cdc_sync_inst2_n_4),
        .Intr_Reg_ISR(Intr_Reg_ISR),
        .Lat_Addr_3downto0_is_0x4(Lat_Addr_3downto0_is_0x4),
        .Lat_Addr_3downto0_is_0x8(Lat_Addr_3downto0_is_0x8),
        .Lat_Addr_3downto0_is_0xC(Lat_Addr_3downto0_is_0xC),
        .Lat_Addr_7downto4_is_0x0(Lat_Addr_7downto4_is_0x0),
        .Lat_Control_Set_Rd_En(Lat_Control_Set_Rd_En),
        .Lat_Global_Clk_Cnt_LSB_Rd_En(Lat_Global_Clk_Cnt_LSB_Rd_En),
        .Lat_Global_Clk_Cnt_MSB_Rd_En(Lat_Global_Clk_Cnt_MSB_Rd_En),
        .Lat_Global_Clk_Cnt_Set_Rd_En(Lat_Global_Clk_Cnt_Set_Rd_En),
        .Lat_ID_Mask_Rd_En(Lat_ID_Mask_Rd_En),
        .Lat_Intr_Reg_GIE_Rd_En(Lat_Intr_Reg_GIE_Rd_En),
        .Lat_Intr_Reg_IER_Rd_En(Lat_Intr_Reg_IER_Rd_En),
        .Lat_Intr_Reg_ISR_Rd_En_reg(\IP2Bus_Data[12]_i_7_n_0 ),
        .Lat_Intr_Reg_Set_Rd_En(Lat_Intr_Reg_Set_Rd_En),
        .Lat_Latency_ID_Rd_En(Lat_Latency_ID_Rd_En),
        .Lat_Metric_Sel_Reg_0_Rd_En(Lat_Metric_Sel_Reg_0_Rd_En),
        .Lat_Rng_Reg_Set_Rd_En(Lat_Rng_Reg_Set_Rd_En),
        .Lat_Rng_Reg_Set_Rd_En_reg(\IP2Bus_Data[31]_i_15_n_0 ),
        .Lat_Samp_Incr_Reg_Set_Rd_En_reg(\IP2Bus_Data[31]_i_16_n_0 ),
        .Lat_Sample_Interval_Rd_En(Lat_Sample_Interval_Rd_En),
        .Lat_Sel_Reg_Set_Rd_En(Lat_Sel_Reg_Set_Rd_En),
        .Lat_Status_Reg_FOC_Rd_En(Lat_Status_Reg_FOC_Rd_En),
        .Lat_Status_Reg_Set_Rd_En(Lat_Status_Reg_Set_Rd_En),
        .Lat_Status_Reg_WIF_Rd_En(Lat_Status_Reg_WIF_Rd_En),
        .\Latency_RID_CDC_reg[15] ({\Latency_RID_CDC_reg_n_0_[15] ,\Latency_RID_CDC_reg_n_0_[14] ,\Latency_RID_CDC_reg_n_0_[13] ,\Latency_RID_CDC_reg_n_0_[12] ,\Latency_RID_CDC_reg_n_0_[11] ,\Latency_RID_CDC_reg_n_0_[10] ,\Latency_RID_CDC_reg_n_0_[9] ,\Latency_RID_CDC_reg_n_0_[8] ,\Latency_RID_CDC_reg_n_0_[7] ,\Latency_RID_CDC_reg_n_0_[6] ,\Latency_RID_CDC_reg_n_0_[5] ,\Latency_RID_CDC_reg_n_0_[4] ,\Latency_RID_CDC_reg_n_0_[3] ,\Latency_RID_CDC_reg_n_0_[2] ,\Latency_RID_CDC_reg_n_0_[1] ,\Latency_RID_CDC_reg_n_0_[0] }),
        .\Latency_WID_CDC_reg[15] ({\Latency_WID_CDC_reg_n_0_[15] ,\Latency_WID_CDC_reg_n_0_[14] ,\Latency_WID_CDC_reg_n_0_[13] ,\Latency_WID_CDC_reg_n_0_[12] ,\Latency_WID_CDC_reg_n_0_[11] ,\Latency_WID_CDC_reg_n_0_[10] ,\Latency_WID_CDC_reg_n_0_[9] ,\Latency_WID_CDC_reg_n_0_[8] ,\Latency_WID_CDC_reg_n_0_[7] ,\Latency_WID_CDC_reg_n_0_[6] ,\Latency_WID_CDC_reg_n_0_[5] ,\Latency_WID_CDC_reg_n_0_[4] ,\Latency_WID_CDC_reg_n_0_[3] ,\Latency_WID_CDC_reg_n_0_[2] ,\Latency_WID_CDC_reg_n_0_[1] ,\Latency_WID_CDC_reg_n_0_[0] }),
        .Metric_ram_Out_Reg_CDCR(Metric_ram_Out_Reg_CDCR),
        .Q({Metric_Sel_0[7:4],Q[2:1],Metric_Sel_0[1],Q[0]}),
        .\RID_Mask_CDC_reg[15] ({\RID_Mask_CDC_reg_n_0_[15] ,\RID_Mask_CDC_reg_n_0_[14] ,\RID_Mask_CDC_reg_n_0_[13] ,\RID_Mask_CDC_reg_n_0_[12] ,\RID_Mask_CDC_reg_n_0_[11] ,\RID_Mask_CDC_reg_n_0_[10] ,\RID_Mask_CDC_reg_n_0_[9] ,\RID_Mask_CDC_reg_n_0_[8] ,\RID_Mask_CDC_reg_n_0_[7] ,\RID_Mask_CDC_reg_n_0_[6] ,\RID_Mask_CDC_reg_n_0_[5] ,\RID_Mask_CDC_reg_n_0_[4] ,\RID_Mask_CDC_reg_n_0_[3] ,\RID_Mask_CDC_reg_n_0_[2] ,\RID_Mask_CDC_reg_n_0_[1] ,rid_match_reg_reg}),
        .Rd_Lat_End(Rd_Lat_End),
        .Rd_Lat_Start_CDC_reg(Rd_Lat_Start),
        .Reset_On_Sample_Int_Lapse_reg(\s_level_out_bus_d1_cdc_to_reg[2] ),
        .SR(SR),
        .\Sample_Interval_i_reg_CDC_reg[31] (\IP2Bus_Data_reg[31]_0 ),
        .\Sample_Time_Diff_Reg_reg[31] (Sample_Time_Diff_Reg),
        .Use_Ext_Trigger_reg({D[7],D[5:3],D[1:0]}),
        .\WID_Mask_CDC_reg[15] ({\WID_Mask_CDC_reg_n_0_[15] ,\WID_Mask_CDC_reg_n_0_[14] ,\WID_Mask_CDC_reg_n_0_[13] ,\WID_Mask_CDC_reg_n_0_[12] ,\WID_Mask_CDC_reg_n_0_[11] ,\WID_Mask_CDC_reg_n_0_[10] ,\WID_Mask_CDC_reg_n_0_[9] ,\WID_Mask_CDC_reg_n_0_[8] ,\WID_Mask_CDC_reg_n_0_[7] ,\WID_Mask_CDC_reg_n_0_[6] ,\WID_Mask_CDC_reg_n_0_[5] ,\WID_Mask_CDC_reg_n_0_[4] ,\WID_Mask_CDC_reg_n_0_[3] ,\WID_Mask_CDC_reg_n_0_[2] ,\WID_Mask_CDC_reg_n_0_[1] ,awid_match_d1_reg}),
        .Wr_Lat_End(Wr_Lat_End),
        .Wr_Lat_Start(Wr_Lat_Start),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn_0),
        .out(RValid),
        .p_1_in({p_1_in[31:9],p_1_in[7:2]}),
        .p_in_d1_cdc_from_reg0(p_in_d1_cdc_from_reg0),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn),
        .s_out_d1_cdc_to_reg_0(s_out_d1_cdc_to_reg),
        .s_out_d5_reg_0(s_out_d5_reg_0),
        .s_out_d6_reg_0(s_out_d6_reg_0),
        .s_out_re_0(s_out_re_0));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized3 eventlog_fifo_rden
       (.D(sync_eventlog_cur_cnt),
        .SR(SR),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_aresetn(s_axi_aresetn));
  (* SOFT_HLUTNM = "soft_lutpair150" *) 
  LUT2 #(
    .INIT(4'hB)) 
    rid_match_reg_i_1
       (.I0(rid_match_reg_reg),
        .I1(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] [1]),
        .O(p_2_out0_out));
  LUT3 #(
    .INIT(8'hBA)) 
    rvalid_i_1
       (.I0(\IP2Bus_Data_sampled_reg[31] ),
        .I1(s_axi_rready),
        .I2(rvalid_reg_0),
        .O(rvalid_reg));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter sample_reg_counter_inst
       (.E(Sample_Reg_Rd_First),
        .Q(Sample_Time_Diff),
        .SR(SR),
        .s_axi_aclk(s_axi_aclk));
  LUT6 #(
    .INIT(64'hFFFFFFFF4000C800)) 
    wr_latency_end_d1_i_1
       (.I0(Wr_Lat_End),
        .I1(Wr_Lat_Start),
        .I2(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[67] [3]),
        .I3(Write_Beat),
        .I4(Write_going_on),
        .I5(First_Write_d1_reg),
        .O(wr_latency_end));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_samp_intl_cnt
   (Sample_Interval_Cnt_Lapse,
    p_in_d1_cdc_from_reg0,
    core_aresetn_0,
    core_aclk,
    p_in_d1_cdc_from_reg,
    E,
    D,
    out,
    core_aresetn,
    Sample_Cnt_Ld,
    Sample_Interval);
  output Sample_Interval_Cnt_Lapse;
  output p_in_d1_cdc_from_reg0;
  input core_aresetn_0;
  input core_aclk;
  input p_in_d1_cdc_from_reg;
  input [0:0]E;
  input [1:0]D;
  input [0:0]out;
  input core_aresetn;
  input Sample_Cnt_Ld;
  input [31:0]Sample_Interval;

  wire [1:0]D;
  wire [0:0]E;
  wire Sample_Cnt_Ld;
  wire [31:0]Sample_Interval;
  wire Sample_Interval_Cnt_Lapse;
  wire core_aclk;
  wire core_aresetn;
  wire core_aresetn_0;
  wire [0:0]out;
  wire p_in_d1_cdc_from_reg;
  wire p_in_d1_cdc_from_reg0;

  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_counter_43 counter_inst
       (.\Count_Out_i_reg[31]_0 (Sample_Interval_Cnt_Lapse),
        .D(D),
        .E(E),
        .Sample_Cnt_Ld(Sample_Cnt_Ld),
        .Sample_Interval(Sample_Interval),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .core_aresetn_0(core_aresetn_0),
        .out(out),
        .p_in_d1_cdc_from_reg(p_in_d1_cdc_from_reg),
        .p_in_d1_cdc_from_reg0(p_in_d1_cdc_from_reg0));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_samp_metrics_data
   (Q,
    \GEN_METRIC_RAM.Metric_ram_CDCR_reg ,
    s_level_out_d4_reg,
    E,
    D,
    core_aclk,
    \Incrementer_reg[31] );
  output [31:0]Q;
  output [31:0]\GEN_METRIC_RAM.Metric_ram_CDCR_reg ;
  input [0:0]s_level_out_d4_reg;
  input [0:0]E;
  input [31:0]D;
  input core_aclk;
  input [31:0]\Incrementer_reg[31] ;

  wire [31:0]D;
  wire [0:0]E;
  wire [31:0]\GEN_METRIC_RAM.Metric_ram_CDCR_reg ;
  wire [31:0]\Incrementer_reg[31] ;
  wire [31:0]Q;
  wire core_aclk;
  wire [0:0]s_level_out_d4_reg;

  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [0]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [0]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[10] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [10]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [10]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[11] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [11]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [11]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[12] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [12]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [12]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[13] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [13]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [13]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[14] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [14]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [14]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[15] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [15]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [15]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[16] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [16]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [16]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[17] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [17]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [17]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[18] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [18]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [18]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[19] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [19]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [19]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [1]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [1]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[20] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [20]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [20]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[21] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [21]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [21]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[22] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [22]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [22]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[23] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [23]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [23]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[24] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [24]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [24]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[25] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [25]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [25]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[26] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [26]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [26]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[27] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [27]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [27]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[28] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [28]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [28]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[29] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [29]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [29]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [2]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [2]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[30] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [30]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [30]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[31] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [31]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [31]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [3]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [3]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [4]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [4]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [5]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [5]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[6] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [6]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [6]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[7] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [7]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [7]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[8] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [8]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [8]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Incrementer_0_reg[9] 
       (.C(core_aclk),
        .CE(E),
        .D(\Incrementer_reg[31] [9]),
        .Q(\GEN_METRIC_RAM.Metric_ram_CDCR_reg [9]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(D[0]),
        .Q(Q[0]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[10] 
       (.C(core_aclk),
        .CE(E),
        .D(D[10]),
        .Q(Q[10]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[11] 
       (.C(core_aclk),
        .CE(E),
        .D(D[11]),
        .Q(Q[11]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[12] 
       (.C(core_aclk),
        .CE(E),
        .D(D[12]),
        .Q(Q[12]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[13] 
       (.C(core_aclk),
        .CE(E),
        .D(D[13]),
        .Q(Q[13]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[14] 
       (.C(core_aclk),
        .CE(E),
        .D(D[14]),
        .Q(Q[14]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[15] 
       (.C(core_aclk),
        .CE(E),
        .D(D[15]),
        .Q(Q[15]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[16] 
       (.C(core_aclk),
        .CE(E),
        .D(D[16]),
        .Q(Q[16]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[17] 
       (.C(core_aclk),
        .CE(E),
        .D(D[17]),
        .Q(Q[17]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[18] 
       (.C(core_aclk),
        .CE(E),
        .D(D[18]),
        .Q(Q[18]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[19] 
       (.C(core_aclk),
        .CE(E),
        .D(D[19]),
        .Q(Q[19]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(D[1]),
        .Q(Q[1]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[20] 
       (.C(core_aclk),
        .CE(E),
        .D(D[20]),
        .Q(Q[20]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[21] 
       (.C(core_aclk),
        .CE(E),
        .D(D[21]),
        .Q(Q[21]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[22] 
       (.C(core_aclk),
        .CE(E),
        .D(D[22]),
        .Q(Q[22]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[23] 
       (.C(core_aclk),
        .CE(E),
        .D(D[23]),
        .Q(Q[23]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[24] 
       (.C(core_aclk),
        .CE(E),
        .D(D[24]),
        .Q(Q[24]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[25] 
       (.C(core_aclk),
        .CE(E),
        .D(D[25]),
        .Q(Q[25]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[26] 
       (.C(core_aclk),
        .CE(E),
        .D(D[26]),
        .Q(Q[26]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[27] 
       (.C(core_aclk),
        .CE(E),
        .D(D[27]),
        .Q(Q[27]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[28] 
       (.C(core_aclk),
        .CE(E),
        .D(D[28]),
        .Q(Q[28]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[29] 
       (.C(core_aclk),
        .CE(E),
        .D(D[29]),
        .Q(Q[29]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(D[2]),
        .Q(Q[2]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[30] 
       (.C(core_aclk),
        .CE(E),
        .D(D[30]),
        .Q(Q[30]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[31] 
       (.C(core_aclk),
        .CE(E),
        .D(D[31]),
        .Q(Q[31]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(D[3]),
        .Q(Q[3]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(D[4]),
        .Q(Q[4]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(D[5]),
        .Q(Q[5]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[6] 
       (.C(core_aclk),
        .CE(E),
        .D(D[6]),
        .Q(Q[6]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[7] 
       (.C(core_aclk),
        .CE(E),
        .D(D[7]),
        .Q(Q[7]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[8] 
       (.C(core_aclk),
        .CE(E),
        .D(D[8]),
        .Q(Q[8]),
        .R(s_level_out_d4_reg));
  FDRE \GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[9] 
       (.C(core_aclk),
        .CE(E),
        .D(D[9]),
        .Q(Q[9]),
        .R(s_level_out_d4_reg));
endmodule

module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo
   (FBC_Empty,
    FBC_Rd_Data,
    Q,
    \rptr_reg[4]_0 ,
    \GEN_MUX_N_CNT.Add_in_Valid_reg ,
    SR,
    core_aclk,
    dout0_2,
    \s_level_out_bus_d4_reg[0] ,
    FBC1_Empty,
    FBC_Rd_Vld_reg,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ,
    Read_Latency_En,
    E);
  output FBC_Empty;
  output FBC_Rd_Data;
  output [4:0]Q;
  output [4:0]\rptr_reg[4]_0 ;
  output \GEN_MUX_N_CNT.Add_in_Valid_reg ;
  input [0:0]SR;
  input core_aclk;
  input dout0_2;
  input [0:0]\s_level_out_bus_d4_reg[0] ;
  input FBC1_Empty;
  input FBC_Rd_Vld_reg;
  input [1:0]\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ;
  input Read_Latency_En;
  input [0:0]E;

  wire [0:0]E;
  wire FBC1_Empty;
  wire FBC_Empty;
  wire FBC_Rd_Data;
  wire FBC_Rd_Vld_reg;
  wire [1:0]\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_reg ;
  wire [4:0]Q;
  wire Read_Latency_En;
  wire [0:0]SR;
  wire core_aclk;
  wire dout0_2;
  wire empty0;
  wire empty_i_2__1_n_0;
  wire empty_i_3__1_n_0;
  wire empty_i_4_n_0;
  wire empty_i_5_n_0;
  wire p_0_in;
  wire [5:0]p_0_in__5;
  wire \rptr[0]_i_1_n_0 ;
  wire \rptr[1]_i_1_n_0 ;
  wire \rptr[2]_i_1_n_0 ;
  wire \rptr[3]_i_1_n_0 ;
  wire \rptr[4]_i_1_n_0 ;
  wire \rptr[5]_i_1__0_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire [0:0]\s_level_out_bus_d4_reg[0] ;
  wire \wptr_reg_n_0_[5] ;

  LUT5 #(
    .INIT(32'hF8080000)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_15 
       (.I0(FBC_Rd_Data),
        .I1(FBC_Rd_Vld_reg),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] [0]),
        .I3(Read_Latency_En),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] [1]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_reg ));
  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0_2),
        .Q(FBC_Rd_Data),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0A0E0A0A0A0A0A0A)) 
    empty_i_1__3
       (.I0(FBC_Empty),
        .I1(empty_i_2__1_n_0),
        .I2(\s_level_out_bus_d4_reg[0] ),
        .I3(FBC1_Empty),
        .I4(empty_i_3__1_n_0),
        .I5(empty_i_4_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h6AAAAAAA95555555)) 
    empty_i_2__1
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(Q[4]),
        .O(empty_i_2__1_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_3__1
       (.I0(Q[0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(empty_i_3__1_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_4
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in),
        .I3(empty_i_5_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(empty_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_5
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_5_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(FBC_Empty),
        .S(SR));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__0 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__0_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[0]_i_1_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[1]_i_1_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[2]_i_1_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[3]_i_1_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[4]_i_1_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[5]_i_1__0_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__5 
       (.I0(Q[0]),
        .O(p_0_in__5[0]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__5 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__5[1]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__5 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in__5[2]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__5 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_0_in__5[3]));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__5 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_0_in__5[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__5 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__5[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__5[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__5[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__5[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__5[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__5[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__5[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_36
   (F1_Empty,
    F1_Rd_Data,
    Q,
    E,
    \rptr_reg[4]_0 ,
    SR,
    core_aclk,
    dout0_0,
    \s_level_out_bus_d4_reg[0] ,
    F2_Empty);
  output F1_Empty;
  output F1_Rd_Data;
  output [4:0]Q;
  output [0:0]E;
  output [4:0]\rptr_reg[4]_0 ;
  input [0:0]SR;
  input core_aclk;
  input dout0_0;
  input [0:0]\s_level_out_bus_d4_reg[0] ;
  input F2_Empty;

  wire [0:0]E;
  wire F1_Empty;
  wire F1_Rd_Data;
  wire F2_Empty;
  wire [4:0]Q;
  wire [0:0]SR;
  wire core_aclk;
  wire dout0_0;
  wire empty0;
  wire empty_i_3__9_n_0;
  wire empty_i_4__9_n_0;
  wire empty_i_5__9_n_0;
  wire empty_i_6__3_n_0;
  wire [5:0]p_0_in;
  wire p_0_in_0;
  wire \rptr[0]_i_1__9_n_0 ;
  wire \rptr[1]_i_1__9_n_0 ;
  wire \rptr[2]_i_1__9_n_0 ;
  wire \rptr[3]_i_1__9_n_0 ;
  wire \rptr[4]_i_1__9_n_0 ;
  wire \rptr[5]_i_1__9_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire [0:0]\s_level_out_bus_d4_reg[0] ;
  wire \wptr_reg_n_0_[5] ;

  LUT2 #(
    .INIT(4'h1)) 
    F12_Rd_Vld_i_1
       (.I0(F1_Empty),
        .I1(F2_Empty),
        .O(E));
  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0_0),
        .Q(F1_Rd_Data),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0A0E0A0A0A0A0A0A)) 
    empty_i_2
       (.I0(F1_Empty),
        .I1(empty_i_3__9_n_0),
        .I2(\s_level_out_bus_d4_reg[0] ),
        .I3(F2_Empty),
        .I4(empty_i_4__9_n_0),
        .I5(empty_i_5__9_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h6AAAAAAA95555555)) 
    empty_i_3__9
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(Q[4]),
        .O(empty_i_3__9_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_4__9
       (.I0(Q[0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(empty_i_4__9_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_5__9
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in_0),
        .I3(empty_i_6__3_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(empty_i_5__9_n_0));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_6__3
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_6__3_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(F1_Empty),
        .S(SR));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__9 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__9 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__9 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__9 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1__9_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__9 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1__9_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__9 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in_0),
        .O(\rptr[5]_i_1__9_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[0]_i_1__9_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[1]_i_1__9_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[2]_i_1__9_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[3]_i_1__9_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[4]_i_1__9_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[5]_i_1__9_n_0 ),
        .Q(p_0_in_0),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1 
       (.I0(Q[0]),
        .O(p_0_in[0]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_37
   (F2_Empty,
    F2_Rd_Data,
    Q,
    E,
    \rptr_reg[4]_0 ,
    SR,
    core_aclk,
    dout0_1,
    F1_Empty,
    Write_iss_going_on_reg,
    \USE_MON_FIFO.Fifo_Data_Out_Reg_reg[37] ,
    Slot_0_Sync_Data_Valid,
    Ext_Trig_Metric_en_reg,
    out,
    empty_reg_0);
  output F2_Empty;
  output F2_Rd_Data;
  output [4:0]Q;
  output [0:0]E;
  output [4:0]\rptr_reg[4]_0 ;
  input [0:0]SR;
  input core_aclk;
  input dout0_1;
  input F1_Empty;
  input Write_iss_going_on_reg;
  input [0:0]\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[37] ;
  input Slot_0_Sync_Data_Valid;
  input Ext_Trig_Metric_en_reg;
  input [1:0]out;
  input [0:0]empty_reg_0;

  wire [0:0]E;
  wire Ext_Trig_Metric_en_reg;
  wire F1_Empty;
  wire F2_Empty;
  wire F2_Rd_Data;
  wire [4:0]Q;
  wire [0:0]SR;
  wire Slot_0_Sync_Data_Valid;
  wire [0:0]\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[37] ;
  wire Write_iss_going_on_reg;
  wire core_aclk;
  wire dout0_1;
  wire empty0;
  wire empty_i_2__9_n_0;
  wire empty_i_3__8_n_0;
  wire empty_i_4__8_n_0;
  wire empty_i_5__8_n_0;
  wire [0:0]empty_reg_0;
  wire [1:0]out;
  wire p_0_in;
  wire [5:0]p_0_in__0;
  wire \rptr[0]_i_1__8_n_0 ;
  wire \rptr[1]_i_1__8_n_0 ;
  wire \rptr[2]_i_1__8_n_0 ;
  wire \rptr[3]_i_1__8_n_0 ;
  wire \rptr[4]_i_1__8_n_0 ;
  wire \rptr[5]_i_1__8_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire \wptr_reg_n_0_[5] ;

  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0_1),
        .Q(F2_Rd_Data),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0A0E0A0A0A0A0A0A)) 
    empty_i_1__8
       (.I0(F2_Empty),
        .I1(empty_i_2__9_n_0),
        .I2(E),
        .I3(F1_Empty),
        .I4(empty_i_3__8_n_0),
        .I5(empty_i_4__8_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h6AAAAAAA95555555)) 
    empty_i_2__9
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(Q[4]),
        .O(empty_i_2__9_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_3__8
       (.I0(Q[0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(empty_i_3__8_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_4__8
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in),
        .I3(empty_i_5__8_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(empty_i_4__8_n_0));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_5__8
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_5__8_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(F2_Empty),
        .S(SR));
  LUT6 #(
    .INIT(64'h4000404000000000)) 
    mem_reg_0_31_0_0_i_1
       (.I0(Write_iss_going_on_reg),
        .I1(\USE_MON_FIFO.Fifo_Data_Out_Reg_reg[37] ),
        .I2(Slot_0_Sync_Data_Valid),
        .I3(Ext_Trig_Metric_en_reg),
        .I4(out[1]),
        .I5(out[0]),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__8 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__8 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__8 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__8 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1__8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__8 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1__8_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__8 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__8_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[0]_i_1__8_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[1]_i_1__8_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[2]_i_1__8_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[3]_i_1__8_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[4]_i_1__8_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[5]_i_1__8_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__0 
       (.I0(Q[0]),
        .O(p_0_in__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__0 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__0 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__0 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__0 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__0[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__0[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__0[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__0[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__0[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__0[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__0[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_38
   (FWL1_Empty,
    empty2__0,
    E,
    SR,
    core_aclk,
    FWL_Empty,
    Last_fifo_Wr_en,
    out,
    Ext_Trig_Metric_en_reg,
    Ext_Trig_Metric_en_reg_0);
  output FWL1_Empty;
  output empty2__0;
  output [0:0]E;
  input [0:0]SR;
  input core_aclk;
  input FWL_Empty;
  input Last_fifo_Wr_en;
  input [1:0]out;
  input Ext_Trig_Metric_en_reg;
  input [0:0]Ext_Trig_Metric_en_reg_0;

  wire [0:0]E;
  wire Ext_Trig_Metric_en_reg;
  wire [0:0]Ext_Trig_Metric_en_reg_0;
  wire FWL1_Empty;
  wire FWL_Empty;
  wire Last_fifo_Wr_en;
  wire [0:0]SR;
  wire core_aclk;
  wire empty0;
  wire empty2__0;
  wire empty_i_2__6_n_0;
  wire empty_i_4__4_n_0;
  wire empty_i_5__4_n_0;
  wire empty_i_6__0_n_0;
  wire [1:0]out;
  wire p_0_in;
  wire [5:0]p_0_in__6;
  wire \rptr[0]_i_1__4_n_0 ;
  wire \rptr[1]_i_1__4_n_0 ;
  wire \rptr[2]_i_1__4_n_0 ;
  wire \rptr[3]_i_1__4_n_0 ;
  wire \rptr[4]_i_1__4_n_0 ;
  wire \rptr[5]_i_1__5_n_0 ;
  wire [4:0]rptr_reg;
  wire [4:0]wptr_reg;
  wire \wptr_reg_n_0_[5] ;

  LUT2 #(
    .INIT(4'h1)) 
    FWL_Rd_Vld_i_1
       (.I0(FWL1_Empty),
        .I1(FWL_Empty),
        .O(E));
  LUT6 #(
    .INIT(64'hA0E0A0A0A0A0A0A0)) 
    empty_i_1__0
       (.I0(FWL1_Empty),
        .I1(empty_i_2__6_n_0),
        .I2(empty2__0),
        .I3(FWL_Empty),
        .I4(empty_i_4__4_n_0),
        .I5(empty_i_5__4_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h6AAAAAAA95555555)) 
    empty_i_2__6
       (.I0(rptr_reg[4]),
        .I1(rptr_reg[3]),
        .I2(rptr_reg[1]),
        .I3(rptr_reg[0]),
        .I4(rptr_reg[2]),
        .I5(wptr_reg[4]),
        .O(empty_i_2__6_n_0));
  LUT4 #(
    .INIT(16'h77F7)) 
    empty_i_3
       (.I0(Last_fifo_Wr_en),
        .I1(out[0]),
        .I2(out[1]),
        .I3(Ext_Trig_Metric_en_reg),
        .O(empty2__0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_4__4
       (.I0(wptr_reg[0]),
        .I1(rptr_reg[2]),
        .I2(wptr_reg[2]),
        .I3(rptr_reg[0]),
        .I4(rptr_reg[1]),
        .I5(wptr_reg[1]),
        .O(empty_i_4__4_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_5__4
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(rptr_reg[4]),
        .I2(p_0_in),
        .I3(empty_i_6__0_n_0),
        .I4(rptr_reg[3]),
        .I5(wptr_reg[3]),
        .O(empty_i_5__4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_6__0
       (.I0(rptr_reg[2]),
        .I1(rptr_reg[0]),
        .I2(rptr_reg[1]),
        .O(empty_i_6__0_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(FWL1_Empty),
        .S(SR));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__4 
       (.I0(rptr_reg[0]),
        .O(\rptr[0]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair72" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__4 
       (.I0(rptr_reg[1]),
        .I1(rptr_reg[0]),
        .O(\rptr[1]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair70" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__4 
       (.I0(rptr_reg[0]),
        .I1(rptr_reg[1]),
        .I2(rptr_reg[2]),
        .O(\rptr[2]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__4 
       (.I0(rptr_reg[3]),
        .I1(rptr_reg[1]),
        .I2(rptr_reg[0]),
        .I3(rptr_reg[2]),
        .O(\rptr[3]_i_1__4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair68" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__4 
       (.I0(rptr_reg[2]),
        .I1(rptr_reg[0]),
        .I2(rptr_reg[1]),
        .I3(rptr_reg[3]),
        .I4(rptr_reg[4]),
        .O(\rptr[4]_i_1__4_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__5 
       (.I0(rptr_reg[4]),
        .I1(rptr_reg[3]),
        .I2(rptr_reg[1]),
        .I3(rptr_reg[0]),
        .I4(rptr_reg[2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__5_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[0]_i_1__4_n_0 ),
        .Q(rptr_reg[0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[1]_i_1__4_n_0 ),
        .Q(rptr_reg[1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[2]_i_1__4_n_0 ),
        .Q(rptr_reg[2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[3]_i_1__4_n_0 ),
        .Q(rptr_reg[3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[4]_i_1__4_n_0 ),
        .Q(rptr_reg[4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[5]_i_1__5_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__6 
       (.I0(wptr_reg[0]),
        .O(p_0_in__6[0]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__6 
       (.I0(wptr_reg[0]),
        .I1(wptr_reg[1]),
        .O(p_0_in__6[1]));
  (* SOFT_HLUTNM = "soft_lutpair71" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__6 
       (.I0(wptr_reg[0]),
        .I1(wptr_reg[1]),
        .I2(wptr_reg[2]),
        .O(p_0_in__6[2]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__6 
       (.I0(wptr_reg[1]),
        .I1(wptr_reg[0]),
        .I2(wptr_reg[2]),
        .I3(wptr_reg[3]),
        .O(p_0_in__6[3]));
  (* SOFT_HLUTNM = "soft_lutpair69" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__6 
       (.I0(wptr_reg[2]),
        .I1(wptr_reg[0]),
        .I2(wptr_reg[1]),
        .I3(wptr_reg[3]),
        .I4(wptr_reg[4]),
        .O(p_0_in__6[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__6 
       (.I0(wptr_reg[4]),
        .I1(wptr_reg[3]),
        .I2(wptr_reg[1]),
        .I3(wptr_reg[0]),
        .I4(wptr_reg[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__6[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(Ext_Trig_Metric_en_reg_0),
        .D(p_0_in__6[0]),
        .Q(wptr_reg[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(Ext_Trig_Metric_en_reg_0),
        .D(p_0_in__6[1]),
        .Q(wptr_reg[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(Ext_Trig_Metric_en_reg_0),
        .D(p_0_in__6[2]),
        .Q(wptr_reg[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(Ext_Trig_Metric_en_reg_0),
        .D(p_0_in__6[3]),
        .Q(wptr_reg[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(Ext_Trig_Metric_en_reg_0),
        .D(p_0_in__6[4]),
        .Q(wptr_reg[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(Ext_Trig_Metric_en_reg_0),
        .D(p_0_in__6[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_39
   (FSWI_Empty,
    FSWI_Rd_Data,
    Q,
    F1_Wr_Data,
    \rptr_reg[4]_0 ,
    SR,
    core_aclk,
    dout0_4,
    \s_level_out_bus_d4_reg[0] ,
    FSWI1_Empty,
    awid_match_d1,
    out,
    E);
  output FSWI_Empty;
  output FSWI_Rd_Data;
  output [4:0]Q;
  output F1_Wr_Data;
  output [4:0]\rptr_reg[4]_0 ;
  input [0:0]SR;
  input core_aclk;
  input dout0_4;
  input [0:0]\s_level_out_bus_d4_reg[0] ;
  input FSWI1_Empty;
  input awid_match_d1;
  input [0:0]out;
  input [0:0]E;

  wire [0:0]E;
  wire F1_Wr_Data;
  wire FSWI1_Empty;
  wire FSWI_Empty;
  wire FSWI_Rd_Data;
  wire [4:0]Q;
  wire [0:0]SR;
  wire awid_match_d1;
  wire core_aclk;
  wire dout0_4;
  wire empty0;
  wire empty_i_2__3_n_0;
  wire empty_i_3__3_n_0;
  wire empty_i_4__1_n_0;
  wire empty_i_5__1_n_0;
  wire [0:0]out;
  wire p_0_in;
  wire [5:0]p_0_in__9;
  wire \rptr[0]_i_1__1_n_0 ;
  wire \rptr[1]_i_1__1_n_0 ;
  wire \rptr[2]_i_1__1_n_0 ;
  wire \rptr[3]_i_1__1_n_0 ;
  wire \rptr[4]_i_1__1_n_0 ;
  wire \rptr[5]_i_1__2_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire [0:0]\s_level_out_bus_d4_reg[0] ;
  wire \wptr_reg_n_0_[5] ;

  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0_4),
        .Q(FSWI_Rd_Data),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0A0E0A0A0A0A0A0A)) 
    empty_i_1__1
       (.I0(FSWI_Empty),
        .I1(empty_i_2__3_n_0),
        .I2(\s_level_out_bus_d4_reg[0] ),
        .I3(FSWI1_Empty),
        .I4(empty_i_3__3_n_0),
        .I5(empty_i_4__1_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h6AAAAAAA95555555)) 
    empty_i_2__3
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(Q[4]),
        .O(empty_i_2__3_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_3__3
       (.I0(Q[0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(empty_i_3__3_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_4__1
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in),
        .I3(empty_i_5__1_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(empty_i_4__1_n_0));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_5__1
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_5__1_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(FSWI_Empty),
        .S(SR));
  LUT2 #(
    .INIT(4'hB)) 
    mem_reg_0_31_0_0_i_1__0
       (.I0(awid_match_d1),
        .I1(out),
        .O(F1_Wr_Data));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__1 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair77" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__1 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair75" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__1 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__1 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1__1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair74" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__1 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1__1_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__2 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__2_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[0]_i_1__1_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[1]_i_1__1_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[2]_i_1__1_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[3]_i_1__1_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[4]_i_1__1_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[5]_i_1__2_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__9 
       (.I0(Q[0]),
        .O(p_0_in__9[0]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__9 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__9[1]));
  (* SOFT_HLUTNM = "soft_lutpair76" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__9 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in__9[2]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__9 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_0_in__9[3]));
  (* SOFT_HLUTNM = "soft_lutpair73" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__9 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_0_in__9[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__9 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__9[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__9[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__9[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__9[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__9[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__9[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__9[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo_40
   (FWL_Empty,
    Q,
    \rptr_reg[4]_0 ,
    \GEN_MUX_N_CNT.Add_in_Valid_reg ,
    SR,
    core_aclk,
    dout0_3,
    \s_level_out_bus_d4_reg[0] ,
    FWL1_Empty,
    Num_RLasts_En,
    FWL_Rd_Vld,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ,
    E);
  output FWL_Empty;
  output [4:0]Q;
  output [4:0]\rptr_reg[4]_0 ;
  output \GEN_MUX_N_CNT.Add_in_Valid_reg ;
  input [0:0]SR;
  input core_aclk;
  input dout0_3;
  input [0:0]\s_level_out_bus_d4_reg[0] ;
  input FWL1_Empty;
  input Num_RLasts_En;
  input FWL_Rd_Vld;
  input [1:0]\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ;
  input [0:0]E;

  wire [0:0]E;
  wire FWL1_Empty;
  wire FWL_Empty;
  wire FWL_Rd_Data;
  wire FWL_Rd_Vld;
  wire [1:0]\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ;
  wire \GEN_MUX_N_CNT.Add_in_Valid_reg ;
  wire Num_RLasts_En;
  wire [4:0]Q;
  wire [0:0]SR;
  wire core_aclk;
  wire dout0_3;
  wire empty0;
  wire empty_i_2__5_n_0;
  wire empty_i_3__5_n_0;
  wire empty_i_4__3_n_0;
  wire empty_i_5__3_n_0;
  wire p_0_in;
  wire [5:0]p_0_in__7;
  wire \rptr[0]_i_1__3_n_0 ;
  wire \rptr[1]_i_1__3_n_0 ;
  wire \rptr[2]_i_1__3_n_0 ;
  wire \rptr[3]_i_1__3_n_0 ;
  wire \rptr[4]_i_1__3_n_0 ;
  wire \rptr[5]_i_1__4_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire [0:0]\s_level_out_bus_d4_reg[0] ;
  wire \wptr_reg_n_0_[5] ;

  LUT5 #(
    .INIT(32'hAA00C000)) 
    \GEN_MUX_N_CNT.Add_in_Valid_i_7 
       (.I0(Num_RLasts_En),
        .I1(FWL_Rd_Vld),
        .I2(FWL_Rd_Data),
        .I3(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] [1]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] [0]),
        .O(\GEN_MUX_N_CNT.Add_in_Valid_reg ));
  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0_3),
        .Q(FWL_Rd_Data),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0A0E0A0A0A0A0A0A)) 
    empty_i_1__2
       (.I0(FWL_Empty),
        .I1(empty_i_2__5_n_0),
        .I2(\s_level_out_bus_d4_reg[0] ),
        .I3(FWL1_Empty),
        .I4(empty_i_3__5_n_0),
        .I5(empty_i_4__3_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h6AAAAAAA95555555)) 
    empty_i_2__5
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(Q[4]),
        .O(empty_i_2__5_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_3__5
       (.I0(Q[0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(empty_i_3__5_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_4__3
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in),
        .I3(empty_i_5__3_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(empty_i_4__3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_5__3
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_5__3_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(FWL_Empty),
        .S(SR));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__3 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair82" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__3 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair81" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__3 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__3 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1__3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair79" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__3 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1__3_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__4 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__4_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[0]_i_1__3_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[1]_i_1__3_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[2]_i_1__3_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[3]_i_1__3_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[4]_i_1__3_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(\rptr[5]_i_1__4_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__7 
       (.I0(Q[0]),
        .O(p_0_in__7[0]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__7 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__7[1]));
  (* SOFT_HLUTNM = "soft_lutpair80" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__7 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in__7[2]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__7 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_0_in__7[3]));
  (* SOFT_HLUTNM = "soft_lutpair78" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__7 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_0_in__7[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__7 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__7[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__7[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__7[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__7[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__7[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__7[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__7[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized0
   (F3_Empty,
    E,
    Q,
    \rptr_reg[5]_0 ,
    \rptr_reg[4]_0 ,
    D,
    \Wr_Lat_Cnt_Diff_reg_reg[31] ,
    SR,
    core_aclk,
    Ext_Trig_Metric_en_reg,
    out,
    wr_latency_start_d2,
    F4_Empty,
    S,
    \dout_reg[7]_0 ,
    \dout_reg[11]_0 ,
    \dout_reg[15]_0 ,
    \dout_reg[19]_0 ,
    \dout_reg[23]_0 ,
    \dout_reg[27]_0 ,
    \dout_reg[31]_0 ,
    \dout_reg[32]_0 ,
    dout0);
  output F3_Empty;
  output [0:0]E;
  output [4:0]Q;
  output [0:0]\rptr_reg[5]_0 ;
  output [4:0]\rptr_reg[4]_0 ;
  output [31:0]D;
  output [31:0]\Wr_Lat_Cnt_Diff_reg_reg[31] ;
  input [0:0]SR;
  input core_aclk;
  input Ext_Trig_Metric_en_reg;
  input [1:0]out;
  input wr_latency_start_d2;
  input F4_Empty;
  input [3:0]S;
  input [3:0]\dout_reg[7]_0 ;
  input [3:0]\dout_reg[11]_0 ;
  input [3:0]\dout_reg[15]_0 ;
  input [3:0]\dout_reg[19]_0 ;
  input [3:0]\dout_reg[23]_0 ;
  input [3:0]\dout_reg[27]_0 ;
  input [3:0]\dout_reg[31]_0 ;
  input [32:0]\dout_reg[32]_0 ;
  input [32:0]dout0;

  wire [31:0]D;
  wire [0:0]E;
  wire Ext_Trig_Metric_en_reg;
  wire F3_Empty;
  wire [32:32]F3_Rd_Data;
  wire F4_Empty;
  wire [4:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire \Wr_Lat_Cnt_Diff_reg[11]_i_2_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[11]_i_3_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[11]_i_4_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[11]_i_5_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[15]_i_2_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[15]_i_3_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[15]_i_4_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[15]_i_5_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[19]_i_2_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[19]_i_3_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[19]_i_4_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[19]_i_5_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[23]_i_2_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[23]_i_3_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[23]_i_4_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[23]_i_5_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[27]_i_2_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[27]_i_3_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[27]_i_4_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[27]_i_5_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_11_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_12_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_13_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_14_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_15_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_16_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_17_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_18_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_20_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_21_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_22_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_23_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_24_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_25_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_26_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_27_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_29_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_2_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_30_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_31_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_32_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_33_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_34_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_35_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_36_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_37_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_38_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_39_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_3_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_40_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_41_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_42_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_43_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_44_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[31]_i_4_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[3]_i_2_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[3]_i_3_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[3]_i_4_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[3]_i_5_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[7]_i_2_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[7]_i_3_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[7]_i_4_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg[7]_i_5_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_3 ;
  wire [31:0]\Wr_Lat_Cnt_Diff_reg_reg[31] ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_1_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_1_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_1_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_3 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_0 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_1 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_2 ;
  wire \Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_3 ;
  wire core_aclk;
  wire [32:0]dout0;
  wire [3:0]\dout_reg[11]_0 ;
  wire [3:0]\dout_reg[15]_0 ;
  wire [3:0]\dout_reg[19]_0 ;
  wire [3:0]\dout_reg[23]_0 ;
  wire [3:0]\dout_reg[27]_0 ;
  wire [3:0]\dout_reg[31]_0 ;
  wire [32:0]\dout_reg[32]_0 ;
  wire [3:0]\dout_reg[7]_0 ;
  wire empty0;
  wire empty_i_2__8_n_0;
  wire empty_i_3__7_n_0;
  wire empty_i_4__7_n_0;
  wire empty_i_5__7_n_0;
  wire empty_i_6__2_n_0;
  wire [1:0]out;
  wire p_0_in;
  wire [5:0]p_0_in__1;
  wire \rptr[0]_i_1__7_n_0 ;
  wire \rptr[1]_i_1__7_n_0 ;
  wire \rptr[2]_i_1__7_n_0 ;
  wire \rptr[3]_i_1__7_n_0 ;
  wire \rptr[4]_i_1__7_n_0 ;
  wire \rptr[5]_i_1__7_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire [0:0]\rptr_reg[5]_0 ;
  wire \wptr_reg_n_0_[5] ;
  wire wr_latency_start_d2;
  wire [3:3]\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_1_CO_UNCONNECTED ;
  wire [3:0]\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_O_UNCONNECTED ;
  wire [3:0]\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_O_UNCONNECTED ;
  wire [3:0]\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_O_UNCONNECTED ;
  wire [3:0]\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_O_UNCONNECTED ;

  LUT2 #(
    .INIT(4'h1)) 
    F34_Rd_Vld_i_1
       (.I0(F3_Empty),
        .I1(F4_Empty),
        .O(\rptr_reg[5]_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[11]_i_2 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [11]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [11]),
        .O(\Wr_Lat_Cnt_Diff_reg[11]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[11]_i_3 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [10]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [10]),
        .O(\Wr_Lat_Cnt_Diff_reg[11]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[11]_i_4 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [9]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [9]),
        .O(\Wr_Lat_Cnt_Diff_reg[11]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[11]_i_5 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [8]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [8]),
        .O(\Wr_Lat_Cnt_Diff_reg[11]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[15]_i_2 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [15]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [15]),
        .O(\Wr_Lat_Cnt_Diff_reg[15]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[15]_i_3 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [14]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [14]),
        .O(\Wr_Lat_Cnt_Diff_reg[15]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[15]_i_4 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [13]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [13]),
        .O(\Wr_Lat_Cnt_Diff_reg[15]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[15]_i_5 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [12]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [12]),
        .O(\Wr_Lat_Cnt_Diff_reg[15]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[19]_i_2 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [19]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [19]),
        .O(\Wr_Lat_Cnt_Diff_reg[19]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[19]_i_3 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [18]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [18]),
        .O(\Wr_Lat_Cnt_Diff_reg[19]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[19]_i_4 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [17]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [17]),
        .O(\Wr_Lat_Cnt_Diff_reg[19]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[19]_i_5 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [16]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [16]),
        .O(\Wr_Lat_Cnt_Diff_reg[19]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[23]_i_2 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [23]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [23]),
        .O(\Wr_Lat_Cnt_Diff_reg[23]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[23]_i_3 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [22]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [22]),
        .O(\Wr_Lat_Cnt_Diff_reg[23]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[23]_i_4 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [21]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [21]),
        .O(\Wr_Lat_Cnt_Diff_reg[23]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[23]_i_5 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [20]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [20]),
        .O(\Wr_Lat_Cnt_Diff_reg[23]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[27]_i_2 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [27]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [27]),
        .O(\Wr_Lat_Cnt_Diff_reg[27]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[27]_i_3 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [26]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [26]),
        .O(\Wr_Lat_Cnt_Diff_reg[27]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[27]_i_4 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [25]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [25]),
        .O(\Wr_Lat_Cnt_Diff_reg[27]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[27]_i_5 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [24]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [24]),
        .O(\Wr_Lat_Cnt_Diff_reg[27]_i_5_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_11 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [30]),
        .I1(\dout_reg[32]_0 [30]),
        .I2(\dout_reg[32]_0 [31]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [31]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_11_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_12 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [28]),
        .I1(\dout_reg[32]_0 [28]),
        .I2(\dout_reg[32]_0 [29]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [29]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_12_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_13 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [26]),
        .I1(\dout_reg[32]_0 [26]),
        .I2(\dout_reg[32]_0 [27]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [27]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_13_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_14 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [24]),
        .I1(\dout_reg[32]_0 [24]),
        .I2(\dout_reg[32]_0 [25]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [25]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_14_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_15 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [30]),
        .I1(\dout_reg[32]_0 [30]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [31]),
        .I3(\dout_reg[32]_0 [31]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_15_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_16 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [28]),
        .I1(\dout_reg[32]_0 [28]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [29]),
        .I3(\dout_reg[32]_0 [29]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_16_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_17 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [26]),
        .I1(\dout_reg[32]_0 [26]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [27]),
        .I3(\dout_reg[32]_0 [27]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_17_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_18 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [24]),
        .I1(\dout_reg[32]_0 [24]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [25]),
        .I3(\dout_reg[32]_0 [25]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_18_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_2 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [30]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [30]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_20 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [22]),
        .I1(\dout_reg[32]_0 [22]),
        .I2(\dout_reg[32]_0 [23]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [23]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_20_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_21 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [20]),
        .I1(\dout_reg[32]_0 [20]),
        .I2(\dout_reg[32]_0 [21]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [21]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_21_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_22 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [18]),
        .I1(\dout_reg[32]_0 [18]),
        .I2(\dout_reg[32]_0 [19]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [19]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_22_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_23 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [16]),
        .I1(\dout_reg[32]_0 [16]),
        .I2(\dout_reg[32]_0 [17]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [17]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_23_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_24 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [22]),
        .I1(\dout_reg[32]_0 [22]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [23]),
        .I3(\dout_reg[32]_0 [23]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_24_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_25 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [20]),
        .I1(\dout_reg[32]_0 [20]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [21]),
        .I3(\dout_reg[32]_0 [21]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_25_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_26 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [18]),
        .I1(\dout_reg[32]_0 [18]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [19]),
        .I3(\dout_reg[32]_0 [19]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_26_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_27 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [16]),
        .I1(\dout_reg[32]_0 [16]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [17]),
        .I3(\dout_reg[32]_0 [17]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_27_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_29 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [14]),
        .I1(\dout_reg[32]_0 [14]),
        .I2(\dout_reg[32]_0 [15]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [15]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_29_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_3 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [29]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [29]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_3_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_30 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [12]),
        .I1(\dout_reg[32]_0 [12]),
        .I2(\dout_reg[32]_0 [13]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [13]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_30_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_31 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [10]),
        .I1(\dout_reg[32]_0 [10]),
        .I2(\dout_reg[32]_0 [11]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [11]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_31_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_32 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [8]),
        .I1(\dout_reg[32]_0 [8]),
        .I2(\dout_reg[32]_0 [9]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [9]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_32_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_33 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [14]),
        .I1(\dout_reg[32]_0 [14]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [15]),
        .I3(\dout_reg[32]_0 [15]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_33_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_34 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [12]),
        .I1(\dout_reg[32]_0 [12]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [13]),
        .I3(\dout_reg[32]_0 [13]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_34_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_35 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [10]),
        .I1(\dout_reg[32]_0 [10]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [11]),
        .I3(\dout_reg[32]_0 [11]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_35_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_36 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [8]),
        .I1(\dout_reg[32]_0 [8]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [9]),
        .I3(\dout_reg[32]_0 [9]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_36_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_37 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [6]),
        .I1(\dout_reg[32]_0 [6]),
        .I2(\dout_reg[32]_0 [7]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [7]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_37_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_38 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [4]),
        .I1(\dout_reg[32]_0 [4]),
        .I2(\dout_reg[32]_0 [5]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [5]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_38_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_39 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [2]),
        .I1(\dout_reg[32]_0 [2]),
        .I2(\dout_reg[32]_0 [3]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [3]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_39_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_4 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [28]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [28]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_40 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [0]),
        .I1(\dout_reg[32]_0 [0]),
        .I2(\dout_reg[32]_0 [1]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31] [1]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_40_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_41 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [6]),
        .I1(\dout_reg[32]_0 [6]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [7]),
        .I3(\dout_reg[32]_0 [7]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_41_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_42 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [4]),
        .I1(\dout_reg[32]_0 [4]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [5]),
        .I3(\dout_reg[32]_0 [5]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_42_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_43 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [2]),
        .I1(\dout_reg[32]_0 [2]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [3]),
        .I3(\dout_reg[32]_0 [3]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_43_n_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_44 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[31] [0]),
        .I1(\dout_reg[32]_0 [0]),
        .I2(\Wr_Lat_Cnt_Diff_reg_reg[31] [1]),
        .I3(\dout_reg[32]_0 [1]),
        .O(\Wr_Lat_Cnt_Diff_reg[31]_i_44_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[3]_i_2 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [3]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [3]),
        .O(\Wr_Lat_Cnt_Diff_reg[3]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[3]_i_3 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [2]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [2]),
        .O(\Wr_Lat_Cnt_Diff_reg[3]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[3]_i_4 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [1]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [1]),
        .O(\Wr_Lat_Cnt_Diff_reg[3]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[3]_i_5 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [0]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [0]),
        .O(\Wr_Lat_Cnt_Diff_reg[3]_i_5_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[7]_i_2 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [7]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [7]),
        .O(\Wr_Lat_Cnt_Diff_reg[7]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[7]_i_3 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [6]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [6]),
        .O(\Wr_Lat_Cnt_Diff_reg[7]_i_3_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[7]_i_4 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [5]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [5]),
        .O(\Wr_Lat_Cnt_Diff_reg[7]_i_4_n_0 ));
  LUT5 #(
    .INIT(32'h99966696)) 
    \Wr_Lat_Cnt_Diff_reg[7]_i_5 
       (.I0(F3_Rd_Data),
        .I1(\dout_reg[32]_0 [32]),
        .I2(\dout_reg[32]_0 [4]),
        .I3(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ),
        .I4(\Wr_Lat_Cnt_Diff_reg_reg[31] [4]),
        .O(\Wr_Lat_Cnt_Diff_reg[7]_i_5_n_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[11]_i_1 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[11]_i_2_n_0 ,\Wr_Lat_Cnt_Diff_reg[11]_i_3_n_0 ,\Wr_Lat_Cnt_Diff_reg[11]_i_4_n_0 ,\Wr_Lat_Cnt_Diff_reg[11]_i_5_n_0 }),
        .O(D[11:8]),
        .S(\dout_reg[11]_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[15]_i_1 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[11]_i_1_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[15]_i_2_n_0 ,\Wr_Lat_Cnt_Diff_reg[15]_i_3_n_0 ,\Wr_Lat_Cnt_Diff_reg[15]_i_4_n_0 ,\Wr_Lat_Cnt_Diff_reg[15]_i_5_n_0 }),
        .O(D[15:12]),
        .S(\dout_reg[15]_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[19]_i_1 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[15]_i_1_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[19]_i_2_n_0 ,\Wr_Lat_Cnt_Diff_reg[19]_i_3_n_0 ,\Wr_Lat_Cnt_Diff_reg[19]_i_4_n_0 ,\Wr_Lat_Cnt_Diff_reg[19]_i_5_n_0 }),
        .O(D[19:16]),
        .S(\dout_reg[19]_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[23]_i_1 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[19]_i_1_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[23]_i_2_n_0 ,\Wr_Lat_Cnt_Diff_reg[23]_i_3_n_0 ,\Wr_Lat_Cnt_Diff_reg[23]_i_4_n_0 ,\Wr_Lat_Cnt_Diff_reg[23]_i_5_n_0 }),
        .O(D[23:20]),
        .S(\dout_reg[23]_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[27]_i_1 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[23]_i_1_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[27]_i_2_n_0 ,\Wr_Lat_Cnt_Diff_reg[27]_i_3_n_0 ,\Wr_Lat_Cnt_Diff_reg[27]_i_4_n_0 ,\Wr_Lat_Cnt_Diff_reg[27]_i_5_n_0 }),
        .O(D[27:24]),
        .S(\dout_reg[27]_0 ));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[31]_i_1 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[27]_i_1_n_0 ),
        .CO({\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_1_CO_UNCONNECTED [3],\Wr_Lat_Cnt_Diff_reg_reg[31]_i_1_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_1_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,\Wr_Lat_Cnt_Diff_reg[31]_i_2_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_3_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_4_n_0 }),
        .O(D[31:28]),
        .S(\dout_reg[31]_0 ));
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[31]_i_10 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[31]_i_20_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_21_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_22_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_23_n_0 }),
        .O(\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_O_UNCONNECTED [3:0]),
        .S({\Wr_Lat_Cnt_Diff_reg[31]_i_24_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_25_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_26_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_27_n_0 }));
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[31]_i_19 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[31]_i_29_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_30_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_31_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_32_n_0 }),
        .O(\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_19_O_UNCONNECTED [3:0]),
        .S({\Wr_Lat_Cnt_Diff_reg[31]_i_33_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_34_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_35_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_36_n_0 }));
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[31]_i_28 
       (.CI(1'b0),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[31]_i_37_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_38_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_39_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_40_n_0 }),
        .O(\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_28_O_UNCONNECTED [3:0]),
        .S({\Wr_Lat_Cnt_Diff_reg[31]_i_41_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_42_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_43_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_44_n_0 }));
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[31]_i_9 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[31]_i_10_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[31]_i_11_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_12_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_13_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_14_n_0 }),
        .O(\NLW_Wr_Lat_Cnt_Diff_reg_reg[31]_i_9_O_UNCONNECTED [3:0]),
        .S({\Wr_Lat_Cnt_Diff_reg[31]_i_15_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_16_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_17_n_0 ,\Wr_Lat_Cnt_Diff_reg[31]_i_18_n_0 }));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[3]_i_1 
       (.CI(1'b0),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_3 }),
        .CYINIT(1'b1),
        .DI({\Wr_Lat_Cnt_Diff_reg[3]_i_2_n_0 ,\Wr_Lat_Cnt_Diff_reg[3]_i_3_n_0 ,\Wr_Lat_Cnt_Diff_reg[3]_i_4_n_0 ,\Wr_Lat_Cnt_Diff_reg[3]_i_5_n_0 }),
        .O(D[3:0]),
        .S(S));
  (* METHODOLOGY_DRC_VIOS = "{SYNTH-8 {cell *THIS*}}" *) 
  CARRY4 \Wr_Lat_Cnt_Diff_reg_reg[7]_i_1 
       (.CI(\Wr_Lat_Cnt_Diff_reg_reg[3]_i_1_n_0 ),
        .CO({\Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_0 ,\Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_1 ,\Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_2 ,\Wr_Lat_Cnt_Diff_reg_reg[7]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({\Wr_Lat_Cnt_Diff_reg[7]_i_2_n_0 ,\Wr_Lat_Cnt_Diff_reg[7]_i_3_n_0 ,\Wr_Lat_Cnt_Diff_reg[7]_i_4_n_0 ,\Wr_Lat_Cnt_Diff_reg[7]_i_5_n_0 }),
        .O(D[7:4]),
        .S(\dout_reg[7]_0 ));
  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[0]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [0]),
        .R(1'b0));
  FDRE \dout_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[10]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [10]),
        .R(1'b0));
  FDRE \dout_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[11]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [11]),
        .R(1'b0));
  FDRE \dout_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[12]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [12]),
        .R(1'b0));
  FDRE \dout_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[13]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [13]),
        .R(1'b0));
  FDRE \dout_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[14]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [14]),
        .R(1'b0));
  FDRE \dout_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[15]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [15]),
        .R(1'b0));
  FDRE \dout_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[16]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [16]),
        .R(1'b0));
  FDRE \dout_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[17]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [17]),
        .R(1'b0));
  FDRE \dout_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[18]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [18]),
        .R(1'b0));
  FDRE \dout_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[19]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [19]),
        .R(1'b0));
  FDRE \dout_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[1]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [1]),
        .R(1'b0));
  FDRE \dout_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[20]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [20]),
        .R(1'b0));
  FDRE \dout_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[21]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [21]),
        .R(1'b0));
  FDRE \dout_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[22]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [22]),
        .R(1'b0));
  FDRE \dout_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[23]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [23]),
        .R(1'b0));
  FDRE \dout_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[24]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [24]),
        .R(1'b0));
  FDRE \dout_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[25]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [25]),
        .R(1'b0));
  FDRE \dout_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[26]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [26]),
        .R(1'b0));
  FDRE \dout_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[27]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [27]),
        .R(1'b0));
  FDRE \dout_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[28]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [28]),
        .R(1'b0));
  FDRE \dout_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[29]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [29]),
        .R(1'b0));
  FDRE \dout_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[2]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [2]),
        .R(1'b0));
  FDRE \dout_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[30]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [30]),
        .R(1'b0));
  FDRE \dout_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[31]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [31]),
        .R(1'b0));
  FDRE \dout_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[32]),
        .Q(F3_Rd_Data),
        .R(1'b0));
  FDRE \dout_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[3]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [3]),
        .R(1'b0));
  FDRE \dout_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[4]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [4]),
        .R(1'b0));
  FDRE \dout_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[5]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [5]),
        .R(1'b0));
  FDRE \dout_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[6]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [6]),
        .R(1'b0));
  FDRE \dout_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[7]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [7]),
        .R(1'b0));
  FDRE \dout_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[8]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [8]),
        .R(1'b0));
  FDRE \dout_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(dout0[9]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[31] [9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4FFF4FFF4FFF0000)) 
    empty_i_1__7
       (.I0(Ext_Trig_Metric_en_reg),
        .I1(out[1]),
        .I2(out[0]),
        .I3(wr_latency_start_d2),
        .I4(F3_Empty),
        .I5(empty_i_2__8_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h0000000080080880)) 
    empty_i_2__8
       (.I0(empty_i_3__7_n_0),
        .I1(empty_i_4__7_n_0),
        .I2(Q[4]),
        .I3(empty_i_5__7_n_0),
        .I4(\rptr_reg[4]_0 [4]),
        .I5(F4_Empty),
        .O(empty_i_2__8_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_3__7
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in),
        .I3(empty_i_6__2_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(empty_i_3__7_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_4__7
       (.I0(Q[0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(empty_i_4__7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    empty_i_5__7
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(empty_i_5__7_n_0));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_6__2
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_6__2_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(F3_Empty),
        .S(SR));
  LUT4 #(
    .INIT(16'hB000)) 
    mem_reg_0_31_0_5_i_1__3
       (.I0(Ext_Trig_Metric_en_reg),
        .I1(out[1]),
        .I2(out[0]),
        .I3(wr_latency_start_d2),
        .O(E));
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__7 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__7 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__7 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__7 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1__7_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__7 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1__7_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__7 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__7_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[0]_i_1__7_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[1]_i_1__7_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[2]_i_1__7_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[3]_i_1__7_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[4]_i_1__7_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[5]_i_1__7_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__1 
       (.I0(Q[0]),
        .O(p_0_in__1[0]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_0_in__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_0_in__1[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__1[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__1[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__1[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__1[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__1[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__1[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__1[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized1
   (F4_Empty,
    E,
    Q,
    \rptr_reg[4]_0 ,
    S,
    \Wr_Lat_Cnt_Diff_reg_reg[3] ,
    \Wr_Lat_Cnt_Diff_reg_reg[7] ,
    \Wr_Lat_Cnt_Diff_reg_reg[11] ,
    \Wr_Lat_Cnt_Diff_reg_reg[15] ,
    \Wr_Lat_Cnt_Diff_reg_reg[19] ,
    \Wr_Lat_Cnt_Diff_reg_reg[23] ,
    \Wr_Lat_Cnt_Diff_reg_reg[27] ,
    \Wr_Lat_Cnt_Diff_reg_reg[31] ,
    SR,
    core_aclk,
    Ext_Trig_Metric_en_reg,
    out,
    wr_latency_end_d2,
    F3_Empty,
    \dout_reg[31]_0 ,
    \Count_Out_i_reg[31] ,
    empty_reg_0);
  output F4_Empty;
  output [0:0]E;
  output [4:0]Q;
  output [4:0]\rptr_reg[4]_0 ;
  output [3:0]S;
  output [32:0]\Wr_Lat_Cnt_Diff_reg_reg[3] ;
  output [3:0]\Wr_Lat_Cnt_Diff_reg_reg[7] ;
  output [3:0]\Wr_Lat_Cnt_Diff_reg_reg[11] ;
  output [3:0]\Wr_Lat_Cnt_Diff_reg_reg[15] ;
  output [3:0]\Wr_Lat_Cnt_Diff_reg_reg[19] ;
  output [3:0]\Wr_Lat_Cnt_Diff_reg_reg[23] ;
  output [3:0]\Wr_Lat_Cnt_Diff_reg_reg[27] ;
  output [3:0]\Wr_Lat_Cnt_Diff_reg_reg[31] ;
  input [0:0]SR;
  input core_aclk;
  input Ext_Trig_Metric_en_reg;
  input [1:0]out;
  input wr_latency_end_d2;
  input F3_Empty;
  input [31:0]\dout_reg[31]_0 ;
  input [32:0]\Count_Out_i_reg[31] ;
  input [0:0]empty_reg_0;

  wire [32:0]\Count_Out_i_reg[31] ;
  wire [0:0]E;
  wire Ext_Trig_Metric_en_reg;
  wire F3_Empty;
  wire F4_Empty;
  wire [4:0]Q;
  wire [3:0]S;
  wire [0:0]SR;
  wire [3:0]\Wr_Lat_Cnt_Diff_reg_reg[11] ;
  wire [3:0]\Wr_Lat_Cnt_Diff_reg_reg[15] ;
  wire [3:0]\Wr_Lat_Cnt_Diff_reg_reg[19] ;
  wire [3:0]\Wr_Lat_Cnt_Diff_reg_reg[23] ;
  wire [3:0]\Wr_Lat_Cnt_Diff_reg_reg[27] ;
  wire [3:0]\Wr_Lat_Cnt_Diff_reg_reg[31] ;
  wire [32:0]\Wr_Lat_Cnt_Diff_reg_reg[3] ;
  wire [3:0]\Wr_Lat_Cnt_Diff_reg_reg[7] ;
  wire core_aclk;
  wire [31:0]\dout_reg[31]_0 ;
  wire empty0;
  wire empty_i_2__7_n_0;
  wire empty_i_3__6_n_0;
  wire empty_i_4__6_n_0;
  wire empty_i_5__6_n_0;
  wire empty_i_6__1_n_0;
  wire [0:0]empty_reg_0;
  wire [1:0]out;
  wire p_0_in;
  wire [5:0]p_0_in__2;
  wire \rptr[0]_i_1__6_n_0 ;
  wire \rptr[1]_i_1__6_n_0 ;
  wire \rptr[2]_i_1__6_n_0 ;
  wire \rptr[3]_i_1__6_n_0 ;
  wire \rptr[4]_i_1__6_n_0 ;
  wire \rptr[5]_i_1__6_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire \wptr_reg_n_0_[5] ;
  wire wr_latency_end_d2;

  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[11]_i_6 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [11]),
        .I1(\dout_reg[31]_0 [11]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[11] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[11]_i_7 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [10]),
        .I1(\dout_reg[31]_0 [10]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[11] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[11]_i_8 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [9]),
        .I1(\dout_reg[31]_0 [9]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[11] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[11]_i_9 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [8]),
        .I1(\dout_reg[31]_0 [8]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[11] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[15]_i_6 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [15]),
        .I1(\dout_reg[31]_0 [15]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[15] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[15]_i_7 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [14]),
        .I1(\dout_reg[31]_0 [14]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[15] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[15]_i_8 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [13]),
        .I1(\dout_reg[31]_0 [13]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[15] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[15]_i_9 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [12]),
        .I1(\dout_reg[31]_0 [12]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[15] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[19]_i_6 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [19]),
        .I1(\dout_reg[31]_0 [19]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[19] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[19]_i_7 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [18]),
        .I1(\dout_reg[31]_0 [18]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[19] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[19]_i_8 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [17]),
        .I1(\dout_reg[31]_0 [17]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[19] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[19]_i_9 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [16]),
        .I1(\dout_reg[31]_0 [16]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[19] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[23]_i_6 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [23]),
        .I1(\dout_reg[31]_0 [23]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[23] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[23]_i_7 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [22]),
        .I1(\dout_reg[31]_0 [22]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[23] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[23]_i_8 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [21]),
        .I1(\dout_reg[31]_0 [21]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[23] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[23]_i_9 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [20]),
        .I1(\dout_reg[31]_0 [20]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[23] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[27]_i_6 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [27]),
        .I1(\dout_reg[31]_0 [27]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[27] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[27]_i_7 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [26]),
        .I1(\dout_reg[31]_0 [26]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[27] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[27]_i_8 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [25]),
        .I1(\dout_reg[31]_0 [25]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[27] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[27]_i_9 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [24]),
        .I1(\dout_reg[31]_0 [24]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[27] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_5 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [31]),
        .I1(\dout_reg[31]_0 [31]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[31] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_6 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [30]),
        .I1(\dout_reg[31]_0 [30]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[31] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_7 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [29]),
        .I1(\dout_reg[31]_0 [29]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[31] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[31]_i_8 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [28]),
        .I1(\dout_reg[31]_0 [28]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[31] [0]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[3]_i_6 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [3]),
        .I1(\dout_reg[31]_0 [3]),
        .O(S[3]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[3]_i_7 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [2]),
        .I1(\dout_reg[31]_0 [2]),
        .O(S[2]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[3]_i_8 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [1]),
        .I1(\dout_reg[31]_0 [1]),
        .O(S[1]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[3]_i_9 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [0]),
        .I1(\dout_reg[31]_0 [0]),
        .O(S[0]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[7]_i_6 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [7]),
        .I1(\dout_reg[31]_0 [7]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[7] [3]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[7]_i_7 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [6]),
        .I1(\dout_reg[31]_0 [6]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[7] [2]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[7]_i_8 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [5]),
        .I1(\dout_reg[31]_0 [5]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[7] [1]));
  LUT2 #(
    .INIT(4'h9)) 
    \Wr_Lat_Cnt_Diff_reg[7]_i_9 
       (.I0(\Wr_Lat_Cnt_Diff_reg_reg[3] [4]),
        .I1(\dout_reg[31]_0 [4]),
        .O(\Wr_Lat_Cnt_Diff_reg_reg[7] [0]));
  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [0]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [0]),
        .R(1'b0));
  FDRE \dout_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [10]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [10]),
        .R(1'b0));
  FDRE \dout_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [11]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [11]),
        .R(1'b0));
  FDRE \dout_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [12]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [12]),
        .R(1'b0));
  FDRE \dout_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [13]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [13]),
        .R(1'b0));
  FDRE \dout_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [14]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [14]),
        .R(1'b0));
  FDRE \dout_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [15]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [15]),
        .R(1'b0));
  FDRE \dout_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [16]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [16]),
        .R(1'b0));
  FDRE \dout_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [17]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [17]),
        .R(1'b0));
  FDRE \dout_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [18]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [18]),
        .R(1'b0));
  FDRE \dout_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [19]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [19]),
        .R(1'b0));
  FDRE \dout_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [1]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [1]),
        .R(1'b0));
  FDRE \dout_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [20]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [20]),
        .R(1'b0));
  FDRE \dout_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [21]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [21]),
        .R(1'b0));
  FDRE \dout_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [22]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [22]),
        .R(1'b0));
  FDRE \dout_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [23]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [23]),
        .R(1'b0));
  FDRE \dout_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [24]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [24]),
        .R(1'b0));
  FDRE \dout_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [25]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [25]),
        .R(1'b0));
  FDRE \dout_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [26]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [26]),
        .R(1'b0));
  FDRE \dout_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [27]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [27]),
        .R(1'b0));
  FDRE \dout_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [28]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [28]),
        .R(1'b0));
  FDRE \dout_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [29]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [29]),
        .R(1'b0));
  FDRE \dout_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [2]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [2]),
        .R(1'b0));
  FDRE \dout_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [30]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [30]),
        .R(1'b0));
  FDRE \dout_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [31]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [31]),
        .R(1'b0));
  FDRE \dout_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [32]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [32]),
        .R(1'b0));
  FDRE \dout_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [3]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [3]),
        .R(1'b0));
  FDRE \dout_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [4]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [4]),
        .R(1'b0));
  FDRE \dout_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [5]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [5]),
        .R(1'b0));
  FDRE \dout_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [6]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [6]),
        .R(1'b0));
  FDRE \dout_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [7]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [7]),
        .R(1'b0));
  FDRE \dout_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [8]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [8]),
        .R(1'b0));
  FDRE \dout_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Count_Out_i_reg[31] [9]),
        .Q(\Wr_Lat_Cnt_Diff_reg_reg[3] [9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4FFF4FFF4FFF0000)) 
    empty_i_1__6
       (.I0(Ext_Trig_Metric_en_reg),
        .I1(out[1]),
        .I2(out[0]),
        .I3(wr_latency_end_d2),
        .I4(F4_Empty),
        .I5(empty_i_2__7_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h0000000080080880)) 
    empty_i_2__7
       (.I0(empty_i_3__6_n_0),
        .I1(empty_i_4__6_n_0),
        .I2(Q[4]),
        .I3(empty_i_5__6_n_0),
        .I4(\rptr_reg[4]_0 [4]),
        .I5(F3_Empty),
        .O(empty_i_2__7_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_3__6
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in),
        .I3(empty_i_6__1_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(empty_i_3__6_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_4__6
       (.I0(Q[0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(empty_i_4__6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    empty_i_5__6
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(empty_i_5__6_n_0));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_6__1
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_6__1_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(F4_Empty),
        .S(SR));
  LUT4 #(
    .INIT(16'hB000)) 
    mem_reg_0_31_0_5_i_1__2
       (.I0(Ext_Trig_Metric_en_reg),
        .I1(out[1]),
        .I2(out[0]),
        .I3(wr_latency_end_d2),
        .O(E));
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__6 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__6 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair55" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__6 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair54" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__6 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1__6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair52" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__6 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1__6_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__6 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__6_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[0]_i_1__6_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[1]_i_1__6_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[2]_i_1__6_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[3]_i_1__6_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[4]_i_1__6_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(empty_reg_0),
        .D(\rptr[5]_i_1__6_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__2 
       (.I0(Q[0]),
        .O(p_0_in__2[0]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__2[1]));
  (* SOFT_HLUTNM = "soft_lutpair56" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__2 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in__2[2]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_0_in__2[3]));
  (* SOFT_HLUTNM = "soft_lutpair53" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__2 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_0_in__2[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__2[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__2[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__2[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__2[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__2[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__2[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__2[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized2
   (Read_Latency_One_D1_reg,
    Rd_Latency_Fifo_Rd_En_reg,
    Rd_Latency_Fifo_Wr_En_reg,
    Q,
    \wptr_reg[4]_0 ,
    Read_Latency_One_D10,
    \Rd_Latency_Fifo_Rd_Data_D1_reg[32] ,
    SR,
    core_aclk,
    rst_int_n_reg,
    rd_latency_end,
    \RID_Mask_CDC_reg[0] ,
    \ARID_reg_reg[0] ,
    rd_latency_start,
    \s_level_out_bus_d4_reg[0] ,
    Rd_Latency_Fifo_Rd_En,
    Read_Latency_One_D1,
    Read_Latency_One_reg,
    \Rd_Latency_Fifo_Wr_Data_reg[31] );
  output Read_Latency_One_D1_reg;
  output Rd_Latency_Fifo_Rd_En_reg;
  output Rd_Latency_Fifo_Wr_En_reg;
  output [4:0]Q;
  output [4:0]\wptr_reg[4]_0 ;
  output Read_Latency_One_D10;
  output [32:0]\Rd_Latency_Fifo_Rd_Data_D1_reg[32] ;
  input [0:0]SR;
  input core_aclk;
  input rst_int_n_reg;
  input rd_latency_end;
  input \RID_Mask_CDC_reg[0] ;
  input \ARID_reg_reg[0] ;
  input rd_latency_start;
  input [0:0]\s_level_out_bus_d4_reg[0] ;
  input Rd_Latency_Fifo_Rd_En;
  input Read_Latency_One_D1;
  input Read_Latency_One_reg;
  input [32:0]\Rd_Latency_Fifo_Wr_Data_reg[31] ;

  wire \ARID_reg_reg[0] ;
  wire [4:0]Q;
  wire \RID_Mask_CDC_reg[0] ;
  wire Rd_Latency_Fifo_Full;
  wire [32:0]\Rd_Latency_Fifo_Rd_Data_D1_reg[32] ;
  wire Rd_Latency_Fifo_Rd_En;
  wire Rd_Latency_Fifo_Rd_En_out;
  wire Rd_Latency_Fifo_Rd_En_reg;
  wire [32:0]\Rd_Latency_Fifo_Wr_Data_reg[31] ;
  wire Rd_Latency_Fifo_Wr_En_reg;
  wire Read_Latency_One_D1;
  wire Read_Latency_One_D10;
  wire Read_Latency_One_D1_reg;
  wire Read_Latency_One_reg;
  wire [0:0]SR;
  wire almost_full0__8;
  wire core_aclk;
  wire empty0;
  wire empty_i_2__0_n_0;
  wire empty_i_3__0_n_0;
  wire empty_i_4__5_n_0;
  wire empty_i_5__5_n_0;
  wire full0;
  wire full_i_3_n_0;
  wire full_i_4_n_0;
  wire p_0_in;
  wire [5:0]p_0_in__3;
  wire rd_latency_end;
  wire rd_latency_start;
  wire \rptr[0]_i_1__5_n_0 ;
  wire \rptr[1]_i_1__5_n_0 ;
  wire \rptr[2]_i_1__5_n_0 ;
  wire \rptr[3]_i_1__5_n_0 ;
  wire \rptr[4]_i_1__5_n_0 ;
  wire \rptr[5]_i_2_n_0 ;
  wire rst_int_n_reg;
  wire [0:0]\s_level_out_bus_d4_reg[0] ;
  wire [4:0]\wptr_reg[4]_0 ;
  wire \wptr_reg_n_0_[5] ;

  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT4 #(
    .INIT(16'h0008)) 
    Rd_Latency_Fifo_Rd_En_i_1
       (.I0(rst_int_n_reg),
        .I1(rd_latency_end),
        .I2(\RID_Mask_CDC_reg[0] ),
        .I3(Read_Latency_One_D1_reg),
        .O(Rd_Latency_Fifo_Rd_En_reg));
  LUT4 #(
    .INIT(16'h0080)) 
    Rd_Latency_Fifo_Wr_En_i_1
       (.I0(\ARID_reg_reg[0] ),
        .I1(rst_int_n_reg),
        .I2(rd_latency_start),
        .I3(Rd_Latency_Fifo_Full),
        .O(Rd_Latency_Fifo_Wr_En_reg));
  (* SOFT_HLUTNM = "soft_lutpair101" *) 
  LUT2 #(
    .INIT(4'h2)) 
    Read_Latency_One_D1_i_1
       (.I0(Read_Latency_One_reg),
        .I1(Read_Latency_One_D1_reg),
        .O(Read_Latency_One_D10));
  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [0]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [0]),
        .R(1'b0));
  FDRE \dout_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [10]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [10]),
        .R(1'b0));
  FDRE \dout_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [11]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [11]),
        .R(1'b0));
  FDRE \dout_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [12]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [12]),
        .R(1'b0));
  FDRE \dout_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [13]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [13]),
        .R(1'b0));
  FDRE \dout_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [14]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [14]),
        .R(1'b0));
  FDRE \dout_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [15]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [15]),
        .R(1'b0));
  FDRE \dout_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [16]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [16]),
        .R(1'b0));
  FDRE \dout_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [17]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [17]),
        .R(1'b0));
  FDRE \dout_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [18]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [18]),
        .R(1'b0));
  FDRE \dout_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [19]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [19]),
        .R(1'b0));
  FDRE \dout_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [1]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [1]),
        .R(1'b0));
  FDRE \dout_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [20]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [20]),
        .R(1'b0));
  FDRE \dout_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [21]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [21]),
        .R(1'b0));
  FDRE \dout_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [22]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [22]),
        .R(1'b0));
  FDRE \dout_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [23]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [23]),
        .R(1'b0));
  FDRE \dout_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [24]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [24]),
        .R(1'b0));
  FDRE \dout_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [25]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [25]),
        .R(1'b0));
  FDRE \dout_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [26]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [26]),
        .R(1'b0));
  FDRE \dout_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [27]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [27]),
        .R(1'b0));
  FDRE \dout_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [28]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [28]),
        .R(1'b0));
  FDRE \dout_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [29]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [29]),
        .R(1'b0));
  FDRE \dout_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [2]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [2]),
        .R(1'b0));
  FDRE \dout_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [30]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [30]),
        .R(1'b0));
  FDRE \dout_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [31]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [31]),
        .R(1'b0));
  FDRE \dout_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [32]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [32]),
        .R(1'b0));
  FDRE \dout_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [3]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [3]),
        .R(1'b0));
  FDRE \dout_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [4]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [4]),
        .R(1'b0));
  FDRE \dout_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [5]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [5]),
        .R(1'b0));
  FDRE \dout_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [6]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [6]),
        .R(1'b0));
  FDRE \dout_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [7]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [7]),
        .R(1'b0));
  FDRE \dout_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [8]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [8]),
        .R(1'b0));
  FDRE \dout_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Rd_Latency_Fifo_Wr_Data_reg[31] [9]),
        .Q(\Rd_Latency_Fifo_Rd_Data_D1_reg[32] [9]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h90FF9090)) 
    empty_i_1__5
       (.I0(\rptr[5]_i_2_n_0 ),
        .I1(\wptr_reg_n_0_[5] ),
        .I2(empty_i_2__0_n_0),
        .I3(\s_level_out_bus_d4_reg[0] ),
        .I4(Read_Latency_One_D1_reg),
        .O(empty0));
  LUT6 #(
    .INIT(64'h0090900060000090)) 
    empty_i_2__0
       (.I0(Q[4]),
        .I1(\wptr_reg[4]_0 [4]),
        .I2(empty_i_3__0_n_0),
        .I3(empty_i_4__5_n_0),
        .I4(Q[3]),
        .I5(\wptr_reg[4]_0 [3]),
        .O(empty_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h5400)) 
    empty_i_3__0
       (.I0(\s_level_out_bus_d4_reg[0] ),
        .I1(Rd_Latency_Fifo_Rd_En),
        .I2(Read_Latency_One_D1),
        .I3(empty_i_5__5_n_0),
        .O(empty_i_3__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_4__5
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .O(empty_i_4__5_n_0));
  LUT6 #(
    .INIT(64'h0180402010080402)) 
    empty_i_5__5
       (.I0(\wptr_reg[4]_0 [0]),
        .I1(\wptr_reg[4]_0 [1]),
        .I2(\wptr_reg[4]_0 [2]),
        .I3(Q[0]),
        .I4(Q[1]),
        .I5(Q[2]),
        .O(empty_i_5__5_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(Read_Latency_One_D1_reg),
        .S(SR));
  LUT6 #(
    .INIT(64'h0000FFFF00000880)) 
    full_i_1
       (.I0(almost_full0__8),
        .I1(\s_level_out_bus_d4_reg[0] ),
        .I2(p_0_in__3[5]),
        .I3(p_0_in),
        .I4(Rd_Latency_Fifo_Rd_En_out),
        .I5(Rd_Latency_Fifo_Full),
        .O(full0));
  LUT6 #(
    .INIT(64'h0090900060000090)) 
    full_i_2
       (.I0(Q[4]),
        .I1(\wptr_reg[4]_0 [4]),
        .I2(full_i_3_n_0),
        .I3(full_i_4_n_0),
        .I4(\wptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(almost_full0__8));
  LUT6 #(
    .INIT(64'h0824100010000824)) 
    full_i_3
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\wptr_reg[4]_0 [0]),
        .I3(\wptr_reg[4]_0 [1]),
        .I4(\wptr_reg[4]_0 [2]),
        .I5(Q[2]),
        .O(full_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h80)) 
    full_i_4
       (.I0(\wptr_reg[4]_0 [2]),
        .I1(\wptr_reg[4]_0 [0]),
        .I2(\wptr_reg[4]_0 [1]),
        .O(full_i_4_n_0));
  FDRE full_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(full0),
        .Q(Rd_Latency_Fifo_Full),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__5 
       (.I0(Q[0]),
        .O(\rptr[0]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair105" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__5 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(\rptr[1]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair103" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__5 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(\rptr[2]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \rptr[3]_i_1__5 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(\rptr[3]_i_1__5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair100" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__5 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(\rptr[4]_i_1__5_n_0 ));
  LUT2 #(
    .INIT(4'hE)) 
    \rptr[5]_i_1 
       (.I0(Rd_Latency_Fifo_Rd_En),
        .I1(Read_Latency_One_D1),
        .O(Rd_Latency_Fifo_Rd_En_out));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_2 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_2_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_out),
        .D(\rptr[0]_i_1__5_n_0 ),
        .Q(Q[0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_out),
        .D(\rptr[1]_i_1__5_n_0 ),
        .Q(Q[1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_out),
        .D(\rptr[2]_i_1__5_n_0 ),
        .Q(Q[2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_out),
        .D(\rptr[3]_i_1__5_n_0 ),
        .Q(Q[3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_out),
        .D(\rptr[4]_i_1__5_n_0 ),
        .Q(Q[4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(Rd_Latency_Fifo_Rd_En_out),
        .D(\rptr[5]_i_2_n_0 ),
        .Q(p_0_in),
        .R(SR));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__3 
       (.I0(\wptr_reg[4]_0 [0]),
        .O(p_0_in__3[0]));
  (* SOFT_HLUTNM = "soft_lutpair104" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__3 
       (.I0(\wptr_reg[4]_0 [0]),
        .I1(\wptr_reg[4]_0 [1]),
        .O(p_0_in__3[1]));
  (* SOFT_HLUTNM = "soft_lutpair102" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__3 
       (.I0(\wptr_reg[4]_0 [0]),
        .I1(\wptr_reg[4]_0 [1]),
        .I2(\wptr_reg[4]_0 [2]),
        .O(p_0_in__3[2]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__3 
       (.I0(\wptr_reg[4]_0 [1]),
        .I1(\wptr_reg[4]_0 [0]),
        .I2(\wptr_reg[4]_0 [2]),
        .I3(\wptr_reg[4]_0 [3]),
        .O(p_0_in__3[3]));
  (* SOFT_HLUTNM = "soft_lutpair99" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__3 
       (.I0(\wptr_reg[4]_0 [2]),
        .I1(\wptr_reg[4]_0 [0]),
        .I2(\wptr_reg[4]_0 [1]),
        .I3(\wptr_reg[4]_0 [3]),
        .I4(\wptr_reg[4]_0 [4]),
        .O(p_0_in__3[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__3 
       (.I0(\wptr_reg[4]_0 [4]),
        .I1(\wptr_reg[4]_0 [3]),
        .I2(\wptr_reg[4]_0 [1]),
        .I3(\wptr_reg[4]_0 [0]),
        .I4(\wptr_reg[4]_0 [2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__3[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__3[0]),
        .Q(\wptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__3[1]),
        .Q(\wptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__3[2]),
        .Q(\wptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__3[3]),
        .Q(\wptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__3[4]),
        .Q(\wptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(\s_level_out_bus_d4_reg[0] ),
        .D(p_0_in__3[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized3
   (FBC1_Empty,
    \GEN_MUX_N_CNT.Add_in_reg[0] ,
    \GEN_MUX_N_CNT.Add_in_reg[2] ,
    \GEN_MUX_N_CNT.Add_in_reg[2]_0 ,
    E,
    Q,
    \rptr_reg[5]_0 ,
    \rptr_reg[4]_0 ,
    D,
    \GEN_MUX_N_CNT.Add_in_reg[31] ,
    SR,
    core_aclk,
    FBC_Rd_Vld_reg,
    Ext_Trig_Metric_en_reg,
    out,
    Beat_fifo_Wr_en,
    FBC_Empty,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ,
    FSWI_Rd_Vld_reg,
    \dout_reg[31]_0 ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ,
    \Read_Latency_Int_reg[1] ,
    FSWI_Rd_Vld_reg_0,
    \Min_Write_Latency_Int_reg[31] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ,
    \Max_Write_Latency_Int_reg[1] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ,
    \Read_Latency_Int_reg[3] ,
    FSWI_Rd_Vld_reg_1,
    \Max_Write_Latency_Int_reg[3] ,
    \Read_Latency_Int_reg[4] ,
    FSWI_Rd_Vld_reg_2,
    \Max_Write_Latency_Int_reg[4] ,
    \Read_Latency_Int_reg[5] ,
    FSWI_Rd_Vld_reg_3,
    \Max_Write_Latency_Int_reg[5] ,
    \Read_Latency_Int_reg[6] ,
    FSWI_Rd_Vld_reg_4,
    \Max_Write_Latency_Int_reg[6] ,
    \Read_Latency_Int_reg[7] ,
    FSWI_Rd_Vld_reg_5,
    \Max_Write_Latency_Int_reg[7] ,
    \Read_Latency_Int_reg[8] ,
    FSWI_Rd_Vld_reg_6,
    \Max_Write_Latency_Int_reg[8] ,
    \Read_Latency_Int_reg[9] ,
    FSWI_Rd_Vld_reg_7,
    \Max_Write_Latency_Int_reg[9] ,
    \Read_Latency_Int_reg[10] ,
    FSWI_Rd_Vld_reg_8,
    \Max_Write_Latency_Int_reg[10] ,
    \Read_Latency_Int_reg[11] ,
    FSWI_Rd_Vld_reg_9,
    \Max_Write_Latency_Int_reg[11] ,
    \Read_Latency_Int_reg[12] ,
    FSWI_Rd_Vld_reg_10,
    \Max_Write_Latency_Int_reg[12] ,
    \Read_Latency_Int_reg[13] ,
    FSWI_Rd_Vld_reg_11,
    \Max_Write_Latency_Int_reg[13] ,
    \Read_Latency_Int_reg[14] ,
    FSWI_Rd_Vld_reg_12,
    \Max_Write_Latency_Int_reg[14] ,
    \Read_Latency_Int_reg[15] ,
    FSWI_Rd_Vld_reg_13,
    \Max_Write_Latency_Int_reg[15] ,
    \Read_Latency_Int_reg[16] ,
    FSWI_Rd_Vld_reg_14,
    \Max_Write_Latency_Int_reg[16] ,
    \Read_Latency_Int_reg[17] ,
    FSWI_Rd_Vld_reg_15,
    \Max_Write_Latency_Int_reg[17] ,
    \Read_Latency_Int_reg[18] ,
    FSWI_Rd_Vld_reg_16,
    \Max_Write_Latency_Int_reg[18] ,
    \Read_Latency_Int_reg[19] ,
    FSWI_Rd_Vld_reg_17,
    \Max_Write_Latency_Int_reg[19] ,
    \Read_Latency_Int_reg[20] ,
    FSWI_Rd_Vld_reg_18,
    \Max_Write_Latency_Int_reg[20] ,
    \Read_Latency_Int_reg[21] ,
    FSWI_Rd_Vld_reg_19,
    \Max_Write_Latency_Int_reg[21] ,
    \Read_Latency_Int_reg[22] ,
    FSWI_Rd_Vld_reg_20,
    \Max_Write_Latency_Int_reg[22] ,
    \Read_Latency_Int_reg[23] ,
    FSWI_Rd_Vld_reg_21,
    \Max_Write_Latency_Int_reg[23] ,
    \Read_Latency_Int_reg[24] ,
    FSWI_Rd_Vld_reg_22,
    \Max_Write_Latency_Int_reg[24] ,
    \Read_Latency_Int_reg[25] ,
    FSWI_Rd_Vld_reg_23,
    \Max_Write_Latency_Int_reg[25] ,
    \Read_Latency_Int_reg[26] ,
    FSWI_Rd_Vld_reg_24,
    \Max_Write_Latency_Int_reg[26] ,
    \Read_Latency_Int_reg[27] ,
    FSWI_Rd_Vld_reg_25,
    \Max_Write_Latency_Int_reg[27] ,
    \Read_Latency_Int_reg[28] ,
    FSWI_Rd_Vld_reg_26,
    \Max_Write_Latency_Int_reg[28] ,
    \Read_Latency_Int_reg[29] ,
    FSWI_Rd_Vld_reg_27,
    \Max_Write_Latency_Int_reg[29] ,
    \Read_Latency_Int_reg[30] ,
    FSWI_Rd_Vld_reg_28,
    \Max_Write_Latency_Int_reg[30] ,
    \Read_Latency_Int_reg[31] ,
    FSWI_Rd_Vld_reg_29,
    \Max_Write_Latency_Int_reg[31] ,
    \Beat_fifo_Wr_data_reg[61] );
  output FBC1_Empty;
  output \GEN_MUX_N_CNT.Add_in_reg[0] ;
  output [2:0]\GEN_MUX_N_CNT.Add_in_reg[2] ;
  output \GEN_MUX_N_CNT.Add_in_reg[2]_0 ;
  output [0:0]E;
  output [4:0]Q;
  output [0:0]\rptr_reg[5]_0 ;
  output [4:0]\rptr_reg[4]_0 ;
  output [30:0]D;
  output [29:0]\GEN_MUX_N_CNT.Add_in_reg[31] ;
  input [0:0]SR;
  input core_aclk;
  input FBC_Rd_Vld_reg;
  input Ext_Trig_Metric_en_reg;
  input [1:0]out;
  input Beat_fifo_Wr_en;
  input FBC_Empty;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ;
  input FSWI_Rd_Vld_reg;
  input [30:0]\dout_reg[31]_0 ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ;
  input \Read_Latency_Int_reg[1] ;
  input FSWI_Rd_Vld_reg_0;
  input [29:0]\Min_Write_Latency_Int_reg[31] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ;
  input \Max_Write_Latency_Int_reg[1] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ;
  input \Read_Latency_Int_reg[3] ;
  input FSWI_Rd_Vld_reg_1;
  input \Max_Write_Latency_Int_reg[3] ;
  input \Read_Latency_Int_reg[4] ;
  input FSWI_Rd_Vld_reg_2;
  input \Max_Write_Latency_Int_reg[4] ;
  input \Read_Latency_Int_reg[5] ;
  input FSWI_Rd_Vld_reg_3;
  input \Max_Write_Latency_Int_reg[5] ;
  input \Read_Latency_Int_reg[6] ;
  input FSWI_Rd_Vld_reg_4;
  input \Max_Write_Latency_Int_reg[6] ;
  input \Read_Latency_Int_reg[7] ;
  input FSWI_Rd_Vld_reg_5;
  input \Max_Write_Latency_Int_reg[7] ;
  input \Read_Latency_Int_reg[8] ;
  input FSWI_Rd_Vld_reg_6;
  input \Max_Write_Latency_Int_reg[8] ;
  input \Read_Latency_Int_reg[9] ;
  input FSWI_Rd_Vld_reg_7;
  input \Max_Write_Latency_Int_reg[9] ;
  input \Read_Latency_Int_reg[10] ;
  input FSWI_Rd_Vld_reg_8;
  input \Max_Write_Latency_Int_reg[10] ;
  input \Read_Latency_Int_reg[11] ;
  input FSWI_Rd_Vld_reg_9;
  input \Max_Write_Latency_Int_reg[11] ;
  input \Read_Latency_Int_reg[12] ;
  input FSWI_Rd_Vld_reg_10;
  input \Max_Write_Latency_Int_reg[12] ;
  input \Read_Latency_Int_reg[13] ;
  input FSWI_Rd_Vld_reg_11;
  input \Max_Write_Latency_Int_reg[13] ;
  input \Read_Latency_Int_reg[14] ;
  input FSWI_Rd_Vld_reg_12;
  input \Max_Write_Latency_Int_reg[14] ;
  input \Read_Latency_Int_reg[15] ;
  input FSWI_Rd_Vld_reg_13;
  input \Max_Write_Latency_Int_reg[15] ;
  input \Read_Latency_Int_reg[16] ;
  input FSWI_Rd_Vld_reg_14;
  input \Max_Write_Latency_Int_reg[16] ;
  input \Read_Latency_Int_reg[17] ;
  input FSWI_Rd_Vld_reg_15;
  input \Max_Write_Latency_Int_reg[17] ;
  input \Read_Latency_Int_reg[18] ;
  input FSWI_Rd_Vld_reg_16;
  input \Max_Write_Latency_Int_reg[18] ;
  input \Read_Latency_Int_reg[19] ;
  input FSWI_Rd_Vld_reg_17;
  input \Max_Write_Latency_Int_reg[19] ;
  input \Read_Latency_Int_reg[20] ;
  input FSWI_Rd_Vld_reg_18;
  input \Max_Write_Latency_Int_reg[20] ;
  input \Read_Latency_Int_reg[21] ;
  input FSWI_Rd_Vld_reg_19;
  input \Max_Write_Latency_Int_reg[21] ;
  input \Read_Latency_Int_reg[22] ;
  input FSWI_Rd_Vld_reg_20;
  input \Max_Write_Latency_Int_reg[22] ;
  input \Read_Latency_Int_reg[23] ;
  input FSWI_Rd_Vld_reg_21;
  input \Max_Write_Latency_Int_reg[23] ;
  input \Read_Latency_Int_reg[24] ;
  input FSWI_Rd_Vld_reg_22;
  input \Max_Write_Latency_Int_reg[24] ;
  input \Read_Latency_Int_reg[25] ;
  input FSWI_Rd_Vld_reg_23;
  input \Max_Write_Latency_Int_reg[25] ;
  input \Read_Latency_Int_reg[26] ;
  input FSWI_Rd_Vld_reg_24;
  input \Max_Write_Latency_Int_reg[26] ;
  input \Read_Latency_Int_reg[27] ;
  input FSWI_Rd_Vld_reg_25;
  input \Max_Write_Latency_Int_reg[27] ;
  input \Read_Latency_Int_reg[28] ;
  input FSWI_Rd_Vld_reg_26;
  input \Max_Write_Latency_Int_reg[28] ;
  input \Read_Latency_Int_reg[29] ;
  input FSWI_Rd_Vld_reg_27;
  input \Max_Write_Latency_Int_reg[29] ;
  input \Read_Latency_Int_reg[30] ;
  input FSWI_Rd_Vld_reg_28;
  input \Max_Write_Latency_Int_reg[30] ;
  input \Read_Latency_Int_reg[31] ;
  input FSWI_Rd_Vld_reg_29;
  input \Max_Write_Latency_Int_reg[31] ;
  input [63:0]\Beat_fifo_Wr_data_reg[61] ;

  wire [63:0]\Beat_fifo_Wr_data_reg[61] ;
  wire Beat_fifo_Wr_en;
  wire [30:0]D;
  wire [0:0]E;
  wire Ext_Trig_Metric_en_reg;
  wire FBC1_Empty;
  wire [63:1]FBC1_Rd_Data;
  wire FBC_Empty;
  wire FBC_Rd_Vld_reg;
  wire FSWI_Rd_Vld_reg;
  wire FSWI_Rd_Vld_reg_0;
  wire FSWI_Rd_Vld_reg_1;
  wire FSWI_Rd_Vld_reg_10;
  wire FSWI_Rd_Vld_reg_11;
  wire FSWI_Rd_Vld_reg_12;
  wire FSWI_Rd_Vld_reg_13;
  wire FSWI_Rd_Vld_reg_14;
  wire FSWI_Rd_Vld_reg_15;
  wire FSWI_Rd_Vld_reg_16;
  wire FSWI_Rd_Vld_reg_17;
  wire FSWI_Rd_Vld_reg_18;
  wire FSWI_Rd_Vld_reg_19;
  wire FSWI_Rd_Vld_reg_2;
  wire FSWI_Rd_Vld_reg_20;
  wire FSWI_Rd_Vld_reg_21;
  wire FSWI_Rd_Vld_reg_22;
  wire FSWI_Rd_Vld_reg_23;
  wire FSWI_Rd_Vld_reg_24;
  wire FSWI_Rd_Vld_reg_25;
  wire FSWI_Rd_Vld_reg_26;
  wire FSWI_Rd_Vld_reg_27;
  wire FSWI_Rd_Vld_reg_28;
  wire FSWI_Rd_Vld_reg_29;
  wire FSWI_Rd_Vld_reg_3;
  wire FSWI_Rd_Vld_reg_4;
  wire FSWI_Rd_Vld_reg_5;
  wire FSWI_Rd_Vld_reg_6;
  wire FSWI_Rd_Vld_reg_7;
  wire FSWI_Rd_Vld_reg_8;
  wire FSWI_Rd_Vld_reg_9;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ;
  wire \GEN_MUX_N_CNT.Add_in[10]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[11]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[12]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[13]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[14]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[15]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[16]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[17]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[18]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[19]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[1]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[20]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[21]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[22]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[23]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[24]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[25]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[26]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[27]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[28]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[29]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[30]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[31]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[3]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[4]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[5]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[6]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[7]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[8]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in[9]_i_2_n_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[0] ;
  wire [2:0]\GEN_MUX_N_CNT.Add_in_reg[2] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[2]_0 ;
  wire [29:0]\GEN_MUX_N_CNT.Add_in_reg[31] ;
  wire \Max_Write_Latency_Int_reg[10] ;
  wire \Max_Write_Latency_Int_reg[11] ;
  wire \Max_Write_Latency_Int_reg[12] ;
  wire \Max_Write_Latency_Int_reg[13] ;
  wire \Max_Write_Latency_Int_reg[14] ;
  wire \Max_Write_Latency_Int_reg[15] ;
  wire \Max_Write_Latency_Int_reg[16] ;
  wire \Max_Write_Latency_Int_reg[17] ;
  wire \Max_Write_Latency_Int_reg[18] ;
  wire \Max_Write_Latency_Int_reg[19] ;
  wire \Max_Write_Latency_Int_reg[1] ;
  wire \Max_Write_Latency_Int_reg[20] ;
  wire \Max_Write_Latency_Int_reg[21] ;
  wire \Max_Write_Latency_Int_reg[22] ;
  wire \Max_Write_Latency_Int_reg[23] ;
  wire \Max_Write_Latency_Int_reg[24] ;
  wire \Max_Write_Latency_Int_reg[25] ;
  wire \Max_Write_Latency_Int_reg[26] ;
  wire \Max_Write_Latency_Int_reg[27] ;
  wire \Max_Write_Latency_Int_reg[28] ;
  wire \Max_Write_Latency_Int_reg[29] ;
  wire \Max_Write_Latency_Int_reg[30] ;
  wire \Max_Write_Latency_Int_reg[31] ;
  wire \Max_Write_Latency_Int_reg[3] ;
  wire \Max_Write_Latency_Int_reg[4] ;
  wire \Max_Write_Latency_Int_reg[5] ;
  wire \Max_Write_Latency_Int_reg[6] ;
  wire \Max_Write_Latency_Int_reg[7] ;
  wire \Max_Write_Latency_Int_reg[8] ;
  wire \Max_Write_Latency_Int_reg[9] ;
  wire [29:0]\Min_Write_Latency_Int_reg[31] ;
  wire [4:0]Q;
  wire \Read_Latency_Int_reg[10] ;
  wire \Read_Latency_Int_reg[11] ;
  wire \Read_Latency_Int_reg[12] ;
  wire \Read_Latency_Int_reg[13] ;
  wire \Read_Latency_Int_reg[14] ;
  wire \Read_Latency_Int_reg[15] ;
  wire \Read_Latency_Int_reg[16] ;
  wire \Read_Latency_Int_reg[17] ;
  wire \Read_Latency_Int_reg[18] ;
  wire \Read_Latency_Int_reg[19] ;
  wire \Read_Latency_Int_reg[1] ;
  wire \Read_Latency_Int_reg[20] ;
  wire \Read_Latency_Int_reg[21] ;
  wire \Read_Latency_Int_reg[22] ;
  wire \Read_Latency_Int_reg[23] ;
  wire \Read_Latency_Int_reg[24] ;
  wire \Read_Latency_Int_reg[25] ;
  wire \Read_Latency_Int_reg[26] ;
  wire \Read_Latency_Int_reg[27] ;
  wire \Read_Latency_Int_reg[28] ;
  wire \Read_Latency_Int_reg[29] ;
  wire \Read_Latency_Int_reg[30] ;
  wire \Read_Latency_Int_reg[31] ;
  wire \Read_Latency_Int_reg[3] ;
  wire \Read_Latency_Int_reg[4] ;
  wire \Read_Latency_Int_reg[5] ;
  wire \Read_Latency_Int_reg[6] ;
  wire \Read_Latency_Int_reg[7] ;
  wire \Read_Latency_Int_reg[8] ;
  wire \Read_Latency_Int_reg[9] ;
  wire [0:0]SR;
  wire core_aclk;
  wire [30:0]\dout_reg[31]_0 ;
  wire empty0;
  wire empty_i_2__2_n_0;
  wire empty_i_3__2_n_0;
  wire empty_i_4__0_n_0;
  wire empty_i_5__0_n_0;
  wire empty_i_6_n_0;
  wire [1:0]out;
  wire p_0_in;
  wire [5:0]p_0_in__4;
  wire \rptr[0]_i_1__0_n_0 ;
  wire \rptr[1]_i_1__0_n_0 ;
  wire \rptr[2]_i_1__0_n_0 ;
  wire \rptr[3]_i_1__0_n_0 ;
  wire \rptr[4]_i_1__0_n_0 ;
  wire \rptr[5]_i_1__1_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire [0:0]\rptr_reg[5]_0 ;
  wire \wptr_reg_n_0_[5] ;

  LUT2 #(
    .INIT(4'h1)) 
    FBC_Rd_Vld_i_1
       (.I0(FBC1_Empty),
        .I1(FBC_Empty),
        .O(\rptr_reg[5]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[0]_i_12 
       (.I0(FBC_Rd_Vld_reg),
        .I1(\GEN_MUX_N_CNT.Add_in_reg[2] [0]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[0] ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[10]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[10]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[10] ),
        .I2(FSWI_Rd_Vld_reg_8),
        .I3(\Min_Write_Latency_Int_reg[31] [8]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[10] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [8]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[10]_i_2 
       (.I0(FBC1_Rd_Data[10]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[42]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[11]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[11]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[11] ),
        .I2(FSWI_Rd_Vld_reg_9),
        .I3(\Min_Write_Latency_Int_reg[31] [9]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[11] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [9]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[11]_i_2 
       (.I0(FBC1_Rd_Data[11]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[43]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[12]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[12]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[12] ),
        .I2(FSWI_Rd_Vld_reg_10),
        .I3(\Min_Write_Latency_Int_reg[31] [10]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[12] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [10]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[12]_i_2 
       (.I0(FBC1_Rd_Data[12]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[44]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[12]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[13]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[13]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[13] ),
        .I2(FSWI_Rd_Vld_reg_11),
        .I3(\Min_Write_Latency_Int_reg[31] [11]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[13] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [11]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[13]_i_2 
       (.I0(FBC1_Rd_Data[13]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[45]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[13]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[14]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[14]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[14] ),
        .I2(FSWI_Rd_Vld_reg_12),
        .I3(\Min_Write_Latency_Int_reg[31] [12]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[14] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [12]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[14]_i_2 
       (.I0(FBC1_Rd_Data[14]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[46]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[14]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[15]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[15]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[15] ),
        .I2(FSWI_Rd_Vld_reg_13),
        .I3(\Min_Write_Latency_Int_reg[31] [13]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[15] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [13]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[15]_i_2 
       (.I0(FBC1_Rd_Data[15]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[47]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[16]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[16]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[16] ),
        .I2(FSWI_Rd_Vld_reg_14),
        .I3(\Min_Write_Latency_Int_reg[31] [14]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[16] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [14]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[16]_i_2 
       (.I0(FBC1_Rd_Data[16]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[48]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[17]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[17]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[17] ),
        .I2(FSWI_Rd_Vld_reg_15),
        .I3(\Min_Write_Latency_Int_reg[31] [15]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[17] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [15]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[17]_i_2 
       (.I0(FBC1_Rd_Data[17]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[49]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[18]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[18]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[18] ),
        .I2(FSWI_Rd_Vld_reg_16),
        .I3(\Min_Write_Latency_Int_reg[31] [16]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[18] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [16]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[18]_i_2 
       (.I0(FBC1_Rd_Data[18]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[50]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[19]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[19]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[19] ),
        .I2(FSWI_Rd_Vld_reg_17),
        .I3(\Min_Write_Latency_Int_reg[31] [17]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[19] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [17]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[19]_i_2 
       (.I0(FBC1_Rd_Data[19]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[51]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[1]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[1]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[1] ),
        .I2(FSWI_Rd_Vld_reg_0),
        .I3(\Min_Write_Latency_Int_reg[31] [0]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[1] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [0]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[1]_i_2 
       (.I0(FBC1_Rd_Data[1]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[33]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[1]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[20]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[20]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[20] ),
        .I2(FSWI_Rd_Vld_reg_18),
        .I3(\Min_Write_Latency_Int_reg[31] [18]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[20] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [18]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[20]_i_2 
       (.I0(FBC1_Rd_Data[20]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[52]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[21]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[21]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[21] ),
        .I2(FSWI_Rd_Vld_reg_19),
        .I3(\Min_Write_Latency_Int_reg[31] [19]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[21] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [19]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[21]_i_2 
       (.I0(FBC1_Rd_Data[21]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[53]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[22]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[22]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[22] ),
        .I2(FSWI_Rd_Vld_reg_20),
        .I3(\Min_Write_Latency_Int_reg[31] [20]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[22] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [20]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[22]_i_2 
       (.I0(FBC1_Rd_Data[22]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[54]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[23]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[23]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[23] ),
        .I2(FSWI_Rd_Vld_reg_21),
        .I3(\Min_Write_Latency_Int_reg[31] [21]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[23] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [21]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[23]_i_2 
       (.I0(FBC1_Rd_Data[23]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[55]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[24]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[24]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[24] ),
        .I2(FSWI_Rd_Vld_reg_22),
        .I3(\Min_Write_Latency_Int_reg[31] [22]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[24] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [22]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[24]_i_2 
       (.I0(FBC1_Rd_Data[24]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[56]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[24]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[25]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[25]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[25] ),
        .I2(FSWI_Rd_Vld_reg_23),
        .I3(\Min_Write_Latency_Int_reg[31] [23]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[25] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [23]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[25]_i_2 
       (.I0(FBC1_Rd_Data[25]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[57]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[25]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[26]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[26]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[26] ),
        .I2(FSWI_Rd_Vld_reg_24),
        .I3(\Min_Write_Latency_Int_reg[31] [24]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[26] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [24]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[26]_i_2 
       (.I0(FBC1_Rd_Data[26]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[58]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[26]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[27]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[27]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[27] ),
        .I2(FSWI_Rd_Vld_reg_25),
        .I3(\Min_Write_Latency_Int_reg[31] [25]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[27] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [25]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[27]_i_2 
       (.I0(FBC1_Rd_Data[27]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[59]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[27]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[28]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[28]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[28] ),
        .I2(FSWI_Rd_Vld_reg_26),
        .I3(\Min_Write_Latency_Int_reg[31] [26]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[28] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [26]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[28]_i_2 
       (.I0(FBC1_Rd_Data[28]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[60]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[29]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[29]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[29] ),
        .I2(FSWI_Rd_Vld_reg_27),
        .I3(\Min_Write_Latency_Int_reg[31] [27]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[29] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [27]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[29]_i_2 
       (.I0(FBC1_Rd_Data[29]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[61]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[29]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair62" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_7 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[2]),
        .O(\GEN_MUX_N_CNT.Add_in_reg[2]_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[30]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[30]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[30] ),
        .I2(FSWI_Rd_Vld_reg_28),
        .I3(\Min_Write_Latency_Int_reg[31] [28]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[30] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [28]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[30]_i_2 
       (.I0(FBC1_Rd_Data[30]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[62]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[31]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[31] ),
        .I2(FSWI_Rd_Vld_reg_29),
        .I3(\Min_Write_Latency_Int_reg[31] [29]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[31] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [29]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_2 
       (.I0(FBC1_Rd_Data[31]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[63]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[3]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[3]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[3] ),
        .I2(FSWI_Rd_Vld_reg_1),
        .I3(\Min_Write_Latency_Int_reg[31] [1]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[3] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [1]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[3]_i_2 
       (.I0(FBC1_Rd_Data[3]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[35]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[3]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[4]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[4]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[4] ),
        .I2(FSWI_Rd_Vld_reg_2),
        .I3(\Min_Write_Latency_Int_reg[31] [2]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[4] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [2]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[4]_i_2 
       (.I0(FBC1_Rd_Data[4]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[36]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[4]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[5]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[5]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[5] ),
        .I2(FSWI_Rd_Vld_reg_3),
        .I3(\Min_Write_Latency_Int_reg[31] [3]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[5] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [3]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[5]_i_2 
       (.I0(FBC1_Rd_Data[5]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[37]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[5]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[6]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[6]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[6] ),
        .I2(FSWI_Rd_Vld_reg_4),
        .I3(\Min_Write_Latency_Int_reg[31] [4]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[6] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [4]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[6]_i_2 
       (.I0(FBC1_Rd_Data[6]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[38]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[6]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[7]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[7]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[7] ),
        .I2(FSWI_Rd_Vld_reg_5),
        .I3(\Min_Write_Latency_Int_reg[31] [5]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[7] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [5]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[7]_i_2 
       (.I0(FBC1_Rd_Data[7]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[39]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[8]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[8]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[8] ),
        .I2(FSWI_Rd_Vld_reg_6),
        .I3(\Min_Write_Latency_Int_reg[31] [6]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[8] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [6]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[8]_i_2 
       (.I0(FBC1_Rd_Data[8]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[40]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFFFFFEFEFE)) 
    \GEN_MUX_N_CNT.Add_in[9]_i_1 
       (.I0(\GEN_MUX_N_CNT.Add_in[9]_i_2_n_0 ),
        .I1(\Read_Latency_Int_reg[9] ),
        .I2(FSWI_Rd_Vld_reg_7),
        .I3(\Min_Write_Latency_Int_reg[31] [7]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0]_0 ),
        .I5(\Max_Write_Latency_Int_reg[9] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] [7]));
  LUT5 #(
    .INIT(32'hF0808080)) 
    \GEN_MUX_N_CNT.Add_in[9]_i_2 
       (.I0(FBC1_Rd_Data[9]),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[1] ),
        .I2(FBC_Rd_Vld_reg),
        .I3(FBC1_Rd_Data[41]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[2] ),
        .O(\GEN_MUX_N_CNT.Add_in[9]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[10]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[10]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [9]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[9]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[11]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[11]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [10]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[12]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[12]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [11]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[13]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[13]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [12]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[14]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[14]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [13]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[15]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[15]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [14]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[16]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[16]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [15]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[17]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[17]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [16]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[16]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[18]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[18]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [17]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[17]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[19]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[19]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [18]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[18]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[1]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[1]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [0]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[20]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[20]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [19]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[19]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[21]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[21]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [20]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[20]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[22]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[22]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [21]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[21]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[23]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[23]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [22]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[22]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[24]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[24]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [23]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[23]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[25]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[25]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [24]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[24]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[26]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[26]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [25]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[25]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[27]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[27]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [26]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[26]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[28]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[28]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [27]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[27]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[29]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[29]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [28]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[28]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[2]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[2]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [1]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[30]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[30]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [29]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[29]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[31]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[31]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [30]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[30]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[3]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[3]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [2]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[4]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[4]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [3]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[5]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[5]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [4]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[6]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[6]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [5]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[7]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[7]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [6]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[8]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[8]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [7]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[9]_i_1 
       (.I0(FBC_Rd_Vld_reg),
        .I1(FBC1_Rd_Data[9]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I3(FSWI_Rd_Vld_reg),
        .I4(\dout_reg[31]_0 [8]),
        .I5(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(D[8]));
  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [0]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[2] [0]),
        .R(1'b0));
  FDRE \dout_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [10]),
        .Q(FBC1_Rd_Data[10]),
        .R(1'b0));
  FDRE \dout_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [11]),
        .Q(FBC1_Rd_Data[11]),
        .R(1'b0));
  FDRE \dout_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [12]),
        .Q(FBC1_Rd_Data[12]),
        .R(1'b0));
  FDRE \dout_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [13]),
        .Q(FBC1_Rd_Data[13]),
        .R(1'b0));
  FDRE \dout_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [14]),
        .Q(FBC1_Rd_Data[14]),
        .R(1'b0));
  FDRE \dout_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [15]),
        .Q(FBC1_Rd_Data[15]),
        .R(1'b0));
  FDRE \dout_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [16]),
        .Q(FBC1_Rd_Data[16]),
        .R(1'b0));
  FDRE \dout_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [17]),
        .Q(FBC1_Rd_Data[17]),
        .R(1'b0));
  FDRE \dout_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [18]),
        .Q(FBC1_Rd_Data[18]),
        .R(1'b0));
  FDRE \dout_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [19]),
        .Q(FBC1_Rd_Data[19]),
        .R(1'b0));
  FDRE \dout_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [1]),
        .Q(FBC1_Rd_Data[1]),
        .R(1'b0));
  FDRE \dout_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [20]),
        .Q(FBC1_Rd_Data[20]),
        .R(1'b0));
  FDRE \dout_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [21]),
        .Q(FBC1_Rd_Data[21]),
        .R(1'b0));
  FDRE \dout_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [22]),
        .Q(FBC1_Rd_Data[22]),
        .R(1'b0));
  FDRE \dout_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [23]),
        .Q(FBC1_Rd_Data[23]),
        .R(1'b0));
  FDRE \dout_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [24]),
        .Q(FBC1_Rd_Data[24]),
        .R(1'b0));
  FDRE \dout_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [25]),
        .Q(FBC1_Rd_Data[25]),
        .R(1'b0));
  FDRE \dout_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [26]),
        .Q(FBC1_Rd_Data[26]),
        .R(1'b0));
  FDRE \dout_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [27]),
        .Q(FBC1_Rd_Data[27]),
        .R(1'b0));
  FDRE \dout_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [28]),
        .Q(FBC1_Rd_Data[28]),
        .R(1'b0));
  FDRE \dout_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [29]),
        .Q(FBC1_Rd_Data[29]),
        .R(1'b0));
  FDRE \dout_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [2]),
        .Q(FBC1_Rd_Data[2]),
        .R(1'b0));
  FDRE \dout_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [30]),
        .Q(FBC1_Rd_Data[30]),
        .R(1'b0));
  FDRE \dout_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [31]),
        .Q(FBC1_Rd_Data[31]),
        .R(1'b0));
  FDRE \dout_reg[32] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [32]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[2] [1]),
        .R(1'b0));
  FDRE \dout_reg[33] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [33]),
        .Q(FBC1_Rd_Data[33]),
        .R(1'b0));
  FDRE \dout_reg[34] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [34]),
        .Q(\GEN_MUX_N_CNT.Add_in_reg[2] [2]),
        .R(1'b0));
  FDRE \dout_reg[35] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [35]),
        .Q(FBC1_Rd_Data[35]),
        .R(1'b0));
  FDRE \dout_reg[36] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [36]),
        .Q(FBC1_Rd_Data[36]),
        .R(1'b0));
  FDRE \dout_reg[37] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [37]),
        .Q(FBC1_Rd_Data[37]),
        .R(1'b0));
  FDRE \dout_reg[38] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [38]),
        .Q(FBC1_Rd_Data[38]),
        .R(1'b0));
  FDRE \dout_reg[39] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [39]),
        .Q(FBC1_Rd_Data[39]),
        .R(1'b0));
  FDRE \dout_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [3]),
        .Q(FBC1_Rd_Data[3]),
        .R(1'b0));
  FDRE \dout_reg[40] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [40]),
        .Q(FBC1_Rd_Data[40]),
        .R(1'b0));
  FDRE \dout_reg[41] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [41]),
        .Q(FBC1_Rd_Data[41]),
        .R(1'b0));
  FDRE \dout_reg[42] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [42]),
        .Q(FBC1_Rd_Data[42]),
        .R(1'b0));
  FDRE \dout_reg[43] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [43]),
        .Q(FBC1_Rd_Data[43]),
        .R(1'b0));
  FDRE \dout_reg[44] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [44]),
        .Q(FBC1_Rd_Data[44]),
        .R(1'b0));
  FDRE \dout_reg[45] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [45]),
        .Q(FBC1_Rd_Data[45]),
        .R(1'b0));
  FDRE \dout_reg[46] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [46]),
        .Q(FBC1_Rd_Data[46]),
        .R(1'b0));
  FDRE \dout_reg[47] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [47]),
        .Q(FBC1_Rd_Data[47]),
        .R(1'b0));
  FDRE \dout_reg[48] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [48]),
        .Q(FBC1_Rd_Data[48]),
        .R(1'b0));
  FDRE \dout_reg[49] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [49]),
        .Q(FBC1_Rd_Data[49]),
        .R(1'b0));
  FDRE \dout_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [4]),
        .Q(FBC1_Rd_Data[4]),
        .R(1'b0));
  FDRE \dout_reg[50] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [50]),
        .Q(FBC1_Rd_Data[50]),
        .R(1'b0));
  FDRE \dout_reg[51] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [51]),
        .Q(FBC1_Rd_Data[51]),
        .R(1'b0));
  FDRE \dout_reg[52] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [52]),
        .Q(FBC1_Rd_Data[52]),
        .R(1'b0));
  FDRE \dout_reg[53] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [53]),
        .Q(FBC1_Rd_Data[53]),
        .R(1'b0));
  FDRE \dout_reg[54] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [54]),
        .Q(FBC1_Rd_Data[54]),
        .R(1'b0));
  FDRE \dout_reg[55] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [55]),
        .Q(FBC1_Rd_Data[55]),
        .R(1'b0));
  FDRE \dout_reg[56] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [56]),
        .Q(FBC1_Rd_Data[56]),
        .R(1'b0));
  FDRE \dout_reg[57] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [57]),
        .Q(FBC1_Rd_Data[57]),
        .R(1'b0));
  FDRE \dout_reg[58] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [58]),
        .Q(FBC1_Rd_Data[58]),
        .R(1'b0));
  FDRE \dout_reg[59] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [59]),
        .Q(FBC1_Rd_Data[59]),
        .R(1'b0));
  FDRE \dout_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [5]),
        .Q(FBC1_Rd_Data[5]),
        .R(1'b0));
  FDRE \dout_reg[60] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [60]),
        .Q(FBC1_Rd_Data[60]),
        .R(1'b0));
  FDRE \dout_reg[61] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [61]),
        .Q(FBC1_Rd_Data[61]),
        .R(1'b0));
  FDRE \dout_reg[62] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [62]),
        .Q(FBC1_Rd_Data[62]),
        .R(1'b0));
  FDRE \dout_reg[63] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [63]),
        .Q(FBC1_Rd_Data[63]),
        .R(1'b0));
  FDRE \dout_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [6]),
        .Q(FBC1_Rd_Data[6]),
        .R(1'b0));
  FDRE \dout_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [7]),
        .Q(FBC1_Rd_Data[7]),
        .R(1'b0));
  FDRE \dout_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [8]),
        .Q(FBC1_Rd_Data[8]),
        .R(1'b0));
  FDRE \dout_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Beat_fifo_Wr_data_reg[61] [9]),
        .Q(FBC1_Rd_Data[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h4FFF4FFF4FFF0000)) 
    empty_i_1__4
       (.I0(Ext_Trig_Metric_en_reg),
        .I1(out[1]),
        .I2(out[0]),
        .I3(Beat_fifo_Wr_en),
        .I4(FBC1_Empty),
        .I5(empty_i_2__2_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h0000000080080880)) 
    empty_i_2__2
       (.I0(empty_i_3__2_n_0),
        .I1(empty_i_4__0_n_0),
        .I2(Q[4]),
        .I3(empty_i_5__0_n_0),
        .I4(\rptr_reg[4]_0 [4]),
        .I5(FBC_Empty),
        .O(empty_i_2__2_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_3__2
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in),
        .I3(empty_i_6_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(Q[3]),
        .O(empty_i_3__2_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_4__0
       (.I0(Q[0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(Q[2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(Q[1]),
        .O(empty_i_4__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT4 #(
    .INIT(16'h7FFF)) 
    empty_i_5__0
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(empty_i_5__0_n_0));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_6
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_6_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(FBC1_Empty),
        .S(SR));
  LUT4 #(
    .INIT(16'hB000)) 
    mem_reg_0_31_0_5_i_1__0
       (.I0(Ext_Trig_Metric_en_reg),
        .I1(out[1]),
        .I2(out[0]),
        .I3(Beat_fifo_Wr_en),
        .O(E));
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__0 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__0 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair60" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__0 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair59" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__0 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair58" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__0 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__1 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__1_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[0]_i_1__0_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[1]_i_1__0_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[2]_i_1__0_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[3]_i_1__0_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[4]_i_1__0_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[5]_i_1__1_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__4 
       (.I0(Q[0]),
        .O(p_0_in__4[0]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in__4[1]));
  (* SOFT_HLUTNM = "soft_lutpair61" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__4 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in__4[2]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__4 
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(Q[2]),
        .I3(Q[3]),
        .O(p_0_in__4[3]));
  (* SOFT_HLUTNM = "soft_lutpair57" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__4 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[3]),
        .I4(Q[4]),
        .O(p_0_in__4[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__4 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__4[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__4[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__4[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__4[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__4[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__4[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__4[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* ORIG_REF_NAME = "axi_perf_mon_v5_0_13_sync_fifo" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_sync_fifo__parameterized4
   (FSWI1_Empty,
    \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ,
    Q,
    E,
    \wptr_reg[4]_0 ,
    \rptr_reg[5]_0 ,
    \rptr_reg[4]_0 ,
    \GEN_MUX_N_CNT.Add_in_reg[2] ,
    \GEN_MUX_N_CNT.Add_in_reg[1] ,
    \GEN_MUX_N_CNT.Add_in_reg[3] ,
    \GEN_MUX_N_CNT.Add_in_reg[4] ,
    \GEN_MUX_N_CNT.Add_in_reg[5] ,
    \GEN_MUX_N_CNT.Add_in_reg[6] ,
    \GEN_MUX_N_CNT.Add_in_reg[7] ,
    \GEN_MUX_N_CNT.Add_in_reg[8] ,
    \GEN_MUX_N_CNT.Add_in_reg[9] ,
    \GEN_MUX_N_CNT.Add_in_reg[10] ,
    \GEN_MUX_N_CNT.Add_in_reg[11] ,
    \GEN_MUX_N_CNT.Add_in_reg[12] ,
    \GEN_MUX_N_CNT.Add_in_reg[13] ,
    \GEN_MUX_N_CNT.Add_in_reg[14] ,
    \GEN_MUX_N_CNT.Add_in_reg[15] ,
    \GEN_MUX_N_CNT.Add_in_reg[16] ,
    \GEN_MUX_N_CNT.Add_in_reg[17] ,
    \GEN_MUX_N_CNT.Add_in_reg[18] ,
    \GEN_MUX_N_CNT.Add_in_reg[19] ,
    \GEN_MUX_N_CNT.Add_in_reg[20] ,
    \GEN_MUX_N_CNT.Add_in_reg[21] ,
    \GEN_MUX_N_CNT.Add_in_reg[22] ,
    \GEN_MUX_N_CNT.Add_in_reg[23] ,
    \GEN_MUX_N_CNT.Add_in_reg[24] ,
    \GEN_MUX_N_CNT.Add_in_reg[25] ,
    \GEN_MUX_N_CNT.Add_in_reg[26] ,
    \GEN_MUX_N_CNT.Add_in_reg[27] ,
    \GEN_MUX_N_CNT.Add_in_reg[28] ,
    \GEN_MUX_N_CNT.Add_in_reg[29] ,
    \GEN_MUX_N_CNT.Add_in_reg[30] ,
    \GEN_MUX_N_CNT.Add_in_reg[31] ,
    SR,
    core_aclk,
    FSWI_Rd_Vld_reg,
    Ext_Trig_Metric_en_reg,
    out,
    Last_fifo_Wr_en,
    empty2__0,
    FSWI_Empty,
    \Min_Write_Latency_Int_reg[2] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ,
    \Write_Latency_Int_reg[31] ,
    \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ,
    \Slv_Wr_Idle_Fifo_Wr_data_reg[31] );
  output FSWI1_Empty;
  output \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ;
  output [31:0]Q;
  output [0:0]E;
  output [4:0]\wptr_reg[4]_0 ;
  output [0:0]\rptr_reg[5]_0 ;
  output [4:0]\rptr_reg[4]_0 ;
  output \GEN_MUX_N_CNT.Add_in_reg[2] ;
  output \GEN_MUX_N_CNT.Add_in_reg[1] ;
  output \GEN_MUX_N_CNT.Add_in_reg[3] ;
  output \GEN_MUX_N_CNT.Add_in_reg[4] ;
  output \GEN_MUX_N_CNT.Add_in_reg[5] ;
  output \GEN_MUX_N_CNT.Add_in_reg[6] ;
  output \GEN_MUX_N_CNT.Add_in_reg[7] ;
  output \GEN_MUX_N_CNT.Add_in_reg[8] ;
  output \GEN_MUX_N_CNT.Add_in_reg[9] ;
  output \GEN_MUX_N_CNT.Add_in_reg[10] ;
  output \GEN_MUX_N_CNT.Add_in_reg[11] ;
  output \GEN_MUX_N_CNT.Add_in_reg[12] ;
  output \GEN_MUX_N_CNT.Add_in_reg[13] ;
  output \GEN_MUX_N_CNT.Add_in_reg[14] ;
  output \GEN_MUX_N_CNT.Add_in_reg[15] ;
  output \GEN_MUX_N_CNT.Add_in_reg[16] ;
  output \GEN_MUX_N_CNT.Add_in_reg[17] ;
  output \GEN_MUX_N_CNT.Add_in_reg[18] ;
  output \GEN_MUX_N_CNT.Add_in_reg[19] ;
  output \GEN_MUX_N_CNT.Add_in_reg[20] ;
  output \GEN_MUX_N_CNT.Add_in_reg[21] ;
  output \GEN_MUX_N_CNT.Add_in_reg[22] ;
  output \GEN_MUX_N_CNT.Add_in_reg[23] ;
  output \GEN_MUX_N_CNT.Add_in_reg[24] ;
  output \GEN_MUX_N_CNT.Add_in_reg[25] ;
  output \GEN_MUX_N_CNT.Add_in_reg[26] ;
  output \GEN_MUX_N_CNT.Add_in_reg[27] ;
  output \GEN_MUX_N_CNT.Add_in_reg[28] ;
  output \GEN_MUX_N_CNT.Add_in_reg[29] ;
  output \GEN_MUX_N_CNT.Add_in_reg[30] ;
  output \GEN_MUX_N_CNT.Add_in_reg[31] ;
  input [0:0]SR;
  input core_aclk;
  input FSWI_Rd_Vld_reg;
  input Ext_Trig_Metric_en_reg;
  input [1:0]out;
  input Last_fifo_Wr_en;
  input empty2__0;
  input FSWI_Empty;
  input [0:0]\Min_Write_Latency_Int_reg[2] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ;
  input [29:0]\Write_Latency_Int_reg[31] ;
  input \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ;
  input [31:0]\Slv_Wr_Idle_Fifo_Wr_data_reg[31] ;

  wire [0:0]E;
  wire Ext_Trig_Metric_en_reg;
  wire FSWI1_Empty;
  wire FSWI_Empty;
  wire FSWI_Rd_Vld_reg;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ;
  wire \GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ;
  wire \GEN_MUX_N_CNT.Add_in_reg[10] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[11] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[12] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[13] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[14] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[15] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[16] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[17] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[18] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[19] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[1] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[20] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[21] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[22] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[23] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[24] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[25] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[26] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[27] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[28] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[29] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[2] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[30] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[31] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[3] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[4] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[5] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[6] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[7] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[8] ;
  wire \GEN_MUX_N_CNT.Add_in_reg[9] ;
  wire \GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ;
  wire Last_fifo_Wr_en;
  wire [0:0]\Min_Write_Latency_Int_reg[2] ;
  wire [31:0]Q;
  wire [0:0]SR;
  wire [31:0]\Slv_Wr_Idle_Fifo_Wr_data_reg[31] ;
  wire [29:0]\Write_Latency_Int_reg[31] ;
  wire core_aclk;
  wire empty0;
  wire empty2__0;
  wire empty_i_2__4_n_0;
  wire empty_i_3__4_n_0;
  wire empty_i_4__2_n_0;
  wire empty_i_5__2_n_0;
  wire [1:0]out;
  wire p_0_in;
  wire [5:0]p_0_in__8;
  wire \rptr[0]_i_1__2_n_0 ;
  wire \rptr[1]_i_1__2_n_0 ;
  wire \rptr[2]_i_1__2_n_0 ;
  wire \rptr[3]_i_1__2_n_0 ;
  wire \rptr[4]_i_1__2_n_0 ;
  wire \rptr[5]_i_1__3_n_0 ;
  wire [4:0]\rptr_reg[4]_0 ;
  wire [0:0]\rptr_reg[5]_0 ;
  wire [4:0]\wptr_reg[4]_0 ;
  wire \wptr_reg_n_0_[5] ;

  LUT2 #(
    .INIT(4'h1)) 
    FSWI_Rd_Vld_i_1
       (.I0(FSWI1_Empty),
        .I1(FSWI_Empty),
        .O(\rptr_reg[5]_0 ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[10]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[10]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [8]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[10] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[11]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[11]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [9]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[11] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[12]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[12]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [10]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[12] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[13]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[13]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [11]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[13] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[14]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[14]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [12]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[14] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[15]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[15]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [13]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[15] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[16]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[16]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [14]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[16] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[17]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[17]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [15]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[17] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[18]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[18]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [16]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[18] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[19]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[19]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [17]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[19] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[1]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[1]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [0]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[1] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[20]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[20]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [18]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[20] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[21]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[21]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [19]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[21] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[22]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[22]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [20]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[22] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[23]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[23]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [21]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[23] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[24]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[24]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [22]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[24] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[25]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[25]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [23]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[25] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[26]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[26]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [24]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[26] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[27]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[27]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [25]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[27] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[28]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[28]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [26]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[28] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[29]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[29]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [27]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[29] ));
  LUT5 #(
    .INIT(32'hF8888888)) 
    \GEN_MUX_N_CNT.Add_in[2]_i_3 
       (.I0(\Min_Write_Latency_Int_reg[2] ),
        .I1(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[0] ),
        .I2(FSWI_Rd_Vld_reg),
        .I3(Q[2]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[2] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[30]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[30]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [28]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[30] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[31]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[31]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [29]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[31] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[3]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[3]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [1]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[3] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[4]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[4]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [2]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[4] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[5]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[5]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [3]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[5] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[6]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[6]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [4]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[6] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[7]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[7]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [5]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[7] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[8]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[8]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [6]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[8] ));
  LUT5 #(
    .INIT(32'hFF808080)) 
    \GEN_MUX_N_CNT.Add_in[9]_i_4 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[9]),
        .I2(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3] ),
        .I3(\Write_Latency_Int_reg[31] [7]),
        .I4(\GEN_METRIC_0.Metric_Sel_0_CDC_reg[3]_0 ),
        .O(\GEN_MUX_N_CNT.Add_in_reg[9] ));
  LUT2 #(
    .INIT(4'h8)) 
    \GEN_MUX_N_CNT.incrementer_input_reg_val[0]_i_5 
       (.I0(FSWI_Rd_Vld_reg),
        .I1(Q[0]),
        .O(\GEN_MUX_N_CNT.incrementer_input_reg_val_reg[0] ));
  FDRE \dout_reg[0] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [0]),
        .Q(Q[0]),
        .R(1'b0));
  FDRE \dout_reg[10] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [10]),
        .Q(Q[10]),
        .R(1'b0));
  FDRE \dout_reg[11] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [11]),
        .Q(Q[11]),
        .R(1'b0));
  FDRE \dout_reg[12] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [12]),
        .Q(Q[12]),
        .R(1'b0));
  FDRE \dout_reg[13] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [13]),
        .Q(Q[13]),
        .R(1'b0));
  FDRE \dout_reg[14] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [14]),
        .Q(Q[14]),
        .R(1'b0));
  FDRE \dout_reg[15] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [15]),
        .Q(Q[15]),
        .R(1'b0));
  FDRE \dout_reg[16] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [16]),
        .Q(Q[16]),
        .R(1'b0));
  FDRE \dout_reg[17] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [17]),
        .Q(Q[17]),
        .R(1'b0));
  FDRE \dout_reg[18] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [18]),
        .Q(Q[18]),
        .R(1'b0));
  FDRE \dout_reg[19] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [19]),
        .Q(Q[19]),
        .R(1'b0));
  FDRE \dout_reg[1] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [1]),
        .Q(Q[1]),
        .R(1'b0));
  FDRE \dout_reg[20] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [20]),
        .Q(Q[20]),
        .R(1'b0));
  FDRE \dout_reg[21] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [21]),
        .Q(Q[21]),
        .R(1'b0));
  FDRE \dout_reg[22] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [22]),
        .Q(Q[22]),
        .R(1'b0));
  FDRE \dout_reg[23] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [23]),
        .Q(Q[23]),
        .R(1'b0));
  FDRE \dout_reg[24] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [24]),
        .Q(Q[24]),
        .R(1'b0));
  FDRE \dout_reg[25] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [25]),
        .Q(Q[25]),
        .R(1'b0));
  FDRE \dout_reg[26] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [26]),
        .Q(Q[26]),
        .R(1'b0));
  FDRE \dout_reg[27] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [27]),
        .Q(Q[27]),
        .R(1'b0));
  FDRE \dout_reg[28] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [28]),
        .Q(Q[28]),
        .R(1'b0));
  FDRE \dout_reg[29] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [29]),
        .Q(Q[29]),
        .R(1'b0));
  FDRE \dout_reg[2] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [2]),
        .Q(Q[2]),
        .R(1'b0));
  FDRE \dout_reg[30] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [30]),
        .Q(Q[30]),
        .R(1'b0));
  FDRE \dout_reg[31] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [31]),
        .Q(Q[31]),
        .R(1'b0));
  FDRE \dout_reg[3] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [3]),
        .Q(Q[3]),
        .R(1'b0));
  FDRE \dout_reg[4] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [4]),
        .Q(Q[4]),
        .R(1'b0));
  FDRE \dout_reg[5] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [5]),
        .Q(Q[5]),
        .R(1'b0));
  FDRE \dout_reg[6] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [6]),
        .Q(Q[6]),
        .R(1'b0));
  FDRE \dout_reg[7] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [7]),
        .Q(Q[7]),
        .R(1'b0));
  FDRE \dout_reg[8] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [8]),
        .Q(Q[8]),
        .R(1'b0));
  FDRE \dout_reg[9] 
       (.C(core_aclk),
        .CE(1'b1),
        .D(\Slv_Wr_Idle_Fifo_Wr_data_reg[31] [9]),
        .Q(Q[9]),
        .R(1'b0));
  LUT6 #(
    .INIT(64'hA0E0A0A0A0A0A0A0)) 
    empty_i_1
       (.I0(FSWI1_Empty),
        .I1(empty_i_2__4_n_0),
        .I2(empty2__0),
        .I3(FSWI_Empty),
        .I4(empty_i_3__4_n_0),
        .I5(empty_i_4__2_n_0),
        .O(empty0));
  LUT6 #(
    .INIT(64'h6AAAAAAA95555555)) 
    empty_i_2__4
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(\wptr_reg[4]_0 [4]),
        .O(empty_i_2__4_n_0));
  LUT6 #(
    .INIT(64'h0082410014000082)) 
    empty_i_3__4
       (.I0(\wptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [2]),
        .I2(\wptr_reg[4]_0 [2]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [1]),
        .I5(\wptr_reg[4]_0 [1]),
        .O(empty_i_3__4_n_0));
  LUT6 #(
    .INIT(64'h00A5A500690000A5)) 
    empty_i_4__2
       (.I0(\wptr_reg_n_0_[5] ),
        .I1(\rptr_reg[4]_0 [4]),
        .I2(p_0_in),
        .I3(empty_i_5__2_n_0),
        .I4(\rptr_reg[4]_0 [3]),
        .I5(\wptr_reg[4]_0 [3]),
        .O(empty_i_4__2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h80)) 
    empty_i_5__2
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .O(empty_i_5__2_n_0));
  FDSE empty_reg
       (.C(core_aclk),
        .CE(1'b1),
        .D(empty0),
        .Q(FSWI1_Empty),
        .S(SR));
  LUT4 #(
    .INIT(16'hB000)) 
    mem_reg_0_31_0_5_i_1
       (.I0(Ext_Trig_Metric_en_reg),
        .I1(out[1]),
        .I2(out[0]),
        .I3(Last_fifo_Wr_en),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \rptr[0]_i_1__2 
       (.I0(\rptr_reg[4]_0 [0]),
        .O(\rptr[0]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair67" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \rptr[1]_i_1__2 
       (.I0(\rptr_reg[4]_0 [1]),
        .I1(\rptr_reg[4]_0 [0]),
        .O(\rptr[1]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair65" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \rptr[2]_i_1__2 
       (.I0(\rptr_reg[4]_0 [0]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [2]),
        .O(\rptr[2]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT4 #(
    .INIT(16'h6AAA)) 
    \rptr[3]_i_1__2 
       (.I0(\rptr_reg[4]_0 [3]),
        .I1(\rptr_reg[4]_0 [1]),
        .I2(\rptr_reg[4]_0 [0]),
        .I3(\rptr_reg[4]_0 [2]),
        .O(\rptr[3]_i_1__2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair63" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \rptr[4]_i_1__2 
       (.I0(\rptr_reg[4]_0 [2]),
        .I1(\rptr_reg[4]_0 [0]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [3]),
        .I4(\rptr_reg[4]_0 [4]),
        .O(\rptr[4]_i_1__2_n_0 ));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \rptr[5]_i_1__3 
       (.I0(\rptr_reg[4]_0 [4]),
        .I1(\rptr_reg[4]_0 [3]),
        .I2(\rptr_reg[4]_0 [1]),
        .I3(\rptr_reg[4]_0 [0]),
        .I4(\rptr_reg[4]_0 [2]),
        .I5(p_0_in),
        .O(\rptr[5]_i_1__3_n_0 ));
  FDRE \rptr_reg[0] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[0]_i_1__2_n_0 ),
        .Q(\rptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \rptr_reg[1] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[1]_i_1__2_n_0 ),
        .Q(\rptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \rptr_reg[2] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[2]_i_1__2_n_0 ),
        .Q(\rptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \rptr_reg[3] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[3]_i_1__2_n_0 ),
        .Q(\rptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \rptr_reg[4] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[4]_i_1__2_n_0 ),
        .Q(\rptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \rptr_reg[5] 
       (.C(core_aclk),
        .CE(\rptr_reg[5]_0 ),
        .D(\rptr[5]_i_1__3_n_0 ),
        .Q(p_0_in),
        .R(SR));
  LUT1 #(
    .INIT(2'h1)) 
    \wptr[0]_i_1__8 
       (.I0(\wptr_reg[4]_0 [0]),
        .O(p_0_in__8[0]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \wptr[1]_i_1__8 
       (.I0(\wptr_reg[4]_0 [0]),
        .I1(\wptr_reg[4]_0 [1]),
        .O(p_0_in__8[1]));
  (* SOFT_HLUTNM = "soft_lutpair66" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \wptr[2]_i_1__8 
       (.I0(\wptr_reg[4]_0 [0]),
        .I1(\wptr_reg[4]_0 [1]),
        .I2(\wptr_reg[4]_0 [2]),
        .O(p_0_in__8[2]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \wptr[3]_i_1__8 
       (.I0(\wptr_reg[4]_0 [1]),
        .I1(\wptr_reg[4]_0 [0]),
        .I2(\wptr_reg[4]_0 [2]),
        .I3(\wptr_reg[4]_0 [3]),
        .O(p_0_in__8[3]));
  (* SOFT_HLUTNM = "soft_lutpair64" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \wptr[4]_i_1__8 
       (.I0(\wptr_reg[4]_0 [2]),
        .I1(\wptr_reg[4]_0 [0]),
        .I2(\wptr_reg[4]_0 [1]),
        .I3(\wptr_reg[4]_0 [3]),
        .I4(\wptr_reg[4]_0 [4]),
        .O(p_0_in__8[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \wptr[5]_i_1__8 
       (.I0(\wptr_reg[4]_0 [4]),
        .I1(\wptr_reg[4]_0 [3]),
        .I2(\wptr_reg[4]_0 [1]),
        .I3(\wptr_reg[4]_0 [0]),
        .I4(\wptr_reg[4]_0 [2]),
        .I5(\wptr_reg_n_0_[5] ),
        .O(p_0_in__8[5]));
  FDRE \wptr_reg[0] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__8[0]),
        .Q(\wptr_reg[4]_0 [0]),
        .R(SR));
  FDRE \wptr_reg[1] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__8[1]),
        .Q(\wptr_reg[4]_0 [1]),
        .R(SR));
  FDRE \wptr_reg[2] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__8[2]),
        .Q(\wptr_reg[4]_0 [2]),
        .R(SR));
  FDRE \wptr_reg[3] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__8[3]),
        .Q(\wptr_reg[4]_0 [3]),
        .R(SR));
  FDRE \wptr_reg[4] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__8[4]),
        .Q(\wptr_reg[4]_0 [4]),
        .R(SR));
  FDRE \wptr_reg[5] 
       (.C(core_aclk),
        .CE(E),
        .D(p_0_in__8[5]),
        .Q(\wptr_reg_n_0_[5] ),
        .R(SR));
endmodule

(* COUNTER_LOAD_VALUE = "0" *) (* C_AXI4LITE_CORE_CLK_ASYNC = "1" *) (* C_AXIS_DWIDTH_ROUND_TO_32 = "64" *) 
(* C_ENABLE_ADVANCED = "1" *) (* C_ENABLE_EVENT_COUNT = "1" *) (* C_ENABLE_EVENT_LOG = "0" *) 
(* C_ENABLE_PROFILE = "0" *) (* C_ENABLE_TRACE = "0" *) (* C_EN_ALL_TRACE = "1" *) 
(* C_EN_AXI_DEBUG = "0" *) (* C_EN_EXT_EVENTS_FLAG = "0" *) (* C_EN_FIRST_READ_FLAG = "1" *) 
(* C_EN_FIRST_WRITE_FLAG = "1" *) (* C_EN_LAST_READ_FLAG = "1" *) (* C_EN_LAST_WRITE_FLAG = "1" *) 
(* C_EN_RD_ADD_FLAG = "1" *) (* C_EN_RESPONSE_FLAG = "1" *) (* C_EN_SW_REG_WR_FLAG = "0" *) 
(* C_EN_TRIGGER = "0" *) (* C_EN_WR_ADD_FLAG = "1" *) (* C_EXT_EVENT0_FIFO_ENABLE = "1" *) 
(* C_EXT_EVENT1_FIFO_ENABLE = "1" *) (* C_EXT_EVENT2_FIFO_ENABLE = "1" *) (* C_EXT_EVENT3_FIFO_ENABLE = "1" *) 
(* C_EXT_EVENT4_FIFO_ENABLE = "1" *) (* C_EXT_EVENT5_FIFO_ENABLE = "1" *) (* C_EXT_EVENT6_FIFO_ENABLE = "1" *) 
(* C_EXT_EVENT7_FIFO_ENABLE = "1" *) (* C_FAMILY = "zynq" *) (* C_FIFO_AXIS_DEPTH = "32" *) 
(* C_FIFO_AXIS_SYNC = "0" *) (* C_FIFO_AXIS_TDATA_WIDTH = "56" *) (* C_FIFO_AXIS_TID_WIDTH = "1" *) 
(* C_GLOBAL_COUNT_WIDTH = "32" *) (* C_HAVE_SAMPLED_METRIC_CNT = "1" *) (* C_INSTANCE = "jtag_axi_axi_perf_mon_0_0" *) 
(* C_LITE_ADDRESS_WIDTH = "16" *) (* C_LOG_DATA_OFFLD = "0" *) (* C_METRICS_SAMPLE_COUNT_WIDTH = "32" *) 
(* C_METRIC_COUNT_SCALE = "1" *) (* C_METRIC_COUNT_WIDTH = "32" *) (* C_NUM_MONITOR_SLOTS = "1" *) 
(* C_NUM_OF_COUNTERS = "1" *) (* C_REG_ALL_MONITOR_SIGNALS = "0" *) (* C_SHOW_AXIS_TDEST = "0" *) 
(* C_SHOW_AXIS_TID = "0" *) (* C_SHOW_AXIS_TUSER = "0" *) (* C_SHOW_AXI_IDS = "0" *) 
(* C_SHOW_AXI_LEN = "0" *) (* C_SLOT_0_AXIS_TDATA_WIDTH = "32" *) (* C_SLOT_0_AXIS_TDEST_WIDTH = "1" *) 
(* C_SLOT_0_AXIS_TID_WIDTH = "1" *) (* C_SLOT_0_AXIS_TUSER_WIDTH = "1" *) (* C_SLOT_0_AXI_ADDR_WIDTH = "9" *) 
(* C_SLOT_0_AXI_AWLEN = "7" *) (* C_SLOT_0_AXI_DATA_WIDTH = "32" *) (* C_SLOT_0_AXI_ID_WIDTH = "1" *) 
(* C_SLOT_0_AXI_LOCK = "0" *) (* C_SLOT_0_AXI_PROTOCOL = "AXI4LITE" *) (* C_SLOT_0_FIFO_ENABLE = "1" *) 
(* C_SLOT_1_AXIS_TDATA_WIDTH = "32" *) (* C_SLOT_1_AXIS_TDEST_WIDTH = "1" *) (* C_SLOT_1_AXIS_TID_WIDTH = "1" *) 
(* C_SLOT_1_AXIS_TUSER_WIDTH = "1" *) (* C_SLOT_1_AXI_ADDR_WIDTH = "32" *) (* C_SLOT_1_AXI_AWLEN = "7" *) 
(* C_SLOT_1_AXI_DATA_WIDTH = "32" *) (* C_SLOT_1_AXI_ID_WIDTH = "1" *) (* C_SLOT_1_AXI_LOCK = "0" *) 
(* C_SLOT_1_AXI_PROTOCOL = "AXI4" *) (* C_SLOT_1_FIFO_ENABLE = "1" *) (* C_SLOT_2_AXIS_TDATA_WIDTH = "32" *) 
(* C_SLOT_2_AXIS_TDEST_WIDTH = "1" *) (* C_SLOT_2_AXIS_TID_WIDTH = "1" *) (* C_SLOT_2_AXIS_TUSER_WIDTH = "1" *) 
(* C_SLOT_2_AXI_ADDR_WIDTH = "32" *) (* C_SLOT_2_AXI_AWLEN = "7" *) (* C_SLOT_2_AXI_DATA_WIDTH = "32" *) 
(* C_SLOT_2_AXI_ID_WIDTH = "1" *) (* C_SLOT_2_AXI_LOCK = "0" *) (* C_SLOT_2_AXI_PROTOCOL = "AXI4" *) 
(* C_SLOT_2_FIFO_ENABLE = "1" *) (* C_SLOT_3_AXIS_TDATA_WIDTH = "32" *) (* C_SLOT_3_AXIS_TDEST_WIDTH = "1" *) 
(* C_SLOT_3_AXIS_TID_WIDTH = "1" *) (* C_SLOT_3_AXIS_TUSER_WIDTH = "1" *) (* C_SLOT_3_AXI_ADDR_WIDTH = "32" *) 
(* C_SLOT_3_AXI_AWLEN = "7" *) (* C_SLOT_3_AXI_DATA_WIDTH = "32" *) (* C_SLOT_3_AXI_ID_WIDTH = "1" *) 
(* C_SLOT_3_AXI_LOCK = "0" *) (* C_SLOT_3_AXI_PROTOCOL = "AXI4" *) (* C_SLOT_3_FIFO_ENABLE = "1" *) 
(* C_SLOT_4_AXIS_TDATA_WIDTH = "32" *) (* C_SLOT_4_AXIS_TDEST_WIDTH = "1" *) (* C_SLOT_4_AXIS_TID_WIDTH = "1" *) 
(* C_SLOT_4_AXIS_TUSER_WIDTH = "1" *) (* C_SLOT_4_AXI_ADDR_WIDTH = "32" *) (* C_SLOT_4_AXI_AWLEN = "7" *) 
(* C_SLOT_4_AXI_DATA_WIDTH = "32" *) (* C_SLOT_4_AXI_ID_WIDTH = "1" *) (* C_SLOT_4_AXI_LOCK = "0" *) 
(* C_SLOT_4_AXI_PROTOCOL = "AXI4" *) (* C_SLOT_4_FIFO_ENABLE = "1" *) (* C_SLOT_5_AXIS_TDATA_WIDTH = "32" *) 
(* C_SLOT_5_AXIS_TDEST_WIDTH = "1" *) (* C_SLOT_5_AXIS_TID_WIDTH = "1" *) (* C_SLOT_5_AXIS_TUSER_WIDTH = "1" *) 
(* C_SLOT_5_AXI_ADDR_WIDTH = "32" *) (* C_SLOT_5_AXI_AWLEN = "7" *) (* C_SLOT_5_AXI_DATA_WIDTH = "32" *) 
(* C_SLOT_5_AXI_ID_WIDTH = "1" *) (* C_SLOT_5_AXI_LOCK = "0" *) (* C_SLOT_5_AXI_PROTOCOL = "AXI4" *) 
(* C_SLOT_5_FIFO_ENABLE = "1" *) (* C_SLOT_6_AXIS_TDATA_WIDTH = "32" *) (* C_SLOT_6_AXIS_TDEST_WIDTH = "1" *) 
(* C_SLOT_6_AXIS_TID_WIDTH = "1" *) (* C_SLOT_6_AXIS_TUSER_WIDTH = "1" *) (* C_SLOT_6_AXI_ADDR_WIDTH = "32" *) 
(* C_SLOT_6_AXI_AWLEN = "7" *) (* C_SLOT_6_AXI_DATA_WIDTH = "32" *) (* C_SLOT_6_AXI_ID_WIDTH = "1" *) 
(* C_SLOT_6_AXI_LOCK = "0" *) (* C_SLOT_6_AXI_PROTOCOL = "AXI4" *) (* C_SLOT_6_FIFO_ENABLE = "1" *) 
(* C_SLOT_7_AXIS_TDATA_WIDTH = "32" *) (* C_SLOT_7_AXIS_TDEST_WIDTH = "1" *) (* C_SLOT_7_AXIS_TID_WIDTH = "1" *) 
(* C_SLOT_7_AXIS_TUSER_WIDTH = "1" *) (* C_SLOT_7_AXI_ADDR_WIDTH = "32" *) (* C_SLOT_7_AXI_AWLEN = "7" *) 
(* C_SLOT_7_AXI_DATA_WIDTH = "32" *) (* C_SLOT_7_AXI_ID_WIDTH = "1" *) (* C_SLOT_7_AXI_LOCK = "0" *) 
(* C_SLOT_7_AXI_PROTOCOL = "AXI4" *) (* C_SLOT_7_FIFO_ENABLE = "1" *) (* C_SUPPORT_ID_REFLECTION = "0" *) 
(* C_S_AXI4_BASEADDR = "-1" *) (* C_S_AXI4_HIGHADDR = "0" *) (* C_S_AXI_ADDR_WIDTH = "16" *) 
(* C_S_AXI_DATA_WIDTH = "32" *) (* C_S_AXI_ID_WIDTH = "1" *) (* C_S_AXI_PROTOCOL = "AXI4LITE" *) 
(* DowngradeIPIdentifiedWarnings = "yes" *) (* ENABLE_EXT_EVENTS = "0" *) (* SLOT_0_AXI_PROTOCOL = "AXI4" *) 
(* SLOT_0_AXI_SUB_PROTOCOL = "AXI4LITE" *) (* SLOT_1_AXI_PROTOCOL = "AXI4" *) (* SLOT_1_AXI_SUB_PROTOCOL = "NONE" *) 
(* SLOT_2_AXI_PROTOCOL = "AXI4" *) (* SLOT_2_AXI_SUB_PROTOCOL = "NONE" *) (* SLOT_3_AXI_PROTOCOL = "AXI4" *) 
(* SLOT_3_AXI_SUB_PROTOCOL = "NONE" *) (* SLOT_4_AXI_PROTOCOL = "AXI4" *) (* SLOT_4_AXI_SUB_PROTOCOL = "NONE" *) 
(* SLOT_5_AXI_PROTOCOL = "AXI4" *) (* SLOT_5_AXI_SUB_PROTOCOL = "NONE" *) (* SLOT_6_AXI_PROTOCOL = "AXI4" *) 
(* SLOT_6_AXI_SUB_PROTOCOL = "NONE" *) (* SLOT_7_AXI_PROTOCOL = "AXI4" *) (* SLOT_7_AXI_SUB_PROTOCOL = "NONE" *) 
(* S_AXI_OFFLD_ID_WIDTH = "1" *) 
module jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_top
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rid,
    s_axi_rready,
    slot_0_axi_aclk,
    slot_0_axi_aresetn,
    slot_0_axi_awid,
    slot_0_axi_awaddr,
    slot_0_axi_awprot,
    slot_0_axi_awlen,
    slot_0_axi_awsize,
    slot_0_axi_awburst,
    slot_0_axi_awcache,
    slot_0_axi_awlock,
    slot_0_axi_awvalid,
    slot_0_axi_awready,
    slot_0_axi_wdata,
    slot_0_axi_wstrb,
    slot_0_axi_wlast,
    slot_0_axi_wvalid,
    slot_0_axi_wready,
    slot_0_axi_bid,
    slot_0_axi_bresp,
    slot_0_axi_bvalid,
    slot_0_axi_bready,
    slot_0_axi_arid,
    slot_0_axi_araddr,
    slot_0_axi_arlen,
    slot_0_axi_arsize,
    slot_0_axi_arburst,
    slot_0_axi_arcache,
    slot_0_axi_arprot,
    slot_0_axi_arlock,
    slot_0_axi_arvalid,
    slot_0_axi_arready,
    slot_0_axi_rid,
    slot_0_axi_rdata,
    slot_0_axi_rresp,
    slot_0_axi_rlast,
    slot_0_axi_rvalid,
    slot_0_axi_rready,
    slot_0_axis_aclk,
    slot_0_axis_aresetn,
    slot_0_axis_tvalid,
    slot_0_axis_tready,
    slot_0_axis_tdata,
    slot_0_axis_tstrb,
    slot_0_axis_tkeep,
    slot_0_axis_tlast,
    slot_0_axis_tid,
    slot_0_axis_tdest,
    slot_0_axis_tuser,
    slot_0_ext_trig,
    slot_0_ext_trig_stop,
    slot_1_axi_aclk,
    slot_1_axi_aresetn,
    slot_1_axi_awid,
    slot_1_axi_awaddr,
    slot_1_axi_awprot,
    slot_1_axi_awlen,
    slot_1_axi_awsize,
    slot_1_axi_awburst,
    slot_1_axi_awcache,
    slot_1_axi_awlock,
    slot_1_axi_awvalid,
    slot_1_axi_awready,
    slot_1_axi_wdata,
    slot_1_axi_wstrb,
    slot_1_axi_wlast,
    slot_1_axi_wvalid,
    slot_1_axi_wready,
    slot_1_axi_bid,
    slot_1_axi_bresp,
    slot_1_axi_bvalid,
    slot_1_axi_bready,
    slot_1_axi_arid,
    slot_1_axi_araddr,
    slot_1_axi_arlen,
    slot_1_axi_arsize,
    slot_1_axi_arburst,
    slot_1_axi_arcache,
    slot_1_axi_arprot,
    slot_1_axi_arlock,
    slot_1_axi_arvalid,
    slot_1_axi_arready,
    slot_1_axi_rid,
    slot_1_axi_rdata,
    slot_1_axi_rresp,
    slot_1_axi_rlast,
    slot_1_axi_rvalid,
    slot_1_axi_rready,
    slot_1_axis_aclk,
    slot_1_axis_aresetn,
    slot_1_axis_tvalid,
    slot_1_axis_tready,
    slot_1_axis_tdata,
    slot_1_axis_tstrb,
    slot_1_axis_tkeep,
    slot_1_axis_tlast,
    slot_1_axis_tid,
    slot_1_axis_tdest,
    slot_1_axis_tuser,
    slot_1_ext_trig,
    slot_1_ext_trig_stop,
    slot_2_axi_aclk,
    slot_2_axi_aresetn,
    slot_2_axi_awid,
    slot_2_axi_awaddr,
    slot_2_axi_awprot,
    slot_2_axi_awlen,
    slot_2_axi_awsize,
    slot_2_axi_awburst,
    slot_2_axi_awcache,
    slot_2_axi_awlock,
    slot_2_axi_awvalid,
    slot_2_axi_awready,
    slot_2_axi_wdata,
    slot_2_axi_wstrb,
    slot_2_axi_wlast,
    slot_2_axi_wvalid,
    slot_2_axi_wready,
    slot_2_axi_bid,
    slot_2_axi_bresp,
    slot_2_axi_bvalid,
    slot_2_axi_bready,
    slot_2_axi_arid,
    slot_2_axi_araddr,
    slot_2_axi_arlen,
    slot_2_axi_arsize,
    slot_2_axi_arburst,
    slot_2_axi_arcache,
    slot_2_axi_arprot,
    slot_2_axi_arlock,
    slot_2_axi_arvalid,
    slot_2_axi_arready,
    slot_2_axi_rid,
    slot_2_axi_rdata,
    slot_2_axi_rresp,
    slot_2_axi_rlast,
    slot_2_axi_rvalid,
    slot_2_axi_rready,
    slot_2_axis_aclk,
    slot_2_axis_aresetn,
    slot_2_axis_tvalid,
    slot_2_axis_tready,
    slot_2_axis_tdata,
    slot_2_axis_tstrb,
    slot_2_axis_tkeep,
    slot_2_axis_tlast,
    slot_2_axis_tid,
    slot_2_axis_tdest,
    slot_2_axis_tuser,
    slot_2_ext_trig,
    slot_2_ext_trig_stop,
    slot_3_axi_aclk,
    slot_3_axi_aresetn,
    slot_3_axi_awid,
    slot_3_axi_awaddr,
    slot_3_axi_awprot,
    slot_3_axi_awlen,
    slot_3_axi_awsize,
    slot_3_axi_awburst,
    slot_3_axi_awcache,
    slot_3_axi_awlock,
    slot_3_axi_awvalid,
    slot_3_axi_awready,
    slot_3_axi_wdata,
    slot_3_axi_wstrb,
    slot_3_axi_wlast,
    slot_3_axi_wvalid,
    slot_3_axi_wready,
    slot_3_axi_bid,
    slot_3_axi_bresp,
    slot_3_axi_bvalid,
    slot_3_axi_bready,
    slot_3_axi_arid,
    slot_3_axi_araddr,
    slot_3_axi_arlen,
    slot_3_axi_arsize,
    slot_3_axi_arburst,
    slot_3_axi_arcache,
    slot_3_axi_arprot,
    slot_3_axi_arlock,
    slot_3_axi_arvalid,
    slot_3_axi_arready,
    slot_3_axi_rid,
    slot_3_axi_rdata,
    slot_3_axi_rresp,
    slot_3_axi_rlast,
    slot_3_axi_rvalid,
    slot_3_axi_rready,
    slot_3_axis_aclk,
    slot_3_axis_aresetn,
    slot_3_axis_tvalid,
    slot_3_axis_tready,
    slot_3_axis_tdata,
    slot_3_axis_tstrb,
    slot_3_axis_tkeep,
    slot_3_axis_tlast,
    slot_3_axis_tid,
    slot_3_axis_tdest,
    slot_3_axis_tuser,
    slot_3_ext_trig,
    slot_3_ext_trig_stop,
    slot_4_axi_aclk,
    slot_4_axi_aresetn,
    slot_4_axi_awid,
    slot_4_axi_awaddr,
    slot_4_axi_awprot,
    slot_4_axi_awlen,
    slot_4_axi_awsize,
    slot_4_axi_awburst,
    slot_4_axi_awcache,
    slot_4_axi_awlock,
    slot_4_axi_awvalid,
    slot_4_axi_awready,
    slot_4_axi_wdata,
    slot_4_axi_wstrb,
    slot_4_axi_wlast,
    slot_4_axi_wvalid,
    slot_4_axi_wready,
    slot_4_axi_bid,
    slot_4_axi_bresp,
    slot_4_axi_bvalid,
    slot_4_axi_bready,
    slot_4_axi_arid,
    slot_4_axi_araddr,
    slot_4_axi_arlen,
    slot_4_axi_arsize,
    slot_4_axi_arburst,
    slot_4_axi_arcache,
    slot_4_axi_arprot,
    slot_4_axi_arlock,
    slot_4_axi_arvalid,
    slot_4_axi_arready,
    slot_4_axi_rid,
    slot_4_axi_rdata,
    slot_4_axi_rresp,
    slot_4_axi_rlast,
    slot_4_axi_rvalid,
    slot_4_axi_rready,
    slot_4_axis_aclk,
    slot_4_axis_aresetn,
    slot_4_axis_tvalid,
    slot_4_axis_tready,
    slot_4_axis_tdata,
    slot_4_axis_tstrb,
    slot_4_axis_tkeep,
    slot_4_axis_tlast,
    slot_4_axis_tid,
    slot_4_axis_tdest,
    slot_4_axis_tuser,
    slot_4_ext_trig,
    slot_4_ext_trig_stop,
    slot_5_axi_aclk,
    slot_5_axi_aresetn,
    slot_5_axi_awid,
    slot_5_axi_awaddr,
    slot_5_axi_awprot,
    slot_5_axi_awlen,
    slot_5_axi_awsize,
    slot_5_axi_awburst,
    slot_5_axi_awcache,
    slot_5_axi_awlock,
    slot_5_axi_awvalid,
    slot_5_axi_awready,
    slot_5_axi_wdata,
    slot_5_axi_wstrb,
    slot_5_axi_wlast,
    slot_5_axi_wvalid,
    slot_5_axi_wready,
    slot_5_axi_bid,
    slot_5_axi_bresp,
    slot_5_axi_bvalid,
    slot_5_axi_bready,
    slot_5_axi_arid,
    slot_5_axi_araddr,
    slot_5_axi_arlen,
    slot_5_axi_arsize,
    slot_5_axi_arburst,
    slot_5_axi_arcache,
    slot_5_axi_arprot,
    slot_5_axi_arlock,
    slot_5_axi_arvalid,
    slot_5_axi_arready,
    slot_5_axi_rid,
    slot_5_axi_rdata,
    slot_5_axi_rresp,
    slot_5_axi_rlast,
    slot_5_axi_rvalid,
    slot_5_axi_rready,
    slot_5_axis_aclk,
    slot_5_axis_aresetn,
    slot_5_axis_tvalid,
    slot_5_axis_tready,
    slot_5_axis_tdata,
    slot_5_axis_tstrb,
    slot_5_axis_tkeep,
    slot_5_axis_tlast,
    slot_5_axis_tid,
    slot_5_axis_tdest,
    slot_5_axis_tuser,
    slot_5_ext_trig,
    slot_5_ext_trig_stop,
    slot_6_axi_aclk,
    slot_6_axi_aresetn,
    slot_6_axi_awid,
    slot_6_axi_awaddr,
    slot_6_axi_awprot,
    slot_6_axi_awlen,
    slot_6_axi_awsize,
    slot_6_axi_awburst,
    slot_6_axi_awcache,
    slot_6_axi_awlock,
    slot_6_axi_awvalid,
    slot_6_axi_awready,
    slot_6_axi_wdata,
    slot_6_axi_wstrb,
    slot_6_axi_wlast,
    slot_6_axi_wvalid,
    slot_6_axi_wready,
    slot_6_axi_bid,
    slot_6_axi_bresp,
    slot_6_axi_bvalid,
    slot_6_axi_bready,
    slot_6_axi_arid,
    slot_6_axi_araddr,
    slot_6_axi_arlen,
    slot_6_axi_arsize,
    slot_6_axi_arburst,
    slot_6_axi_arcache,
    slot_6_axi_arprot,
    slot_6_axi_arlock,
    slot_6_axi_arvalid,
    slot_6_axi_arready,
    slot_6_axi_rid,
    slot_6_axi_rdata,
    slot_6_axi_rresp,
    slot_6_axi_rlast,
    slot_6_axi_rvalid,
    slot_6_axi_rready,
    slot_6_axis_aclk,
    slot_6_axis_aresetn,
    slot_6_axis_tvalid,
    slot_6_axis_tready,
    slot_6_axis_tdata,
    slot_6_axis_tstrb,
    slot_6_axis_tkeep,
    slot_6_axis_tlast,
    slot_6_axis_tid,
    slot_6_axis_tdest,
    slot_6_axis_tuser,
    slot_6_ext_trig,
    slot_6_ext_trig_stop,
    slot_7_axi_aclk,
    slot_7_axi_aresetn,
    slot_7_axi_awid,
    slot_7_axi_awaddr,
    slot_7_axi_awprot,
    slot_7_axi_awlen,
    slot_7_axi_awsize,
    slot_7_axi_awburst,
    slot_7_axi_awcache,
    slot_7_axi_awlock,
    slot_7_axi_awvalid,
    slot_7_axi_awready,
    slot_7_axi_wdata,
    slot_7_axi_wstrb,
    slot_7_axi_wlast,
    slot_7_axi_wvalid,
    slot_7_axi_wready,
    slot_7_axi_bid,
    slot_7_axi_bresp,
    slot_7_axi_bvalid,
    slot_7_axi_bready,
    slot_7_axi_arid,
    slot_7_axi_araddr,
    slot_7_axi_arlen,
    slot_7_axi_arsize,
    slot_7_axi_arburst,
    slot_7_axi_arcache,
    slot_7_axi_arprot,
    slot_7_axi_arlock,
    slot_7_axi_arvalid,
    slot_7_axi_arready,
    slot_7_axi_rid,
    slot_7_axi_rdata,
    slot_7_axi_rresp,
    slot_7_axi_rlast,
    slot_7_axi_rvalid,
    slot_7_axi_rready,
    slot_7_axis_aclk,
    slot_7_axis_aresetn,
    slot_7_axis_tvalid,
    slot_7_axis_tready,
    slot_7_axis_tdata,
    slot_7_axis_tstrb,
    slot_7_axis_tkeep,
    slot_7_axis_tlast,
    slot_7_axis_tid,
    slot_7_axis_tdest,
    slot_7_axis_tuser,
    slot_7_ext_trig,
    slot_7_ext_trig_stop,
    ext_clk_0,
    ext_rstn_0,
    ext_event_0_cnt_start,
    ext_event_0_cnt_stop,
    ext_event_0,
    ext_clk_1,
    ext_rstn_1,
    ext_event_1_cnt_start,
    ext_event_1_cnt_stop,
    ext_event_1,
    ext_clk_2,
    ext_rstn_2,
    ext_event_2_cnt_start,
    ext_event_2_cnt_stop,
    ext_event_2,
    ext_clk_3,
    ext_rstn_3,
    ext_event_3_cnt_start,
    ext_event_3_cnt_stop,
    ext_event_3,
    ext_clk_4,
    ext_rstn_4,
    ext_event_4_cnt_start,
    ext_event_4_cnt_stop,
    ext_event_4,
    ext_clk_5,
    ext_rstn_5,
    ext_event_5_cnt_start,
    ext_event_5_cnt_stop,
    ext_event_5,
    ext_clk_6,
    ext_rstn_6,
    ext_event_6_cnt_start,
    ext_event_6_cnt_stop,
    ext_event_6,
    ext_clk_7,
    ext_rstn_7,
    ext_event_7_cnt_start,
    ext_event_7_cnt_stop,
    ext_event_7,
    capture_event,
    reset_event,
    core_aclk,
    core_aresetn,
    m_axis_aclk,
    m_axis_aresetn,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tvalid,
    m_axis_tid,
    m_axis_tready,
    s_axi_offld_aclk,
    s_axi_offld_aresetn,
    s_axi_offld_araddr,
    s_axi_offld_arvalid,
    s_axi_offld_arlen,
    s_axi_offld_arid,
    s_axi_offld_arready,
    s_axi_offld_rready,
    s_axi_offld_rdata,
    s_axi_offld_rresp,
    s_axi_offld_rvalid,
    s_axi_offld_rid,
    s_axi_offld_rlast,
    interrupt,
    trigger_in,
    trigger_in_ack);
  input s_axi_aclk;
  input s_axi_aresetn;
  input [15:0]s_axi_awaddr;
  input s_axi_awvalid;
  input [0:0]s_axi_awid;
  output s_axi_awready;
  input [31:0]s_axi_wdata;
  input [3:0]s_axi_wstrb;
  input s_axi_wvalid;
  output s_axi_wready;
  output [1:0]s_axi_bresp;
  output s_axi_bvalid;
  output [0:0]s_axi_bid;
  input s_axi_bready;
  input [15:0]s_axi_araddr;
  input s_axi_arvalid;
  input [0:0]s_axi_arid;
  output s_axi_arready;
  output [31:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rvalid;
  output [0:0]s_axi_rid;
  input s_axi_rready;
  input slot_0_axi_aclk;
  input slot_0_axi_aresetn;
  input [0:0]slot_0_axi_awid;
  input [8:0]slot_0_axi_awaddr;
  input [2:0]slot_0_axi_awprot;
  input [7:0]slot_0_axi_awlen;
  input [2:0]slot_0_axi_awsize;
  input [1:0]slot_0_axi_awburst;
  input [3:0]slot_0_axi_awcache;
  input [0:0]slot_0_axi_awlock;
  input slot_0_axi_awvalid;
  input slot_0_axi_awready;
  input [31:0]slot_0_axi_wdata;
  input [3:0]slot_0_axi_wstrb;
  input slot_0_axi_wlast;
  input slot_0_axi_wvalid;
  input slot_0_axi_wready;
  input [0:0]slot_0_axi_bid;
  input [1:0]slot_0_axi_bresp;
  input slot_0_axi_bvalid;
  input slot_0_axi_bready;
  input [0:0]slot_0_axi_arid;
  input [8:0]slot_0_axi_araddr;
  input [7:0]slot_0_axi_arlen;
  input [2:0]slot_0_axi_arsize;
  input [1:0]slot_0_axi_arburst;
  input [3:0]slot_0_axi_arcache;
  input [2:0]slot_0_axi_arprot;
  input [0:0]slot_0_axi_arlock;
  input slot_0_axi_arvalid;
  input slot_0_axi_arready;
  input [0:0]slot_0_axi_rid;
  input [31:0]slot_0_axi_rdata;
  input [1:0]slot_0_axi_rresp;
  input slot_0_axi_rlast;
  input slot_0_axi_rvalid;
  input slot_0_axi_rready;
  input slot_0_axis_aclk;
  input slot_0_axis_aresetn;
  input slot_0_axis_tvalid;
  input slot_0_axis_tready;
  input [31:0]slot_0_axis_tdata;
  input [3:0]slot_0_axis_tstrb;
  input [3:0]slot_0_axis_tkeep;
  input slot_0_axis_tlast;
  input [0:0]slot_0_axis_tid;
  input [0:0]slot_0_axis_tdest;
  input [0:0]slot_0_axis_tuser;
  input slot_0_ext_trig;
  input slot_0_ext_trig_stop;
  input slot_1_axi_aclk;
  input slot_1_axi_aresetn;
  input [0:0]slot_1_axi_awid;
  input [31:0]slot_1_axi_awaddr;
  input [2:0]slot_1_axi_awprot;
  input [7:0]slot_1_axi_awlen;
  input [2:0]slot_1_axi_awsize;
  input [1:0]slot_1_axi_awburst;
  input [3:0]slot_1_axi_awcache;
  input [0:0]slot_1_axi_awlock;
  input slot_1_axi_awvalid;
  input slot_1_axi_awready;
  input [31:0]slot_1_axi_wdata;
  input [3:0]slot_1_axi_wstrb;
  input slot_1_axi_wlast;
  input slot_1_axi_wvalid;
  input slot_1_axi_wready;
  input [0:0]slot_1_axi_bid;
  input [1:0]slot_1_axi_bresp;
  input slot_1_axi_bvalid;
  input slot_1_axi_bready;
  input [0:0]slot_1_axi_arid;
  input [31:0]slot_1_axi_araddr;
  input [7:0]slot_1_axi_arlen;
  input [2:0]slot_1_axi_arsize;
  input [1:0]slot_1_axi_arburst;
  input [3:0]slot_1_axi_arcache;
  input [2:0]slot_1_axi_arprot;
  input [0:0]slot_1_axi_arlock;
  input slot_1_axi_arvalid;
  input slot_1_axi_arready;
  input [0:0]slot_1_axi_rid;
  input [31:0]slot_1_axi_rdata;
  input [1:0]slot_1_axi_rresp;
  input slot_1_axi_rlast;
  input slot_1_axi_rvalid;
  input slot_1_axi_rready;
  input slot_1_axis_aclk;
  input slot_1_axis_aresetn;
  input slot_1_axis_tvalid;
  input slot_1_axis_tready;
  input [31:0]slot_1_axis_tdata;
  input [3:0]slot_1_axis_tstrb;
  input [3:0]slot_1_axis_tkeep;
  input slot_1_axis_tlast;
  input [0:0]slot_1_axis_tid;
  input [0:0]slot_1_axis_tdest;
  input [0:0]slot_1_axis_tuser;
  input slot_1_ext_trig;
  input slot_1_ext_trig_stop;
  input slot_2_axi_aclk;
  input slot_2_axi_aresetn;
  input [0:0]slot_2_axi_awid;
  input [31:0]slot_2_axi_awaddr;
  input [2:0]slot_2_axi_awprot;
  input [7:0]slot_2_axi_awlen;
  input [2:0]slot_2_axi_awsize;
  input [1:0]slot_2_axi_awburst;
  input [3:0]slot_2_axi_awcache;
  input [0:0]slot_2_axi_awlock;
  input slot_2_axi_awvalid;
  input slot_2_axi_awready;
  input [31:0]slot_2_axi_wdata;
  input [3:0]slot_2_axi_wstrb;
  input slot_2_axi_wlast;
  input slot_2_axi_wvalid;
  input slot_2_axi_wready;
  input [0:0]slot_2_axi_bid;
  input [1:0]slot_2_axi_bresp;
  input slot_2_axi_bvalid;
  input slot_2_axi_bready;
  input [0:0]slot_2_axi_arid;
  input [31:0]slot_2_axi_araddr;
  input [7:0]slot_2_axi_arlen;
  input [2:0]slot_2_axi_arsize;
  input [1:0]slot_2_axi_arburst;
  input [3:0]slot_2_axi_arcache;
  input [2:0]slot_2_axi_arprot;
  input [0:0]slot_2_axi_arlock;
  input slot_2_axi_arvalid;
  input slot_2_axi_arready;
  input [0:0]slot_2_axi_rid;
  input [31:0]slot_2_axi_rdata;
  input [1:0]slot_2_axi_rresp;
  input slot_2_axi_rlast;
  input slot_2_axi_rvalid;
  input slot_2_axi_rready;
  input slot_2_axis_aclk;
  input slot_2_axis_aresetn;
  input slot_2_axis_tvalid;
  input slot_2_axis_tready;
  input [31:0]slot_2_axis_tdata;
  input [3:0]slot_2_axis_tstrb;
  input [3:0]slot_2_axis_tkeep;
  input slot_2_axis_tlast;
  input [0:0]slot_2_axis_tid;
  input [0:0]slot_2_axis_tdest;
  input [0:0]slot_2_axis_tuser;
  input slot_2_ext_trig;
  input slot_2_ext_trig_stop;
  input slot_3_axi_aclk;
  input slot_3_axi_aresetn;
  input [0:0]slot_3_axi_awid;
  input [31:0]slot_3_axi_awaddr;
  input [2:0]slot_3_axi_awprot;
  input [7:0]slot_3_axi_awlen;
  input [2:0]slot_3_axi_awsize;
  input [1:0]slot_3_axi_awburst;
  input [3:0]slot_3_axi_awcache;
  input [0:0]slot_3_axi_awlock;
  input slot_3_axi_awvalid;
  input slot_3_axi_awready;
  input [31:0]slot_3_axi_wdata;
  input [3:0]slot_3_axi_wstrb;
  input slot_3_axi_wlast;
  input slot_3_axi_wvalid;
  input slot_3_axi_wready;
  input [0:0]slot_3_axi_bid;
  input [1:0]slot_3_axi_bresp;
  input slot_3_axi_bvalid;
  input slot_3_axi_bready;
  input [0:0]slot_3_axi_arid;
  input [31:0]slot_3_axi_araddr;
  input [7:0]slot_3_axi_arlen;
  input [2:0]slot_3_axi_arsize;
  input [1:0]slot_3_axi_arburst;
  input [3:0]slot_3_axi_arcache;
  input [2:0]slot_3_axi_arprot;
  input [0:0]slot_3_axi_arlock;
  input slot_3_axi_arvalid;
  input slot_3_axi_arready;
  input [0:0]slot_3_axi_rid;
  input [31:0]slot_3_axi_rdata;
  input [1:0]slot_3_axi_rresp;
  input slot_3_axi_rlast;
  input slot_3_axi_rvalid;
  input slot_3_axi_rready;
  input slot_3_axis_aclk;
  input slot_3_axis_aresetn;
  input slot_3_axis_tvalid;
  input slot_3_axis_tready;
  input [31:0]slot_3_axis_tdata;
  input [3:0]slot_3_axis_tstrb;
  input [3:0]slot_3_axis_tkeep;
  input slot_3_axis_tlast;
  input [0:0]slot_3_axis_tid;
  input [0:0]slot_3_axis_tdest;
  input [0:0]slot_3_axis_tuser;
  input slot_3_ext_trig;
  input slot_3_ext_trig_stop;
  input slot_4_axi_aclk;
  input slot_4_axi_aresetn;
  input [0:0]slot_4_axi_awid;
  input [31:0]slot_4_axi_awaddr;
  input [2:0]slot_4_axi_awprot;
  input [7:0]slot_4_axi_awlen;
  input [2:0]slot_4_axi_awsize;
  input [1:0]slot_4_axi_awburst;
  input [3:0]slot_4_axi_awcache;
  input [0:0]slot_4_axi_awlock;
  input slot_4_axi_awvalid;
  input slot_4_axi_awready;
  input [31:0]slot_4_axi_wdata;
  input [3:0]slot_4_axi_wstrb;
  input slot_4_axi_wlast;
  input slot_4_axi_wvalid;
  input slot_4_axi_wready;
  input [0:0]slot_4_axi_bid;
  input [1:0]slot_4_axi_bresp;
  input slot_4_axi_bvalid;
  input slot_4_axi_bready;
  input [0:0]slot_4_axi_arid;
  input [31:0]slot_4_axi_araddr;
  input [7:0]slot_4_axi_arlen;
  input [2:0]slot_4_axi_arsize;
  input [1:0]slot_4_axi_arburst;
  input [3:0]slot_4_axi_arcache;
  input [2:0]slot_4_axi_arprot;
  input [0:0]slot_4_axi_arlock;
  input slot_4_axi_arvalid;
  input slot_4_axi_arready;
  input [0:0]slot_4_axi_rid;
  input [31:0]slot_4_axi_rdata;
  input [1:0]slot_4_axi_rresp;
  input slot_4_axi_rlast;
  input slot_4_axi_rvalid;
  input slot_4_axi_rready;
  input slot_4_axis_aclk;
  input slot_4_axis_aresetn;
  input slot_4_axis_tvalid;
  input slot_4_axis_tready;
  input [31:0]slot_4_axis_tdata;
  input [3:0]slot_4_axis_tstrb;
  input [3:0]slot_4_axis_tkeep;
  input slot_4_axis_tlast;
  input [0:0]slot_4_axis_tid;
  input [0:0]slot_4_axis_tdest;
  input [0:0]slot_4_axis_tuser;
  input slot_4_ext_trig;
  input slot_4_ext_trig_stop;
  input slot_5_axi_aclk;
  input slot_5_axi_aresetn;
  input [0:0]slot_5_axi_awid;
  input [31:0]slot_5_axi_awaddr;
  input [2:0]slot_5_axi_awprot;
  input [7:0]slot_5_axi_awlen;
  input [2:0]slot_5_axi_awsize;
  input [1:0]slot_5_axi_awburst;
  input [3:0]slot_5_axi_awcache;
  input [0:0]slot_5_axi_awlock;
  input slot_5_axi_awvalid;
  input slot_5_axi_awready;
  input [31:0]slot_5_axi_wdata;
  input [3:0]slot_5_axi_wstrb;
  input slot_5_axi_wlast;
  input slot_5_axi_wvalid;
  input slot_5_axi_wready;
  input [0:0]slot_5_axi_bid;
  input [1:0]slot_5_axi_bresp;
  input slot_5_axi_bvalid;
  input slot_5_axi_bready;
  input [0:0]slot_5_axi_arid;
  input [31:0]slot_5_axi_araddr;
  input [7:0]slot_5_axi_arlen;
  input [2:0]slot_5_axi_arsize;
  input [1:0]slot_5_axi_arburst;
  input [3:0]slot_5_axi_arcache;
  input [2:0]slot_5_axi_arprot;
  input [0:0]slot_5_axi_arlock;
  input slot_5_axi_arvalid;
  input slot_5_axi_arready;
  input [0:0]slot_5_axi_rid;
  input [31:0]slot_5_axi_rdata;
  input [1:0]slot_5_axi_rresp;
  input slot_5_axi_rlast;
  input slot_5_axi_rvalid;
  input slot_5_axi_rready;
  input slot_5_axis_aclk;
  input slot_5_axis_aresetn;
  input slot_5_axis_tvalid;
  input slot_5_axis_tready;
  input [31:0]slot_5_axis_tdata;
  input [3:0]slot_5_axis_tstrb;
  input [3:0]slot_5_axis_tkeep;
  input slot_5_axis_tlast;
  input [0:0]slot_5_axis_tid;
  input [0:0]slot_5_axis_tdest;
  input [0:0]slot_5_axis_tuser;
  input slot_5_ext_trig;
  input slot_5_ext_trig_stop;
  input slot_6_axi_aclk;
  input slot_6_axi_aresetn;
  input [0:0]slot_6_axi_awid;
  input [31:0]slot_6_axi_awaddr;
  input [2:0]slot_6_axi_awprot;
  input [7:0]slot_6_axi_awlen;
  input [2:0]slot_6_axi_awsize;
  input [1:0]slot_6_axi_awburst;
  input [3:0]slot_6_axi_awcache;
  input [0:0]slot_6_axi_awlock;
  input slot_6_axi_awvalid;
  input slot_6_axi_awready;
  input [31:0]slot_6_axi_wdata;
  input [3:0]slot_6_axi_wstrb;
  input slot_6_axi_wlast;
  input slot_6_axi_wvalid;
  input slot_6_axi_wready;
  input [0:0]slot_6_axi_bid;
  input [1:0]slot_6_axi_bresp;
  input slot_6_axi_bvalid;
  input slot_6_axi_bready;
  input [0:0]slot_6_axi_arid;
  input [31:0]slot_6_axi_araddr;
  input [7:0]slot_6_axi_arlen;
  input [2:0]slot_6_axi_arsize;
  input [1:0]slot_6_axi_arburst;
  input [3:0]slot_6_axi_arcache;
  input [2:0]slot_6_axi_arprot;
  input [0:0]slot_6_axi_arlock;
  input slot_6_axi_arvalid;
  input slot_6_axi_arready;
  input [0:0]slot_6_axi_rid;
  input [31:0]slot_6_axi_rdata;
  input [1:0]slot_6_axi_rresp;
  input slot_6_axi_rlast;
  input slot_6_axi_rvalid;
  input slot_6_axi_rready;
  input slot_6_axis_aclk;
  input slot_6_axis_aresetn;
  input slot_6_axis_tvalid;
  input slot_6_axis_tready;
  input [31:0]slot_6_axis_tdata;
  input [3:0]slot_6_axis_tstrb;
  input [3:0]slot_6_axis_tkeep;
  input slot_6_axis_tlast;
  input [0:0]slot_6_axis_tid;
  input [0:0]slot_6_axis_tdest;
  input [0:0]slot_6_axis_tuser;
  input slot_6_ext_trig;
  input slot_6_ext_trig_stop;
  input slot_7_axi_aclk;
  input slot_7_axi_aresetn;
  input [0:0]slot_7_axi_awid;
  input [31:0]slot_7_axi_awaddr;
  input [2:0]slot_7_axi_awprot;
  input [7:0]slot_7_axi_awlen;
  input [2:0]slot_7_axi_awsize;
  input [1:0]slot_7_axi_awburst;
  input [3:0]slot_7_axi_awcache;
  input [0:0]slot_7_axi_awlock;
  input slot_7_axi_awvalid;
  input slot_7_axi_awready;
  input [31:0]slot_7_axi_wdata;
  input [3:0]slot_7_axi_wstrb;
  input slot_7_axi_wlast;
  input slot_7_axi_wvalid;
  input slot_7_axi_wready;
  input [0:0]slot_7_axi_bid;
  input [1:0]slot_7_axi_bresp;
  input slot_7_axi_bvalid;
  input slot_7_axi_bready;
  input [0:0]slot_7_axi_arid;
  input [31:0]slot_7_axi_araddr;
  input [7:0]slot_7_axi_arlen;
  input [2:0]slot_7_axi_arsize;
  input [1:0]slot_7_axi_arburst;
  input [3:0]slot_7_axi_arcache;
  input [2:0]slot_7_axi_arprot;
  input [0:0]slot_7_axi_arlock;
  input slot_7_axi_arvalid;
  input slot_7_axi_arready;
  input [0:0]slot_7_axi_rid;
  input [31:0]slot_7_axi_rdata;
  input [1:0]slot_7_axi_rresp;
  input slot_7_axi_rlast;
  input slot_7_axi_rvalid;
  input slot_7_axi_rready;
  input slot_7_axis_aclk;
  input slot_7_axis_aresetn;
  input slot_7_axis_tvalid;
  input slot_7_axis_tready;
  input [31:0]slot_7_axis_tdata;
  input [3:0]slot_7_axis_tstrb;
  input [3:0]slot_7_axis_tkeep;
  input slot_7_axis_tlast;
  input [0:0]slot_7_axis_tid;
  input [0:0]slot_7_axis_tdest;
  input [0:0]slot_7_axis_tuser;
  input slot_7_ext_trig;
  input slot_7_ext_trig_stop;
  input ext_clk_0;
  input ext_rstn_0;
  input ext_event_0_cnt_start;
  input ext_event_0_cnt_stop;
  input ext_event_0;
  input ext_clk_1;
  input ext_rstn_1;
  input ext_event_1_cnt_start;
  input ext_event_1_cnt_stop;
  input ext_event_1;
  input ext_clk_2;
  input ext_rstn_2;
  input ext_event_2_cnt_start;
  input ext_event_2_cnt_stop;
  input ext_event_2;
  input ext_clk_3;
  input ext_rstn_3;
  input ext_event_3_cnt_start;
  input ext_event_3_cnt_stop;
  input ext_event_3;
  input ext_clk_4;
  input ext_rstn_4;
  input ext_event_4_cnt_start;
  input ext_event_4_cnt_stop;
  input ext_event_4;
  input ext_clk_5;
  input ext_rstn_5;
  input ext_event_5_cnt_start;
  input ext_event_5_cnt_stop;
  input ext_event_5;
  input ext_clk_6;
  input ext_rstn_6;
  input ext_event_6_cnt_start;
  input ext_event_6_cnt_stop;
  input ext_event_6;
  input ext_clk_7;
  input ext_rstn_7;
  input ext_event_7_cnt_start;
  input ext_event_7_cnt_stop;
  input ext_event_7;
  input capture_event;
  input reset_event;
  input core_aclk;
  input core_aresetn;
  input m_axis_aclk;
  input m_axis_aresetn;
  output [55:0]m_axis_tdata;
  output [6:0]m_axis_tstrb;
  output m_axis_tvalid;
  output [0:0]m_axis_tid;
  input m_axis_tready;
  input s_axi_offld_aclk;
  input s_axi_offld_aresetn;
  input [31:0]s_axi_offld_araddr;
  input s_axi_offld_arvalid;
  input [7:0]s_axi_offld_arlen;
  input [0:0]s_axi_offld_arid;
  output s_axi_offld_arready;
  input s_axi_offld_rready;
  output [31:0]s_axi_offld_rdata;
  output [1:0]s_axi_offld_rresp;
  output s_axi_offld_rvalid;
  output [0:0]s_axi_offld_rid;
  output s_axi_offld_rlast;
  output interrupt;
  input trigger_in;
  output trigger_in_ack;

  wire \<const0> ;
  wire [1:1]Control_Bits_sync;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_100 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_101 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_102 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_103 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_104 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_105 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_139 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_140 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_141 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_142 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_143 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_144 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_145 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_146 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_147 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_148 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_149 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_150 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_151 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_152 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_153 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_154 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_155 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_156 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_157 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_158 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_159 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_160 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_161 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_162 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_163 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_164 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_165 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_166 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_167 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_168 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_169 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_170 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_42 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_43 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_44 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_45 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_46 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_47 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_48 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_49 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_50 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_51 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_52 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_53 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_54 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_55 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_56 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_57 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_58 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_59 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_60 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_61 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_62 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_63 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_64 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_65 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_66 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_67 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_68 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_69 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_70 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_71 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_72 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_73 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_74 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_75 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_76 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_77 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_78 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_79 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_80 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_81 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_82 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_83 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_84 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_85 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_86 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_87 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_88 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_89 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_90 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_91 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_92 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_93 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_94 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_95 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_96 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_97 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_98 ;
  wire \GEN_Advanced_Mode.adavnced_mode_inst_n_99 ;
  wire capture_event;
  wire capture_event_sync;
  wire core_aclk;
  wire core_aresetn;
  wire ext_clk_0;
  wire ext_event_0;
  wire ext_event_0_cnt_start;
  wire ext_event_0_cnt_stop;
  wire ext_rstn_0;
  wire flop_fi_out;
  wire flop_ze_out;
  wire interrupt;
  wire \metric_calc_inst0/BEAT_CNT_AWID_MATCH/dout0 ;
  wire [4:0]\metric_calc_inst0/BEAT_CNT_AWID_MATCH/rptr_reg ;
  wire [4:0]\metric_calc_inst0/BEAT_CNT_AWID_MATCH/wptr_reg ;
  wire \metric_calc_inst0/F1_AWID_MATCH/dout0 ;
  wire [4:0]\metric_calc_inst0/F1_AWID_MATCH/rptr_reg ;
  wire [4:0]\metric_calc_inst0/F1_AWID_MATCH/wptr_reg ;
  wire \metric_calc_inst0/F1_Wr_Data ;
  wire \metric_calc_inst0/F1_Wr_En ;
  wire \metric_calc_inst0/F2_FIRST_WRITE/dout0 ;
  wire [4:0]\metric_calc_inst0/F2_FIRST_WRITE/rptr_reg ;
  wire [4:0]\metric_calc_inst0/F2_FIRST_WRITE/wptr_reg ;
  wire \metric_calc_inst0/F2_Wr_En ;
  wire [32:0]\metric_calc_inst0/F3_WR_LAT_START/dout0 ;
  wire [4:0]\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ;
  wire [4:0]\metric_calc_inst0/F3_WR_LAT_START/wptr_reg ;
  wire \metric_calc_inst0/F3_Wr_En ;
  wire [32:0]\metric_calc_inst0/F4_WR_LAT_END/dout0 ;
  wire [4:0]\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ;
  wire [4:0]\metric_calc_inst0/F4_WR_LAT_END/wptr_reg ;
  wire \metric_calc_inst0/F4_Wr_En ;
  wire [63:0]\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 ;
  wire [4:0]\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ;
  wire [4:0]\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ;
  wire [31:0]\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 ;
  wire [4:0]\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ;
  wire [4:0]\metric_calc_inst0/FSWI_WR_LAST_CNT/wptr_reg ;
  wire \metric_calc_inst0/IDLE_CNT_AWID_MATCH/dout0 ;
  wire [4:0]\metric_calc_inst0/IDLE_CNT_AWID_MATCH/rptr_reg ;
  wire [4:0]\metric_calc_inst0/IDLE_CNT_AWID_MATCH/wptr_reg ;
  wire \metric_calc_inst0/LAST_CNT_AWID_MATCH/dout0 ;
  wire [4:0]\metric_calc_inst0/LAST_CNT_AWID_MATCH/rptr_reg ;
  wire [4:0]\metric_calc_inst0/LAST_CNT_AWID_MATCH/wptr_reg ;
  wire [32:0]\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data ;
  wire [31:0]\metric_calc_inst0/Write_Latency_Cnt_Out ;
  wire \metric_calc_inst0/Write_Latency_Cnt_Ovf ;
  wire [32:0]\metric_calc_inst0/rd_latency_fifo_inst/dout0 ;
  wire [4:0]\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ;
  wire [4:0]\metric_calc_inst0/rd_latency_fifo_inst/wptr_reg ;
  wire \metric_calc_inst0/wren0 ;
  wire \metric_calc_inst0/wren047_out ;
  wire \metric_calc_inst0/wren051_out ;
  wire \register_module_inst/p_0_in ;
  wire reset_event;
  wire reset_event_cdc_sync1_n_0;
  wire rst_flop_fi_out;
  wire rst_flop_ze_out;
  wire s_axi_aclk;
  wire [15:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [15:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire s_axi_wvalid;
  wire slot_0_axi_aclk;
  wire [1:0]slot_0_axi_arburst;
  wire slot_0_axi_aresetn;
  wire [0:0]slot_0_axi_arid;
  wire slot_0_axi_arready;
  wire [2:0]slot_0_axi_arsize;
  wire slot_0_axi_arvalid;
  wire [8:0]slot_0_axi_awaddr;
  wire [1:0]slot_0_axi_awburst;
  wire [0:0]slot_0_axi_awid;
  wire slot_0_axi_awready;
  wire [2:0]slot_0_axi_awsize;
  wire slot_0_axi_awvalid;
  wire [0:0]slot_0_axi_bid;
  wire slot_0_axi_bready;
  wire [1:0]slot_0_axi_bresp;
  wire slot_0_axi_bvalid;
  wire [0:0]slot_0_axi_rid;
  wire slot_0_axi_rready;
  wire [1:0]slot_0_axi_rresp;
  wire slot_0_axi_rvalid;
  wire slot_0_axi_wready;
  wire [3:0]slot_0_axi_wstrb;
  wire slot_0_axi_wvalid;
  wire slot_0_ext_trig;
  wire slot_0_ext_trig_stop;
  wire trigger_in;
  wire trigger_in_ack;
  wire \NLW_BEAT_CNT_AWID_MATCH/mem_reg_0_31_0_0_SPO_UNCONNECTED ;
  wire \NLW_F1_AWID_MATCH/mem_reg_0_31_0_0_SPO_UNCONNECTED ;
  wire \NLW_F2_FIRST_WRITE/mem_reg_0_31_0_0_SPO_UNCONNECTED ;
  wire [1:0]\NLW_F3_WR_LAT_START/mem_reg_0_31_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F3_WR_LAT_START/mem_reg_0_31_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F3_WR_LAT_START/mem_reg_0_31_18_23_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F3_WR_LAT_START/mem_reg_0_31_24_29_DOD_UNCONNECTED ;
  wire [1:1]\NLW_F3_WR_LAT_START/mem_reg_0_31_30_32_DOB_UNCONNECTED ;
  wire [1:0]\NLW_F3_WR_LAT_START/mem_reg_0_31_30_32_DOC_UNCONNECTED ;
  wire [1:0]\NLW_F3_WR_LAT_START/mem_reg_0_31_30_32_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F3_WR_LAT_START/mem_reg_0_31_6_11_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F4_WR_LAT_END/mem_reg_0_31_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F4_WR_LAT_END/mem_reg_0_31_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F4_WR_LAT_END/mem_reg_0_31_18_23_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F4_WR_LAT_END/mem_reg_0_31_24_29_DOD_UNCONNECTED ;
  wire [1:1]\NLW_F4_WR_LAT_END/mem_reg_0_31_30_32_DOB_UNCONNECTED ;
  wire [1:0]\NLW_F4_WR_LAT_END/mem_reg_0_31_30_32_DOC_UNCONNECTED ;
  wire [1:0]\NLW_F4_WR_LAT_END/mem_reg_0_31_30_32_DOD_UNCONNECTED ;
  wire [1:0]\NLW_F4_WR_LAT_END/mem_reg_0_31_6_11_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_18_23_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_24_29_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_30_35_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_36_41_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_42_47_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_48_53_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_54_59_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_60_63_DOC_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_60_63_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_6_11_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_18_23_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_24_29_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_30_31_DOB_UNCONNECTED ;
  wire [1:0]\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_30_31_DOC_UNCONNECTED ;
  wire [1:0]\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_30_31_DOD_UNCONNECTED ;
  wire [1:0]\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_6_11_DOD_UNCONNECTED ;
  wire \NLW_IDLE_CNT_AWID_MATCH/mem_reg_0_31_0_0_SPO_UNCONNECTED ;
  wire \NLW_LAST_CNT_AWID_MATCH/mem_reg_0_31_0_0_SPO_UNCONNECTED ;
  wire [1:0]\NLW_rd_latency_fifo_inst/mem_reg_0_31_0_5_DOD_UNCONNECTED ;
  wire [1:0]\NLW_rd_latency_fifo_inst/mem_reg_0_31_12_17_DOD_UNCONNECTED ;
  wire [1:0]\NLW_rd_latency_fifo_inst/mem_reg_0_31_18_23_DOD_UNCONNECTED ;
  wire [1:0]\NLW_rd_latency_fifo_inst/mem_reg_0_31_24_29_DOD_UNCONNECTED ;
  wire [1:1]\NLW_rd_latency_fifo_inst/mem_reg_0_31_30_32_DOB_UNCONNECTED ;
  wire [1:0]\NLW_rd_latency_fifo_inst/mem_reg_0_31_30_32_DOC_UNCONNECTED ;
  wire [1:0]\NLW_rd_latency_fifo_inst/mem_reg_0_31_30_32_DOD_UNCONNECTED ;
  wire [1:0]\NLW_rd_latency_fifo_inst/mem_reg_0_31_6_11_DOD_UNCONNECTED ;

  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tstrb[6] = \<const0> ;
  assign m_axis_tstrb[5] = \<const0> ;
  assign m_axis_tstrb[4] = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_offld_arready = \<const0> ;
  assign s_axi_offld_rdata[31] = \<const0> ;
  assign s_axi_offld_rdata[30] = \<const0> ;
  assign s_axi_offld_rdata[29] = \<const0> ;
  assign s_axi_offld_rdata[28] = \<const0> ;
  assign s_axi_offld_rdata[27] = \<const0> ;
  assign s_axi_offld_rdata[26] = \<const0> ;
  assign s_axi_offld_rdata[25] = \<const0> ;
  assign s_axi_offld_rdata[24] = \<const0> ;
  assign s_axi_offld_rdata[23] = \<const0> ;
  assign s_axi_offld_rdata[22] = \<const0> ;
  assign s_axi_offld_rdata[21] = \<const0> ;
  assign s_axi_offld_rdata[20] = \<const0> ;
  assign s_axi_offld_rdata[19] = \<const0> ;
  assign s_axi_offld_rdata[18] = \<const0> ;
  assign s_axi_offld_rdata[17] = \<const0> ;
  assign s_axi_offld_rdata[16] = \<const0> ;
  assign s_axi_offld_rdata[15] = \<const0> ;
  assign s_axi_offld_rdata[14] = \<const0> ;
  assign s_axi_offld_rdata[13] = \<const0> ;
  assign s_axi_offld_rdata[12] = \<const0> ;
  assign s_axi_offld_rdata[11] = \<const0> ;
  assign s_axi_offld_rdata[10] = \<const0> ;
  assign s_axi_offld_rdata[9] = \<const0> ;
  assign s_axi_offld_rdata[8] = \<const0> ;
  assign s_axi_offld_rdata[7] = \<const0> ;
  assign s_axi_offld_rdata[6] = \<const0> ;
  assign s_axi_offld_rdata[5] = \<const0> ;
  assign s_axi_offld_rdata[4] = \<const0> ;
  assign s_axi_offld_rdata[3] = \<const0> ;
  assign s_axi_offld_rdata[2] = \<const0> ;
  assign s_axi_offld_rdata[1] = \<const0> ;
  assign s_axi_offld_rdata[0] = \<const0> ;
  assign s_axi_offld_rid[0] = \<const0> ;
  assign s_axi_offld_rlast = \<const0> ;
  assign s_axi_offld_rresp[1] = \<const0> ;
  assign s_axi_offld_rresp[0] = \<const0> ;
  assign s_axi_offld_rvalid = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  RAM32X1D \BEAT_CNT_AWID_MATCH/mem_reg_0_31_0_0 
       (.A0(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/wptr_reg [0]),
        .A1(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/wptr_reg [1]),
        .A2(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/wptr_reg [2]),
        .A3(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/wptr_reg [3]),
        .A4(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/wptr_reg [4]),
        .D(\metric_calc_inst0/F1_Wr_Data ),
        .DPO(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/dout0 ),
        .DPRA0(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/rptr_reg [0]),
        .DPRA1(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/rptr_reg [1]),
        .DPRA2(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/rptr_reg [2]),
        .DPRA3(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/rptr_reg [3]),
        .DPRA4(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/rptr_reg [4]),
        .SPO(\NLW_BEAT_CNT_AWID_MATCH/mem_reg_0_31_0_0_SPO_UNCONNECTED ),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F1_Wr_En ));
  RAM32X1D \F1_AWID_MATCH/mem_reg_0_31_0_0 
       (.A0(\metric_calc_inst0/F1_AWID_MATCH/wptr_reg [0]),
        .A1(\metric_calc_inst0/F1_AWID_MATCH/wptr_reg [1]),
        .A2(\metric_calc_inst0/F1_AWID_MATCH/wptr_reg [2]),
        .A3(\metric_calc_inst0/F1_AWID_MATCH/wptr_reg [3]),
        .A4(\metric_calc_inst0/F1_AWID_MATCH/wptr_reg [4]),
        .D(\metric_calc_inst0/F1_Wr_Data ),
        .DPO(\metric_calc_inst0/F1_AWID_MATCH/dout0 ),
        .DPRA0(\metric_calc_inst0/F1_AWID_MATCH/rptr_reg [0]),
        .DPRA1(\metric_calc_inst0/F1_AWID_MATCH/rptr_reg [1]),
        .DPRA2(\metric_calc_inst0/F1_AWID_MATCH/rptr_reg [2]),
        .DPRA3(\metric_calc_inst0/F1_AWID_MATCH/rptr_reg [3]),
        .DPRA4(\metric_calc_inst0/F1_AWID_MATCH/rptr_reg [4]),
        .SPO(\NLW_F1_AWID_MATCH/mem_reg_0_31_0_0_SPO_UNCONNECTED ),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F1_Wr_En ));
  RAM32X1D \F2_FIRST_WRITE/mem_reg_0_31_0_0 
       (.A0(\metric_calc_inst0/F2_FIRST_WRITE/wptr_reg [0]),
        .A1(\metric_calc_inst0/F2_FIRST_WRITE/wptr_reg [1]),
        .A2(\metric_calc_inst0/F2_FIRST_WRITE/wptr_reg [2]),
        .A3(\metric_calc_inst0/F2_FIRST_WRITE/wptr_reg [3]),
        .A4(\metric_calc_inst0/F2_FIRST_WRITE/wptr_reg [4]),
        .D(1'b1),
        .DPO(\metric_calc_inst0/F2_FIRST_WRITE/dout0 ),
        .DPRA0(\metric_calc_inst0/F2_FIRST_WRITE/rptr_reg [0]),
        .DPRA1(\metric_calc_inst0/F2_FIRST_WRITE/rptr_reg [1]),
        .DPRA2(\metric_calc_inst0/F2_FIRST_WRITE/rptr_reg [2]),
        .DPRA3(\metric_calc_inst0/F2_FIRST_WRITE/rptr_reg [3]),
        .DPRA4(\metric_calc_inst0/F2_FIRST_WRITE/rptr_reg [4]),
        .SPO(\NLW_F2_FIRST_WRITE/mem_reg_0_31_0_0_SPO_UNCONNECTED ),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F2_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F3_WR_LAT_START/mem_reg_0_31_0_5 
       (.ADDRA(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F3_WR_LAT_START/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [1:0]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [3:2]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [5:4]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F3_WR_LAT_START/dout0 [1:0]),
        .DOB(\metric_calc_inst0/F3_WR_LAT_START/dout0 [3:2]),
        .DOC(\metric_calc_inst0/F3_WR_LAT_START/dout0 [5:4]),
        .DOD(\NLW_F3_WR_LAT_START/mem_reg_0_31_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F3_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F3_WR_LAT_START/mem_reg_0_31_12_17 
       (.ADDRA(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F3_WR_LAT_START/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [13:12]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [15:14]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [17:16]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F3_WR_LAT_START/dout0 [13:12]),
        .DOB(\metric_calc_inst0/F3_WR_LAT_START/dout0 [15:14]),
        .DOC(\metric_calc_inst0/F3_WR_LAT_START/dout0 [17:16]),
        .DOD(\NLW_F3_WR_LAT_START/mem_reg_0_31_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F3_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F3_WR_LAT_START/mem_reg_0_31_18_23 
       (.ADDRA(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F3_WR_LAT_START/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [19:18]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [21:20]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [23:22]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F3_WR_LAT_START/dout0 [19:18]),
        .DOB(\metric_calc_inst0/F3_WR_LAT_START/dout0 [21:20]),
        .DOC(\metric_calc_inst0/F3_WR_LAT_START/dout0 [23:22]),
        .DOD(\NLW_F3_WR_LAT_START/mem_reg_0_31_18_23_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F3_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F3_WR_LAT_START/mem_reg_0_31_24_29 
       (.ADDRA(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F3_WR_LAT_START/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [25:24]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [27:26]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [29:28]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F3_WR_LAT_START/dout0 [25:24]),
        .DOB(\metric_calc_inst0/F3_WR_LAT_START/dout0 [27:26]),
        .DOC(\metric_calc_inst0/F3_WR_LAT_START/dout0 [29:28]),
        .DOD(\NLW_F3_WR_LAT_START/mem_reg_0_31_24_29_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F3_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F3_WR_LAT_START/mem_reg_0_31_30_32 
       (.ADDRA(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F3_WR_LAT_START/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [31:30]),
        .DIB({1'b0,\metric_calc_inst0/Write_Latency_Cnt_Ovf }),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F3_WR_LAT_START/dout0 [31:30]),
        .DOB({\NLW_F3_WR_LAT_START/mem_reg_0_31_30_32_DOB_UNCONNECTED [1],\metric_calc_inst0/F3_WR_LAT_START/dout0 [32]}),
        .DOC(\NLW_F3_WR_LAT_START/mem_reg_0_31_30_32_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_F3_WR_LAT_START/mem_reg_0_31_30_32_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F3_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F3_WR_LAT_START/mem_reg_0_31_6_11 
       (.ADDRA(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F3_WR_LAT_START/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [7:6]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [9:8]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [11:10]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F3_WR_LAT_START/dout0 [7:6]),
        .DOB(\metric_calc_inst0/F3_WR_LAT_START/dout0 [9:8]),
        .DOC(\metric_calc_inst0/F3_WR_LAT_START/dout0 [11:10]),
        .DOD(\NLW_F3_WR_LAT_START/mem_reg_0_31_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F3_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F4_WR_LAT_END/mem_reg_0_31_0_5 
       (.ADDRA(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F4_WR_LAT_END/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [1:0]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [3:2]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [5:4]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F4_WR_LAT_END/dout0 [1:0]),
        .DOB(\metric_calc_inst0/F4_WR_LAT_END/dout0 [3:2]),
        .DOC(\metric_calc_inst0/F4_WR_LAT_END/dout0 [5:4]),
        .DOD(\NLW_F4_WR_LAT_END/mem_reg_0_31_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F4_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F4_WR_LAT_END/mem_reg_0_31_12_17 
       (.ADDRA(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F4_WR_LAT_END/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [13:12]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [15:14]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [17:16]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F4_WR_LAT_END/dout0 [13:12]),
        .DOB(\metric_calc_inst0/F4_WR_LAT_END/dout0 [15:14]),
        .DOC(\metric_calc_inst0/F4_WR_LAT_END/dout0 [17:16]),
        .DOD(\NLW_F4_WR_LAT_END/mem_reg_0_31_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F4_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F4_WR_LAT_END/mem_reg_0_31_18_23 
       (.ADDRA(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F4_WR_LAT_END/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [19:18]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [21:20]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [23:22]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F4_WR_LAT_END/dout0 [19:18]),
        .DOB(\metric_calc_inst0/F4_WR_LAT_END/dout0 [21:20]),
        .DOC(\metric_calc_inst0/F4_WR_LAT_END/dout0 [23:22]),
        .DOD(\NLW_F4_WR_LAT_END/mem_reg_0_31_18_23_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F4_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F4_WR_LAT_END/mem_reg_0_31_24_29 
       (.ADDRA(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F4_WR_LAT_END/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [25:24]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [27:26]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [29:28]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F4_WR_LAT_END/dout0 [25:24]),
        .DOB(\metric_calc_inst0/F4_WR_LAT_END/dout0 [27:26]),
        .DOC(\metric_calc_inst0/F4_WR_LAT_END/dout0 [29:28]),
        .DOD(\NLW_F4_WR_LAT_END/mem_reg_0_31_24_29_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F4_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F4_WR_LAT_END/mem_reg_0_31_30_32 
       (.ADDRA(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F4_WR_LAT_END/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [31:30]),
        .DIB({1'b0,\metric_calc_inst0/Write_Latency_Cnt_Ovf }),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F4_WR_LAT_END/dout0 [31:30]),
        .DOB({\NLW_F4_WR_LAT_END/mem_reg_0_31_30_32_DOB_UNCONNECTED [1],\metric_calc_inst0/F4_WR_LAT_END/dout0 [32]}),
        .DOC(\NLW_F4_WR_LAT_END/mem_reg_0_31_30_32_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_F4_WR_LAT_END/mem_reg_0_31_30_32_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F4_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \F4_WR_LAT_END/mem_reg_0_31_6_11 
       (.ADDRA(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRB(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRC(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .ADDRD(\metric_calc_inst0/F4_WR_LAT_END/wptr_reg ),
        .DIA(\metric_calc_inst0/Write_Latency_Cnt_Out [7:6]),
        .DIB(\metric_calc_inst0/Write_Latency_Cnt_Out [9:8]),
        .DIC(\metric_calc_inst0/Write_Latency_Cnt_Out [11:10]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/F4_WR_LAT_END/dout0 [7:6]),
        .DOB(\metric_calc_inst0/F4_WR_LAT_END/dout0 [9:8]),
        .DOC(\metric_calc_inst0/F4_WR_LAT_END/dout0 [11:10]),
        .DOD(\NLW_F4_WR_LAT_END/mem_reg_0_31_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F4_Wr_En ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_0_5 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_104 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_105 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_102 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_103 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_100 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_101 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [1:0]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [3:2]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [5:4]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_12_17 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_92 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_93 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_90 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_91 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_88 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_89 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [13:12]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [15:14]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [17:16]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_18_23 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_86 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_87 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_84 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_85 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_82 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_83 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [19:18]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [21:20]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [23:22]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_18_23_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_24_29 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_80 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_81 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_78 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_79 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_76 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_77 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [25:24]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [27:26]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [29:28]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_24_29_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_30_35 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_74 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_75 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_72 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_73 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_70 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_71 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [31:30]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [33:32]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [35:34]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_30_35_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_36_41 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_68 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_69 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_66 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_67 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_64 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_65 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [37:36]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [39:38]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [41:40]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_36_41_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_42_47 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_62 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_63 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_60 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_61 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_58 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_59 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [43:42]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [45:44]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [47:46]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_42_47_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_48_53 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_56 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_57 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_54 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_55 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_52 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_53 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [49:48]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [51:50]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [53:52]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_48_53_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_54_59 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_50 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_51 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_48 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_49 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_46 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_47 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [55:54]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [57:56]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [59:58]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_54_59_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_60_63 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_44 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_45 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_42 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_43 }),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [61:60]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [63:62]),
        .DOC(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_60_63_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_60_63_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FBC_WR_BEAT_CNT/mem_reg_0_31_6_11 
       (.ADDRA(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_98 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_99 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_96 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_97 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_94 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_95 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [7:6]),
        .DOB(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [9:8]),
        .DOC(\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 [11:10]),
        .DOD(\NLW_FBC_WR_BEAT_CNT/mem_reg_0_31_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren051_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FSWI_WR_LAST_CNT/mem_reg_0_31_0_5 
       (.ADDRA(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FSWI_WR_LAST_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_169 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_170 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_167 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_168 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_165 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_166 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [1:0]),
        .DOB(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [3:2]),
        .DOC(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [5:4]),
        .DOD(\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren047_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FSWI_WR_LAST_CNT/mem_reg_0_31_12_17 
       (.ADDRA(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FSWI_WR_LAST_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_157 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_158 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_155 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_156 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_153 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_154 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [13:12]),
        .DOB(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [15:14]),
        .DOC(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [17:16]),
        .DOD(\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren047_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FSWI_WR_LAST_CNT/mem_reg_0_31_18_23 
       (.ADDRA(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FSWI_WR_LAST_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_151 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_152 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_149 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_150 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_147 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_148 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [19:18]),
        .DOB(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [21:20]),
        .DOC(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [23:22]),
        .DOD(\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_18_23_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren047_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FSWI_WR_LAST_CNT/mem_reg_0_31_24_29 
       (.ADDRA(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FSWI_WR_LAST_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_145 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_146 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_143 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_144 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_141 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_142 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [25:24]),
        .DOB(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [27:26]),
        .DOC(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [29:28]),
        .DOD(\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_24_29_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren047_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FSWI_WR_LAST_CNT/mem_reg_0_31_30_31 
       (.ADDRA(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FSWI_WR_LAST_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_139 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_140 }),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [31:30]),
        .DOB(\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_30_31_DOB_UNCONNECTED [1:0]),
        .DOC(\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_30_31_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_30_31_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren047_out ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \FSWI_WR_LAST_CNT/mem_reg_0_31_6_11 
       (.ADDRA(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRB(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRC(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .ADDRD(\metric_calc_inst0/FSWI_WR_LAST_CNT/wptr_reg ),
        .DIA({\GEN_Advanced_Mode.adavnced_mode_inst_n_163 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_164 }),
        .DIB({\GEN_Advanced_Mode.adavnced_mode_inst_n_161 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_162 }),
        .DIC({\GEN_Advanced_Mode.adavnced_mode_inst_n_159 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_160 }),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [7:6]),
        .DOB(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [9:8]),
        .DOC(\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 [11:10]),
        .DOD(\NLW_FSWI_WR_LAST_CNT/mem_reg_0_31_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren047_out ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_advanced \GEN_Advanced_Mode.adavnced_mode_inst 
       (.\Beat_fifo_Wr_data_reg[61] (\metric_calc_inst0/FBC_WR_BEAT_CNT/dout0 ),
        .\Count_Out_i_reg[31] (\metric_calc_inst0/F4_WR_LAT_END/dout0 ),
        .D({slot_0_ext_trig_stop,slot_0_ext_trig}),
        .E(\metric_calc_inst0/F2_Wr_En ),
        .F1_Wr_Data(\metric_calc_inst0/F1_Wr_Data ),
        .F1_Wr_En(\metric_calc_inst0/F1_Wr_En ),
        .O322(\metric_calc_inst0/F1_AWID_MATCH/wptr_reg ),
        .O323(\metric_calc_inst0/F2_FIRST_WRITE/rptr_reg ),
        .O324(\metric_calc_inst0/F2_FIRST_WRITE/wptr_reg ),
        .O325(\metric_calc_inst0/F3_WR_LAT_START/rptr_reg ),
        .O326(\metric_calc_inst0/F3_WR_LAT_START/wptr_reg ),
        .O327(\metric_calc_inst0/F4_WR_LAT_END/rptr_reg ),
        .O328(\metric_calc_inst0/F4_WR_LAT_END/wptr_reg ),
        .O329(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .O330(\metric_calc_inst0/rd_latency_fifo_inst/wptr_reg ),
        .O333(\metric_calc_inst0/FBC_WR_BEAT_CNT/rptr_reg ),
        .O334(\metric_calc_inst0/FBC_WR_BEAT_CNT/wptr_reg ),
        .O335(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/rptr_reg ),
        .O336(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/wptr_reg ),
        .O337(\metric_calc_inst0/LAST_CNT_AWID_MATCH/rptr_reg ),
        .O338(\metric_calc_inst0/LAST_CNT_AWID_MATCH/wptr_reg ),
        .O339(\metric_calc_inst0/FSWI_WR_LAST_CNT/rptr_reg ),
        .O340(\metric_calc_inst0/FSWI_WR_LAST_CNT/wptr_reg ),
        .O342(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/rptr_reg ),
        .O343(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/wptr_reg ),
        .Q({\metric_calc_inst0/Write_Latency_Cnt_Ovf ,\metric_calc_inst0/Write_Latency_Cnt_Out }),
        .\Rd_Latency_Fifo_Wr_Data_reg[31] (\metric_calc_inst0/rd_latency_fifo_inst/dout0 ),
        .SR(\register_module_inst/p_0_in ),
        .\Slv_Wr_Idle_Fifo_Wr_data_reg[31] (\metric_calc_inst0/FSWI_WR_LAST_CNT/dout0 ),
        .UNCONN_IN({ext_event_0_cnt_start,ext_event_0_cnt_stop,ext_event_0}),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .din({slot_0_axi_awid,slot_0_axi_awaddr[8],slot_0_axi_awsize[0],slot_0_axi_awburst,slot_0_axi_awvalid,slot_0_axi_awready,slot_0_axi_wstrb,slot_0_axi_wvalid,slot_0_axi_wready,slot_0_axi_bid,slot_0_axi_bresp,slot_0_axi_bvalid,slot_0_axi_bready,slot_0_axi_arid,slot_0_axi_arsize[1:0],slot_0_axi_arburst,slot_0_axi_arvalid,slot_0_axi_arready,slot_0_axi_rid,slot_0_axi_rresp,slot_0_axi_rvalid,slot_0_axi_rready}),
        .dout0(\metric_calc_inst0/F3_WR_LAT_START/dout0 ),
        .dout0_0(\metric_calc_inst0/F1_AWID_MATCH/dout0 ),
        .dout0_1(\metric_calc_inst0/F2_FIRST_WRITE/dout0 ),
        .dout0_2(\metric_calc_inst0/BEAT_CNT_AWID_MATCH/dout0 ),
        .dout0_3(\metric_calc_inst0/LAST_CNT_AWID_MATCH/dout0 ),
        .dout0_4(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/dout0 ),
        .\dout_reg[31] (\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data ),
        .\dout_reg[31]_0 ({\GEN_Advanced_Mode.adavnced_mode_inst_n_139 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_140 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_141 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_142 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_143 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_144 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_145 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_146 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_147 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_148 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_149 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_150 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_151 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_152 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_153 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_154 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_155 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_156 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_157 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_158 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_159 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_160 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_161 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_162 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_163 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_164 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_165 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_166 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_167 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_168 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_169 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_170 }),
        .\dout_reg[61] ({\GEN_Advanced_Mode.adavnced_mode_inst_n_42 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_43 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_44 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_45 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_46 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_47 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_48 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_49 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_50 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_51 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_52 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_53 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_54 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_55 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_56 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_57 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_58 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_59 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_60 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_61 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_62 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_63 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_64 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_65 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_66 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_67 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_68 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_69 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_70 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_71 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_72 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_73 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_74 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_75 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_76 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_77 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_78 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_79 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_80 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_81 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_82 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_83 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_84 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_85 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_86 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_87 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_88 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_89 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_90 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_91 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_92 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_93 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_94 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_95 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_96 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_97 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_98 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_99 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_100 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_101 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_102 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_103 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_104 ,\GEN_Advanced_Mode.adavnced_mode_inst_n_105 }),
        .ext_clk_0(ext_clk_0),
        .ext_rstn_0(ext_rstn_0),
        .interrupt(interrupt),
        .out(Control_Bits_sync),
        .\rptr_reg[4] (\metric_calc_inst0/F1_AWID_MATCH/rptr_reg ),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bready(s_axi_bready),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rready(s_axi_rready),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wvalid(s_axi_wvalid),
        .s_level_out_d4_reg(reset_event_cdc_sync1_n_0),
        .s_level_out_d4_reg_0(capture_event_sync),
        .slot_0_axi_aclk(slot_0_axi_aclk),
        .slot_0_axi_aresetn(slot_0_axi_aresetn),
        .trigger_in(trigger_in),
        .trigger_in_ack(trigger_in_ack),
        .\wptr_reg[0] (\metric_calc_inst0/F3_Wr_En ),
        .\wptr_reg[0]_0 (\metric_calc_inst0/F4_Wr_En ),
        .\wptr_reg[0]_1 (\metric_calc_inst0/wren051_out ),
        .\wptr_reg[5] (\metric_calc_inst0/wren047_out ),
        .wren0(\metric_calc_inst0/wren0 ));
  GND GND
       (.G(\<const0> ));
  RAM32X1D \IDLE_CNT_AWID_MATCH/mem_reg_0_31_0_0 
       (.A0(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/wptr_reg [0]),
        .A1(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/wptr_reg [1]),
        .A2(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/wptr_reg [2]),
        .A3(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/wptr_reg [3]),
        .A4(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/wptr_reg [4]),
        .D(\metric_calc_inst0/F1_Wr_Data ),
        .DPO(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/dout0 ),
        .DPRA0(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/rptr_reg [0]),
        .DPRA1(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/rptr_reg [1]),
        .DPRA2(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/rptr_reg [2]),
        .DPRA3(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/rptr_reg [3]),
        .DPRA4(\metric_calc_inst0/IDLE_CNT_AWID_MATCH/rptr_reg [4]),
        .SPO(\NLW_IDLE_CNT_AWID_MATCH/mem_reg_0_31_0_0_SPO_UNCONNECTED ),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F1_Wr_En ));
  RAM32X1D \LAST_CNT_AWID_MATCH/mem_reg_0_31_0_0 
       (.A0(\metric_calc_inst0/LAST_CNT_AWID_MATCH/wptr_reg [0]),
        .A1(\metric_calc_inst0/LAST_CNT_AWID_MATCH/wptr_reg [1]),
        .A2(\metric_calc_inst0/LAST_CNT_AWID_MATCH/wptr_reg [2]),
        .A3(\metric_calc_inst0/LAST_CNT_AWID_MATCH/wptr_reg [3]),
        .A4(\metric_calc_inst0/LAST_CNT_AWID_MATCH/wptr_reg [4]),
        .D(\metric_calc_inst0/F1_Wr_Data ),
        .DPO(\metric_calc_inst0/LAST_CNT_AWID_MATCH/dout0 ),
        .DPRA0(\metric_calc_inst0/LAST_CNT_AWID_MATCH/rptr_reg [0]),
        .DPRA1(\metric_calc_inst0/LAST_CNT_AWID_MATCH/rptr_reg [1]),
        .DPRA2(\metric_calc_inst0/LAST_CNT_AWID_MATCH/rptr_reg [2]),
        .DPRA3(\metric_calc_inst0/LAST_CNT_AWID_MATCH/rptr_reg [3]),
        .DPRA4(\metric_calc_inst0/LAST_CNT_AWID_MATCH/rptr_reg [4]),
        .SPO(\NLW_LAST_CNT_AWID_MATCH/mem_reg_0_31_0_0_SPO_UNCONNECTED ),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/F1_Wr_En ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_dff_async_reset ext_sync_flop_0
       (.capture_event(capture_event),
        .core_aclk(core_aclk),
        .out(flop_ze_out));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_dff_async_reset_0 ext_sync_flop_00
       (.core_aclk(core_aclk),
        .out(rst_flop_ze_out),
        .reset_event(reset_event));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_dff_async_reset_1 ext_sync_flop_1
       (.capture_event(capture_event),
        .core_aclk(core_aclk),
        .out(flop_fi_out),
        .q_reg_0(flop_ze_out));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_dff_async_reset_2 ext_sync_flop_10
       (.core_aclk(core_aclk),
        .out(rst_flop_fi_out),
        .q_reg_0(rst_flop_ze_out),
        .reset_event(reset_event));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \rd_latency_fifo_inst/mem_reg_0_31_0_5 
       (.ADDRA(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRB(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRC(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRD(\metric_calc_inst0/rd_latency_fifo_inst/wptr_reg ),
        .DIA(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [1:0]),
        .DIB(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [3:2]),
        .DIC(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [5:4]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [1:0]),
        .DOB(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [3:2]),
        .DOC(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [5:4]),
        .DOD(\NLW_rd_latency_fifo_inst/mem_reg_0_31_0_5_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \rd_latency_fifo_inst/mem_reg_0_31_12_17 
       (.ADDRA(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRB(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRC(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRD(\metric_calc_inst0/rd_latency_fifo_inst/wptr_reg ),
        .DIA(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [13:12]),
        .DIB(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [15:14]),
        .DIC(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [17:16]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [13:12]),
        .DOB(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [15:14]),
        .DOC(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [17:16]),
        .DOD(\NLW_rd_latency_fifo_inst/mem_reg_0_31_12_17_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \rd_latency_fifo_inst/mem_reg_0_31_18_23 
       (.ADDRA(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRB(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRC(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRD(\metric_calc_inst0/rd_latency_fifo_inst/wptr_reg ),
        .DIA(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [19:18]),
        .DIB(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [21:20]),
        .DIC(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [23:22]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [19:18]),
        .DOB(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [21:20]),
        .DOC(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [23:22]),
        .DOD(\NLW_rd_latency_fifo_inst/mem_reg_0_31_18_23_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \rd_latency_fifo_inst/mem_reg_0_31_24_29 
       (.ADDRA(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRB(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRC(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRD(\metric_calc_inst0/rd_latency_fifo_inst/wptr_reg ),
        .DIA(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [25:24]),
        .DIB(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [27:26]),
        .DIC(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [29:28]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [25:24]),
        .DOB(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [27:26]),
        .DOC(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [29:28]),
        .DOD(\NLW_rd_latency_fifo_inst/mem_reg_0_31_24_29_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \rd_latency_fifo_inst/mem_reg_0_31_30_32 
       (.ADDRA(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRB(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRC(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRD(\metric_calc_inst0/rd_latency_fifo_inst/wptr_reg ),
        .DIA(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [31:30]),
        .DIB({1'b0,\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [32]}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [31:30]),
        .DOB({\NLW_rd_latency_fifo_inst/mem_reg_0_31_30_32_DOB_UNCONNECTED [1],\metric_calc_inst0/rd_latency_fifo_inst/dout0 [32]}),
        .DOC(\NLW_rd_latency_fifo_inst/mem_reg_0_31_30_32_DOC_UNCONNECTED [1:0]),
        .DOD(\NLW_rd_latency_fifo_inst/mem_reg_0_31_30_32_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren0 ));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M \rd_latency_fifo_inst/mem_reg_0_31_6_11 
       (.ADDRA(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRB(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRC(\metric_calc_inst0/rd_latency_fifo_inst/rptr_reg ),
        .ADDRD(\metric_calc_inst0/rd_latency_fifo_inst/wptr_reg ),
        .DIA(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [7:6]),
        .DIB(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [9:8]),
        .DIC(\metric_calc_inst0/Rd_Latency_Fifo_Wr_Data [11:10]),
        .DID({1'b0,1'b0}),
        .DOA(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [7:6]),
        .DOB(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [9:8]),
        .DOC(\metric_calc_inst0/rd_latency_fifo_inst/dout0 [11:10]),
        .DOD(\NLW_rd_latency_fifo_inst/mem_reg_0_31_6_11_DOD_UNCONNECTED [1:0]),
        .WCLK(core_aclk),
        .WE(\metric_calc_inst0/wren0 ));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized6 reset_event_cdc_sync
       (.SR(\register_module_inst/p_0_in ),
        .core_aclk(core_aclk),
        .out(capture_event_sync),
        .q_reg(flop_fi_out));
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_cdc_sync__parameterized7 reset_event_cdc_sync1
       (.\GEN_SAMPLE_METRIC_CNT_0.Samp_Metric_Cnt_0_reg[0] (reset_event_cdc_sync1_n_0),
        .SR(\register_module_inst/p_0_in ),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .out(rst_flop_fi_out),
        .\s_level_out_bus_d4_reg[1] (Control_Bits_sync));
endmodule

(* CHECK_LICENSE_TYPE = "jtag_axi_axi_perf_mon_0_0,axi_perf_mon_v5_0_13_top,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* X_CORE_INFO = "axi_perf_mon_v5_0_13_top,Vivado 2016.4" *) 
(* NotValidForBitStream *)
module jtag_axi_axi_perf_mon_0_0
   (s_axi_aclk,
    s_axi_aresetn,
    s_axi_awaddr,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bresp,
    s_axi_bvalid,
    s_axi_bready,
    s_axi_araddr,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rvalid,
    s_axi_rready,
    slot_0_axi_aclk,
    slot_0_axi_aresetn,
    slot_0_axi_awaddr,
    slot_0_axi_awprot,
    slot_0_axi_awvalid,
    slot_0_axi_awready,
    slot_0_axi_wdata,
    slot_0_axi_wstrb,
    slot_0_axi_wvalid,
    slot_0_axi_wready,
    slot_0_axi_bresp,
    slot_0_axi_bvalid,
    slot_0_axi_bready,
    slot_0_axi_araddr,
    slot_0_axi_arprot,
    slot_0_axi_arvalid,
    slot_0_axi_arready,
    slot_0_axi_rdata,
    slot_0_axi_rresp,
    slot_0_axi_rvalid,
    slot_0_axi_rready,
    capture_event,
    reset_event,
    core_aclk,
    core_aresetn,
    interrupt);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 S_AXI_ACLK CLK" *) input s_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 S_AXI_ARESETN RST" *) input s_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWADDR" *) input [15:0]s_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWVALID" *) input s_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI AWREADY" *) output s_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WDATA" *) input [31:0]s_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WSTRB" *) input [3:0]s_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WVALID" *) input s_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI WREADY" *) output s_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BRESP" *) output [1:0]s_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BVALID" *) output s_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI BREADY" *) input s_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARADDR" *) input [15:0]s_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARVALID" *) input s_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI ARREADY" *) output s_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RDATA" *) output [31:0]s_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RRESP" *) output [1:0]s_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RVALID" *) output s_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 S_AXI RREADY" *) input s_axi_rready;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 slot0_axi_clk CLK" *) input slot_0_axi_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 SLOT0_AXI_RST RST" *) input slot_0_axi_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE AWADDR" *) input [8:0]slot_0_axi_awaddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE AWPROT" *) input [2:0]slot_0_axi_awprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE AWVALID" *) input slot_0_axi_awvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE AWREADY" *) input slot_0_axi_awready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE WDATA" *) input [31:0]slot_0_axi_wdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE WSTRB" *) input [3:0]slot_0_axi_wstrb;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE WVALID" *) input slot_0_axi_wvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE WREADY" *) input slot_0_axi_wready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE BRESP" *) input [1:0]slot_0_axi_bresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE BVALID" *) input slot_0_axi_bvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE BREADY" *) input slot_0_axi_bready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE ARADDR" *) input [8:0]slot_0_axi_araddr;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE ARPROT" *) input [2:0]slot_0_axi_arprot;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE ARVALID" *) input slot_0_axi_arvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE ARREADY" *) input slot_0_axi_arready;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE RDATA" *) input [31:0]slot_0_axi_rdata;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE RRESP" *) input [1:0]slot_0_axi_rresp;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE RVALID" *) input slot_0_axi_rvalid;
  (* X_INTERFACE_INFO = "xilinx.com:interface:aximm:1.0 SLOT_0_AXI4LITE RREADY" *) input slot_0_axi_rready;
  input capture_event;
  input reset_event;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 CORE_ACLK CLK" *) input core_aclk;
  (* X_INTERFACE_INFO = "xilinx.com:signal:reset:1.0 CORE_ARESETN RST" *) input core_aresetn;
  (* X_INTERFACE_INFO = "xilinx.com:signal:interrupt:1.0 INTR INTERRUPT" *) output interrupt;

  wire capture_event;
  wire core_aclk;
  wire core_aresetn;
  wire interrupt;
  wire reset_event;
  wire s_axi_aclk;
  wire [15:0]s_axi_araddr;
  wire s_axi_aresetn;
  wire s_axi_arready;
  wire s_axi_arvalid;
  wire [15:0]s_axi_awaddr;
  wire s_axi_awready;
  wire s_axi_awvalid;
  wire s_axi_bready;
  wire [1:0]s_axi_bresp;
  wire s_axi_bvalid;
  wire [31:0]s_axi_rdata;
  wire s_axi_rready;
  wire [1:0]s_axi_rresp;
  wire s_axi_rvalid;
  wire [31:0]s_axi_wdata;
  wire s_axi_wready;
  wire [3:0]s_axi_wstrb;
  wire s_axi_wvalid;
  wire slot_0_axi_aclk;
  wire [8:0]slot_0_axi_araddr;
  wire slot_0_axi_aresetn;
  wire [2:0]slot_0_axi_arprot;
  wire slot_0_axi_arready;
  wire slot_0_axi_arvalid;
  wire [8:0]slot_0_axi_awaddr;
  wire [2:0]slot_0_axi_awprot;
  wire slot_0_axi_awready;
  wire slot_0_axi_awvalid;
  wire slot_0_axi_bready;
  wire [1:0]slot_0_axi_bresp;
  wire slot_0_axi_bvalid;
  wire [31:0]slot_0_axi_rdata;
  wire slot_0_axi_rready;
  wire [1:0]slot_0_axi_rresp;
  wire slot_0_axi_rvalid;
  wire [31:0]slot_0_axi_wdata;
  wire slot_0_axi_wready;
  wire [3:0]slot_0_axi_wstrb;
  wire slot_0_axi_wvalid;
  wire NLW_inst_m_axis_tvalid_UNCONNECTED;
  wire NLW_inst_s_axi_offld_arready_UNCONNECTED;
  wire NLW_inst_s_axi_offld_rlast_UNCONNECTED;
  wire NLW_inst_s_axi_offld_rvalid_UNCONNECTED;
  wire NLW_inst_trigger_in_ack_UNCONNECTED;
  wire [55:0]NLW_inst_m_axis_tdata_UNCONNECTED;
  wire [0:0]NLW_inst_m_axis_tid_UNCONNECTED;
  wire [6:0]NLW_inst_m_axis_tstrb_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_bid_UNCONNECTED;
  wire [31:0]NLW_inst_s_axi_offld_rdata_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_offld_rid_UNCONNECTED;
  wire [1:0]NLW_inst_s_axi_offld_rresp_UNCONNECTED;
  wire [0:0]NLW_inst_s_axi_rid_UNCONNECTED;

  (* COUNTER_LOAD_VALUE = "0" *) 
  (* C_AXI4LITE_CORE_CLK_ASYNC = "1" *) 
  (* C_AXIS_DWIDTH_ROUND_TO_32 = "64" *) 
  (* C_ENABLE_ADVANCED = "1" *) 
  (* C_ENABLE_EVENT_COUNT = "1" *) 
  (* C_ENABLE_EVENT_LOG = "0" *) 
  (* C_ENABLE_PROFILE = "0" *) 
  (* C_ENABLE_TRACE = "0" *) 
  (* C_EN_ALL_TRACE = "1" *) 
  (* C_EN_AXI_DEBUG = "0" *) 
  (* C_EN_EXT_EVENTS_FLAG = "0" *) 
  (* C_EN_FIRST_READ_FLAG = "1" *) 
  (* C_EN_FIRST_WRITE_FLAG = "1" *) 
  (* C_EN_LAST_READ_FLAG = "1" *) 
  (* C_EN_LAST_WRITE_FLAG = "1" *) 
  (* C_EN_RD_ADD_FLAG = "1" *) 
  (* C_EN_RESPONSE_FLAG = "1" *) 
  (* C_EN_SW_REG_WR_FLAG = "0" *) 
  (* C_EN_TRIGGER = "0" *) 
  (* C_EN_WR_ADD_FLAG = "1" *) 
  (* C_EXT_EVENT0_FIFO_ENABLE = "1" *) 
  (* C_EXT_EVENT1_FIFO_ENABLE = "1" *) 
  (* C_EXT_EVENT2_FIFO_ENABLE = "1" *) 
  (* C_EXT_EVENT3_FIFO_ENABLE = "1" *) 
  (* C_EXT_EVENT4_FIFO_ENABLE = "1" *) 
  (* C_EXT_EVENT5_FIFO_ENABLE = "1" *) 
  (* C_EXT_EVENT6_FIFO_ENABLE = "1" *) 
  (* C_EXT_EVENT7_FIFO_ENABLE = "1" *) 
  (* C_FAMILY = "zynq" *) 
  (* C_FIFO_AXIS_DEPTH = "32" *) 
  (* C_FIFO_AXIS_SYNC = "0" *) 
  (* C_FIFO_AXIS_TDATA_WIDTH = "56" *) 
  (* C_FIFO_AXIS_TID_WIDTH = "1" *) 
  (* C_GLOBAL_COUNT_WIDTH = "32" *) 
  (* C_HAVE_SAMPLED_METRIC_CNT = "1" *) 
  (* C_INSTANCE = "jtag_axi_axi_perf_mon_0_0" *) 
  (* C_LITE_ADDRESS_WIDTH = "16" *) 
  (* C_LOG_DATA_OFFLD = "0" *) 
  (* C_METRICS_SAMPLE_COUNT_WIDTH = "32" *) 
  (* C_METRIC_COUNT_SCALE = "1" *) 
  (* C_METRIC_COUNT_WIDTH = "32" *) 
  (* C_NUM_MONITOR_SLOTS = "1" *) 
  (* C_NUM_OF_COUNTERS = "1" *) 
  (* C_REG_ALL_MONITOR_SIGNALS = "0" *) 
  (* C_SHOW_AXIS_TDEST = "0" *) 
  (* C_SHOW_AXIS_TID = "0" *) 
  (* C_SHOW_AXIS_TUSER = "0" *) 
  (* C_SHOW_AXI_IDS = "0" *) 
  (* C_SHOW_AXI_LEN = "0" *) 
  (* C_SLOT_0_AXIS_TDATA_WIDTH = "32" *) 
  (* C_SLOT_0_AXIS_TDEST_WIDTH = "1" *) 
  (* C_SLOT_0_AXIS_TID_WIDTH = "1" *) 
  (* C_SLOT_0_AXIS_TUSER_WIDTH = "1" *) 
  (* C_SLOT_0_AXI_ADDR_WIDTH = "9" *) 
  (* C_SLOT_0_AXI_AWLEN = "7" *) 
  (* C_SLOT_0_AXI_DATA_WIDTH = "32" *) 
  (* C_SLOT_0_AXI_ID_WIDTH = "1" *) 
  (* C_SLOT_0_AXI_LOCK = "0" *) 
  (* C_SLOT_0_AXI_PROTOCOL = "AXI4LITE" *) 
  (* C_SLOT_0_FIFO_ENABLE = "1" *) 
  (* C_SLOT_1_AXIS_TDATA_WIDTH = "32" *) 
  (* C_SLOT_1_AXIS_TDEST_WIDTH = "1" *) 
  (* C_SLOT_1_AXIS_TID_WIDTH = "1" *) 
  (* C_SLOT_1_AXIS_TUSER_WIDTH = "1" *) 
  (* C_SLOT_1_AXI_ADDR_WIDTH = "32" *) 
  (* C_SLOT_1_AXI_AWLEN = "7" *) 
  (* C_SLOT_1_AXI_DATA_WIDTH = "32" *) 
  (* C_SLOT_1_AXI_ID_WIDTH = "1" *) 
  (* C_SLOT_1_AXI_LOCK = "0" *) 
  (* C_SLOT_1_AXI_PROTOCOL = "AXI4" *) 
  (* C_SLOT_1_FIFO_ENABLE = "1" *) 
  (* C_SLOT_2_AXIS_TDATA_WIDTH = "32" *) 
  (* C_SLOT_2_AXIS_TDEST_WIDTH = "1" *) 
  (* C_SLOT_2_AXIS_TID_WIDTH = "1" *) 
  (* C_SLOT_2_AXIS_TUSER_WIDTH = "1" *) 
  (* C_SLOT_2_AXI_ADDR_WIDTH = "32" *) 
  (* C_SLOT_2_AXI_AWLEN = "7" *) 
  (* C_SLOT_2_AXI_DATA_WIDTH = "32" *) 
  (* C_SLOT_2_AXI_ID_WIDTH = "1" *) 
  (* C_SLOT_2_AXI_LOCK = "0" *) 
  (* C_SLOT_2_AXI_PROTOCOL = "AXI4" *) 
  (* C_SLOT_2_FIFO_ENABLE = "1" *) 
  (* C_SLOT_3_AXIS_TDATA_WIDTH = "32" *) 
  (* C_SLOT_3_AXIS_TDEST_WIDTH = "1" *) 
  (* C_SLOT_3_AXIS_TID_WIDTH = "1" *) 
  (* C_SLOT_3_AXIS_TUSER_WIDTH = "1" *) 
  (* C_SLOT_3_AXI_ADDR_WIDTH = "32" *) 
  (* C_SLOT_3_AXI_AWLEN = "7" *) 
  (* C_SLOT_3_AXI_DATA_WIDTH = "32" *) 
  (* C_SLOT_3_AXI_ID_WIDTH = "1" *) 
  (* C_SLOT_3_AXI_LOCK = "0" *) 
  (* C_SLOT_3_AXI_PROTOCOL = "AXI4" *) 
  (* C_SLOT_3_FIFO_ENABLE = "1" *) 
  (* C_SLOT_4_AXIS_TDATA_WIDTH = "32" *) 
  (* C_SLOT_4_AXIS_TDEST_WIDTH = "1" *) 
  (* C_SLOT_4_AXIS_TID_WIDTH = "1" *) 
  (* C_SLOT_4_AXIS_TUSER_WIDTH = "1" *) 
  (* C_SLOT_4_AXI_ADDR_WIDTH = "32" *) 
  (* C_SLOT_4_AXI_AWLEN = "7" *) 
  (* C_SLOT_4_AXI_DATA_WIDTH = "32" *) 
  (* C_SLOT_4_AXI_ID_WIDTH = "1" *) 
  (* C_SLOT_4_AXI_LOCK = "0" *) 
  (* C_SLOT_4_AXI_PROTOCOL = "AXI4" *) 
  (* C_SLOT_4_FIFO_ENABLE = "1" *) 
  (* C_SLOT_5_AXIS_TDATA_WIDTH = "32" *) 
  (* C_SLOT_5_AXIS_TDEST_WIDTH = "1" *) 
  (* C_SLOT_5_AXIS_TID_WIDTH = "1" *) 
  (* C_SLOT_5_AXIS_TUSER_WIDTH = "1" *) 
  (* C_SLOT_5_AXI_ADDR_WIDTH = "32" *) 
  (* C_SLOT_5_AXI_AWLEN = "7" *) 
  (* C_SLOT_5_AXI_DATA_WIDTH = "32" *) 
  (* C_SLOT_5_AXI_ID_WIDTH = "1" *) 
  (* C_SLOT_5_AXI_LOCK = "0" *) 
  (* C_SLOT_5_AXI_PROTOCOL = "AXI4" *) 
  (* C_SLOT_5_FIFO_ENABLE = "1" *) 
  (* C_SLOT_6_AXIS_TDATA_WIDTH = "32" *) 
  (* C_SLOT_6_AXIS_TDEST_WIDTH = "1" *) 
  (* C_SLOT_6_AXIS_TID_WIDTH = "1" *) 
  (* C_SLOT_6_AXIS_TUSER_WIDTH = "1" *) 
  (* C_SLOT_6_AXI_ADDR_WIDTH = "32" *) 
  (* C_SLOT_6_AXI_AWLEN = "7" *) 
  (* C_SLOT_6_AXI_DATA_WIDTH = "32" *) 
  (* C_SLOT_6_AXI_ID_WIDTH = "1" *) 
  (* C_SLOT_6_AXI_LOCK = "0" *) 
  (* C_SLOT_6_AXI_PROTOCOL = "AXI4" *) 
  (* C_SLOT_6_FIFO_ENABLE = "1" *) 
  (* C_SLOT_7_AXIS_TDATA_WIDTH = "32" *) 
  (* C_SLOT_7_AXIS_TDEST_WIDTH = "1" *) 
  (* C_SLOT_7_AXIS_TID_WIDTH = "1" *) 
  (* C_SLOT_7_AXIS_TUSER_WIDTH = "1" *) 
  (* C_SLOT_7_AXI_ADDR_WIDTH = "32" *) 
  (* C_SLOT_7_AXI_AWLEN = "7" *) 
  (* C_SLOT_7_AXI_DATA_WIDTH = "32" *) 
  (* C_SLOT_7_AXI_ID_WIDTH = "1" *) 
  (* C_SLOT_7_AXI_LOCK = "0" *) 
  (* C_SLOT_7_AXI_PROTOCOL = "AXI4" *) 
  (* C_SLOT_7_FIFO_ENABLE = "1" *) 
  (* C_SUPPORT_ID_REFLECTION = "0" *) 
  (* C_S_AXI4_BASEADDR = "-1" *) 
  (* C_S_AXI4_HIGHADDR = "0" *) 
  (* C_S_AXI_ADDR_WIDTH = "16" *) 
  (* C_S_AXI_DATA_WIDTH = "32" *) 
  (* C_S_AXI_ID_WIDTH = "1" *) 
  (* C_S_AXI_PROTOCOL = "AXI4LITE" *) 
  (* DowngradeIPIdentifiedWarnings = "yes" *) 
  (* ENABLE_EXT_EVENTS = "0" *) 
  (* SLOT_0_AXI_PROTOCOL = "AXI4" *) 
  (* SLOT_0_AXI_SUB_PROTOCOL = "AXI4LITE" *) 
  (* SLOT_1_AXI_PROTOCOL = "AXI4" *) 
  (* SLOT_1_AXI_SUB_PROTOCOL = "NONE" *) 
  (* SLOT_2_AXI_PROTOCOL = "AXI4" *) 
  (* SLOT_2_AXI_SUB_PROTOCOL = "NONE" *) 
  (* SLOT_3_AXI_PROTOCOL = "AXI4" *) 
  (* SLOT_3_AXI_SUB_PROTOCOL = "NONE" *) 
  (* SLOT_4_AXI_PROTOCOL = "AXI4" *) 
  (* SLOT_4_AXI_SUB_PROTOCOL = "NONE" *) 
  (* SLOT_5_AXI_PROTOCOL = "AXI4" *) 
  (* SLOT_5_AXI_SUB_PROTOCOL = "NONE" *) 
  (* SLOT_6_AXI_PROTOCOL = "AXI4" *) 
  (* SLOT_6_AXI_SUB_PROTOCOL = "NONE" *) 
  (* SLOT_7_AXI_PROTOCOL = "AXI4" *) 
  (* SLOT_7_AXI_SUB_PROTOCOL = "NONE" *) 
  (* S_AXI_OFFLD_ID_WIDTH = "1" *) 
  jtag_axi_axi_perf_mon_0_0_axi_perf_mon_v5_0_13_top inst
       (.capture_event(capture_event),
        .core_aclk(core_aclk),
        .core_aresetn(core_aresetn),
        .ext_clk_0(1'b0),
        .ext_clk_1(1'b0),
        .ext_clk_2(1'b0),
        .ext_clk_3(1'b0),
        .ext_clk_4(1'b0),
        .ext_clk_5(1'b0),
        .ext_clk_6(1'b0),
        .ext_clk_7(1'b0),
        .ext_event_0(1'b0),
        .ext_event_0_cnt_start(1'b0),
        .ext_event_0_cnt_stop(1'b0),
        .ext_event_1(1'b0),
        .ext_event_1_cnt_start(1'b0),
        .ext_event_1_cnt_stop(1'b0),
        .ext_event_2(1'b0),
        .ext_event_2_cnt_start(1'b0),
        .ext_event_2_cnt_stop(1'b0),
        .ext_event_3(1'b0),
        .ext_event_3_cnt_start(1'b0),
        .ext_event_3_cnt_stop(1'b0),
        .ext_event_4(1'b0),
        .ext_event_4_cnt_start(1'b0),
        .ext_event_4_cnt_stop(1'b0),
        .ext_event_5(1'b0),
        .ext_event_5_cnt_start(1'b0),
        .ext_event_5_cnt_stop(1'b0),
        .ext_event_6(1'b0),
        .ext_event_6_cnt_start(1'b0),
        .ext_event_6_cnt_stop(1'b0),
        .ext_event_7(1'b0),
        .ext_event_7_cnt_start(1'b0),
        .ext_event_7_cnt_stop(1'b0),
        .ext_rstn_0(1'b1),
        .ext_rstn_1(1'b1),
        .ext_rstn_2(1'b1),
        .ext_rstn_3(1'b1),
        .ext_rstn_4(1'b1),
        .ext_rstn_5(1'b1),
        .ext_rstn_6(1'b1),
        .ext_rstn_7(1'b1),
        .interrupt(interrupt),
        .m_axis_aclk(1'b0),
        .m_axis_aresetn(1'b1),
        .m_axis_tdata(NLW_inst_m_axis_tdata_UNCONNECTED[55:0]),
        .m_axis_tid(NLW_inst_m_axis_tid_UNCONNECTED[0]),
        .m_axis_tready(1'b0),
        .m_axis_tstrb(NLW_inst_m_axis_tstrb_UNCONNECTED[6:0]),
        .m_axis_tvalid(NLW_inst_m_axis_tvalid_UNCONNECTED),
        .reset_event(reset_event),
        .s_axi_aclk(s_axi_aclk),
        .s_axi_araddr(s_axi_araddr),
        .s_axi_aresetn(s_axi_aresetn),
        .s_axi_arid(1'b0),
        .s_axi_arready(s_axi_arready),
        .s_axi_arvalid(s_axi_arvalid),
        .s_axi_awaddr(s_axi_awaddr),
        .s_axi_awid(1'b0),
        .s_axi_awready(s_axi_awready),
        .s_axi_awvalid(s_axi_awvalid),
        .s_axi_bid(NLW_inst_s_axi_bid_UNCONNECTED[0]),
        .s_axi_bready(s_axi_bready),
        .s_axi_bresp(s_axi_bresp),
        .s_axi_bvalid(s_axi_bvalid),
        .s_axi_offld_aclk(1'b0),
        .s_axi_offld_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_offld_aresetn(1'b1),
        .s_axi_offld_arid(1'b0),
        .s_axi_offld_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .s_axi_offld_arready(NLW_inst_s_axi_offld_arready_UNCONNECTED),
        .s_axi_offld_arvalid(1'b0),
        .s_axi_offld_rdata(NLW_inst_s_axi_offld_rdata_UNCONNECTED[31:0]),
        .s_axi_offld_rid(NLW_inst_s_axi_offld_rid_UNCONNECTED[0]),
        .s_axi_offld_rlast(NLW_inst_s_axi_offld_rlast_UNCONNECTED),
        .s_axi_offld_rready(1'b0),
        .s_axi_offld_rresp(NLW_inst_s_axi_offld_rresp_UNCONNECTED[1:0]),
        .s_axi_offld_rvalid(NLW_inst_s_axi_offld_rvalid_UNCONNECTED),
        .s_axi_rdata(s_axi_rdata),
        .s_axi_rid(NLW_inst_s_axi_rid_UNCONNECTED[0]),
        .s_axi_rready(s_axi_rready),
        .s_axi_rresp(s_axi_rresp),
        .s_axi_rvalid(s_axi_rvalid),
        .s_axi_wdata(s_axi_wdata),
        .s_axi_wready(s_axi_wready),
        .s_axi_wstrb(s_axi_wstrb),
        .s_axi_wvalid(s_axi_wvalid),
        .slot_0_axi_aclk(slot_0_axi_aclk),
        .slot_0_axi_araddr(slot_0_axi_araddr),
        .slot_0_axi_arburst({1'b0,1'b0}),
        .slot_0_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_0_axi_aresetn(slot_0_axi_aresetn),
        .slot_0_axi_arid(1'b0),
        .slot_0_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_0_axi_arlock(1'b0),
        .slot_0_axi_arprot(slot_0_axi_arprot),
        .slot_0_axi_arready(slot_0_axi_arready),
        .slot_0_axi_arsize({1'b0,1'b0,1'b0}),
        .slot_0_axi_arvalid(slot_0_axi_arvalid),
        .slot_0_axi_awaddr(slot_0_axi_awaddr),
        .slot_0_axi_awburst({1'b0,1'b0}),
        .slot_0_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_0_axi_awid(1'b0),
        .slot_0_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_0_axi_awlock(1'b0),
        .slot_0_axi_awprot(slot_0_axi_awprot),
        .slot_0_axi_awready(slot_0_axi_awready),
        .slot_0_axi_awsize({1'b0,1'b0,1'b0}),
        .slot_0_axi_awvalid(slot_0_axi_awvalid),
        .slot_0_axi_bid(1'b0),
        .slot_0_axi_bready(slot_0_axi_bready),
        .slot_0_axi_bresp(slot_0_axi_bresp),
        .slot_0_axi_bvalid(slot_0_axi_bvalid),
        .slot_0_axi_rdata(slot_0_axi_rdata),
        .slot_0_axi_rid(1'b0),
        .slot_0_axi_rlast(1'b0),
        .slot_0_axi_rready(slot_0_axi_rready),
        .slot_0_axi_rresp(slot_0_axi_rresp),
        .slot_0_axi_rvalid(slot_0_axi_rvalid),
        .slot_0_axi_wdata(slot_0_axi_wdata),
        .slot_0_axi_wlast(1'b0),
        .slot_0_axi_wready(slot_0_axi_wready),
        .slot_0_axi_wstrb(slot_0_axi_wstrb),
        .slot_0_axi_wvalid(slot_0_axi_wvalid),
        .slot_0_axis_aclk(1'b0),
        .slot_0_axis_aresetn(1'b1),
        .slot_0_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_0_axis_tdest(1'b0),
        .slot_0_axis_tid(1'b0),
        .slot_0_axis_tkeep({1'b1,1'b1,1'b1,1'b1}),
        .slot_0_axis_tlast(1'b0),
        .slot_0_axis_tready(1'b0),
        .slot_0_axis_tstrb({1'b1,1'b1,1'b1,1'b1}),
        .slot_0_axis_tuser(1'b0),
        .slot_0_axis_tvalid(1'b0),
        .slot_0_ext_trig(1'b0),
        .slot_0_ext_trig_stop(1'b0),
        .slot_1_axi_aclk(1'b0),
        .slot_1_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_arburst({1'b0,1'b0}),
        .slot_1_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_aresetn(1'b1),
        .slot_1_axi_arid(1'b0),
        .slot_1_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_arlock(1'b0),
        .slot_1_axi_arprot({1'b0,1'b0,1'b0}),
        .slot_1_axi_arready(1'b0),
        .slot_1_axi_arsize({1'b0,1'b0,1'b0}),
        .slot_1_axi_arvalid(1'b0),
        .slot_1_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_awburst({1'b0,1'b0}),
        .slot_1_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_awid(1'b0),
        .slot_1_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_awlock(1'b0),
        .slot_1_axi_awprot({1'b0,1'b0,1'b0}),
        .slot_1_axi_awready(1'b0),
        .slot_1_axi_awsize({1'b0,1'b0,1'b0}),
        .slot_1_axi_awvalid(1'b0),
        .slot_1_axi_bid(1'b0),
        .slot_1_axi_bready(1'b0),
        .slot_1_axi_bresp({1'b0,1'b0}),
        .slot_1_axi_bvalid(1'b0),
        .slot_1_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_rid(1'b0),
        .slot_1_axi_rlast(1'b0),
        .slot_1_axi_rready(1'b0),
        .slot_1_axi_rresp({1'b0,1'b0}),
        .slot_1_axi_rvalid(1'b0),
        .slot_1_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_wlast(1'b0),
        .slot_1_axi_wready(1'b0),
        .slot_1_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axi_wvalid(1'b0),
        .slot_1_axis_aclk(1'b0),
        .slot_1_axis_aresetn(1'b1),
        .slot_1_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_1_axis_tdest(1'b0),
        .slot_1_axis_tid(1'b0),
        .slot_1_axis_tkeep({1'b1,1'b1,1'b1,1'b1}),
        .slot_1_axis_tlast(1'b0),
        .slot_1_axis_tready(1'b0),
        .slot_1_axis_tstrb({1'b1,1'b1,1'b1,1'b1}),
        .slot_1_axis_tuser(1'b0),
        .slot_1_axis_tvalid(1'b0),
        .slot_1_ext_trig(1'b0),
        .slot_1_ext_trig_stop(1'b0),
        .slot_2_axi_aclk(1'b0),
        .slot_2_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_arburst({1'b0,1'b0}),
        .slot_2_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_aresetn(1'b1),
        .slot_2_axi_arid(1'b0),
        .slot_2_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_arlock(1'b0),
        .slot_2_axi_arprot({1'b0,1'b0,1'b0}),
        .slot_2_axi_arready(1'b0),
        .slot_2_axi_arsize({1'b0,1'b0,1'b0}),
        .slot_2_axi_arvalid(1'b0),
        .slot_2_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_awburst({1'b0,1'b0}),
        .slot_2_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_awid(1'b0),
        .slot_2_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_awlock(1'b0),
        .slot_2_axi_awprot({1'b0,1'b0,1'b0}),
        .slot_2_axi_awready(1'b0),
        .slot_2_axi_awsize({1'b0,1'b0,1'b0}),
        .slot_2_axi_awvalid(1'b0),
        .slot_2_axi_bid(1'b0),
        .slot_2_axi_bready(1'b0),
        .slot_2_axi_bresp({1'b0,1'b0}),
        .slot_2_axi_bvalid(1'b0),
        .slot_2_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_rid(1'b0),
        .slot_2_axi_rlast(1'b0),
        .slot_2_axi_rready(1'b0),
        .slot_2_axi_rresp({1'b0,1'b0}),
        .slot_2_axi_rvalid(1'b0),
        .slot_2_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_wlast(1'b0),
        .slot_2_axi_wready(1'b0),
        .slot_2_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axi_wvalid(1'b0),
        .slot_2_axis_aclk(1'b0),
        .slot_2_axis_aresetn(1'b1),
        .slot_2_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_2_axis_tdest(1'b0),
        .slot_2_axis_tid(1'b0),
        .slot_2_axis_tkeep({1'b1,1'b1,1'b1,1'b1}),
        .slot_2_axis_tlast(1'b0),
        .slot_2_axis_tready(1'b0),
        .slot_2_axis_tstrb({1'b1,1'b1,1'b1,1'b1}),
        .slot_2_axis_tuser(1'b0),
        .slot_2_axis_tvalid(1'b0),
        .slot_2_ext_trig(1'b0),
        .slot_2_ext_trig_stop(1'b0),
        .slot_3_axi_aclk(1'b0),
        .slot_3_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_arburst({1'b0,1'b0}),
        .slot_3_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_aresetn(1'b1),
        .slot_3_axi_arid(1'b0),
        .slot_3_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_arlock(1'b0),
        .slot_3_axi_arprot({1'b0,1'b0,1'b0}),
        .slot_3_axi_arready(1'b0),
        .slot_3_axi_arsize({1'b0,1'b0,1'b0}),
        .slot_3_axi_arvalid(1'b0),
        .slot_3_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_awburst({1'b0,1'b0}),
        .slot_3_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_awid(1'b0),
        .slot_3_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_awlock(1'b0),
        .slot_3_axi_awprot({1'b0,1'b0,1'b0}),
        .slot_3_axi_awready(1'b0),
        .slot_3_axi_awsize({1'b0,1'b0,1'b0}),
        .slot_3_axi_awvalid(1'b0),
        .slot_3_axi_bid(1'b0),
        .slot_3_axi_bready(1'b0),
        .slot_3_axi_bresp({1'b0,1'b0}),
        .slot_3_axi_bvalid(1'b0),
        .slot_3_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_rid(1'b0),
        .slot_3_axi_rlast(1'b0),
        .slot_3_axi_rready(1'b0),
        .slot_3_axi_rresp({1'b0,1'b0}),
        .slot_3_axi_rvalid(1'b0),
        .slot_3_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_wlast(1'b0),
        .slot_3_axi_wready(1'b0),
        .slot_3_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axi_wvalid(1'b0),
        .slot_3_axis_aclk(1'b0),
        .slot_3_axis_aresetn(1'b1),
        .slot_3_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_3_axis_tdest(1'b0),
        .slot_3_axis_tid(1'b0),
        .slot_3_axis_tkeep({1'b1,1'b1,1'b1,1'b1}),
        .slot_3_axis_tlast(1'b0),
        .slot_3_axis_tready(1'b0),
        .slot_3_axis_tstrb({1'b1,1'b1,1'b1,1'b1}),
        .slot_3_axis_tuser(1'b0),
        .slot_3_axis_tvalid(1'b0),
        .slot_3_ext_trig(1'b0),
        .slot_3_ext_trig_stop(1'b0),
        .slot_4_axi_aclk(1'b0),
        .slot_4_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_arburst({1'b0,1'b0}),
        .slot_4_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_aresetn(1'b1),
        .slot_4_axi_arid(1'b0),
        .slot_4_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_arlock(1'b0),
        .slot_4_axi_arprot({1'b0,1'b0,1'b0}),
        .slot_4_axi_arready(1'b0),
        .slot_4_axi_arsize({1'b0,1'b0,1'b0}),
        .slot_4_axi_arvalid(1'b0),
        .slot_4_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_awburst({1'b0,1'b0}),
        .slot_4_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_awid(1'b0),
        .slot_4_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_awlock(1'b0),
        .slot_4_axi_awprot({1'b0,1'b0,1'b0}),
        .slot_4_axi_awready(1'b0),
        .slot_4_axi_awsize({1'b0,1'b0,1'b0}),
        .slot_4_axi_awvalid(1'b0),
        .slot_4_axi_bid(1'b0),
        .slot_4_axi_bready(1'b0),
        .slot_4_axi_bresp({1'b0,1'b0}),
        .slot_4_axi_bvalid(1'b0),
        .slot_4_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_rid(1'b0),
        .slot_4_axi_rlast(1'b0),
        .slot_4_axi_rready(1'b0),
        .slot_4_axi_rresp({1'b0,1'b0}),
        .slot_4_axi_rvalid(1'b0),
        .slot_4_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_wlast(1'b0),
        .slot_4_axi_wready(1'b0),
        .slot_4_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axi_wvalid(1'b0),
        .slot_4_axis_aclk(1'b0),
        .slot_4_axis_aresetn(1'b1),
        .slot_4_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_4_axis_tdest(1'b0),
        .slot_4_axis_tid(1'b0),
        .slot_4_axis_tkeep({1'b1,1'b1,1'b1,1'b1}),
        .slot_4_axis_tlast(1'b0),
        .slot_4_axis_tready(1'b0),
        .slot_4_axis_tstrb({1'b1,1'b1,1'b1,1'b1}),
        .slot_4_axis_tuser(1'b0),
        .slot_4_axis_tvalid(1'b0),
        .slot_4_ext_trig(1'b0),
        .slot_4_ext_trig_stop(1'b0),
        .slot_5_axi_aclk(1'b0),
        .slot_5_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_arburst({1'b0,1'b0}),
        .slot_5_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_aresetn(1'b0),
        .slot_5_axi_arid(1'b0),
        .slot_5_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_arlock(1'b0),
        .slot_5_axi_arprot({1'b0,1'b0,1'b0}),
        .slot_5_axi_arready(1'b0),
        .slot_5_axi_arsize({1'b0,1'b0,1'b0}),
        .slot_5_axi_arvalid(1'b0),
        .slot_5_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_awburst({1'b0,1'b0}),
        .slot_5_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_awid(1'b0),
        .slot_5_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_awlock(1'b0),
        .slot_5_axi_awprot({1'b0,1'b0,1'b0}),
        .slot_5_axi_awready(1'b0),
        .slot_5_axi_awsize({1'b0,1'b0,1'b0}),
        .slot_5_axi_awvalid(1'b0),
        .slot_5_axi_bid(1'b0),
        .slot_5_axi_bready(1'b0),
        .slot_5_axi_bresp({1'b0,1'b0}),
        .slot_5_axi_bvalid(1'b0),
        .slot_5_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_rid(1'b0),
        .slot_5_axi_rlast(1'b0),
        .slot_5_axi_rready(1'b0),
        .slot_5_axi_rresp({1'b0,1'b0}),
        .slot_5_axi_rvalid(1'b0),
        .slot_5_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_wlast(1'b0),
        .slot_5_axi_wready(1'b0),
        .slot_5_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axi_wvalid(1'b0),
        .slot_5_axis_aclk(1'b0),
        .slot_5_axis_aresetn(1'b1),
        .slot_5_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_5_axis_tdest(1'b0),
        .slot_5_axis_tid(1'b0),
        .slot_5_axis_tkeep({1'b1,1'b1,1'b1,1'b1}),
        .slot_5_axis_tlast(1'b0),
        .slot_5_axis_tready(1'b0),
        .slot_5_axis_tstrb({1'b1,1'b1,1'b1,1'b1}),
        .slot_5_axis_tuser(1'b0),
        .slot_5_axis_tvalid(1'b0),
        .slot_5_ext_trig(1'b0),
        .slot_5_ext_trig_stop(1'b0),
        .slot_6_axi_aclk(1'b0),
        .slot_6_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_arburst({1'b0,1'b0}),
        .slot_6_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_aresetn(1'b1),
        .slot_6_axi_arid(1'b0),
        .slot_6_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_arlock(1'b0),
        .slot_6_axi_arprot({1'b0,1'b0,1'b0}),
        .slot_6_axi_arready(1'b0),
        .slot_6_axi_arsize({1'b0,1'b0,1'b0}),
        .slot_6_axi_arvalid(1'b0),
        .slot_6_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_awburst({1'b0,1'b0}),
        .slot_6_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_awid(1'b0),
        .slot_6_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_awlock(1'b0),
        .slot_6_axi_awprot({1'b0,1'b0,1'b0}),
        .slot_6_axi_awready(1'b0),
        .slot_6_axi_awsize({1'b0,1'b0,1'b0}),
        .slot_6_axi_awvalid(1'b0),
        .slot_6_axi_bid(1'b0),
        .slot_6_axi_bready(1'b0),
        .slot_6_axi_bresp({1'b0,1'b0}),
        .slot_6_axi_bvalid(1'b0),
        .slot_6_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_rid(1'b0),
        .slot_6_axi_rlast(1'b0),
        .slot_6_axi_rready(1'b0),
        .slot_6_axi_rresp({1'b0,1'b0}),
        .slot_6_axi_rvalid(1'b0),
        .slot_6_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_wlast(1'b0),
        .slot_6_axi_wready(1'b0),
        .slot_6_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axi_wvalid(1'b0),
        .slot_6_axis_aclk(1'b0),
        .slot_6_axis_aresetn(1'b1),
        .slot_6_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_6_axis_tdest(1'b0),
        .slot_6_axis_tid(1'b0),
        .slot_6_axis_tkeep({1'b1,1'b1,1'b1,1'b1}),
        .slot_6_axis_tlast(1'b0),
        .slot_6_axis_tready(1'b0),
        .slot_6_axis_tstrb({1'b1,1'b1,1'b1,1'b1}),
        .slot_6_axis_tuser(1'b0),
        .slot_6_axis_tvalid(1'b0),
        .slot_6_ext_trig(1'b0),
        .slot_6_ext_trig_stop(1'b0),
        .slot_7_axi_aclk(1'b0),
        .slot_7_axi_araddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_arburst({1'b0,1'b0}),
        .slot_7_axi_arcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_aresetn(1'b1),
        .slot_7_axi_arid(1'b0),
        .slot_7_axi_arlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_arlock(1'b0),
        .slot_7_axi_arprot({1'b0,1'b0,1'b0}),
        .slot_7_axi_arready(1'b0),
        .slot_7_axi_arsize({1'b0,1'b0,1'b0}),
        .slot_7_axi_arvalid(1'b0),
        .slot_7_axi_awaddr({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_awburst({1'b0,1'b0}),
        .slot_7_axi_awcache({1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_awid(1'b0),
        .slot_7_axi_awlen({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_awlock(1'b0),
        .slot_7_axi_awprot({1'b0,1'b0,1'b0}),
        .slot_7_axi_awready(1'b0),
        .slot_7_axi_awsize({1'b0,1'b0,1'b0}),
        .slot_7_axi_awvalid(1'b0),
        .slot_7_axi_bid(1'b0),
        .slot_7_axi_bready(1'b0),
        .slot_7_axi_bresp({1'b0,1'b0}),
        .slot_7_axi_bvalid(1'b0),
        .slot_7_axi_rdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_rid(1'b0),
        .slot_7_axi_rlast(1'b0),
        .slot_7_axi_rready(1'b0),
        .slot_7_axi_rresp({1'b0,1'b0}),
        .slot_7_axi_rvalid(1'b0),
        .slot_7_axi_wdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_wlast(1'b0),
        .slot_7_axi_wready(1'b0),
        .slot_7_axi_wstrb({1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axi_wvalid(1'b0),
        .slot_7_axis_aclk(1'b0),
        .slot_7_axis_aresetn(1'b1),
        .slot_7_axis_tdata({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .slot_7_axis_tdest(1'b0),
        .slot_7_axis_tid(1'b0),
        .slot_7_axis_tkeep({1'b1,1'b1,1'b1,1'b1}),
        .slot_7_axis_tlast(1'b0),
        .slot_7_axis_tready(1'b0),
        .slot_7_axis_tstrb({1'b1,1'b1,1'b1,1'b1}),
        .slot_7_axis_tuser(1'b0),
        .slot_7_axis_tvalid(1'b0),
        .slot_7_ext_trig(1'b0),
        .slot_7_ext_trig_stop(1'b0),
        .trigger_in(1'b0),
        .trigger_in_ack(NLW_inst_trigger_in_ack_UNCONNECTED));
endmodule

module jtag_axi_axi_perf_mon_0_0_clk_x_pntrs
   (out,
    ram_empty_i_reg,
    Q,
    ram_full_i_reg,
    ram_full_i_reg_0,
    D,
    \gc1.count_d2_reg[4] ,
    \gic0.gc0.count_reg[3] ,
    \gic0.gc0.count_d2_reg[4] ,
    wr_clk,
    AR,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ,
    \gc1.count_d2_reg[3] );
  output [4:0]out;
  output ram_empty_i_reg;
  output [4:0]Q;
  output ram_full_i_reg;
  output [4:0]ram_full_i_reg_0;
  input [0:0]D;
  input [3:0]\gc1.count_d2_reg[4] ;
  input [2:0]\gic0.gc0.count_reg[3] ;
  input [4:0]\gic0.gc0.count_d2_reg[4] ;
  input wr_clk;
  input [0:0]AR;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  input [3:0]\gc1.count_d2_reg[3] ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [4:0]Q;
  wire \_inferred__3/i__n_0 ;
  wire \_inferred__4/i__n_0 ;
  wire \_inferred__5/i__n_0 ;
  wire [3:0]bin2gray;
  wire [3:0]\gc1.count_d2_reg[3] ;
  wire [3:0]\gc1.count_d2_reg[4] ;
  wire [4:0]\gic0.gc0.count_d2_reg[4] ;
  wire [2:0]\gic0.gc0.count_reg[3] ;
  wire \gnxpm_cdc.gsync_stage[4].wr_stg_inst_n_5 ;
  wire [2:1]gray2bin;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [4:0]out;
  wire p_0_out;
  wire [4:0]p_10_out;
  wire [4:0]p_3_out;
  wire [4:0]p_4_out;
  wire [4:0]p_5_out;
  wire [4:0]p_6_out;
  wire [4:0]p_7_out;
  wire [4:0]p_8_out;
  wire ram_empty_i_reg;
  wire ram_full_i_reg;
  wire [4:0]ram_full_i_reg_0;
  wire rd_clk;
  wire [4:0]rd_pntr_gc;
  wire wr_clk;
  wire [4:0]wr_pntr_gc;

  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \_inferred__0/i_ 
       (.I0(out[2]),
        .I1(out[1]),
        .I2(out[4]),
        .I3(out[3]),
        .O(gray2bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair135" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \_inferred__1/i_ 
       (.I0(out[3]),
        .I1(out[2]),
        .I2(out[4]),
        .O(gray2bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \_inferred__3/i_ 
       (.I0(p_10_out[2]),
        .I1(p_10_out[0]),
        .I2(p_10_out[1]),
        .I3(p_10_out[4]),
        .I4(p_10_out[3]),
        .O(\_inferred__3/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair134" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \_inferred__4/i_ 
       (.I0(p_10_out[2]),
        .I1(p_10_out[1]),
        .I2(p_10_out[4]),
        .I3(p_10_out[3]),
        .O(\_inferred__4/i__n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \_inferred__5/i_ 
       (.I0(p_10_out[3]),
        .I1(p_10_out[2]),
        .I2(p_10_out[4]),
        .O(\_inferred__5/i__n_0 ));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized0 \gnxpm_cdc.gsync_stage[1].rd_stg_inst 
       (.D(p_3_out),
        .Q(wr_pntr_gc),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized1 \gnxpm_cdc.gsync_stage[1].wr_stg_inst 
       (.AR(AR),
        .D(p_4_out),
        .Q(rd_pntr_gc),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized2 \gnxpm_cdc.gsync_stage[2].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[4]_0 (p_3_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized3 \gnxpm_cdc.gsync_stage[2].wr_stg_inst 
       (.AR(AR),
        .D(p_6_out),
        .\Q_reg_reg[4]_0 (p_4_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized4 \gnxpm_cdc.gsync_stage[3].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[4]_0 (p_5_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized5 \gnxpm_cdc.gsync_stage[3].wr_stg_inst 
       (.AR(AR),
        .D(p_8_out),
        .\Q_reg_reg[4]_0 (p_6_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized6 \gnxpm_cdc.gsync_stage[4].rd_stg_inst 
       (.D(p_0_out),
        .\Q_reg_reg[4]_0 (p_7_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized7 \gnxpm_cdc.gsync_stage[4].wr_stg_inst 
       (.AR(AR),
        .D(\gnxpm_cdc.gsync_stage[4].wr_stg_inst_n_5 ),
        .\Q_reg_reg[4]_0 (p_8_out),
        .out(p_10_out),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\_inferred__3/i__n_0 ),
        .Q(ram_full_i_reg_0[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\_inferred__4/i__n_0 ),
        .Q(ram_full_i_reg_0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\_inferred__5/i__n_0 ),
        .Q(ram_full_i_reg_0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[4].wr_stg_inst_n_5 ),
        .Q(ram_full_i_reg_0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(p_10_out[4]),
        .Q(ram_full_i_reg_0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[3] [0]),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[3] [1]),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[3] [2]),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[3] [3]),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[4] [3]),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_out),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(out[4]),
        .Q(Q[4]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[0]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[4] [0]),
        .I1(\gic0.gc0.count_d2_reg[4] [1]),
        .O(bin2gray[0]));
  (* SOFT_HLUTNM = "soft_lutpair137" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[1]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[4] [1]),
        .I1(\gic0.gc0.count_d2_reg[4] [2]),
        .O(bin2gray[1]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[2]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[4] [2]),
        .I1(\gic0.gc0.count_d2_reg[4] [3]),
        .O(bin2gray[2]));
  (* SOFT_HLUTNM = "soft_lutpair136" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[3]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[4] [3]),
        .I1(\gic0.gc0.count_d2_reg[4] [4]),
        .O(bin2gray[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gic0.gc0.count_d2_reg[4] [4]),
        .Q(wr_pntr_gc[4]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_5
       (.I0(Q[2]),
        .I1(\gc1.count_d2_reg[4] [2]),
        .I2(Q[1]),
        .I3(\gc1.count_d2_reg[4] [1]),
        .I4(\gc1.count_d2_reg[4] [0]),
        .I5(Q[0]),
        .O(ram_empty_i_reg));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_2
       (.I0(ram_full_i_reg_0[3]),
        .I1(\gic0.gc0.count_reg[3] [2]),
        .I2(ram_full_i_reg_0[2]),
        .I3(\gic0.gc0.count_reg[3] [1]),
        .I4(\gic0.gc0.count_reg[3] [0]),
        .I5(ram_full_i_reg_0[1]),
        .O(ram_full_i_reg));
endmodule

(* ORIG_REF_NAME = "clk_x_pntrs" *) 
module jtag_axi_axi_perf_mon_0_0_clk_x_pntrs_11
   (out,
    ram_empty_i_reg,
    Q,
    ram_full_i_reg,
    ram_full_i_reg_0,
    D,
    \gc1.count_d2_reg[4] ,
    \gic0.gc0.count_reg[3] ,
    \gic0.gc0.count_d2_reg[4] ,
    wr_clk,
    AR,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ,
    \gc1.count_d2_reg[3] );
  output [4:0]out;
  output ram_empty_i_reg;
  output [4:0]Q;
  output ram_full_i_reg;
  output [4:0]ram_full_i_reg_0;
  input [0:0]D;
  input [3:0]\gc1.count_d2_reg[4] ;
  input [2:0]\gic0.gc0.count_reg[3] ;
  input [4:0]\gic0.gc0.count_d2_reg[4] ;
  input wr_clk;
  input [0:0]AR;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  input [3:0]\gc1.count_d2_reg[3] ;

  wire [0:0]AR;
  wire [0:0]D;
  wire [4:0]Q;
  wire \_inferred__3/i__n_0 ;
  wire \_inferred__4/i__n_0 ;
  wire \_inferred__5/i__n_0 ;
  wire [3:0]bin2gray;
  wire [3:0]\gc1.count_d2_reg[3] ;
  wire [3:0]\gc1.count_d2_reg[4] ;
  wire [4:0]\gic0.gc0.count_d2_reg[4] ;
  wire [2:0]\gic0.gc0.count_reg[3] ;
  wire \gnxpm_cdc.gsync_stage[4].wr_stg_inst_n_5 ;
  wire [2:1]gray2bin;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire [4:0]out;
  wire p_0_out;
  wire [4:0]p_10_out;
  wire [4:0]p_3_out;
  wire [4:0]p_4_out;
  wire [4:0]p_5_out;
  wire [4:0]p_6_out;
  wire [4:0]p_7_out;
  wire [4:0]p_8_out;
  wire ram_empty_i_reg;
  wire ram_full_i_reg;
  wire [4:0]ram_full_i_reg_0;
  wire rd_clk;
  wire [4:0]rd_pntr_gc;
  wire wr_clk;
  wire [4:0]wr_pntr_gc;

  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \_inferred__0/i_ 
       (.I0(out[2]),
        .I1(out[1]),
        .I2(out[4]),
        .I3(out[3]),
        .O(gray2bin[1]));
  (* SOFT_HLUTNM = "soft_lutpair123" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \_inferred__1/i_ 
       (.I0(out[3]),
        .I1(out[2]),
        .I2(out[4]),
        .O(gray2bin[2]));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT5 #(
    .INIT(32'h96696996)) 
    \_inferred__3/i_ 
       (.I0(p_10_out[2]),
        .I1(p_10_out[0]),
        .I2(p_10_out[1]),
        .I3(p_10_out[4]),
        .I4(p_10_out[3]),
        .O(\_inferred__3/i__n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair122" *) 
  LUT4 #(
    .INIT(16'h6996)) 
    \_inferred__4/i_ 
       (.I0(p_10_out[2]),
        .I1(p_10_out[1]),
        .I2(p_10_out[4]),
        .I3(p_10_out[3]),
        .O(\_inferred__4/i__n_0 ));
  LUT3 #(
    .INIT(8'h96)) 
    \_inferred__5/i_ 
       (.I0(p_10_out[3]),
        .I1(p_10_out[2]),
        .I2(p_10_out[4]),
        .O(\_inferred__5/i__n_0 ));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized0_28 \gnxpm_cdc.gsync_stage[1].rd_stg_inst 
       (.D(p_3_out),
        .Q(wr_pntr_gc),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized1_29 \gnxpm_cdc.gsync_stage[1].wr_stg_inst 
       (.AR(AR),
        .D(p_4_out),
        .Q(rd_pntr_gc),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized2_30 \gnxpm_cdc.gsync_stage[2].rd_stg_inst 
       (.D(p_5_out),
        .\Q_reg_reg[4]_0 (p_3_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized3_31 \gnxpm_cdc.gsync_stage[2].wr_stg_inst 
       (.AR(AR),
        .D(p_6_out),
        .\Q_reg_reg[4]_0 (p_4_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized4_32 \gnxpm_cdc.gsync_stage[3].rd_stg_inst 
       (.D(p_7_out),
        .\Q_reg_reg[4]_0 (p_5_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized5_33 \gnxpm_cdc.gsync_stage[3].wr_stg_inst 
       (.AR(AR),
        .D(p_8_out),
        .\Q_reg_reg[4]_0 (p_6_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized6_34 \gnxpm_cdc.gsync_stage[4].rd_stg_inst 
       (.D(p_0_out),
        .\Q_reg_reg[4]_0 (p_7_out),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .out(out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized7_35 \gnxpm_cdc.gsync_stage[4].wr_stg_inst 
       (.AR(AR),
        .D(\gnxpm_cdc.gsync_stage[4].wr_stg_inst_n_5 ),
        .\Q_reg_reg[4]_0 (p_8_out),
        .out(p_10_out),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\_inferred__3/i__n_0 ),
        .Q(ram_full_i_reg_0[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\_inferred__4/i__n_0 ),
        .Q(ram_full_i_reg_0[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\_inferred__5/i__n_0 ),
        .Q(ram_full_i_reg_0[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gnxpm_cdc.gsync_stage[4].wr_stg_inst_n_5 ),
        .Q(ram_full_i_reg_0[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_bin_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(p_10_out[4]),
        .Q(ram_full_i_reg_0[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[3] [0]),
        .Q(rd_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[3] [1]),
        .Q(rd_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[3] [2]),
        .Q(rd_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[3] [3]),
        .Q(rd_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.rd_pntr_gc_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\gc1.count_d2_reg[4] [3]),
        .Q(rd_pntr_gc[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(D),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[1]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(gray2bin[2]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(p_0_out),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_bin_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(out[4]),
        .Q(Q[4]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[0]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[4] [0]),
        .I1(\gic0.gc0.count_d2_reg[4] [1]),
        .O(bin2gray[0]));
  (* SOFT_HLUTNM = "soft_lutpair125" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[1]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[4] [1]),
        .I1(\gic0.gc0.count_d2_reg[4] [2]),
        .O(bin2gray[1]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[2]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[4] [2]),
        .I1(\gic0.gc0.count_d2_reg[4] [3]),
        .O(bin2gray[2]));
  (* SOFT_HLUTNM = "soft_lutpair124" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_gc[3]_i_1 
       (.I0(\gic0.gc0.count_d2_reg[4] [3]),
        .I1(\gic0.gc0.count_d2_reg[4] [4]),
        .O(bin2gray[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[0]),
        .Q(wr_pntr_gc[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[1]),
        .Q(wr_pntr_gc[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[2]),
        .Q(wr_pntr_gc[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(bin2gray[3]),
        .Q(wr_pntr_gc[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gnxpm_cdc.wr_pntr_gc_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\gic0.gc0.count_d2_reg[4] [4]),
        .Q(wr_pntr_gc[4]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_5
       (.I0(Q[2]),
        .I1(\gc1.count_d2_reg[4] [2]),
        .I2(Q[1]),
        .I3(\gc1.count_d2_reg[4] [1]),
        .I4(\gc1.count_d2_reg[4] [0]),
        .I5(Q[0]),
        .O(ram_empty_i_reg));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_full_i_i_2
       (.I0(ram_full_i_reg_0[3]),
        .I1(\gic0.gc0.count_reg[3] [2]),
        .I2(ram_full_i_reg_0[2]),
        .I3(\gic0.gc0.count_reg[3] [1]),
        .I4(\gic0.gc0.count_reg[3] [0]),
        .I5(ram_full_i_reg_0[1]),
        .O(ram_full_i_reg));
endmodule

module jtag_axi_axi_perf_mon_0_0_dmem
   (Q,
    wr_clk,
    E,
    din,
    \gc1.count_d2_reg[4] ,
    \gic0.gc0.count_d2_reg[4] ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    rd_clk,
    AR);
  output [19:0]Q;
  input wr_clk;
  input [0:0]E;
  input [29:0]din;
  input [4:0]\gc1.count_d2_reg[4] ;
  input [4:0]\gic0.gc0.count_d2_reg[4] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [19:0]Q;
  wire RAM_reg_0_31_0_5_n_0;
  wire RAM_reg_0_31_0_5_n_1;
  wire RAM_reg_0_31_0_5_n_2;
  wire RAM_reg_0_31_0_5_n_3;
  wire RAM_reg_0_31_0_5_n_4;
  wire RAM_reg_0_31_0_5_n_5;
  wire RAM_reg_0_31_30_35_n_0;
  wire RAM_reg_0_31_30_35_n_1;
  wire RAM_reg_0_31_30_35_n_2;
  wire RAM_reg_0_31_30_35_n_3;
  wire RAM_reg_0_31_30_35_n_4;
  wire RAM_reg_0_31_30_35_n_5;
  wire RAM_reg_0_31_36_41_n_0;
  wire RAM_reg_0_31_36_41_n_1;
  wire RAM_reg_0_31_36_41_n_2;
  wire RAM_reg_0_31_36_41_n_3;
  wire RAM_reg_0_31_36_41_n_4;
  wire RAM_reg_0_31_36_41_n_5;
  wire RAM_reg_0_31_42_47_n_0;
  wire RAM_reg_0_31_42_47_n_1;
  wire RAM_reg_0_31_42_47_n_2;
  wire RAM_reg_0_31_42_47_n_3;
  wire RAM_reg_0_31_42_47_n_4;
  wire RAM_reg_0_31_42_47_n_5;
  wire RAM_reg_0_31_66_67_n_0;
  wire RAM_reg_0_31_66_67_n_1;
  wire RAM_reg_0_31_6_11_n_0;
  wire RAM_reg_0_31_6_11_n_1;
  wire RAM_reg_0_31_6_11_n_2;
  wire RAM_reg_0_31_6_11_n_3;
  wire RAM_reg_0_31_6_11_n_4;
  wire RAM_reg_0_31_6_11_n_5;
  wire [29:0]din;
  wire [4:0]\gc1.count_d2_reg[4] ;
  wire [4:0]\gic0.gc0.count_d2_reg[4] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire rd_clk;
  wire wr_clk;
  wire [1:0]NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_36_41_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_42_47_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_66_67_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_66_67_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_66_67_DOD_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_31_0_5
       (.ADDRA(\gc1.count_d2_reg[4] ),
        .ADDRB(\gc1.count_d2_reg[4] ),
        .ADDRC(\gc1.count_d2_reg[4] ),
        .ADDRD(\gic0.gc0.count_d2_reg[4] ),
        .DIA(din[1:0]),
        .DIB(din[2:1]),
        .DIC(din[4:3]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_31_0_5_n_0,RAM_reg_0_31_0_5_n_1}),
        .DOB({RAM_reg_0_31_0_5_n_2,RAM_reg_0_31_0_5_n_3}),
        .DOC({RAM_reg_0_31_0_5_n_4,RAM_reg_0_31_0_5_n_5}),
        .DOD(NLW_RAM_reg_0_31_0_5_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_31_30_35
       (.ADDRA(\gc1.count_d2_reg[4] ),
        .ADDRB(\gc1.count_d2_reg[4] ),
        .ADDRC(\gc1.count_d2_reg[4] ),
        .ADDRD(\gic0.gc0.count_d2_reg[4] ),
        .DIA(din[12:11]),
        .DIB(din[14:13]),
        .DIC(din[16:15]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_31_30_35_n_0,RAM_reg_0_31_30_35_n_1}),
        .DOB({RAM_reg_0_31_30_35_n_2,RAM_reg_0_31_30_35_n_3}),
        .DOC({RAM_reg_0_31_30_35_n_4,RAM_reg_0_31_30_35_n_5}),
        .DOD(NLW_RAM_reg_0_31_30_35_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_31_36_41
       (.ADDRA(\gc1.count_d2_reg[4] ),
        .ADDRB(\gc1.count_d2_reg[4] ),
        .ADDRC(\gc1.count_d2_reg[4] ),
        .ADDRD(\gic0.gc0.count_d2_reg[4] ),
        .DIA(din[18:17]),
        .DIB(din[19:18]),
        .DIC(din[21:20]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_31_36_41_n_0,RAM_reg_0_31_36_41_n_1}),
        .DOB({RAM_reg_0_31_36_41_n_2,RAM_reg_0_31_36_41_n_3}),
        .DOC({RAM_reg_0_31_36_41_n_4,RAM_reg_0_31_36_41_n_5}),
        .DOD(NLW_RAM_reg_0_31_36_41_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_31_42_47
       (.ADDRA(\gc1.count_d2_reg[4] ),
        .ADDRB(\gc1.count_d2_reg[4] ),
        .ADDRC(\gc1.count_d2_reg[4] ),
        .ADDRD(\gic0.gc0.count_d2_reg[4] ),
        .DIA(din[23:22]),
        .DIB(din[25:24]),
        .DIC(din[27:26]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_31_42_47_n_0,RAM_reg_0_31_42_47_n_1}),
        .DOB({RAM_reg_0_31_42_47_n_2,RAM_reg_0_31_42_47_n_3}),
        .DOC({RAM_reg_0_31_42_47_n_4,RAM_reg_0_31_42_47_n_5}),
        .DOD(NLW_RAM_reg_0_31_42_47_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_31_66_67
       (.ADDRA(\gc1.count_d2_reg[4] ),
        .ADDRB(\gc1.count_d2_reg[4] ),
        .ADDRC(\gc1.count_d2_reg[4] ),
        .ADDRD(\gic0.gc0.count_d2_reg[4] ),
        .DIA(din[29:28]),
        .DIB({1'b0,1'b0}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_31_66_67_n_0,RAM_reg_0_31_66_67_n_1}),
        .DOB(NLW_RAM_reg_0_31_66_67_DOB_UNCONNECTED[1:0]),
        .DOC(NLW_RAM_reg_0_31_66_67_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_31_66_67_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_31_6_11
       (.ADDRA(\gc1.count_d2_reg[4] ),
        .ADDRB(\gc1.count_d2_reg[4] ),
        .ADDRC(\gc1.count_d2_reg[4] ),
        .ADDRD(\gic0.gc0.count_d2_reg[4] ),
        .DIA(din[6:5]),
        .DIB(din[8:7]),
        .DIC(din[10:9]),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_31_6_11_n_0,RAM_reg_0_31_6_11_n_1}),
        .DOB({RAM_reg_0_31_6_11_n_2,RAM_reg_0_31_6_11_n_3}),
        .DOC({RAM_reg_0_31_6_11_n_4,RAM_reg_0_31_6_11_n_5}),
        .DOD(NLW_RAM_reg_0_31_6_11_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_0_5_n_1),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_0_5_n_0),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_0_5_n_3),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_30_35_n_1),
        .Q(Q[6]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_30_35_n_0),
        .Q(Q[7]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[32] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_30_35_n_3),
        .Q(Q[8]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[35] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_30_35_n_4),
        .Q(Q[9]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[36] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_36_41_n_1),
        .Q(Q[10]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[37] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_36_41_n_0),
        .Q(Q[11]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[38] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_36_41_n_3),
        .Q(Q[12]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[39] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_36_41_n_2),
        .Q(Q[13]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[40] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_36_41_n_5),
        .Q(Q[14]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[41] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_36_41_n_4),
        .Q(Q[15]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[42] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_42_47_n_1),
        .Q(Q[16]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[43] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_42_47_n_0),
        .Q(Q[17]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[44] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_42_47_n_3),
        .Q(Q[18]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_0_5_n_4),
        .Q(Q[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[67] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_66_67_n_0),
        .Q(Q[19]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_6_11_n_1),
        .Q(Q[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(AR),
        .D(RAM_reg_0_31_6_11_n_0),
        .Q(Q[5]));
endmodule

(* ORIG_REF_NAME = "dmem" *) 
module jtag_axi_axi_perf_mon_0_0_dmem__parameterized0
   (Q,
    wr_clk,
    E,
    din,
    \gc1.count_d2_reg[4] ,
    \gic0.gc0.count_d2_reg[4] ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    rd_clk,
    out);
  output [2:0]Q;
  input wr_clk;
  input [0:0]E;
  input [2:0]din;
  input [4:0]\gc1.count_d2_reg[4] ;
  input [4:0]\gic0.gc0.count_d2_reg[4] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input rd_clk;
  input [0:0]out;

  wire [0:0]E;
  wire [2:0]Q;
  wire RAM_reg_0_31_0_2_n_0;
  wire RAM_reg_0_31_0_2_n_1;
  wire RAM_reg_0_31_0_2_n_3;
  wire [2:0]din;
  wire [4:0]\gc1.count_d2_reg[4] ;
  wire [4:0]\gic0.gc0.count_d2_reg[4] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire [0:0]out;
  wire rd_clk;
  wire wr_clk;
  wire [1:1]NLW_RAM_reg_0_31_0_2_DOB_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_0_2_DOC_UNCONNECTED;
  wire [1:0]NLW_RAM_reg_0_31_0_2_DOD_UNCONNECTED;

  (* METHODOLOGY_DRC_VIOS = "" *) 
  RAM32M RAM_reg_0_31_0_2
       (.ADDRA(\gc1.count_d2_reg[4] ),
        .ADDRB(\gc1.count_d2_reg[4] ),
        .ADDRC(\gc1.count_d2_reg[4] ),
        .ADDRD(\gic0.gc0.count_d2_reg[4] ),
        .DIA(din[1:0]),
        .DIB({1'b0,din[2]}),
        .DIC({1'b0,1'b0}),
        .DID({1'b0,1'b0}),
        .DOA({RAM_reg_0_31_0_2_n_0,RAM_reg_0_31_0_2_n_1}),
        .DOB({NLW_RAM_reg_0_31_0_2_DOB_UNCONNECTED[1],RAM_reg_0_31_0_2_n_3}),
        .DOC(NLW_RAM_reg_0_31_0_2_DOC_UNCONNECTED[1:0]),
        .DOD(NLW_RAM_reg_0_31_0_2_DOD_UNCONNECTED[1:0]),
        .WCLK(wr_clk),
        .WE(E));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(out),
        .D(RAM_reg_0_31_0_2_n_1),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(out),
        .D(RAM_reg_0_31_0_2_n_0),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gpr1.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[1] ),
        .CLR(out),
        .D(RAM_reg_0_31_0_2_n_3),
        .Q(Q[2]));
endmodule

module jtag_axi_axi_perf_mon_0_0_fifo_generator_ramfifo
   (empty,
    full,
    dout,
    rd_clk,
    wr_clk,
    rst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [19:0]dout;
  input rd_clk;
  input wr_clk;
  input rst;
  input [29:0]din;
  input rd_en;
  input wr_en;

  wire [29:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_11 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_5 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_3 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_4 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_5 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_6 ;
  wire [0:0]gray2bin;
  wire [4:0]p_0_out_0;
  wire [4:0]p_12_out;
  wire p_18_out;
  wire [4:0]p_22_out;
  wire [4:0]p_23_out;
  wire p_5_out;
  wire [4:0]p_9_out;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire [2:0]rd_rst_i;
  wire rst;
  wire rst_full_ff_i;
  wire rstblk_n_6;
  wire wr_clk;
  wire wr_en;
  wire [3:1]wr_pntr_plus2;
  wire [1:0]wr_rst_i;

  jtag_axi_axi_perf_mon_0_0_clk_x_pntrs \gntv_or_sync_fifo.gcx.clkx 
       (.AR(wr_rst_i[0]),
        .D(gray2bin),
        .Q(p_22_out),
        .\gc1.count_d2_reg[3] ({\gntv_or_sync_fifo.gl0.rd_n_3 ,\gntv_or_sync_fifo.gl0.rd_n_4 ,\gntv_or_sync_fifo.gl0.rd_n_5 ,\gntv_or_sync_fifo.gl0.rd_n_6 }),
        .\gc1.count_d2_reg[4] ({p_0_out_0[4],p_0_out_0[2:0]}),
        .\gic0.gc0.count_d2_reg[4] (p_12_out),
        .\gic0.gc0.count_reg[3] (wr_pntr_plus2),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .out(p_9_out),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_11 ),
        .ram_full_i_reg_0(p_23_out),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gntv_or_sync_fifo.gcx.clkx/ 
       (.I0(p_9_out[2]),
        .I1(p_9_out[0]),
        .I2(p_9_out[1]),
        .I3(p_9_out[4]),
        .I4(p_9_out[3]),
        .O(gray2bin));
  jtag_axi_axi_perf_mon_0_0_rd_logic \gntv_or_sync_fifo.gl0.rd 
       (.AR(rd_rst_i[2]),
        .E(p_5_out),
        .Q(p_22_out),
        .empty(empty),
        .\gc1.count_reg[0] (ram_rd_en_i),
        .\gnxpm_cdc.rd_pntr_gc_reg[3] ({\gntv_or_sync_fifo.gl0.rd_n_3 ,\gntv_or_sync_fifo.gl0.rd_n_4 ,\gntv_or_sync_fifo.gl0.rd_n_5 ,\gntv_or_sync_fifo.gl0.rd_n_6 }),
        .\gnxpm_cdc.rd_pntr_gc_reg[4] (p_0_out_0),
        .\gnxpm_cdc.wr_pntr_bin_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  jtag_axi_axi_perf_mon_0_0_wr_logic \gntv_or_sync_fifo.gl0.wr 
       (.AR(wr_rst_i[1]),
        .E(p_18_out),
        .Q(wr_pntr_plus2),
        .WR_RST_BUSY(rstblk_n_6),
        .full(full),
        .\gnxpm_cdc.rd_pntr_bin_reg[3] (\gntv_or_sync_fifo.gcx.clkx_n_11 ),
        .\gnxpm_cdc.rd_pntr_bin_reg[4] (p_23_out),
        .\gnxpm_cdc.wr_pntr_gc_reg[4] (p_12_out),
        .out(rst_full_ff_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  jtag_axi_axi_perf_mon_0_0_memory \gntv_or_sync_fifo.mem 
       (.AR(rd_rst_i[0]),
        .E(p_18_out),
        .din(din),
        .dout(dout),
        .\gc1.count_d2_reg[4] (p_0_out_0),
        .\gic0.gc0.count_d2_reg[4] (p_12_out),
        .\gpregsm1.curr_fwft_state_reg[0] (p_5_out),
        .\gpregsm1.curr_fwft_state_reg[1] (ram_rd_en_i),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_reset_blk_ramfifo rstblk
       (.\gc1.count_reg[0] (rd_rst_i),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_ff_i),
        .out(wr_rst_i),
        .ram_full_i_reg(rstblk_n_6),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "fifo_generator_ramfifo" *) 
module jtag_axi_axi_perf_mon_0_0_fifo_generator_ramfifo__parameterized0
   (empty,
    full,
    dout,
    rd_clk,
    wr_clk,
    rst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [2:0]dout;
  input rd_clk;
  input wr_clk;
  input rst;
  input [2:0]din;
  input rd_en;
  input wr_en;

  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire \gntv_or_sync_fifo.gcx.clkx_n_11 ;
  wire \gntv_or_sync_fifo.gcx.clkx_n_5 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_0 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_4 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_5 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_6 ;
  wire \gntv_or_sync_fifo.gl0.rd_n_7 ;
  wire [0:0]\gr1.gr1_int.rfwft/p_0_in ;
  wire [0:0]gray2bin;
  wire [4:0]p_0_out_0;
  wire [4:0]p_12_out;
  wire p_18_out;
  wire [4:0]p_22_out;
  wire [4:0]p_23_out;
  wire [4:0]p_9_out;
  wire ram_rd_en_i;
  wire rd_clk;
  wire rd_en;
  wire [2:0]rd_rst_i;
  wire rst;
  wire rst_full_ff_i;
  wire rstblk_n_6;
  wire wr_clk;
  wire wr_en;
  wire [3:1]wr_pntr_plus2;
  wire [1:0]wr_rst_i;

  jtag_axi_axi_perf_mon_0_0_clk_x_pntrs_11 \gntv_or_sync_fifo.gcx.clkx 
       (.AR(wr_rst_i[0]),
        .D(gray2bin),
        .Q(p_22_out),
        .\gc1.count_d2_reg[3] ({\gntv_or_sync_fifo.gl0.rd_n_4 ,\gntv_or_sync_fifo.gl0.rd_n_5 ,\gntv_or_sync_fifo.gl0.rd_n_6 ,\gntv_or_sync_fifo.gl0.rd_n_7 }),
        .\gc1.count_d2_reg[4] ({p_0_out_0[4],p_0_out_0[2:0]}),
        .\gic0.gc0.count_d2_reg[4] (p_12_out),
        .\gic0.gc0.count_reg[3] (wr_pntr_plus2),
        .\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] (rd_rst_i[1]),
        .out(p_9_out),
        .ram_empty_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .ram_full_i_reg(\gntv_or_sync_fifo.gcx.clkx_n_11 ),
        .ram_full_i_reg_0(p_23_out),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  LUT5 #(
    .INIT(32'h96696996)) 
    \gntv_or_sync_fifo.gcx.clkx/ 
       (.I0(p_9_out[2]),
        .I1(p_9_out[0]),
        .I2(p_9_out[1]),
        .I3(p_9_out[4]),
        .I4(p_9_out[3]),
        .O(gray2bin));
  jtag_axi_axi_perf_mon_0_0_rd_logic_12 \gntv_or_sync_fifo.gl0.rd 
       (.AR(rd_rst_i[2]),
        .E(ram_rd_en_i),
        .Q(p_22_out),
        .empty(empty),
        .\gnxpm_cdc.rd_pntr_gc_reg[3] ({\gntv_or_sync_fifo.gl0.rd_n_4 ,\gntv_or_sync_fifo.gl0.rd_n_5 ,\gntv_or_sync_fifo.gl0.rd_n_6 ,\gntv_or_sync_fifo.gl0.rd_n_7 }),
        .\gnxpm_cdc.rd_pntr_gc_reg[4] (p_0_out_0),
        .\gnxpm_cdc.wr_pntr_bin_reg[2] (\gntv_or_sync_fifo.gcx.clkx_n_5 ),
        .out({\gntv_or_sync_fifo.gl0.rd_n_0 ,\gr1.gr1_int.rfwft/p_0_in }),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  jtag_axi_axi_perf_mon_0_0_wr_logic_13 \gntv_or_sync_fifo.gl0.wr 
       (.AR(wr_rst_i[1]),
        .E(p_18_out),
        .Q(wr_pntr_plus2),
        .WR_RST_BUSY(rstblk_n_6),
        .full(full),
        .\gnxpm_cdc.rd_pntr_bin_reg[3] (\gntv_or_sync_fifo.gcx.clkx_n_11 ),
        .\gnxpm_cdc.rd_pntr_bin_reg[4] (p_23_out),
        .\gnxpm_cdc.wr_pntr_gc_reg[4] (p_12_out),
        .out(rst_full_ff_i),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  jtag_axi_axi_perf_mon_0_0_memory__parameterized0 \gntv_or_sync_fifo.mem 
       (.E(p_18_out),
        .din(din),
        .dout(dout),
        .\gc1.count_d2_reg[4] (p_0_out_0),
        .\gic0.gc0.count_d2_reg[4] (p_12_out),
        .\gpregsm1.curr_fwft_state_reg[1] (ram_rd_en_i),
        .\gpregsm1.curr_fwft_state_reg[1]_0 ({\gntv_or_sync_fifo.gl0.rd_n_0 ,\gr1.gr1_int.rfwft/p_0_in }),
        .out(rd_rst_i[0]),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_reset_blk_ramfifo_14 rstblk
       (.\gc1.count_reg[0] (rd_rst_i),
        .\grstd1.grst_full.grst_f.rst_d3_reg_0 (rst_full_ff_i),
        .out(wr_rst_i),
        .ram_full_i_reg(rstblk_n_6),
        .rd_clk(rd_clk),
        .rst(rst),
        .wr_clk(wr_clk));
endmodule

module jtag_axi_axi_perf_mon_0_0_fifo_generator_top
   (empty,
    full,
    dout,
    rd_clk,
    wr_clk,
    rst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [19:0]dout;
  input rd_clk;
  input wr_clk;
  input rst;
  input [29:0]din;
  input rd_en;
  input wr_en;

  wire [29:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

  jtag_axi_axi_perf_mon_0_0_fifo_generator_ramfifo \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_top" *) 
module jtag_axi_axi_perf_mon_0_0_fifo_generator_top__parameterized0
   (empty,
    full,
    dout,
    rd_clk,
    wr_clk,
    rst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [2:0]dout;
  input rd_clk;
  input wr_clk;
  input rst;
  input [2:0]din;
  input rd_en;
  input wr_en;

  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

  jtag_axi_axi_perf_mon_0_0_fifo_generator_ramfifo__parameterized0 \grf.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "64" *) (* C_AXIS_TDEST_WIDTH = "4" *) 
(* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TKEEP_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "4" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "68" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "32" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "68" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "1" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "0" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "0" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "1" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "1" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "2" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x72" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "13" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "12" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "5" *) 
(* C_RD_DEPTH = "32" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "5" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "4" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "5" *) 
(* C_WR_DEPTH = "32" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "5" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) 
module jtag_axi_axi_perf_mon_0_0_fifo_generator_v13_1_3
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [67:0]din;
  input wr_en;
  input rd_en;
  input [4:0]prog_empty_thresh;
  input [4:0]prog_empty_thresh_assert;
  input [4:0]prog_empty_thresh_negate;
  input [4:0]prog_full_thresh;
  input [4:0]prog_full_thresh_assert;
  input [4:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [67:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [4:0]rd_data_count;
  output [4:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [3:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [3:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [3:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [3:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [3:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [3:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire [67:0]din;
  wire [67:0]\^dout ;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const0> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const0> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const0> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const0> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const0> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const0> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign dout[67] = \^dout [67];
  assign dout[66] = \<const0> ;
  assign dout[65] = \<const0> ;
  assign dout[64] = \<const0> ;
  assign dout[63] = \<const0> ;
  assign dout[62] = \<const0> ;
  assign dout[61] = \<const0> ;
  assign dout[60] = \<const0> ;
  assign dout[59] = \<const0> ;
  assign dout[58] = \<const0> ;
  assign dout[57] = \<const0> ;
  assign dout[56] = \<const0> ;
  assign dout[55] = \<const0> ;
  assign dout[54] = \<const0> ;
  assign dout[53] = \<const0> ;
  assign dout[52] = \<const0> ;
  assign dout[51] = \<const0> ;
  assign dout[50] = \<const0> ;
  assign dout[49] = \<const0> ;
  assign dout[48] = \<const0> ;
  assign dout[47] = \<const0> ;
  assign dout[46] = \<const0> ;
  assign dout[45] = \<const0> ;
  assign dout[44:35] = \^dout [44:35];
  assign dout[34] = \<const0> ;
  assign dout[33] = \<const0> ;
  assign dout[32:30] = \^dout [32:30];
  assign dout[29] = \<const0> ;
  assign dout[28] = \<const0> ;
  assign dout[27] = \<const0> ;
  assign dout[26] = \<const0> ;
  assign dout[25] = \<const0> ;
  assign dout[24] = \<const0> ;
  assign dout[23] = \<const0> ;
  assign dout[22] = \<const0> ;
  assign dout[21] = \<const0> ;
  assign dout[20] = \<const0> ;
  assign dout[19] = \<const0> ;
  assign dout[18] = \<const0> ;
  assign dout[17] = \<const0> ;
  assign dout[16] = \<const0> ;
  assign dout[15] = \<const0> ;
  assign dout[14] = \<const0> ;
  assign dout[13] = \<const0> ;
  assign dout[12] = \<const0> ;
  assign dout[11] = \<const0> ;
  assign dout[10] = \<const0> ;
  assign dout[9] = \<const0> ;
  assign dout[8] = \<const0> ;
  assign dout[7:5] = \^dout [7:5];
  assign dout[4] = \<const0> ;
  assign dout[3] = \<const0> ;
  assign dout[2:0] = \^dout [2:0];
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[3] = \<const0> ;
  assign m_axi_arid[2] = \<const0> ;
  assign m_axi_arid[1] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[3] = \<const0> ;
  assign m_axi_awid[2] = \<const0> ;
  assign m_axi_awid[1] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[3] = \<const0> ;
  assign m_axi_wid[2] = \<const0> ;
  assign m_axi_wid[1] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  jtag_axi_axi_perf_mon_0_0_fifo_generator_v13_1_3_synth inst_fifo_gen
       (.din({din[67:66],din[47:39],din[37:30],din[11:3],din[1:0]}),
        .dout({\^dout [67],\^dout [44:35],\^dout [32:30],\^dout [7:5],\^dout [2:0]}),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* C_ADD_NGC_CONSTRAINT = "0" *) (* C_APPLICATION_TYPE_AXIS = "0" *) (* C_APPLICATION_TYPE_RACH = "0" *) 
(* C_APPLICATION_TYPE_RDCH = "0" *) (* C_APPLICATION_TYPE_WACH = "0" *) (* C_APPLICATION_TYPE_WDCH = "0" *) 
(* C_APPLICATION_TYPE_WRCH = "0" *) (* C_AXIS_TDATA_WIDTH = "64" *) (* C_AXIS_TDEST_WIDTH = "4" *) 
(* C_AXIS_TID_WIDTH = "8" *) (* C_AXIS_TKEEP_WIDTH = "4" *) (* C_AXIS_TSTRB_WIDTH = "4" *) 
(* C_AXIS_TUSER_WIDTH = "4" *) (* C_AXIS_TYPE = "0" *) (* C_AXI_ADDR_WIDTH = "32" *) 
(* C_AXI_ARUSER_WIDTH = "1" *) (* C_AXI_AWUSER_WIDTH = "1" *) (* C_AXI_BUSER_WIDTH = "1" *) 
(* C_AXI_DATA_WIDTH = "64" *) (* C_AXI_ID_WIDTH = "4" *) (* C_AXI_LEN_WIDTH = "8" *) 
(* C_AXI_LOCK_WIDTH = "1" *) (* C_AXI_RUSER_WIDTH = "1" *) (* C_AXI_TYPE = "1" *) 
(* C_AXI_WUSER_WIDTH = "1" *) (* C_COMMON_CLOCK = "0" *) (* C_COUNT_TYPE = "0" *) 
(* C_DATA_COUNT_WIDTH = "10" *) (* C_DEFAULT_VALUE = "BlankString" *) (* C_DIN_WIDTH = "3" *) 
(* C_DIN_WIDTH_AXIS = "1" *) (* C_DIN_WIDTH_RACH = "32" *) (* C_DIN_WIDTH_RDCH = "64" *) 
(* C_DIN_WIDTH_WACH = "32" *) (* C_DIN_WIDTH_WDCH = "64" *) (* C_DIN_WIDTH_WRCH = "2" *) 
(* C_DOUT_RST_VAL = "0" *) (* C_DOUT_WIDTH = "3" *) (* C_ENABLE_RLOCS = "0" *) 
(* C_ENABLE_RST_SYNC = "1" *) (* C_EN_SAFETY_CKT = "0" *) (* C_ERROR_INJECTION_TYPE = "0" *) 
(* C_ERROR_INJECTION_TYPE_AXIS = "0" *) (* C_ERROR_INJECTION_TYPE_RACH = "0" *) (* C_ERROR_INJECTION_TYPE_RDCH = "0" *) 
(* C_ERROR_INJECTION_TYPE_WACH = "0" *) (* C_ERROR_INJECTION_TYPE_WDCH = "0" *) (* C_ERROR_INJECTION_TYPE_WRCH = "0" *) 
(* C_FAMILY = "zynq" *) (* C_FULL_FLAGS_RST_VAL = "1" *) (* C_HAS_ALMOST_EMPTY = "1" *) 
(* C_HAS_ALMOST_FULL = "0" *) (* C_HAS_AXIS_TDATA = "1" *) (* C_HAS_AXIS_TDEST = "0" *) 
(* C_HAS_AXIS_TID = "0" *) (* C_HAS_AXIS_TKEEP = "0" *) (* C_HAS_AXIS_TLAST = "0" *) 
(* C_HAS_AXIS_TREADY = "1" *) (* C_HAS_AXIS_TSTRB = "0" *) (* C_HAS_AXIS_TUSER = "0" *) 
(* C_HAS_AXI_ARUSER = "0" *) (* C_HAS_AXI_AWUSER = "0" *) (* C_HAS_AXI_BUSER = "0" *) 
(* C_HAS_AXI_ID = "0" *) (* C_HAS_AXI_RD_CHANNEL = "0" *) (* C_HAS_AXI_RUSER = "0" *) 
(* C_HAS_AXI_WR_CHANNEL = "0" *) (* C_HAS_AXI_WUSER = "0" *) (* C_HAS_BACKUP = "0" *) 
(* C_HAS_DATA_COUNT = "0" *) (* C_HAS_DATA_COUNTS_AXIS = "0" *) (* C_HAS_DATA_COUNTS_RACH = "0" *) 
(* C_HAS_DATA_COUNTS_RDCH = "0" *) (* C_HAS_DATA_COUNTS_WACH = "0" *) (* C_HAS_DATA_COUNTS_WDCH = "0" *) 
(* C_HAS_DATA_COUNTS_WRCH = "0" *) (* C_HAS_INT_CLK = "0" *) (* C_HAS_MASTER_CE = "0" *) 
(* C_HAS_MEMINIT_FILE = "0" *) (* C_HAS_OVERFLOW = "0" *) (* C_HAS_PROG_FLAGS_AXIS = "0" *) 
(* C_HAS_PROG_FLAGS_RACH = "0" *) (* C_HAS_PROG_FLAGS_RDCH = "0" *) (* C_HAS_PROG_FLAGS_WACH = "0" *) 
(* C_HAS_PROG_FLAGS_WDCH = "0" *) (* C_HAS_PROG_FLAGS_WRCH = "0" *) (* C_HAS_RD_DATA_COUNT = "1" *) 
(* C_HAS_RD_RST = "0" *) (* C_HAS_RST = "1" *) (* C_HAS_SLAVE_CE = "0" *) 
(* C_HAS_SRST = "0" *) (* C_HAS_UNDERFLOW = "0" *) (* C_HAS_VALID = "0" *) 
(* C_HAS_WR_ACK = "0" *) (* C_HAS_WR_DATA_COUNT = "1" *) (* C_HAS_WR_RST = "0" *) 
(* C_IMPLEMENTATION_TYPE = "2" *) (* C_IMPLEMENTATION_TYPE_AXIS = "1" *) (* C_IMPLEMENTATION_TYPE_RACH = "1" *) 
(* C_IMPLEMENTATION_TYPE_RDCH = "1" *) (* C_IMPLEMENTATION_TYPE_WACH = "1" *) (* C_IMPLEMENTATION_TYPE_WDCH = "1" *) 
(* C_IMPLEMENTATION_TYPE_WRCH = "1" *) (* C_INIT_WR_PNTR_VAL = "0" *) (* C_INTERFACE_TYPE = "0" *) 
(* C_MEMORY_TYPE = "2" *) (* C_MIF_FILE_NAME = "BlankString" *) (* C_MSGON_VAL = "1" *) 
(* C_OPTIMIZATION_MODE = "0" *) (* C_OVERFLOW_LOW = "0" *) (* C_POWER_SAVING_MODE = "0" *) 
(* C_PRELOAD_LATENCY = "0" *) (* C_PRELOAD_REGS = "1" *) (* C_PRIM_FIFO_TYPE = "512x72" *) 
(* C_PRIM_FIFO_TYPE_AXIS = "512x36" *) (* C_PRIM_FIFO_TYPE_RACH = "512x36" *) (* C_PRIM_FIFO_TYPE_RDCH = "512x36" *) 
(* C_PRIM_FIFO_TYPE_WACH = "512x36" *) (* C_PRIM_FIFO_TYPE_WDCH = "512x36" *) (* C_PRIM_FIFO_TYPE_WRCH = "512x36" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL = "4" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_AXIS = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_RACH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_RDCH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WACH = "1022" *) (* C_PROG_EMPTY_THRESH_ASSERT_VAL_WDCH = "1022" *) 
(* C_PROG_EMPTY_THRESH_ASSERT_VAL_WRCH = "1022" *) (* C_PROG_EMPTY_THRESH_NEGATE_VAL = "5" *) (* C_PROG_EMPTY_TYPE = "0" *) 
(* C_PROG_EMPTY_TYPE_AXIS = "0" *) (* C_PROG_EMPTY_TYPE_RACH = "0" *) (* C_PROG_EMPTY_TYPE_RDCH = "0" *) 
(* C_PROG_EMPTY_TYPE_WACH = "0" *) (* C_PROG_EMPTY_TYPE_WDCH = "0" *) (* C_PROG_EMPTY_TYPE_WRCH = "0" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL = "13" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_AXIS = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_RACH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_RDCH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WACH = "1023" *) (* C_PROG_FULL_THRESH_ASSERT_VAL_WDCH = "1023" *) 
(* C_PROG_FULL_THRESH_ASSERT_VAL_WRCH = "1023" *) (* C_PROG_FULL_THRESH_NEGATE_VAL = "12" *) (* C_PROG_FULL_TYPE = "0" *) 
(* C_PROG_FULL_TYPE_AXIS = "0" *) (* C_PROG_FULL_TYPE_RACH = "0" *) (* C_PROG_FULL_TYPE_RDCH = "0" *) 
(* C_PROG_FULL_TYPE_WACH = "0" *) (* C_PROG_FULL_TYPE_WDCH = "0" *) (* C_PROG_FULL_TYPE_WRCH = "0" *) 
(* C_RACH_TYPE = "0" *) (* C_RDCH_TYPE = "0" *) (* C_RD_DATA_COUNT_WIDTH = "5" *) 
(* C_RD_DEPTH = "32" *) (* C_RD_FREQ = "1" *) (* C_RD_PNTR_WIDTH = "5" *) 
(* C_REG_SLICE_MODE_AXIS = "0" *) (* C_REG_SLICE_MODE_RACH = "0" *) (* C_REG_SLICE_MODE_RDCH = "0" *) 
(* C_REG_SLICE_MODE_WACH = "0" *) (* C_REG_SLICE_MODE_WDCH = "0" *) (* C_REG_SLICE_MODE_WRCH = "0" *) 
(* C_SELECT_XPM = "0" *) (* C_SYNCHRONIZER_STAGE = "4" *) (* C_UNDERFLOW_LOW = "0" *) 
(* C_USE_COMMON_OVERFLOW = "0" *) (* C_USE_COMMON_UNDERFLOW = "0" *) (* C_USE_DEFAULT_SETTINGS = "0" *) 
(* C_USE_DOUT_RST = "1" *) (* C_USE_ECC = "0" *) (* C_USE_ECC_AXIS = "0" *) 
(* C_USE_ECC_RACH = "0" *) (* C_USE_ECC_RDCH = "0" *) (* C_USE_ECC_WACH = "0" *) 
(* C_USE_ECC_WDCH = "0" *) (* C_USE_ECC_WRCH = "0" *) (* C_USE_EMBEDDED_REG = "0" *) 
(* C_USE_FIFO16_FLAGS = "0" *) (* C_USE_FWFT_DATA_COUNT = "0" *) (* C_USE_PIPELINE_REG = "0" *) 
(* C_VALID_LOW = "0" *) (* C_WACH_TYPE = "0" *) (* C_WDCH_TYPE = "0" *) 
(* C_WRCH_TYPE = "0" *) (* C_WR_ACK_LOW = "0" *) (* C_WR_DATA_COUNT_WIDTH = "5" *) 
(* C_WR_DEPTH = "32" *) (* C_WR_DEPTH_AXIS = "1024" *) (* C_WR_DEPTH_RACH = "16" *) 
(* C_WR_DEPTH_RDCH = "1024" *) (* C_WR_DEPTH_WACH = "16" *) (* C_WR_DEPTH_WDCH = "1024" *) 
(* C_WR_DEPTH_WRCH = "16" *) (* C_WR_FREQ = "1" *) (* C_WR_PNTR_WIDTH = "5" *) 
(* C_WR_PNTR_WIDTH_AXIS = "10" *) (* C_WR_PNTR_WIDTH_RACH = "4" *) (* C_WR_PNTR_WIDTH_RDCH = "10" *) 
(* C_WR_PNTR_WIDTH_WACH = "4" *) (* C_WR_PNTR_WIDTH_WDCH = "10" *) (* C_WR_PNTR_WIDTH_WRCH = "4" *) 
(* C_WR_RESPONSE_LATENCY = "1" *) (* ORIG_REF_NAME = "fifo_generator_v13_1_3" *) 
module jtag_axi_axi_perf_mon_0_0_fifo_generator_v13_1_3__parameterized0
   (backup,
    backup_marker,
    clk,
    rst,
    srst,
    wr_clk,
    wr_rst,
    rd_clk,
    rd_rst,
    din,
    wr_en,
    rd_en,
    prog_empty_thresh,
    prog_empty_thresh_assert,
    prog_empty_thresh_negate,
    prog_full_thresh,
    prog_full_thresh_assert,
    prog_full_thresh_negate,
    int_clk,
    injectdbiterr,
    injectsbiterr,
    sleep,
    dout,
    full,
    almost_full,
    wr_ack,
    overflow,
    empty,
    almost_empty,
    valid,
    underflow,
    data_count,
    rd_data_count,
    wr_data_count,
    prog_full,
    prog_empty,
    sbiterr,
    dbiterr,
    wr_rst_busy,
    rd_rst_busy,
    m_aclk,
    s_aclk,
    s_aresetn,
    m_aclk_en,
    s_aclk_en,
    s_axi_awid,
    s_axi_awaddr,
    s_axi_awlen,
    s_axi_awsize,
    s_axi_awburst,
    s_axi_awlock,
    s_axi_awcache,
    s_axi_awprot,
    s_axi_awqos,
    s_axi_awregion,
    s_axi_awuser,
    s_axi_awvalid,
    s_axi_awready,
    s_axi_wid,
    s_axi_wdata,
    s_axi_wstrb,
    s_axi_wlast,
    s_axi_wuser,
    s_axi_wvalid,
    s_axi_wready,
    s_axi_bid,
    s_axi_bresp,
    s_axi_buser,
    s_axi_bvalid,
    s_axi_bready,
    m_axi_awid,
    m_axi_awaddr,
    m_axi_awlen,
    m_axi_awsize,
    m_axi_awburst,
    m_axi_awlock,
    m_axi_awcache,
    m_axi_awprot,
    m_axi_awqos,
    m_axi_awregion,
    m_axi_awuser,
    m_axi_awvalid,
    m_axi_awready,
    m_axi_wid,
    m_axi_wdata,
    m_axi_wstrb,
    m_axi_wlast,
    m_axi_wuser,
    m_axi_wvalid,
    m_axi_wready,
    m_axi_bid,
    m_axi_bresp,
    m_axi_buser,
    m_axi_bvalid,
    m_axi_bready,
    s_axi_arid,
    s_axi_araddr,
    s_axi_arlen,
    s_axi_arsize,
    s_axi_arburst,
    s_axi_arlock,
    s_axi_arcache,
    s_axi_arprot,
    s_axi_arqos,
    s_axi_arregion,
    s_axi_aruser,
    s_axi_arvalid,
    s_axi_arready,
    s_axi_rid,
    s_axi_rdata,
    s_axi_rresp,
    s_axi_rlast,
    s_axi_ruser,
    s_axi_rvalid,
    s_axi_rready,
    m_axi_arid,
    m_axi_araddr,
    m_axi_arlen,
    m_axi_arsize,
    m_axi_arburst,
    m_axi_arlock,
    m_axi_arcache,
    m_axi_arprot,
    m_axi_arqos,
    m_axi_arregion,
    m_axi_aruser,
    m_axi_arvalid,
    m_axi_arready,
    m_axi_rid,
    m_axi_rdata,
    m_axi_rresp,
    m_axi_rlast,
    m_axi_ruser,
    m_axi_rvalid,
    m_axi_rready,
    s_axis_tvalid,
    s_axis_tready,
    s_axis_tdata,
    s_axis_tstrb,
    s_axis_tkeep,
    s_axis_tlast,
    s_axis_tid,
    s_axis_tdest,
    s_axis_tuser,
    m_axis_tvalid,
    m_axis_tready,
    m_axis_tdata,
    m_axis_tstrb,
    m_axis_tkeep,
    m_axis_tlast,
    m_axis_tid,
    m_axis_tdest,
    m_axis_tuser,
    axi_aw_injectsbiterr,
    axi_aw_injectdbiterr,
    axi_aw_prog_full_thresh,
    axi_aw_prog_empty_thresh,
    axi_aw_data_count,
    axi_aw_wr_data_count,
    axi_aw_rd_data_count,
    axi_aw_sbiterr,
    axi_aw_dbiterr,
    axi_aw_overflow,
    axi_aw_underflow,
    axi_aw_prog_full,
    axi_aw_prog_empty,
    axi_w_injectsbiterr,
    axi_w_injectdbiterr,
    axi_w_prog_full_thresh,
    axi_w_prog_empty_thresh,
    axi_w_data_count,
    axi_w_wr_data_count,
    axi_w_rd_data_count,
    axi_w_sbiterr,
    axi_w_dbiterr,
    axi_w_overflow,
    axi_w_underflow,
    axi_w_prog_full,
    axi_w_prog_empty,
    axi_b_injectsbiterr,
    axi_b_injectdbiterr,
    axi_b_prog_full_thresh,
    axi_b_prog_empty_thresh,
    axi_b_data_count,
    axi_b_wr_data_count,
    axi_b_rd_data_count,
    axi_b_sbiterr,
    axi_b_dbiterr,
    axi_b_overflow,
    axi_b_underflow,
    axi_b_prog_full,
    axi_b_prog_empty,
    axi_ar_injectsbiterr,
    axi_ar_injectdbiterr,
    axi_ar_prog_full_thresh,
    axi_ar_prog_empty_thresh,
    axi_ar_data_count,
    axi_ar_wr_data_count,
    axi_ar_rd_data_count,
    axi_ar_sbiterr,
    axi_ar_dbiterr,
    axi_ar_overflow,
    axi_ar_underflow,
    axi_ar_prog_full,
    axi_ar_prog_empty,
    axi_r_injectsbiterr,
    axi_r_injectdbiterr,
    axi_r_prog_full_thresh,
    axi_r_prog_empty_thresh,
    axi_r_data_count,
    axi_r_wr_data_count,
    axi_r_rd_data_count,
    axi_r_sbiterr,
    axi_r_dbiterr,
    axi_r_overflow,
    axi_r_underflow,
    axi_r_prog_full,
    axi_r_prog_empty,
    axis_injectsbiterr,
    axis_injectdbiterr,
    axis_prog_full_thresh,
    axis_prog_empty_thresh,
    axis_data_count,
    axis_wr_data_count,
    axis_rd_data_count,
    axis_sbiterr,
    axis_dbiterr,
    axis_overflow,
    axis_underflow,
    axis_prog_full,
    axis_prog_empty);
  input backup;
  input backup_marker;
  input clk;
  input rst;
  input srst;
  input wr_clk;
  input wr_rst;
  input rd_clk;
  input rd_rst;
  input [2:0]din;
  input wr_en;
  input rd_en;
  input [4:0]prog_empty_thresh;
  input [4:0]prog_empty_thresh_assert;
  input [4:0]prog_empty_thresh_negate;
  input [4:0]prog_full_thresh;
  input [4:0]prog_full_thresh_assert;
  input [4:0]prog_full_thresh_negate;
  input int_clk;
  input injectdbiterr;
  input injectsbiterr;
  input sleep;
  output [2:0]dout;
  output full;
  output almost_full;
  output wr_ack;
  output overflow;
  output empty;
  output almost_empty;
  output valid;
  output underflow;
  output [9:0]data_count;
  output [4:0]rd_data_count;
  output [4:0]wr_data_count;
  output prog_full;
  output prog_empty;
  output sbiterr;
  output dbiterr;
  output wr_rst_busy;
  output rd_rst_busy;
  input m_aclk;
  input s_aclk;
  input s_aresetn;
  input m_aclk_en;
  input s_aclk_en;
  input [3:0]s_axi_awid;
  input [31:0]s_axi_awaddr;
  input [7:0]s_axi_awlen;
  input [2:0]s_axi_awsize;
  input [1:0]s_axi_awburst;
  input [0:0]s_axi_awlock;
  input [3:0]s_axi_awcache;
  input [2:0]s_axi_awprot;
  input [3:0]s_axi_awqos;
  input [3:0]s_axi_awregion;
  input [0:0]s_axi_awuser;
  input s_axi_awvalid;
  output s_axi_awready;
  input [3:0]s_axi_wid;
  input [63:0]s_axi_wdata;
  input [7:0]s_axi_wstrb;
  input s_axi_wlast;
  input [0:0]s_axi_wuser;
  input s_axi_wvalid;
  output s_axi_wready;
  output [3:0]s_axi_bid;
  output [1:0]s_axi_bresp;
  output [0:0]s_axi_buser;
  output s_axi_bvalid;
  input s_axi_bready;
  output [3:0]m_axi_awid;
  output [31:0]m_axi_awaddr;
  output [7:0]m_axi_awlen;
  output [2:0]m_axi_awsize;
  output [1:0]m_axi_awburst;
  output [0:0]m_axi_awlock;
  output [3:0]m_axi_awcache;
  output [2:0]m_axi_awprot;
  output [3:0]m_axi_awqos;
  output [3:0]m_axi_awregion;
  output [0:0]m_axi_awuser;
  output m_axi_awvalid;
  input m_axi_awready;
  output [3:0]m_axi_wid;
  output [63:0]m_axi_wdata;
  output [7:0]m_axi_wstrb;
  output m_axi_wlast;
  output [0:0]m_axi_wuser;
  output m_axi_wvalid;
  input m_axi_wready;
  input [3:0]m_axi_bid;
  input [1:0]m_axi_bresp;
  input [0:0]m_axi_buser;
  input m_axi_bvalid;
  output m_axi_bready;
  input [3:0]s_axi_arid;
  input [31:0]s_axi_araddr;
  input [7:0]s_axi_arlen;
  input [2:0]s_axi_arsize;
  input [1:0]s_axi_arburst;
  input [0:0]s_axi_arlock;
  input [3:0]s_axi_arcache;
  input [2:0]s_axi_arprot;
  input [3:0]s_axi_arqos;
  input [3:0]s_axi_arregion;
  input [0:0]s_axi_aruser;
  input s_axi_arvalid;
  output s_axi_arready;
  output [3:0]s_axi_rid;
  output [63:0]s_axi_rdata;
  output [1:0]s_axi_rresp;
  output s_axi_rlast;
  output [0:0]s_axi_ruser;
  output s_axi_rvalid;
  input s_axi_rready;
  output [3:0]m_axi_arid;
  output [31:0]m_axi_araddr;
  output [7:0]m_axi_arlen;
  output [2:0]m_axi_arsize;
  output [1:0]m_axi_arburst;
  output [0:0]m_axi_arlock;
  output [3:0]m_axi_arcache;
  output [2:0]m_axi_arprot;
  output [3:0]m_axi_arqos;
  output [3:0]m_axi_arregion;
  output [0:0]m_axi_aruser;
  output m_axi_arvalid;
  input m_axi_arready;
  input [3:0]m_axi_rid;
  input [63:0]m_axi_rdata;
  input [1:0]m_axi_rresp;
  input m_axi_rlast;
  input [0:0]m_axi_ruser;
  input m_axi_rvalid;
  output m_axi_rready;
  input s_axis_tvalid;
  output s_axis_tready;
  input [63:0]s_axis_tdata;
  input [3:0]s_axis_tstrb;
  input [3:0]s_axis_tkeep;
  input s_axis_tlast;
  input [7:0]s_axis_tid;
  input [3:0]s_axis_tdest;
  input [3:0]s_axis_tuser;
  output m_axis_tvalid;
  input m_axis_tready;
  output [63:0]m_axis_tdata;
  output [3:0]m_axis_tstrb;
  output [3:0]m_axis_tkeep;
  output m_axis_tlast;
  output [7:0]m_axis_tid;
  output [3:0]m_axis_tdest;
  output [3:0]m_axis_tuser;
  input axi_aw_injectsbiterr;
  input axi_aw_injectdbiterr;
  input [3:0]axi_aw_prog_full_thresh;
  input [3:0]axi_aw_prog_empty_thresh;
  output [4:0]axi_aw_data_count;
  output [4:0]axi_aw_wr_data_count;
  output [4:0]axi_aw_rd_data_count;
  output axi_aw_sbiterr;
  output axi_aw_dbiterr;
  output axi_aw_overflow;
  output axi_aw_underflow;
  output axi_aw_prog_full;
  output axi_aw_prog_empty;
  input axi_w_injectsbiterr;
  input axi_w_injectdbiterr;
  input [9:0]axi_w_prog_full_thresh;
  input [9:0]axi_w_prog_empty_thresh;
  output [10:0]axi_w_data_count;
  output [10:0]axi_w_wr_data_count;
  output [10:0]axi_w_rd_data_count;
  output axi_w_sbiterr;
  output axi_w_dbiterr;
  output axi_w_overflow;
  output axi_w_underflow;
  output axi_w_prog_full;
  output axi_w_prog_empty;
  input axi_b_injectsbiterr;
  input axi_b_injectdbiterr;
  input [3:0]axi_b_prog_full_thresh;
  input [3:0]axi_b_prog_empty_thresh;
  output [4:0]axi_b_data_count;
  output [4:0]axi_b_wr_data_count;
  output [4:0]axi_b_rd_data_count;
  output axi_b_sbiterr;
  output axi_b_dbiterr;
  output axi_b_overflow;
  output axi_b_underflow;
  output axi_b_prog_full;
  output axi_b_prog_empty;
  input axi_ar_injectsbiterr;
  input axi_ar_injectdbiterr;
  input [3:0]axi_ar_prog_full_thresh;
  input [3:0]axi_ar_prog_empty_thresh;
  output [4:0]axi_ar_data_count;
  output [4:0]axi_ar_wr_data_count;
  output [4:0]axi_ar_rd_data_count;
  output axi_ar_sbiterr;
  output axi_ar_dbiterr;
  output axi_ar_overflow;
  output axi_ar_underflow;
  output axi_ar_prog_full;
  output axi_ar_prog_empty;
  input axi_r_injectsbiterr;
  input axi_r_injectdbiterr;
  input [9:0]axi_r_prog_full_thresh;
  input [9:0]axi_r_prog_empty_thresh;
  output [10:0]axi_r_data_count;
  output [10:0]axi_r_wr_data_count;
  output [10:0]axi_r_rd_data_count;
  output axi_r_sbiterr;
  output axi_r_dbiterr;
  output axi_r_overflow;
  output axi_r_underflow;
  output axi_r_prog_full;
  output axi_r_prog_empty;
  input axis_injectsbiterr;
  input axis_injectdbiterr;
  input [9:0]axis_prog_full_thresh;
  input [9:0]axis_prog_empty_thresh;
  output [10:0]axis_data_count;
  output [10:0]axis_wr_data_count;
  output [10:0]axis_rd_data_count;
  output axis_sbiterr;
  output axis_dbiterr;
  output axis_overflow;
  output axis_underflow;
  output axis_prog_full;
  output axis_prog_empty;

  wire \<const0> ;
  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

  assign almost_empty = \<const0> ;
  assign almost_full = \<const0> ;
  assign axi_ar_data_count[4] = \<const0> ;
  assign axi_ar_data_count[3] = \<const0> ;
  assign axi_ar_data_count[2] = \<const0> ;
  assign axi_ar_data_count[1] = \<const0> ;
  assign axi_ar_data_count[0] = \<const0> ;
  assign axi_ar_dbiterr = \<const0> ;
  assign axi_ar_overflow = \<const0> ;
  assign axi_ar_prog_empty = \<const0> ;
  assign axi_ar_prog_full = \<const0> ;
  assign axi_ar_rd_data_count[4] = \<const0> ;
  assign axi_ar_rd_data_count[3] = \<const0> ;
  assign axi_ar_rd_data_count[2] = \<const0> ;
  assign axi_ar_rd_data_count[1] = \<const0> ;
  assign axi_ar_rd_data_count[0] = \<const0> ;
  assign axi_ar_sbiterr = \<const0> ;
  assign axi_ar_underflow = \<const0> ;
  assign axi_ar_wr_data_count[4] = \<const0> ;
  assign axi_ar_wr_data_count[3] = \<const0> ;
  assign axi_ar_wr_data_count[2] = \<const0> ;
  assign axi_ar_wr_data_count[1] = \<const0> ;
  assign axi_ar_wr_data_count[0] = \<const0> ;
  assign axi_aw_data_count[4] = \<const0> ;
  assign axi_aw_data_count[3] = \<const0> ;
  assign axi_aw_data_count[2] = \<const0> ;
  assign axi_aw_data_count[1] = \<const0> ;
  assign axi_aw_data_count[0] = \<const0> ;
  assign axi_aw_dbiterr = \<const0> ;
  assign axi_aw_overflow = \<const0> ;
  assign axi_aw_prog_empty = \<const0> ;
  assign axi_aw_prog_full = \<const0> ;
  assign axi_aw_rd_data_count[4] = \<const0> ;
  assign axi_aw_rd_data_count[3] = \<const0> ;
  assign axi_aw_rd_data_count[2] = \<const0> ;
  assign axi_aw_rd_data_count[1] = \<const0> ;
  assign axi_aw_rd_data_count[0] = \<const0> ;
  assign axi_aw_sbiterr = \<const0> ;
  assign axi_aw_underflow = \<const0> ;
  assign axi_aw_wr_data_count[4] = \<const0> ;
  assign axi_aw_wr_data_count[3] = \<const0> ;
  assign axi_aw_wr_data_count[2] = \<const0> ;
  assign axi_aw_wr_data_count[1] = \<const0> ;
  assign axi_aw_wr_data_count[0] = \<const0> ;
  assign axi_b_data_count[4] = \<const0> ;
  assign axi_b_data_count[3] = \<const0> ;
  assign axi_b_data_count[2] = \<const0> ;
  assign axi_b_data_count[1] = \<const0> ;
  assign axi_b_data_count[0] = \<const0> ;
  assign axi_b_dbiterr = \<const0> ;
  assign axi_b_overflow = \<const0> ;
  assign axi_b_prog_empty = \<const0> ;
  assign axi_b_prog_full = \<const0> ;
  assign axi_b_rd_data_count[4] = \<const0> ;
  assign axi_b_rd_data_count[3] = \<const0> ;
  assign axi_b_rd_data_count[2] = \<const0> ;
  assign axi_b_rd_data_count[1] = \<const0> ;
  assign axi_b_rd_data_count[0] = \<const0> ;
  assign axi_b_sbiterr = \<const0> ;
  assign axi_b_underflow = \<const0> ;
  assign axi_b_wr_data_count[4] = \<const0> ;
  assign axi_b_wr_data_count[3] = \<const0> ;
  assign axi_b_wr_data_count[2] = \<const0> ;
  assign axi_b_wr_data_count[1] = \<const0> ;
  assign axi_b_wr_data_count[0] = \<const0> ;
  assign axi_r_data_count[10] = \<const0> ;
  assign axi_r_data_count[9] = \<const0> ;
  assign axi_r_data_count[8] = \<const0> ;
  assign axi_r_data_count[7] = \<const0> ;
  assign axi_r_data_count[6] = \<const0> ;
  assign axi_r_data_count[5] = \<const0> ;
  assign axi_r_data_count[4] = \<const0> ;
  assign axi_r_data_count[3] = \<const0> ;
  assign axi_r_data_count[2] = \<const0> ;
  assign axi_r_data_count[1] = \<const0> ;
  assign axi_r_data_count[0] = \<const0> ;
  assign axi_r_dbiterr = \<const0> ;
  assign axi_r_overflow = \<const0> ;
  assign axi_r_prog_empty = \<const0> ;
  assign axi_r_prog_full = \<const0> ;
  assign axi_r_rd_data_count[10] = \<const0> ;
  assign axi_r_rd_data_count[9] = \<const0> ;
  assign axi_r_rd_data_count[8] = \<const0> ;
  assign axi_r_rd_data_count[7] = \<const0> ;
  assign axi_r_rd_data_count[6] = \<const0> ;
  assign axi_r_rd_data_count[5] = \<const0> ;
  assign axi_r_rd_data_count[4] = \<const0> ;
  assign axi_r_rd_data_count[3] = \<const0> ;
  assign axi_r_rd_data_count[2] = \<const0> ;
  assign axi_r_rd_data_count[1] = \<const0> ;
  assign axi_r_rd_data_count[0] = \<const0> ;
  assign axi_r_sbiterr = \<const0> ;
  assign axi_r_underflow = \<const0> ;
  assign axi_r_wr_data_count[10] = \<const0> ;
  assign axi_r_wr_data_count[9] = \<const0> ;
  assign axi_r_wr_data_count[8] = \<const0> ;
  assign axi_r_wr_data_count[7] = \<const0> ;
  assign axi_r_wr_data_count[6] = \<const0> ;
  assign axi_r_wr_data_count[5] = \<const0> ;
  assign axi_r_wr_data_count[4] = \<const0> ;
  assign axi_r_wr_data_count[3] = \<const0> ;
  assign axi_r_wr_data_count[2] = \<const0> ;
  assign axi_r_wr_data_count[1] = \<const0> ;
  assign axi_r_wr_data_count[0] = \<const0> ;
  assign axi_w_data_count[10] = \<const0> ;
  assign axi_w_data_count[9] = \<const0> ;
  assign axi_w_data_count[8] = \<const0> ;
  assign axi_w_data_count[7] = \<const0> ;
  assign axi_w_data_count[6] = \<const0> ;
  assign axi_w_data_count[5] = \<const0> ;
  assign axi_w_data_count[4] = \<const0> ;
  assign axi_w_data_count[3] = \<const0> ;
  assign axi_w_data_count[2] = \<const0> ;
  assign axi_w_data_count[1] = \<const0> ;
  assign axi_w_data_count[0] = \<const0> ;
  assign axi_w_dbiterr = \<const0> ;
  assign axi_w_overflow = \<const0> ;
  assign axi_w_prog_empty = \<const0> ;
  assign axi_w_prog_full = \<const0> ;
  assign axi_w_rd_data_count[10] = \<const0> ;
  assign axi_w_rd_data_count[9] = \<const0> ;
  assign axi_w_rd_data_count[8] = \<const0> ;
  assign axi_w_rd_data_count[7] = \<const0> ;
  assign axi_w_rd_data_count[6] = \<const0> ;
  assign axi_w_rd_data_count[5] = \<const0> ;
  assign axi_w_rd_data_count[4] = \<const0> ;
  assign axi_w_rd_data_count[3] = \<const0> ;
  assign axi_w_rd_data_count[2] = \<const0> ;
  assign axi_w_rd_data_count[1] = \<const0> ;
  assign axi_w_rd_data_count[0] = \<const0> ;
  assign axi_w_sbiterr = \<const0> ;
  assign axi_w_underflow = \<const0> ;
  assign axi_w_wr_data_count[10] = \<const0> ;
  assign axi_w_wr_data_count[9] = \<const0> ;
  assign axi_w_wr_data_count[8] = \<const0> ;
  assign axi_w_wr_data_count[7] = \<const0> ;
  assign axi_w_wr_data_count[6] = \<const0> ;
  assign axi_w_wr_data_count[5] = \<const0> ;
  assign axi_w_wr_data_count[4] = \<const0> ;
  assign axi_w_wr_data_count[3] = \<const0> ;
  assign axi_w_wr_data_count[2] = \<const0> ;
  assign axi_w_wr_data_count[1] = \<const0> ;
  assign axi_w_wr_data_count[0] = \<const0> ;
  assign axis_data_count[10] = \<const0> ;
  assign axis_data_count[9] = \<const0> ;
  assign axis_data_count[8] = \<const0> ;
  assign axis_data_count[7] = \<const0> ;
  assign axis_data_count[6] = \<const0> ;
  assign axis_data_count[5] = \<const0> ;
  assign axis_data_count[4] = \<const0> ;
  assign axis_data_count[3] = \<const0> ;
  assign axis_data_count[2] = \<const0> ;
  assign axis_data_count[1] = \<const0> ;
  assign axis_data_count[0] = \<const0> ;
  assign axis_dbiterr = \<const0> ;
  assign axis_overflow = \<const0> ;
  assign axis_prog_empty = \<const0> ;
  assign axis_prog_full = \<const0> ;
  assign axis_rd_data_count[10] = \<const0> ;
  assign axis_rd_data_count[9] = \<const0> ;
  assign axis_rd_data_count[8] = \<const0> ;
  assign axis_rd_data_count[7] = \<const0> ;
  assign axis_rd_data_count[6] = \<const0> ;
  assign axis_rd_data_count[5] = \<const0> ;
  assign axis_rd_data_count[4] = \<const0> ;
  assign axis_rd_data_count[3] = \<const0> ;
  assign axis_rd_data_count[2] = \<const0> ;
  assign axis_rd_data_count[1] = \<const0> ;
  assign axis_rd_data_count[0] = \<const0> ;
  assign axis_sbiterr = \<const0> ;
  assign axis_underflow = \<const0> ;
  assign axis_wr_data_count[10] = \<const0> ;
  assign axis_wr_data_count[9] = \<const0> ;
  assign axis_wr_data_count[8] = \<const0> ;
  assign axis_wr_data_count[7] = \<const0> ;
  assign axis_wr_data_count[6] = \<const0> ;
  assign axis_wr_data_count[5] = \<const0> ;
  assign axis_wr_data_count[4] = \<const0> ;
  assign axis_wr_data_count[3] = \<const0> ;
  assign axis_wr_data_count[2] = \<const0> ;
  assign axis_wr_data_count[1] = \<const0> ;
  assign axis_wr_data_count[0] = \<const0> ;
  assign data_count[9] = \<const0> ;
  assign data_count[8] = \<const0> ;
  assign data_count[7] = \<const0> ;
  assign data_count[6] = \<const0> ;
  assign data_count[5] = \<const0> ;
  assign data_count[4] = \<const0> ;
  assign data_count[3] = \<const0> ;
  assign data_count[2] = \<const0> ;
  assign data_count[1] = \<const0> ;
  assign data_count[0] = \<const0> ;
  assign dbiterr = \<const0> ;
  assign m_axi_araddr[31] = \<const0> ;
  assign m_axi_araddr[30] = \<const0> ;
  assign m_axi_araddr[29] = \<const0> ;
  assign m_axi_araddr[28] = \<const0> ;
  assign m_axi_araddr[27] = \<const0> ;
  assign m_axi_araddr[26] = \<const0> ;
  assign m_axi_araddr[25] = \<const0> ;
  assign m_axi_araddr[24] = \<const0> ;
  assign m_axi_araddr[23] = \<const0> ;
  assign m_axi_araddr[22] = \<const0> ;
  assign m_axi_araddr[21] = \<const0> ;
  assign m_axi_araddr[20] = \<const0> ;
  assign m_axi_araddr[19] = \<const0> ;
  assign m_axi_araddr[18] = \<const0> ;
  assign m_axi_araddr[17] = \<const0> ;
  assign m_axi_araddr[16] = \<const0> ;
  assign m_axi_araddr[15] = \<const0> ;
  assign m_axi_araddr[14] = \<const0> ;
  assign m_axi_araddr[13] = \<const0> ;
  assign m_axi_araddr[12] = \<const0> ;
  assign m_axi_araddr[11] = \<const0> ;
  assign m_axi_araddr[10] = \<const0> ;
  assign m_axi_araddr[9] = \<const0> ;
  assign m_axi_araddr[8] = \<const0> ;
  assign m_axi_araddr[7] = \<const0> ;
  assign m_axi_araddr[6] = \<const0> ;
  assign m_axi_araddr[5] = \<const0> ;
  assign m_axi_araddr[4] = \<const0> ;
  assign m_axi_araddr[3] = \<const0> ;
  assign m_axi_araddr[2] = \<const0> ;
  assign m_axi_araddr[1] = \<const0> ;
  assign m_axi_araddr[0] = \<const0> ;
  assign m_axi_arburst[1] = \<const0> ;
  assign m_axi_arburst[0] = \<const0> ;
  assign m_axi_arcache[3] = \<const0> ;
  assign m_axi_arcache[2] = \<const0> ;
  assign m_axi_arcache[1] = \<const0> ;
  assign m_axi_arcache[0] = \<const0> ;
  assign m_axi_arid[3] = \<const0> ;
  assign m_axi_arid[2] = \<const0> ;
  assign m_axi_arid[1] = \<const0> ;
  assign m_axi_arid[0] = \<const0> ;
  assign m_axi_arlen[7] = \<const0> ;
  assign m_axi_arlen[6] = \<const0> ;
  assign m_axi_arlen[5] = \<const0> ;
  assign m_axi_arlen[4] = \<const0> ;
  assign m_axi_arlen[3] = \<const0> ;
  assign m_axi_arlen[2] = \<const0> ;
  assign m_axi_arlen[1] = \<const0> ;
  assign m_axi_arlen[0] = \<const0> ;
  assign m_axi_arlock[0] = \<const0> ;
  assign m_axi_arprot[2] = \<const0> ;
  assign m_axi_arprot[1] = \<const0> ;
  assign m_axi_arprot[0] = \<const0> ;
  assign m_axi_arqos[3] = \<const0> ;
  assign m_axi_arqos[2] = \<const0> ;
  assign m_axi_arqos[1] = \<const0> ;
  assign m_axi_arqos[0] = \<const0> ;
  assign m_axi_arregion[3] = \<const0> ;
  assign m_axi_arregion[2] = \<const0> ;
  assign m_axi_arregion[1] = \<const0> ;
  assign m_axi_arregion[0] = \<const0> ;
  assign m_axi_arsize[2] = \<const0> ;
  assign m_axi_arsize[1] = \<const0> ;
  assign m_axi_arsize[0] = \<const0> ;
  assign m_axi_aruser[0] = \<const0> ;
  assign m_axi_arvalid = \<const0> ;
  assign m_axi_awaddr[31] = \<const0> ;
  assign m_axi_awaddr[30] = \<const0> ;
  assign m_axi_awaddr[29] = \<const0> ;
  assign m_axi_awaddr[28] = \<const0> ;
  assign m_axi_awaddr[27] = \<const0> ;
  assign m_axi_awaddr[26] = \<const0> ;
  assign m_axi_awaddr[25] = \<const0> ;
  assign m_axi_awaddr[24] = \<const0> ;
  assign m_axi_awaddr[23] = \<const0> ;
  assign m_axi_awaddr[22] = \<const0> ;
  assign m_axi_awaddr[21] = \<const0> ;
  assign m_axi_awaddr[20] = \<const0> ;
  assign m_axi_awaddr[19] = \<const0> ;
  assign m_axi_awaddr[18] = \<const0> ;
  assign m_axi_awaddr[17] = \<const0> ;
  assign m_axi_awaddr[16] = \<const0> ;
  assign m_axi_awaddr[15] = \<const0> ;
  assign m_axi_awaddr[14] = \<const0> ;
  assign m_axi_awaddr[13] = \<const0> ;
  assign m_axi_awaddr[12] = \<const0> ;
  assign m_axi_awaddr[11] = \<const0> ;
  assign m_axi_awaddr[10] = \<const0> ;
  assign m_axi_awaddr[9] = \<const0> ;
  assign m_axi_awaddr[8] = \<const0> ;
  assign m_axi_awaddr[7] = \<const0> ;
  assign m_axi_awaddr[6] = \<const0> ;
  assign m_axi_awaddr[5] = \<const0> ;
  assign m_axi_awaddr[4] = \<const0> ;
  assign m_axi_awaddr[3] = \<const0> ;
  assign m_axi_awaddr[2] = \<const0> ;
  assign m_axi_awaddr[1] = \<const0> ;
  assign m_axi_awaddr[0] = \<const0> ;
  assign m_axi_awburst[1] = \<const0> ;
  assign m_axi_awburst[0] = \<const0> ;
  assign m_axi_awcache[3] = \<const0> ;
  assign m_axi_awcache[2] = \<const0> ;
  assign m_axi_awcache[1] = \<const0> ;
  assign m_axi_awcache[0] = \<const0> ;
  assign m_axi_awid[3] = \<const0> ;
  assign m_axi_awid[2] = \<const0> ;
  assign m_axi_awid[1] = \<const0> ;
  assign m_axi_awid[0] = \<const0> ;
  assign m_axi_awlen[7] = \<const0> ;
  assign m_axi_awlen[6] = \<const0> ;
  assign m_axi_awlen[5] = \<const0> ;
  assign m_axi_awlen[4] = \<const0> ;
  assign m_axi_awlen[3] = \<const0> ;
  assign m_axi_awlen[2] = \<const0> ;
  assign m_axi_awlen[1] = \<const0> ;
  assign m_axi_awlen[0] = \<const0> ;
  assign m_axi_awlock[0] = \<const0> ;
  assign m_axi_awprot[2] = \<const0> ;
  assign m_axi_awprot[1] = \<const0> ;
  assign m_axi_awprot[0] = \<const0> ;
  assign m_axi_awqos[3] = \<const0> ;
  assign m_axi_awqos[2] = \<const0> ;
  assign m_axi_awqos[1] = \<const0> ;
  assign m_axi_awqos[0] = \<const0> ;
  assign m_axi_awregion[3] = \<const0> ;
  assign m_axi_awregion[2] = \<const0> ;
  assign m_axi_awregion[1] = \<const0> ;
  assign m_axi_awregion[0] = \<const0> ;
  assign m_axi_awsize[2] = \<const0> ;
  assign m_axi_awsize[1] = \<const0> ;
  assign m_axi_awsize[0] = \<const0> ;
  assign m_axi_awuser[0] = \<const0> ;
  assign m_axi_awvalid = \<const0> ;
  assign m_axi_bready = \<const0> ;
  assign m_axi_rready = \<const0> ;
  assign m_axi_wdata[63] = \<const0> ;
  assign m_axi_wdata[62] = \<const0> ;
  assign m_axi_wdata[61] = \<const0> ;
  assign m_axi_wdata[60] = \<const0> ;
  assign m_axi_wdata[59] = \<const0> ;
  assign m_axi_wdata[58] = \<const0> ;
  assign m_axi_wdata[57] = \<const0> ;
  assign m_axi_wdata[56] = \<const0> ;
  assign m_axi_wdata[55] = \<const0> ;
  assign m_axi_wdata[54] = \<const0> ;
  assign m_axi_wdata[53] = \<const0> ;
  assign m_axi_wdata[52] = \<const0> ;
  assign m_axi_wdata[51] = \<const0> ;
  assign m_axi_wdata[50] = \<const0> ;
  assign m_axi_wdata[49] = \<const0> ;
  assign m_axi_wdata[48] = \<const0> ;
  assign m_axi_wdata[47] = \<const0> ;
  assign m_axi_wdata[46] = \<const0> ;
  assign m_axi_wdata[45] = \<const0> ;
  assign m_axi_wdata[44] = \<const0> ;
  assign m_axi_wdata[43] = \<const0> ;
  assign m_axi_wdata[42] = \<const0> ;
  assign m_axi_wdata[41] = \<const0> ;
  assign m_axi_wdata[40] = \<const0> ;
  assign m_axi_wdata[39] = \<const0> ;
  assign m_axi_wdata[38] = \<const0> ;
  assign m_axi_wdata[37] = \<const0> ;
  assign m_axi_wdata[36] = \<const0> ;
  assign m_axi_wdata[35] = \<const0> ;
  assign m_axi_wdata[34] = \<const0> ;
  assign m_axi_wdata[33] = \<const0> ;
  assign m_axi_wdata[32] = \<const0> ;
  assign m_axi_wdata[31] = \<const0> ;
  assign m_axi_wdata[30] = \<const0> ;
  assign m_axi_wdata[29] = \<const0> ;
  assign m_axi_wdata[28] = \<const0> ;
  assign m_axi_wdata[27] = \<const0> ;
  assign m_axi_wdata[26] = \<const0> ;
  assign m_axi_wdata[25] = \<const0> ;
  assign m_axi_wdata[24] = \<const0> ;
  assign m_axi_wdata[23] = \<const0> ;
  assign m_axi_wdata[22] = \<const0> ;
  assign m_axi_wdata[21] = \<const0> ;
  assign m_axi_wdata[20] = \<const0> ;
  assign m_axi_wdata[19] = \<const0> ;
  assign m_axi_wdata[18] = \<const0> ;
  assign m_axi_wdata[17] = \<const0> ;
  assign m_axi_wdata[16] = \<const0> ;
  assign m_axi_wdata[15] = \<const0> ;
  assign m_axi_wdata[14] = \<const0> ;
  assign m_axi_wdata[13] = \<const0> ;
  assign m_axi_wdata[12] = \<const0> ;
  assign m_axi_wdata[11] = \<const0> ;
  assign m_axi_wdata[10] = \<const0> ;
  assign m_axi_wdata[9] = \<const0> ;
  assign m_axi_wdata[8] = \<const0> ;
  assign m_axi_wdata[7] = \<const0> ;
  assign m_axi_wdata[6] = \<const0> ;
  assign m_axi_wdata[5] = \<const0> ;
  assign m_axi_wdata[4] = \<const0> ;
  assign m_axi_wdata[3] = \<const0> ;
  assign m_axi_wdata[2] = \<const0> ;
  assign m_axi_wdata[1] = \<const0> ;
  assign m_axi_wdata[0] = \<const0> ;
  assign m_axi_wid[3] = \<const0> ;
  assign m_axi_wid[2] = \<const0> ;
  assign m_axi_wid[1] = \<const0> ;
  assign m_axi_wid[0] = \<const0> ;
  assign m_axi_wlast = \<const0> ;
  assign m_axi_wstrb[7] = \<const0> ;
  assign m_axi_wstrb[6] = \<const0> ;
  assign m_axi_wstrb[5] = \<const0> ;
  assign m_axi_wstrb[4] = \<const0> ;
  assign m_axi_wstrb[3] = \<const0> ;
  assign m_axi_wstrb[2] = \<const0> ;
  assign m_axi_wstrb[1] = \<const0> ;
  assign m_axi_wstrb[0] = \<const0> ;
  assign m_axi_wuser[0] = \<const0> ;
  assign m_axi_wvalid = \<const0> ;
  assign m_axis_tdata[63] = \<const0> ;
  assign m_axis_tdata[62] = \<const0> ;
  assign m_axis_tdata[61] = \<const0> ;
  assign m_axis_tdata[60] = \<const0> ;
  assign m_axis_tdata[59] = \<const0> ;
  assign m_axis_tdata[58] = \<const0> ;
  assign m_axis_tdata[57] = \<const0> ;
  assign m_axis_tdata[56] = \<const0> ;
  assign m_axis_tdata[55] = \<const0> ;
  assign m_axis_tdata[54] = \<const0> ;
  assign m_axis_tdata[53] = \<const0> ;
  assign m_axis_tdata[52] = \<const0> ;
  assign m_axis_tdata[51] = \<const0> ;
  assign m_axis_tdata[50] = \<const0> ;
  assign m_axis_tdata[49] = \<const0> ;
  assign m_axis_tdata[48] = \<const0> ;
  assign m_axis_tdata[47] = \<const0> ;
  assign m_axis_tdata[46] = \<const0> ;
  assign m_axis_tdata[45] = \<const0> ;
  assign m_axis_tdata[44] = \<const0> ;
  assign m_axis_tdata[43] = \<const0> ;
  assign m_axis_tdata[42] = \<const0> ;
  assign m_axis_tdata[41] = \<const0> ;
  assign m_axis_tdata[40] = \<const0> ;
  assign m_axis_tdata[39] = \<const0> ;
  assign m_axis_tdata[38] = \<const0> ;
  assign m_axis_tdata[37] = \<const0> ;
  assign m_axis_tdata[36] = \<const0> ;
  assign m_axis_tdata[35] = \<const0> ;
  assign m_axis_tdata[34] = \<const0> ;
  assign m_axis_tdata[33] = \<const0> ;
  assign m_axis_tdata[32] = \<const0> ;
  assign m_axis_tdata[31] = \<const0> ;
  assign m_axis_tdata[30] = \<const0> ;
  assign m_axis_tdata[29] = \<const0> ;
  assign m_axis_tdata[28] = \<const0> ;
  assign m_axis_tdata[27] = \<const0> ;
  assign m_axis_tdata[26] = \<const0> ;
  assign m_axis_tdata[25] = \<const0> ;
  assign m_axis_tdata[24] = \<const0> ;
  assign m_axis_tdata[23] = \<const0> ;
  assign m_axis_tdata[22] = \<const0> ;
  assign m_axis_tdata[21] = \<const0> ;
  assign m_axis_tdata[20] = \<const0> ;
  assign m_axis_tdata[19] = \<const0> ;
  assign m_axis_tdata[18] = \<const0> ;
  assign m_axis_tdata[17] = \<const0> ;
  assign m_axis_tdata[16] = \<const0> ;
  assign m_axis_tdata[15] = \<const0> ;
  assign m_axis_tdata[14] = \<const0> ;
  assign m_axis_tdata[13] = \<const0> ;
  assign m_axis_tdata[12] = \<const0> ;
  assign m_axis_tdata[11] = \<const0> ;
  assign m_axis_tdata[10] = \<const0> ;
  assign m_axis_tdata[9] = \<const0> ;
  assign m_axis_tdata[8] = \<const0> ;
  assign m_axis_tdata[7] = \<const0> ;
  assign m_axis_tdata[6] = \<const0> ;
  assign m_axis_tdata[5] = \<const0> ;
  assign m_axis_tdata[4] = \<const0> ;
  assign m_axis_tdata[3] = \<const0> ;
  assign m_axis_tdata[2] = \<const0> ;
  assign m_axis_tdata[1] = \<const0> ;
  assign m_axis_tdata[0] = \<const0> ;
  assign m_axis_tdest[3] = \<const0> ;
  assign m_axis_tdest[2] = \<const0> ;
  assign m_axis_tdest[1] = \<const0> ;
  assign m_axis_tdest[0] = \<const0> ;
  assign m_axis_tid[7] = \<const0> ;
  assign m_axis_tid[6] = \<const0> ;
  assign m_axis_tid[5] = \<const0> ;
  assign m_axis_tid[4] = \<const0> ;
  assign m_axis_tid[3] = \<const0> ;
  assign m_axis_tid[2] = \<const0> ;
  assign m_axis_tid[1] = \<const0> ;
  assign m_axis_tid[0] = \<const0> ;
  assign m_axis_tkeep[3] = \<const0> ;
  assign m_axis_tkeep[2] = \<const0> ;
  assign m_axis_tkeep[1] = \<const0> ;
  assign m_axis_tkeep[0] = \<const0> ;
  assign m_axis_tlast = \<const0> ;
  assign m_axis_tstrb[3] = \<const0> ;
  assign m_axis_tstrb[2] = \<const0> ;
  assign m_axis_tstrb[1] = \<const0> ;
  assign m_axis_tstrb[0] = \<const0> ;
  assign m_axis_tuser[3] = \<const0> ;
  assign m_axis_tuser[2] = \<const0> ;
  assign m_axis_tuser[1] = \<const0> ;
  assign m_axis_tuser[0] = \<const0> ;
  assign m_axis_tvalid = \<const0> ;
  assign overflow = \<const0> ;
  assign prog_empty = \<const0> ;
  assign prog_full = \<const0> ;
  assign rd_data_count[4] = \<const0> ;
  assign rd_data_count[3] = \<const0> ;
  assign rd_data_count[2] = \<const0> ;
  assign rd_data_count[1] = \<const0> ;
  assign rd_data_count[0] = \<const0> ;
  assign rd_rst_busy = \<const0> ;
  assign s_axi_arready = \<const0> ;
  assign s_axi_awready = \<const0> ;
  assign s_axi_bid[3] = \<const0> ;
  assign s_axi_bid[2] = \<const0> ;
  assign s_axi_bid[1] = \<const0> ;
  assign s_axi_bid[0] = \<const0> ;
  assign s_axi_bresp[1] = \<const0> ;
  assign s_axi_bresp[0] = \<const0> ;
  assign s_axi_buser[0] = \<const0> ;
  assign s_axi_bvalid = \<const0> ;
  assign s_axi_rdata[63] = \<const0> ;
  assign s_axi_rdata[62] = \<const0> ;
  assign s_axi_rdata[61] = \<const0> ;
  assign s_axi_rdata[60] = \<const0> ;
  assign s_axi_rdata[59] = \<const0> ;
  assign s_axi_rdata[58] = \<const0> ;
  assign s_axi_rdata[57] = \<const0> ;
  assign s_axi_rdata[56] = \<const0> ;
  assign s_axi_rdata[55] = \<const0> ;
  assign s_axi_rdata[54] = \<const0> ;
  assign s_axi_rdata[53] = \<const0> ;
  assign s_axi_rdata[52] = \<const0> ;
  assign s_axi_rdata[51] = \<const0> ;
  assign s_axi_rdata[50] = \<const0> ;
  assign s_axi_rdata[49] = \<const0> ;
  assign s_axi_rdata[48] = \<const0> ;
  assign s_axi_rdata[47] = \<const0> ;
  assign s_axi_rdata[46] = \<const0> ;
  assign s_axi_rdata[45] = \<const0> ;
  assign s_axi_rdata[44] = \<const0> ;
  assign s_axi_rdata[43] = \<const0> ;
  assign s_axi_rdata[42] = \<const0> ;
  assign s_axi_rdata[41] = \<const0> ;
  assign s_axi_rdata[40] = \<const0> ;
  assign s_axi_rdata[39] = \<const0> ;
  assign s_axi_rdata[38] = \<const0> ;
  assign s_axi_rdata[37] = \<const0> ;
  assign s_axi_rdata[36] = \<const0> ;
  assign s_axi_rdata[35] = \<const0> ;
  assign s_axi_rdata[34] = \<const0> ;
  assign s_axi_rdata[33] = \<const0> ;
  assign s_axi_rdata[32] = \<const0> ;
  assign s_axi_rdata[31] = \<const0> ;
  assign s_axi_rdata[30] = \<const0> ;
  assign s_axi_rdata[29] = \<const0> ;
  assign s_axi_rdata[28] = \<const0> ;
  assign s_axi_rdata[27] = \<const0> ;
  assign s_axi_rdata[26] = \<const0> ;
  assign s_axi_rdata[25] = \<const0> ;
  assign s_axi_rdata[24] = \<const0> ;
  assign s_axi_rdata[23] = \<const0> ;
  assign s_axi_rdata[22] = \<const0> ;
  assign s_axi_rdata[21] = \<const0> ;
  assign s_axi_rdata[20] = \<const0> ;
  assign s_axi_rdata[19] = \<const0> ;
  assign s_axi_rdata[18] = \<const0> ;
  assign s_axi_rdata[17] = \<const0> ;
  assign s_axi_rdata[16] = \<const0> ;
  assign s_axi_rdata[15] = \<const0> ;
  assign s_axi_rdata[14] = \<const0> ;
  assign s_axi_rdata[13] = \<const0> ;
  assign s_axi_rdata[12] = \<const0> ;
  assign s_axi_rdata[11] = \<const0> ;
  assign s_axi_rdata[10] = \<const0> ;
  assign s_axi_rdata[9] = \<const0> ;
  assign s_axi_rdata[8] = \<const0> ;
  assign s_axi_rdata[7] = \<const0> ;
  assign s_axi_rdata[6] = \<const0> ;
  assign s_axi_rdata[5] = \<const0> ;
  assign s_axi_rdata[4] = \<const0> ;
  assign s_axi_rdata[3] = \<const0> ;
  assign s_axi_rdata[2] = \<const0> ;
  assign s_axi_rdata[1] = \<const0> ;
  assign s_axi_rdata[0] = \<const0> ;
  assign s_axi_rid[3] = \<const0> ;
  assign s_axi_rid[2] = \<const0> ;
  assign s_axi_rid[1] = \<const0> ;
  assign s_axi_rid[0] = \<const0> ;
  assign s_axi_rlast = \<const0> ;
  assign s_axi_rresp[1] = \<const0> ;
  assign s_axi_rresp[0] = \<const0> ;
  assign s_axi_ruser[0] = \<const0> ;
  assign s_axi_rvalid = \<const0> ;
  assign s_axi_wready = \<const0> ;
  assign s_axis_tready = \<const0> ;
  assign sbiterr = \<const0> ;
  assign underflow = \<const0> ;
  assign valid = \<const0> ;
  assign wr_ack = \<const0> ;
  assign wr_data_count[4] = \<const0> ;
  assign wr_data_count[3] = \<const0> ;
  assign wr_data_count[2] = \<const0> ;
  assign wr_data_count[1] = \<const0> ;
  assign wr_data_count[0] = \<const0> ;
  assign wr_rst_busy = \<const0> ;
  GND GND
       (.G(\<const0> ));
  jtag_axi_axi_perf_mon_0_0_fifo_generator_v13_1_3_synth__parameterized0 inst_fifo_gen
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

module jtag_axi_axi_perf_mon_0_0_fifo_generator_v13_1_3_synth
   (empty,
    full,
    dout,
    rd_clk,
    wr_clk,
    rst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [19:0]dout;
  input rd_clk;
  input wr_clk;
  input rst;
  input [29:0]din;
  input rd_en;
  input wr_en;

  wire [29:0]din;
  wire [19:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

  jtag_axi_axi_perf_mon_0_0_fifo_generator_top \gconvfifo.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

(* ORIG_REF_NAME = "fifo_generator_v13_1_3_synth" *) 
module jtag_axi_axi_perf_mon_0_0_fifo_generator_v13_1_3_synth__parameterized0
   (empty,
    full,
    dout,
    rd_clk,
    wr_clk,
    rst,
    din,
    rd_en,
    wr_en);
  output empty;
  output full;
  output [2:0]dout;
  input rd_clk;
  input wr_clk;
  input rst;
  input [2:0]din;
  input rd_en;
  input wr_en;

  wire [2:0]din;
  wire [2:0]dout;
  wire empty;
  wire full;
  wire rd_clk;
  wire rd_en;
  wire rst;
  wire wr_clk;
  wire wr_en;

  jtag_axi_axi_perf_mon_0_0_fifo_generator_top__parameterized0 \gconvfifo.rf 
       (.din(din),
        .dout(dout),
        .empty(empty),
        .full(full),
        .rd_clk(rd_clk),
        .rd_en(rd_en),
        .rst(rst),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
endmodule

module jtag_axi_axi_perf_mon_0_0_memory
   (dout,
    wr_clk,
    E,
    din,
    \gc1.count_d2_reg[4] ,
    \gic0.gc0.count_d2_reg[4] ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    rd_clk,
    AR,
    \gpregsm1.curr_fwft_state_reg[0] );
  output [19:0]dout;
  input wr_clk;
  input [0:0]E;
  input [29:0]din;
  input [4:0]\gc1.count_d2_reg[4] ;
  input [4:0]\gic0.gc0.count_d2_reg[4] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input rd_clk;
  input [0:0]AR;
  input [0:0]\gpregsm1.curr_fwft_state_reg[0] ;

  wire [0:0]AR;
  wire [0:0]E;
  wire [29:0]din;
  wire [19:0]dout;
  wire [67:0]dout_i;
  wire [4:0]\gc1.count_d2_reg[4] ;
  wire [4:0]\gic0.gc0.count_d2_reg[4] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[0] ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire rd_clk;
  wire wr_clk;

  jtag_axi_axi_perf_mon_0_0_dmem \gdm.dm_gen.dm 
       (.AR(AR),
        .E(E),
        .Q({dout_i[67],dout_i[44:35],dout_i[32:30],dout_i[7:5],dout_i[2:0]}),
        .din(din),
        .\gc1.count_d2_reg[4] (\gc1.count_d2_reg[4] ),
        .\gic0.gc0.count_d2_reg[4] (\gic0.gc0.count_d2_reg[4] ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[0]),
        .Q(dout[0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[1]),
        .Q(dout[1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[2]),
        .Q(dout[2]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[30] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[30]),
        .Q(dout[6]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[31] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[31]),
        .Q(dout[7]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[32] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[32]),
        .Q(dout[8]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[35] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[35]),
        .Q(dout[9]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[36] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[36]),
        .Q(dout[10]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[37] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[37]),
        .Q(dout[11]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[38] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[38]),
        .Q(dout[12]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[39] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[39]),
        .Q(dout[13]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[40] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[40]),
        .Q(dout[14]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[41] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[41]),
        .Q(dout[15]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[42] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[42]),
        .Q(dout[16]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[43] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[43]),
        .Q(dout[17]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[44] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[44]),
        .Q(dout[18]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[5] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[5]),
        .Q(dout[3]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[67] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[67]),
        .Q(dout[19]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[6] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[6]),
        .Q(dout[4]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[7] 
       (.C(rd_clk),
        .CE(\gpregsm1.curr_fwft_state_reg[0] ),
        .CLR(AR),
        .D(dout_i[7]),
        .Q(dout[5]));
endmodule

(* ORIG_REF_NAME = "memory" *) 
module jtag_axi_axi_perf_mon_0_0_memory__parameterized0
   (dout,
    wr_clk,
    E,
    din,
    \gc1.count_d2_reg[4] ,
    \gic0.gc0.count_d2_reg[4] ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    rd_clk,
    out,
    \gpregsm1.curr_fwft_state_reg[1]_0 ,
    rd_en);
  output [2:0]dout;
  input wr_clk;
  input [0:0]E;
  input [2:0]din;
  input [4:0]\gc1.count_d2_reg[4] ;
  input [4:0]\gic0.gc0.count_d2_reg[4] ;
  input [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  input rd_clk;
  input [0:0]out;
  input [1:0]\gpregsm1.curr_fwft_state_reg[1]_0 ;
  input rd_en;

  wire [0:0]E;
  wire [2:0]din;
  wire [2:0]dout;
  wire [2:0]dout_i;
  wire [4:0]\gc1.count_d2_reg[4] ;
  wire [4:0]\gic0.gc0.count_d2_reg[4] ;
  wire \goreg_dm.dout_i[0]_i_1_n_0 ;
  wire \goreg_dm.dout_i[1]_i_1_n_0 ;
  wire \goreg_dm.dout_i[2]_i_1_n_0 ;
  wire [0:0]\gpregsm1.curr_fwft_state_reg[1] ;
  wire [1:0]\gpregsm1.curr_fwft_state_reg[1]_0 ;
  wire [0:0]out;
  wire rd_clk;
  wire rd_en;
  wire wr_clk;

  jtag_axi_axi_perf_mon_0_0_dmem__parameterized0 \gdm.dm_gen.dm 
       (.E(E),
        .Q(dout_i),
        .din(din),
        .\gc1.count_d2_reg[4] (\gc1.count_d2_reg[4] ),
        .\gic0.gc0.count_d2_reg[4] (\gic0.gc0.count_d2_reg[4] ),
        .\gpregsm1.curr_fwft_state_reg[1] (\gpregsm1.curr_fwft_state_reg[1] ),
        .out(out),
        .rd_clk(rd_clk),
        .wr_clk(wr_clk));
  LUT5 #(
    .INIT(32'hAEFFA200)) 
    \goreg_dm.dout_i[0]_i_1 
       (.I0(dout_i[0]),
        .I1(\gpregsm1.curr_fwft_state_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 [1]),
        .I4(dout[0]),
        .O(\goreg_dm.dout_i[0]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAEFFA200)) 
    \goreg_dm.dout_i[1]_i_1 
       (.I0(dout_i[1]),
        .I1(\gpregsm1.curr_fwft_state_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 [1]),
        .I4(dout[1]),
        .O(\goreg_dm.dout_i[1]_i_1_n_0 ));
  LUT5 #(
    .INIT(32'hAEFFA200)) 
    \goreg_dm.dout_i[2]_i_1 
       (.I0(dout_i[2]),
        .I1(\gpregsm1.curr_fwft_state_reg[1]_0 [0]),
        .I2(rd_en),
        .I3(\gpregsm1.curr_fwft_state_reg[1]_0 [1]),
        .I4(dout[2]),
        .O(\goreg_dm.dout_i[2]_i_1_n_0 ));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(out),
        .D(\goreg_dm.dout_i[0]_i_1_n_0 ),
        .Q(dout[0]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(out),
        .D(\goreg_dm.dout_i[1]_i_1_n_0 ),
        .Q(dout[1]));
  FDCE #(
    .INIT(1'b0)) 
    \goreg_dm.dout_i_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(out),
        .D(\goreg_dm.dout_i[2]_i_1_n_0 ),
        .Q(dout[2]));
endmodule

module jtag_axi_axi_perf_mon_0_0_rd_bin_cntr
   (ram_empty_i0,
    Q,
    \gnxpm_cdc.rd_pntr_gc_reg[3] ,
    \gnxpm_cdc.rd_pntr_gc_reg[4] ,
    \gnxpm_cdc.wr_pntr_bin_reg[4] ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \gnxpm_cdc.wr_pntr_bin_reg[2] ,
    E,
    rd_clk,
    AR);
  output ram_empty_i0;
  output [0:0]Q;
  output [3:0]\gnxpm_cdc.rd_pntr_gc_reg[3] ;
  output [4:0]\gnxpm_cdc.rd_pntr_gc_reg[4] ;
  input [4:0]\gnxpm_cdc.wr_pntr_bin_reg[4] ;
  input \gpregsm1.curr_fwft_state_reg[1] ;
  input \gnxpm_cdc.wr_pntr_bin_reg[2] ;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [0:0]Q;
  wire [3:0]\gnxpm_cdc.rd_pntr_gc_reg[3] ;
  wire [4:0]\gnxpm_cdc.rd_pntr_gc_reg[4] ;
  wire \gnxpm_cdc.wr_pntr_bin_reg[2] ;
  wire [4:0]\gnxpm_cdc.wr_pntr_bin_reg[4] ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire [4:0]plusOp;
  wire ram_empty_i0;
  wire ram_empty_i_i_3_n_0;
  wire ram_empty_i_i_4_n_0;
  wire rd_clk;
  wire [3:0]rd_pntr_plus1;
  wire [4:0]rd_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair140" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair138" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp[4]));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .PRE(AR),
        .Q(rd_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus2[1]),
        .Q(rd_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus2[2]),
        .Q(rd_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus2[3]),
        .Q(rd_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus2[4]),
        .Q(Q));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[0]),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[1]),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[2]),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[3]),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[0]),
        .Q(rd_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(rd_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(rd_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(rd_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[4]),
        .Q(rd_pntr_plus2[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[0]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [0]),
        .I1(\gnxpm_cdc.rd_pntr_gc_reg[4] [1]),
        .O(\gnxpm_cdc.rd_pntr_gc_reg[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[1]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [1]),
        .I1(\gnxpm_cdc.rd_pntr_gc_reg[4] [2]),
        .O(\gnxpm_cdc.rd_pntr_gc_reg[3] [1]));
  (* SOFT_HLUTNM = "soft_lutpair141" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[2]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [2]),
        .I1(\gnxpm_cdc.rd_pntr_gc_reg[4] [3]),
        .O(\gnxpm_cdc.rd_pntr_gc_reg[3] [2]));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[3]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [3]),
        .I1(\gnxpm_cdc.rd_pntr_gc_reg[4] [4]),
        .O(\gnxpm_cdc.rd_pntr_gc_reg[3] [3]));
  LUT6 #(
    .INIT(64'hFFFF900090009000)) 
    ram_empty_i_i_1
       (.I0(rd_pntr_plus1[0]),
        .I1(\gnxpm_cdc.wr_pntr_bin_reg[4] [0]),
        .I2(\gpregsm1.curr_fwft_state_reg[1] ),
        .I3(ram_empty_i_i_3_n_0),
        .I4(ram_empty_i_i_4_n_0),
        .I5(\gnxpm_cdc.wr_pntr_bin_reg[2] ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_3
       (.I0(rd_pntr_plus1[3]),
        .I1(\gnxpm_cdc.wr_pntr_bin_reg[4] [3]),
        .I2(rd_pntr_plus1[2]),
        .I3(\gnxpm_cdc.wr_pntr_bin_reg[4] [2]),
        .I4(\gnxpm_cdc.wr_pntr_bin_reg[4] [1]),
        .I5(rd_pntr_plus1[1]),
        .O(ram_empty_i_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair139" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_4
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [3]),
        .I1(\gnxpm_cdc.wr_pntr_bin_reg[4] [3]),
        .I2(\gnxpm_cdc.rd_pntr_gc_reg[4] [4]),
        .I3(\gnxpm_cdc.wr_pntr_bin_reg[4] [4]),
        .O(ram_empty_i_i_4_n_0));
endmodule

(* ORIG_REF_NAME = "rd_bin_cntr" *) 
module jtag_axi_axi_perf_mon_0_0_rd_bin_cntr_27
   (ram_empty_i0,
    Q,
    \gnxpm_cdc.rd_pntr_gc_reg[3] ,
    \gnxpm_cdc.rd_pntr_gc_reg[4] ,
    \gnxpm_cdc.wr_pntr_bin_reg[4] ,
    \gpregsm1.curr_fwft_state_reg[1] ,
    \gnxpm_cdc.wr_pntr_bin_reg[2] ,
    E,
    rd_clk,
    AR);
  output ram_empty_i0;
  output [0:0]Q;
  output [3:0]\gnxpm_cdc.rd_pntr_gc_reg[3] ;
  output [4:0]\gnxpm_cdc.rd_pntr_gc_reg[4] ;
  input [4:0]\gnxpm_cdc.wr_pntr_bin_reg[4] ;
  input \gpregsm1.curr_fwft_state_reg[1] ;
  input \gnxpm_cdc.wr_pntr_bin_reg[2] ;
  input [0:0]E;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [0:0]Q;
  wire [3:0]\gnxpm_cdc.rd_pntr_gc_reg[3] ;
  wire [4:0]\gnxpm_cdc.rd_pntr_gc_reg[4] ;
  wire \gnxpm_cdc.wr_pntr_bin_reg[2] ;
  wire [4:0]\gnxpm_cdc.wr_pntr_bin_reg[4] ;
  wire \gpregsm1.curr_fwft_state_reg[1] ;
  wire [4:0]plusOp;
  wire ram_empty_i0;
  wire ram_empty_i_i_3_n_0;
  wire ram_empty_i_i_4_n_0;
  wire rd_clk;
  wire [3:0]rd_pntr_plus1;
  wire [4:0]rd_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gc1.count[0]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .O(plusOp[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gc1.count[1]_i_1 
       (.I0(rd_pntr_plus2[0]),
        .I1(rd_pntr_plus2[1]),
        .O(plusOp[1]));
  (* SOFT_HLUTNM = "soft_lutpair128" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gc1.count[2]_i_1 
       (.I0(rd_pntr_plus2[1]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[2]),
        .O(plusOp[2]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gc1.count[3]_i_1 
       (.I0(rd_pntr_plus2[2]),
        .I1(rd_pntr_plus2[0]),
        .I2(rd_pntr_plus2[1]),
        .I3(rd_pntr_plus2[3]),
        .O(plusOp[3]));
  (* SOFT_HLUTNM = "soft_lutpair126" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gc1.count[4]_i_1 
       (.I0(rd_pntr_plus2[3]),
        .I1(rd_pntr_plus2[1]),
        .I2(rd_pntr_plus2[0]),
        .I3(rd_pntr_plus2[2]),
        .I4(rd_pntr_plus2[4]),
        .O(plusOp[4]));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_d1_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .D(rd_pntr_plus2[0]),
        .PRE(AR),
        .Q(rd_pntr_plus1[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus2[1]),
        .Q(rd_pntr_plus1[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus2[2]),
        .Q(rd_pntr_plus1[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus2[3]),
        .Q(rd_pntr_plus1[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d1_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus2[4]),
        .Q(Q));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[0]),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[1]),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[2]),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(rd_pntr_plus1[3]),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_d2_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(Q),
        .Q(\gnxpm_cdc.rd_pntr_gc_reg[4] [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[0] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[0]),
        .Q(rd_pntr_plus2[0]));
  FDPE #(
    .INIT(1'b1)) 
    \gc1.count_reg[1] 
       (.C(rd_clk),
        .CE(E),
        .D(plusOp[1]),
        .PRE(AR),
        .Q(rd_pntr_plus2[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[2] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[2]),
        .Q(rd_pntr_plus2[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[3] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[3]),
        .Q(rd_pntr_plus2[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gc1.count_reg[4] 
       (.C(rd_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp[4]),
        .Q(rd_pntr_plus2[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[0]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [0]),
        .I1(\gnxpm_cdc.rd_pntr_gc_reg[4] [1]),
        .O(\gnxpm_cdc.rd_pntr_gc_reg[3] [0]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[1]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [1]),
        .I1(\gnxpm_cdc.rd_pntr_gc_reg[4] [2]),
        .O(\gnxpm_cdc.rd_pntr_gc_reg[3] [1]));
  (* SOFT_HLUTNM = "soft_lutpair129" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[2]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [2]),
        .I1(\gnxpm_cdc.rd_pntr_gc_reg[4] [3]),
        .O(\gnxpm_cdc.rd_pntr_gc_reg[3] [2]));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_gc[3]_i_1 
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [3]),
        .I1(\gnxpm_cdc.rd_pntr_gc_reg[4] [4]),
        .O(\gnxpm_cdc.rd_pntr_gc_reg[3] [3]));
  LUT6 #(
    .INIT(64'hFFFF900090009000)) 
    ram_empty_i_i_1
       (.I0(rd_pntr_plus1[0]),
        .I1(\gnxpm_cdc.wr_pntr_bin_reg[4] [0]),
        .I2(\gpregsm1.curr_fwft_state_reg[1] ),
        .I3(ram_empty_i_i_3_n_0),
        .I4(ram_empty_i_i_4_n_0),
        .I5(\gnxpm_cdc.wr_pntr_bin_reg[2] ),
        .O(ram_empty_i0));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    ram_empty_i_i_3
       (.I0(rd_pntr_plus1[3]),
        .I1(\gnxpm_cdc.wr_pntr_bin_reg[4] [3]),
        .I2(rd_pntr_plus1[2]),
        .I3(\gnxpm_cdc.wr_pntr_bin_reg[4] [2]),
        .I4(\gnxpm_cdc.wr_pntr_bin_reg[4] [1]),
        .I5(rd_pntr_plus1[1]),
        .O(ram_empty_i_i_3_n_0));
  (* SOFT_HLUTNM = "soft_lutpair127" *) 
  LUT4 #(
    .INIT(16'h9009)) 
    ram_empty_i_i_4
       (.I0(\gnxpm_cdc.rd_pntr_gc_reg[4] [3]),
        .I1(\gnxpm_cdc.wr_pntr_bin_reg[4] [3]),
        .I2(\gnxpm_cdc.rd_pntr_gc_reg[4] [4]),
        .I3(\gnxpm_cdc.wr_pntr_bin_reg[4] [4]),
        .O(ram_empty_i_i_4_n_0));
endmodule

module jtag_axi_axi_perf_mon_0_0_rd_fwft
   (empty,
    E,
    ram_empty_i_reg,
    \gc1.count_reg[0] ,
    rd_clk,
    AR,
    rd_en,
    out,
    Q,
    \gnxpm_cdc.wr_pntr_bin_reg[4] );
  output empty;
  output [0:0]E;
  output ram_empty_i_reg;
  output [0:0]\gc1.count_reg[0] ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input out;
  input [0:0]Q;
  input [0:0]\gnxpm_cdc.wr_pntr_bin_reg[4] ;

  wire [0:0]AR;
  wire [0:0]E;
  wire [0:0]Q;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire [0:0]\gc1.count_reg[0] ;
  wire [0:0]\gnxpm_cdc.wr_pntr_bin_reg[4] ;
  wire [1:0]next_fwft_state;
  wire out;
  wire ram_empty_i_reg;
  wire rd_clk;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  LUT5 #(
    .INIT(32'hF8E0C0F0)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(out),
        .I2(aempty_fwft_fb_i),
        .I3(curr_fwft_state[1]),
        .I4(curr_fwft_state[0]),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'h88EA)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_i),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'h88EA)) 
    empty_fwft_fb_o_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00DF)) 
    \gc1.count_d1[4]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(\gc1.count_reg[0] ));
  LUT3 #(
    .INIT(8'hD0)) 
    \goreg_dm.dout_i[67]_i_1 
       (.I0(curr_fwft_state[0]),
        .I1(rd_en),
        .I2(curr_fwft_state[1]),
        .O(E));
  LUT3 #(
    .INIT(8'hAE)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(user_valid));
  LUT6 #(
    .INIT(64'h00DF0000000000DF)) 
    ram_empty_i_i_2
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(out),
        .I4(Q),
        .I5(\gnxpm_cdc.wr_pntr_bin_reg[4] ),
        .O(ram_empty_i_reg));
endmodule

(* ORIG_REF_NAME = "rd_fwft" *) 
module jtag_axi_axi_perf_mon_0_0_rd_fwft_25
   (out,
    empty,
    ram_empty_i_reg,
    E,
    rd_clk,
    AR,
    rd_en,
    ram_empty_fb_i_reg,
    Q,
    \gnxpm_cdc.wr_pntr_bin_reg[4] );
  output [1:0]out;
  output empty;
  output ram_empty_i_reg;
  output [0:0]E;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input ram_empty_fb_i_reg;
  input [0:0]Q;
  input [0:0]\gnxpm_cdc.wr_pntr_bin_reg[4] ;

  wire [0:0]AR;
  wire [0:0]E;
  wire [0:0]Q;
  (* DONT_TOUCH *) wire aempty_fwft_fb_i;
  (* DONT_TOUCH *) wire aempty_fwft_i;
  wire aempty_fwft_i0;
  (* DONT_TOUCH *) wire [1:0]curr_fwft_state;
  (* DONT_TOUCH *) wire empty_fwft_fb_i;
  (* DONT_TOUCH *) wire empty_fwft_fb_o_i;
  wire empty_fwft_fb_o_i0;
  (* DONT_TOUCH *) wire empty_fwft_i;
  wire empty_fwft_i0;
  wire [0:0]\gnxpm_cdc.wr_pntr_bin_reg[4] ;
  wire [1:0]next_fwft_state;
  wire ram_empty_fb_i_reg;
  wire ram_empty_i_reg;
  wire rd_clk;
  wire rd_en;
  (* DONT_TOUCH *) wire user_valid;

  assign empty = empty_fwft_i;
  assign out[1:0] = curr_fwft_state;
  LUT5 #(
    .INIT(32'hF8E0C0F0)) 
    aempty_fwft_fb_i_i_1
       (.I0(rd_en),
        .I1(ram_empty_fb_i_reg),
        .I2(aempty_fwft_fb_i),
        .I3(curr_fwft_state[1]),
        .I4(curr_fwft_state[0]),
        .O(aempty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    aempty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(aempty_fwft_i0),
        .PRE(AR),
        .Q(aempty_fwft_i));
  LUT4 #(
    .INIT(16'h88EA)) 
    empty_fwft_fb_i_i_1
       (.I0(empty_fwft_fb_i),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .O(empty_fwft_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_i));
  LUT4 #(
    .INIT(16'h88EA)) 
    empty_fwft_fb_o_i_i_1
       (.I0(empty_fwft_fb_o_i),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .I3(curr_fwft_state[1]),
        .O(empty_fwft_fb_o_i0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_fb_o_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_fb_o_i0),
        .PRE(AR),
        .Q(empty_fwft_fb_o_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    empty_fwft_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(empty_fwft_i0),
        .PRE(AR),
        .Q(empty_fwft_i));
  LUT4 #(
    .INIT(16'h00DF)) 
    \gc1.count_d1[4]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(ram_empty_fb_i_reg),
        .O(E));
  LUT3 #(
    .INIT(8'hAE)) 
    \gpregsm1.curr_fwft_state[0]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(curr_fwft_state[0]),
        .I2(rd_en),
        .O(next_fwft_state[0]));
  LUT4 #(
    .INIT(16'h20FF)) 
    \gpregsm1.curr_fwft_state[1]_i_1 
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(ram_empty_fb_i_reg),
        .O(next_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(curr_fwft_state[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.curr_fwft_state_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[1]),
        .Q(curr_fwft_state[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDCE #(
    .INIT(1'b0)) 
    \gpregsm1.user_valid_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(next_fwft_state[0]),
        .Q(user_valid));
  LUT6 #(
    .INIT(64'h00DF0000000000DF)) 
    ram_empty_i_i_2
       (.I0(curr_fwft_state[1]),
        .I1(rd_en),
        .I2(curr_fwft_state[0]),
        .I3(ram_empty_fb_i_reg),
        .I4(Q),
        .I5(\gnxpm_cdc.wr_pntr_bin_reg[4] ),
        .O(ram_empty_i_reg));
endmodule

module jtag_axi_axi_perf_mon_0_0_rd_logic
   (empty,
    E,
    \gc1.count_reg[0] ,
    \gnxpm_cdc.rd_pntr_gc_reg[3] ,
    \gnxpm_cdc.rd_pntr_gc_reg[4] ,
    rd_clk,
    AR,
    rd_en,
    Q,
    \gnxpm_cdc.wr_pntr_bin_reg[2] );
  output empty;
  output [0:0]E;
  output [0:0]\gc1.count_reg[0] ;
  output [3:0]\gnxpm_cdc.rd_pntr_gc_reg[3] ;
  output [4:0]\gnxpm_cdc.rd_pntr_gc_reg[4] ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input [4:0]Q;
  input \gnxpm_cdc.wr_pntr_bin_reg[2] ;

  wire [0:0]AR;
  wire [0:0]E;
  wire [4:0]Q;
  wire empty;
  wire [0:0]\gc1.count_reg[0] ;
  wire [3:0]\gnxpm_cdc.rd_pntr_gc_reg[3] ;
  wire [4:0]\gnxpm_cdc.rd_pntr_gc_reg[4] ;
  wire \gnxpm_cdc.wr_pntr_bin_reg[2] ;
  wire \gr1.gr1_int.rfwft_n_2 ;
  wire p_2_out;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire [4:4]rd_pntr_plus1;

  jtag_axi_axi_perf_mon_0_0_rd_fwft \gr1.gr1_int.rfwft 
       (.AR(AR),
        .E(E),
        .Q(rd_pntr_plus1),
        .empty(empty),
        .\gc1.count_reg[0] (\gc1.count_reg[0] ),
        .\gnxpm_cdc.wr_pntr_bin_reg[4] (Q[4]),
        .out(p_2_out),
        .ram_empty_i_reg(\gr1.gr1_int.rfwft_n_2 ),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  jtag_axi_axi_perf_mon_0_0_rd_status_flags_as \gras.rsts 
       (.AR(AR),
        .out(p_2_out),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_rd_bin_cntr rpntr
       (.AR(AR),
        .E(\gc1.count_reg[0] ),
        .Q(rd_pntr_plus1),
        .\gnxpm_cdc.rd_pntr_gc_reg[3] (\gnxpm_cdc.rd_pntr_gc_reg[3] ),
        .\gnxpm_cdc.rd_pntr_gc_reg[4] (\gnxpm_cdc.rd_pntr_gc_reg[4] ),
        .\gnxpm_cdc.wr_pntr_bin_reg[2] (\gnxpm_cdc.wr_pntr_bin_reg[2] ),
        .\gnxpm_cdc.wr_pntr_bin_reg[4] (Q),
        .\gpregsm1.curr_fwft_state_reg[1] (\gr1.gr1_int.rfwft_n_2 ),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk));
endmodule

(* ORIG_REF_NAME = "rd_logic" *) 
module jtag_axi_axi_perf_mon_0_0_rd_logic_12
   (out,
    empty,
    E,
    \gnxpm_cdc.rd_pntr_gc_reg[3] ,
    \gnxpm_cdc.rd_pntr_gc_reg[4] ,
    rd_clk,
    AR,
    rd_en,
    Q,
    \gnxpm_cdc.wr_pntr_bin_reg[2] );
  output [1:0]out;
  output empty;
  output [0:0]E;
  output [3:0]\gnxpm_cdc.rd_pntr_gc_reg[3] ;
  output [4:0]\gnxpm_cdc.rd_pntr_gc_reg[4] ;
  input rd_clk;
  input [0:0]AR;
  input rd_en;
  input [4:0]Q;
  input \gnxpm_cdc.wr_pntr_bin_reg[2] ;

  wire [0:0]AR;
  wire [0:0]E;
  wire [4:0]Q;
  wire empty;
  wire [3:0]\gnxpm_cdc.rd_pntr_gc_reg[3] ;
  wire [4:0]\gnxpm_cdc.rd_pntr_gc_reg[4] ;
  wire \gnxpm_cdc.wr_pntr_bin_reg[2] ;
  wire \gr1.gr1_int.rfwft_n_3 ;
  wire [1:0]out;
  wire p_2_out;
  wire ram_empty_i0;
  wire rd_clk;
  wire rd_en;
  wire [4:4]rd_pntr_plus1;

  jtag_axi_axi_perf_mon_0_0_rd_fwft_25 \gr1.gr1_int.rfwft 
       (.AR(AR),
        .E(E),
        .Q(rd_pntr_plus1),
        .empty(empty),
        .\gnxpm_cdc.wr_pntr_bin_reg[4] (Q[4]),
        .out(out),
        .ram_empty_fb_i_reg(p_2_out),
        .ram_empty_i_reg(\gr1.gr1_int.rfwft_n_3 ),
        .rd_clk(rd_clk),
        .rd_en(rd_en));
  jtag_axi_axi_perf_mon_0_0_rd_status_flags_as_26 \gras.rsts 
       (.AR(AR),
        .out(p_2_out),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_rd_bin_cntr_27 rpntr
       (.AR(AR),
        .E(E),
        .Q(rd_pntr_plus1),
        .\gnxpm_cdc.rd_pntr_gc_reg[3] (\gnxpm_cdc.rd_pntr_gc_reg[3] ),
        .\gnxpm_cdc.rd_pntr_gc_reg[4] (\gnxpm_cdc.rd_pntr_gc_reg[4] ),
        .\gnxpm_cdc.wr_pntr_bin_reg[2] (\gnxpm_cdc.wr_pntr_bin_reg[2] ),
        .\gnxpm_cdc.wr_pntr_bin_reg[4] (Q),
        .\gpregsm1.curr_fwft_state_reg[1] (\gr1.gr1_int.rfwft_n_3 ),
        .ram_empty_i0(ram_empty_i0),
        .rd_clk(rd_clk));
endmodule

module jtag_axi_axi_perf_mon_0_0_rd_status_flags_as
   (out,
    ram_empty_i0,
    rd_clk,
    AR);
  output out;
  input ram_empty_i0;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(AR),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(AR),
        .Q(ram_empty_i));
endmodule

(* ORIG_REF_NAME = "rd_status_flags_as" *) 
module jtag_axi_axi_perf_mon_0_0_rd_status_flags_as_26
   (out,
    ram_empty_i0,
    rd_clk,
    AR);
  output out;
  input ram_empty_i0;
  input rd_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* DONT_TOUCH *) wire ram_empty_fb_i;
  (* DONT_TOUCH *) wire ram_empty_i;
  wire ram_empty_i0;
  wire rd_clk;

  assign out = ram_empty_fb_i;
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_fb_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(AR),
        .Q(ram_empty_fb_i));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_empty_i_reg
       (.C(rd_clk),
        .CE(1'b1),
        .D(ram_empty_i0),
        .PRE(AR),
        .Q(ram_empty_i));
endmodule

module jtag_axi_axi_perf_mon_0_0_reset_blk_ramfifo
   (out,
    \gc1.count_reg[0] ,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    ram_full_i_reg,
    rd_clk,
    wr_clk,
    rst);
  output [1:0]out;
  output [2:0]\gc1.count_reg[0] ;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output ram_full_i_reg;
  input rd_clk;
  input wr_clk;
  input rst;

  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].rrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].wrst_inst_n_1 ;
  wire p_10_out;
  wire p_11_out;
  wire p_12_out;
  wire p_7_out;
  wire p_8_out;
  wire p_9_out;
  wire rd_clk;
  wire rd_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_clk;
  wire wr_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \gc1.count_reg[0] [2:0] = rd_rst_reg;
  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d2;
  assign out[1:0] = wr_rst_reg[1:0];
  assign ram_full_i_reg = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst 
       (.in0(rd_rst_asreg),
        .out(p_7_out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_4 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst 
       (.in0(wr_rst_asreg),
        .out(p_8_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_5 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ),
        .\Q_reg_reg[0]_0 (p_9_out),
        .in0(rd_rst_asreg),
        .out(p_7_out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_6 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ),
        .\Q_reg_reg[0]_0 (p_10_out),
        .in0(wr_rst_asreg),
        .out(p_8_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_7 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].rrst_inst 
       (.\Q_reg_reg[0]_0 (p_9_out),
        .in0(rd_rst_asreg),
        .\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].rrst_inst_n_1 ),
        .out(p_11_out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_8 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].wrst_inst 
       (.\Q_reg_reg[0]_0 (p_10_out),
        .in0(wr_rst_asreg),
        .\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].wrst_inst_n_1 ),
        .out(p_12_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_9 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[4].rrst_inst 
       (.out(p_11_out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_10 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[4].wrst_inst 
       (.out(p_12_out),
        .wr_clk(wr_clk));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].rrst_inst_n_1 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ),
        .Q(rd_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ),
        .Q(rd_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ),
        .Q(rd_rst_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(rst),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(rst),
        .Q(rst_wr_reg2));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].wrst_inst_n_1 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ),
        .Q(wr_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ),
        .Q(wr_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ),
        .Q(wr_rst_reg[2]));
endmodule

(* ORIG_REF_NAME = "reset_blk_ramfifo" *) 
module jtag_axi_axi_perf_mon_0_0_reset_blk_ramfifo_14
   (out,
    \gc1.count_reg[0] ,
    \grstd1.grst_full.grst_f.rst_d3_reg_0 ,
    ram_full_i_reg,
    rd_clk,
    wr_clk,
    rst);
  output [1:0]out;
  output [2:0]\gc1.count_reg[0] ;
  output \grstd1.grst_full.grst_f.rst_d3_reg_0 ;
  output ram_full_i_reg;
  input rd_clk;
  input wr_clk;
  input rst;

  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].rrst_inst_n_1 ;
  wire \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].wrst_inst_n_1 ;
  wire p_10_out;
  wire p_11_out;
  wire p_12_out;
  wire p_7_out;
  wire p_8_out;
  wire p_9_out;
  wire rd_clk;
  wire rd_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]rd_rst_reg;
  wire rst;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_d3;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_rd_reg2;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg1;
  (* async_reg = "true" *) (* msgon = "true" *) wire rst_wr_reg2;
  wire wr_clk;
  wire wr_rst_asreg;
  (* DONT_TOUCH *) wire [2:0]wr_rst_reg;

  assign \gc1.count_reg[0] [2:0] = rd_rst_reg;
  assign \grstd1.grst_full.grst_f.rst_d3_reg_0  = rst_d2;
  assign out[1:0] = wr_rst_reg[1:0];
  assign ram_full_i_reg = rst_d3;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst_wr_reg2),
        .Q(rst_d1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d1),
        .PRE(rst_wr_reg2),
        .Q(rst_d2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b1)) 
    \grstd1.grst_full.grst_f.rst_d3_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_d2),
        .PRE(rst_wr_reg2),
        .Q(rst_d3));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_15 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].rrst_inst 
       (.in0(rd_rst_asreg),
        .out(p_7_out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_16 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[1].wrst_inst 
       (.in0(wr_rst_asreg),
        .out(p_8_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_17 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ),
        .\Q_reg_reg[0]_0 (p_9_out),
        .in0(rd_rst_asreg),
        .out(p_7_out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_18 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst 
       (.AS(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ),
        .\Q_reg_reg[0]_0 (p_10_out),
        .in0(wr_rst_asreg),
        .out(p_8_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_19 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].rrst_inst 
       (.\Q_reg_reg[0]_0 (p_9_out),
        .in0(rd_rst_asreg),
        .\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].rrst_inst_n_1 ),
        .out(p_11_out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_20 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].wrst_inst 
       (.\Q_reg_reg[0]_0 (p_10_out),
        .in0(wr_rst_asreg),
        .\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg (\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].wrst_inst_n_1 ),
        .out(p_12_out),
        .wr_clk(wr_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_21 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[4].rrst_inst 
       (.out(p_11_out),
        .rd_clk(rd_clk));
  jtag_axi_axi_perf_mon_0_0_synchronizer_ff_22 \ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[4].wrst_inst 
       (.out(p_12_out),
        .wr_clk(wr_clk));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].rrst_inst_n_1 ),
        .PRE(rst_rd_reg2),
        .Q(rd_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ),
        .Q(rd_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ),
        .Q(rd_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].rrst_inst_n_1 ),
        .Q(rd_rst_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg1_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_rd_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_rd_reg2_reg 
       (.C(rd_clk),
        .CE(1'b1),
        .D(rst_rd_reg1),
        .PRE(rst),
        .Q(rst_rd_reg2));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg1_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(rst),
        .Q(rst_wr_reg1));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDPE #(
    .INIT(1'b0)) 
    \ngwrdrst.grst.g7serrst.rst_wr_reg2_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(rst_wr_reg1),
        .PRE(rst),
        .Q(rst_wr_reg2));
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[3].wrst_inst_n_1 ),
        .PRE(rst_wr_reg2),
        .Q(wr_rst_asreg));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ),
        .Q(wr_rst_reg[0]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ),
        .Q(wr_rst_reg[1]));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(1'b0),
        .PRE(\ngwrdrst.grst.g7serrst.gwrrd_rst_sync_stage[2].wrst_inst_n_1 ),
        .Q(wr_rst_reg[2]));
endmodule

module jtag_axi_axi_perf_mon_0_0_synchronizer_ff
   (out,
    in0,
    rd_clk);
  output out;
  input [0:0]in0;
  input rd_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire rd_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_10
   (out,
    wr_clk);
  input out;
  input wr_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire out;
  wire wr_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_15
   (out,
    in0,
    rd_clk);
  output out;
  input [0:0]in0;
  input rd_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire rd_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_16
   (out,
    in0,
    wr_clk);
  output out;
  input [0:0]in0;
  input wr_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire wr_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_17
   (\Q_reg_reg[0]_0 ,
    AS,
    out,
    rd_clk,
    in0);
  output \Q_reg_reg[0]_0 ;
  output [0:0]AS;
  input out;
  input rd_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire rd_clk;

  assign \Q_reg_reg[0]_0  = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_18
   (\Q_reg_reg[0]_0 ,
    AS,
    out,
    wr_clk,
    in0);
  output \Q_reg_reg[0]_0 ;
  output [0:0]AS;
  input out;
  input wr_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire wr_clk;

  assign \Q_reg_reg[0]_0  = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_19
   (out,
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ,
    \Q_reg_reg[0]_0 ,
    rd_clk,
    in0);
  output out;
  output \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  input \Q_reg_reg[0]_0 ;
  input rd_clk;
  input [0:0]in0;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire \Q_reg_reg[0]_0 ;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  wire rd_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\Q_reg_reg[0]_0 ),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_20
   (out,
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ,
    \Q_reg_reg[0]_0 ,
    wr_clk,
    in0);
  output out;
  output \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  input \Q_reg_reg[0]_0 ;
  input wr_clk;
  input [0:0]in0;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire \Q_reg_reg[0]_0 ;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  wire wr_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\Q_reg_reg[0]_0 ),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_21
   (out,
    rd_clk);
  input out;
  input rd_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire out;
  wire rd_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_22
   (out,
    wr_clk);
  input out;
  input wr_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire out;
  wire wr_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_4
   (out,
    in0,
    wr_clk);
  output out;
  input [0:0]in0;
  input wr_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire wr_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(in0),
        .Q(Q_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_5
   (\Q_reg_reg[0]_0 ,
    AS,
    out,
    rd_clk,
    in0);
  output \Q_reg_reg[0]_0 ;
  output [0:0]AS;
  input out;
  input rd_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire rd_clk;

  assign \Q_reg_reg[0]_0  = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_6
   (\Q_reg_reg[0]_0 ,
    AS,
    out,
    wr_clk,
    in0);
  output \Q_reg_reg[0]_0 ;
  output [0:0]AS;
  input out;
  input wr_clk;
  input [0:0]in0;

  wire [0:0]AS;
  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire [0:0]in0;
  wire out;
  wire wr_clk;

  assign \Q_reg_reg[0]_0  = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_reg[2]_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(AS));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_7
   (out,
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ,
    \Q_reg_reg[0]_0 ,
    rd_clk,
    in0);
  output out;
  output \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  input \Q_reg_reg[0]_0 ;
  input rd_clk;
  input [0:0]in0;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire \Q_reg_reg[0]_0 ;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ;
  wire rd_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(\Q_reg_reg[0]_0 ),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.rd_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.rd_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_8
   (out,
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ,
    \Q_reg_reg[0]_0 ,
    wr_clk,
    in0);
  output out;
  output \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  input \Q_reg_reg[0]_0 ;
  input wr_clk;
  input [0:0]in0;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire \Q_reg_reg[0]_0 ;
  wire [0:0]in0;
  wire \ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ;
  wire wr_clk;

  assign out = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .D(\Q_reg_reg[0]_0 ),
        .Q(Q_reg),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    \ngwrdrst.grst.g7serrst.wr_rst_asreg_i_1 
       (.I0(in0),
        .I1(Q_reg),
        .O(\ngwrdrst.grst.g7serrst.wr_rst_asreg_reg ));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff_9
   (out,
    rd_clk);
  input out;
  input rd_clk;

  (* async_reg = "true" *) (* msgon = "true" *) wire Q_reg;
  wire out;
  wire rd_clk;

  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDRE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .D(out),
        .Q(Q_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized0
   (D,
    Q,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]D;
  input [4:0]Q;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [4:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized0_28
   (D,
    Q,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]D;
  input [4:0]Q;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [4:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(Q[4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized1
   (D,
    Q,
    wr_clk,
    AR);
  output [4:0]D;
  input [4:0]Q;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [4:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire wr_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized1_29
   (D,
    Q,
    wr_clk,
    AR);
  output [4:0]D;
  input [4:0]Q;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [4:0]Q;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire wr_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(Q[4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized2
   (D,
    \Q_reg_reg[4]_0 ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized2_30
   (D,
    \Q_reg_reg[4]_0 ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized3
   (D,
    \Q_reg_reg[4]_0 ,
    wr_clk,
    AR);
  output [4:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire wr_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized3_31
   (D,
    \Q_reg_reg[4]_0 ,
    wr_clk,
    AR);
  output [4:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire wr_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized4
   (D,
    \Q_reg_reg[4]_0 ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized4_32
   (D,
    \Q_reg_reg[4]_0 ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized5
   (D,
    \Q_reg_reg[4]_0 ,
    wr_clk,
    AR);
  output [4:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire wr_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized5_33
   (D,
    \Q_reg_reg[4]_0 ,
    wr_clk,
    AR);
  output [4:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire wr_clk;

  assign D[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized6
   (out,
    D,
    \Q_reg_reg[4]_0 ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]out;
  output [0:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [0:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign out[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_bin[3]_i_1 
       (.I0(Q_reg[3]),
        .I1(Q_reg[4]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized6_34
   (out,
    D,
    \Q_reg_reg[4]_0 ,
    rd_clk,
    \ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] );
  output [4:0]out;
  output [0:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input rd_clk;
  input [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;

  wire [0:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire [0:0]\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ;
  wire rd_clk;

  assign out[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(rd_clk),
        .CE(1'b1),
        .CLR(\ngwrdrst.grst.g7serrst.rd_rst_reg_reg[1] ),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.wr_pntr_bin[3]_i_1 
       (.I0(Q_reg[3]),
        .I1(Q_reg[4]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized7
   (out,
    D,
    \Q_reg_reg[4]_0 ,
    wr_clk,
    AR);
  output [4:0]out;
  output [0:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire wr_clk;

  assign out[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_bin[3]_i_1 
       (.I0(Q_reg[3]),
        .I1(Q_reg[4]),
        .O(D));
endmodule

(* ORIG_REF_NAME = "synchronizer_ff" *) 
module jtag_axi_axi_perf_mon_0_0_synchronizer_ff__parameterized7_35
   (out,
    D,
    \Q_reg_reg[4]_0 ,
    wr_clk,
    AR);
  output [4:0]out;
  output [0:0]D;
  input [4:0]\Q_reg_reg[4]_0 ;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]D;
  (* async_reg = "true" *) (* msgon = "true" *) wire [4:0]Q_reg;
  wire [4:0]\Q_reg_reg[4]_0 ;
  wire wr_clk;

  assign out[4:0] = Q_reg;
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[0] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [0]),
        .Q(Q_reg[0]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[1] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [1]),
        .Q(Q_reg[1]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[2] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [2]),
        .Q(Q_reg[2]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[3] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [3]),
        .Q(Q_reg[3]));
  (* ASYNC_REG *) 
  (* KEEP = "yes" *) 
  (* msgon = "true" *) 
  FDCE #(
    .INIT(1'b0)) 
    \Q_reg_reg[4] 
       (.C(wr_clk),
        .CE(1'b1),
        .CLR(AR),
        .D(\Q_reg_reg[4]_0 [4]),
        .Q(Q_reg[4]));
  LUT2 #(
    .INIT(4'h6)) 
    \gnxpm_cdc.rd_pntr_bin[3]_i_1 
       (.I0(Q_reg[3]),
        .I1(Q_reg[4]),
        .O(D));
endmodule

module jtag_axi_axi_perf_mon_0_0_wr_bin_cntr
   (Q,
    ram_full_i_reg,
    \gnxpm_cdc.wr_pntr_gc_reg[4] ,
    \gnxpm_cdc.rd_pntr_bin_reg[3] ,
    ram_full_fb_i_reg,
    \gnxpm_cdc.rd_pntr_bin_reg[4] ,
    WR_RST_BUSY,
    E,
    wr_clk,
    AR);
  output [3:0]Q;
  output ram_full_i_reg;
  output [4:0]\gnxpm_cdc.wr_pntr_gc_reg[4] ;
  input \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  input ram_full_fb_i_reg;
  input [4:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  input WR_RST_BUSY;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire WR_RST_BUSY;
  wire \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  wire [4:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  wire [4:0]\gnxpm_cdc.wr_pntr_gc_reg[4] ;
  wire [4:0]p_13_out;
  wire [4:0]plusOp__0;
  wire ram_full_fb_i_reg;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_i_5_n_0;
  wire ram_full_i_i_6_n_0;
  wire ram_full_i_i_7_n_0;
  wire ram_full_i_reg;
  wire wr_clk;
  wire [0:0]wr_pntr_plus2;

  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(wr_pntr_plus2),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(wr_pntr_plus2),
        .I1(Q[0]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(wr_pntr_plus2),
        .I2(Q[1]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(Q[1]),
        .I1(wr_pntr_plus2),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair142" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(wr_pntr_plus2),
        .I3(Q[1]),
        .I4(Q[3]),
        .O(plusOp__0[4]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2),
        .PRE(AR),
        .Q(p_13_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[0]),
        .Q(p_13_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(p_13_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(p_13_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(p_13_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[0]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[1]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[2]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[3]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[4]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[0]),
        .Q(wr_pntr_plus2));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(AR),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[4]),
        .Q(Q[3]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    ram_full_i_i_1
       (.I0(\gnxpm_cdc.rd_pntr_bin_reg[3] ),
        .I1(ram_full_fb_i_reg),
        .I2(ram_full_i_i_4_n_0),
        .I3(ram_full_i_i_5_n_0),
        .I4(ram_full_i_i_6_n_0),
        .I5(ram_full_i_i_7_n_0),
        .O(ram_full_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair143" *) 
  LUT3 #(
    .INIT(8'h09)) 
    ram_full_i_i_4
       (.I0(wr_pntr_plus2),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[4] [0]),
        .I2(WR_RST_BUSY),
        .O(ram_full_i_i_4_n_0));
  LUT3 #(
    .INIT(8'h09)) 
    ram_full_i_i_5
       (.I0(p_13_out[4]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[4] [4]),
        .I2(WR_RST_BUSY),
        .O(ram_full_i_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_6
       (.I0(p_13_out[0]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[4] [0]),
        .I2(p_13_out[1]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[4] [1]),
        .O(ram_full_i_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_7
       (.I0(p_13_out[2]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[4] [2]),
        .I2(p_13_out[3]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[4] [3]),
        .O(ram_full_i_i_7_n_0));
endmodule

(* ORIG_REF_NAME = "wr_bin_cntr" *) 
module jtag_axi_axi_perf_mon_0_0_wr_bin_cntr_24
   (Q,
    ram_full_i_reg,
    \gnxpm_cdc.wr_pntr_gc_reg[4] ,
    \gnxpm_cdc.rd_pntr_bin_reg[3] ,
    ram_full_fb_i_reg,
    \gnxpm_cdc.rd_pntr_bin_reg[4] ,
    WR_RST_BUSY,
    E,
    wr_clk,
    AR);
  output [3:0]Q;
  output ram_full_i_reg;
  output [4:0]\gnxpm_cdc.wr_pntr_gc_reg[4] ;
  input \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  input ram_full_fb_i_reg;
  input [4:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  input WR_RST_BUSY;
  input [0:0]E;
  input wr_clk;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [3:0]Q;
  wire WR_RST_BUSY;
  wire \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  wire [4:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  wire [4:0]\gnxpm_cdc.wr_pntr_gc_reg[4] ;
  wire [4:0]p_13_out;
  wire [4:0]plusOp__0;
  wire ram_full_fb_i_reg;
  wire ram_full_i_i_4_n_0;
  wire ram_full_i_i_5_n_0;
  wire ram_full_i_i_6_n_0;
  wire ram_full_i_i_7_n_0;
  wire ram_full_i_reg;
  wire wr_clk;
  wire [0:0]wr_pntr_plus2;

  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \gic0.gc0.count[0]_i_1 
       (.I0(wr_pntr_plus2),
        .O(plusOp__0[0]));
  LUT2 #(
    .INIT(4'h6)) 
    \gic0.gc0.count[1]_i_1 
       (.I0(wr_pntr_plus2),
        .I1(Q[0]),
        .O(plusOp__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair131" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \gic0.gc0.count[2]_i_1 
       (.I0(Q[0]),
        .I1(wr_pntr_plus2),
        .I2(Q[1]),
        .O(plusOp__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \gic0.gc0.count[3]_i_1 
       (.I0(Q[1]),
        .I1(wr_pntr_plus2),
        .I2(Q[0]),
        .I3(Q[2]),
        .O(plusOp__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair130" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \gic0.gc0.count[4]_i_1 
       (.I0(Q[2]),
        .I1(Q[0]),
        .I2(wr_pntr_plus2),
        .I3(Q[1]),
        .I4(Q[3]),
        .O(plusOp__0[4]));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_d1_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .D(wr_pntr_plus2),
        .PRE(AR),
        .Q(p_13_out[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[0]),
        .Q(p_13_out[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[1]),
        .Q(p_13_out[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[2]),
        .Q(p_13_out[3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d1_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(Q[3]),
        .Q(p_13_out[4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[0]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[1]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[2]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[3]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [3]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_d2_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(p_13_out[4]),
        .Q(\gnxpm_cdc.wr_pntr_gc_reg[4] [4]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[0] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[0]),
        .Q(wr_pntr_plus2));
  FDPE #(
    .INIT(1'b1)) 
    \gic0.gc0.count_reg[1] 
       (.C(wr_clk),
        .CE(E),
        .D(plusOp__0[1]),
        .PRE(AR),
        .Q(Q[0]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[2] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[2]),
        .Q(Q[1]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[3] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[3]),
        .Q(Q[2]));
  FDCE #(
    .INIT(1'b0)) 
    \gic0.gc0.count_reg[4] 
       (.C(wr_clk),
        .CE(E),
        .CLR(AR),
        .D(plusOp__0[4]),
        .Q(Q[3]));
  LUT6 #(
    .INIT(64'hFF80808080808080)) 
    ram_full_i_i_1
       (.I0(\gnxpm_cdc.rd_pntr_bin_reg[3] ),
        .I1(ram_full_fb_i_reg),
        .I2(ram_full_i_i_4_n_0),
        .I3(ram_full_i_i_5_n_0),
        .I4(ram_full_i_i_6_n_0),
        .I5(ram_full_i_i_7_n_0),
        .O(ram_full_i_reg));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h09)) 
    ram_full_i_i_4
       (.I0(wr_pntr_plus2),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[4] [0]),
        .I2(WR_RST_BUSY),
        .O(ram_full_i_i_4_n_0));
  (* SOFT_HLUTNM = "soft_lutpair132" *) 
  LUT3 #(
    .INIT(8'h09)) 
    ram_full_i_i_5
       (.I0(p_13_out[4]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[4] [4]),
        .I2(WR_RST_BUSY),
        .O(ram_full_i_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_6
       (.I0(p_13_out[0]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[4] [0]),
        .I2(p_13_out[1]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[4] [1]),
        .O(ram_full_i_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    ram_full_i_i_7
       (.I0(p_13_out[2]),
        .I1(\gnxpm_cdc.rd_pntr_bin_reg[4] [2]),
        .I2(p_13_out[3]),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[4] [3]),
        .O(ram_full_i_i_7_n_0));
endmodule

module jtag_axi_axi_perf_mon_0_0_wr_logic
   (full,
    Q,
    E,
    \gnxpm_cdc.wr_pntr_gc_reg[4] ,
    wr_clk,
    out,
    \gnxpm_cdc.rd_pntr_bin_reg[3] ,
    wr_en,
    \gnxpm_cdc.rd_pntr_bin_reg[4] ,
    WR_RST_BUSY,
    AR);
  output full;
  output [2:0]Q;
  output [0:0]E;
  output [4:0]\gnxpm_cdc.wr_pntr_gc_reg[4] ;
  input wr_clk;
  input out;
  input \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  input wr_en;
  input [4:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  input WR_RST_BUSY;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire WR_RST_BUSY;
  wire full;
  wire \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  wire [4:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  wire [4:0]\gnxpm_cdc.wr_pntr_gc_reg[4] ;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire wpntr_n_4;
  wire wr_clk;
  wire wr_en;
  wire [4:4]wr_pntr_plus2;

  jtag_axi_axi_perf_mon_0_0_wr_status_flags_as \gwas.wsts 
       (.E(E),
        .Q(wr_pntr_plus2),
        .full(full),
        .\gnxpm_cdc.rd_pntr_bin_reg[3] (wpntr_n_4),
        .\gnxpm_cdc.rd_pntr_bin_reg[4] (\gnxpm_cdc.rd_pntr_bin_reg[4] [4]),
        .out(out),
        .ram_full_i_reg_0(\gwas.wsts_n_1 ),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  jtag_axi_axi_perf_mon_0_0_wr_bin_cntr wpntr
       (.AR(AR),
        .E(E),
        .Q({wr_pntr_plus2,Q}),
        .WR_RST_BUSY(WR_RST_BUSY),
        .\gnxpm_cdc.rd_pntr_bin_reg[3] (\gnxpm_cdc.rd_pntr_bin_reg[3] ),
        .\gnxpm_cdc.rd_pntr_bin_reg[4] (\gnxpm_cdc.rd_pntr_bin_reg[4] ),
        .\gnxpm_cdc.wr_pntr_gc_reg[4] (\gnxpm_cdc.wr_pntr_gc_reg[4] ),
        .ram_full_fb_i_reg(\gwas.wsts_n_1 ),
        .ram_full_i_reg(wpntr_n_4),
        .wr_clk(wr_clk));
endmodule

(* ORIG_REF_NAME = "wr_logic" *) 
module jtag_axi_axi_perf_mon_0_0_wr_logic_13
   (full,
    Q,
    E,
    \gnxpm_cdc.wr_pntr_gc_reg[4] ,
    wr_clk,
    out,
    \gnxpm_cdc.rd_pntr_bin_reg[3] ,
    wr_en,
    \gnxpm_cdc.rd_pntr_bin_reg[4] ,
    WR_RST_BUSY,
    AR);
  output full;
  output [2:0]Q;
  output [0:0]E;
  output [4:0]\gnxpm_cdc.wr_pntr_gc_reg[4] ;
  input wr_clk;
  input out;
  input \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  input wr_en;
  input [4:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  input WR_RST_BUSY;
  input [0:0]AR;

  wire [0:0]AR;
  wire [0:0]E;
  wire [2:0]Q;
  wire WR_RST_BUSY;
  wire full;
  wire \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  wire [4:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  wire [4:0]\gnxpm_cdc.wr_pntr_gc_reg[4] ;
  wire \gwas.wsts_n_1 ;
  wire out;
  wire wpntr_n_4;
  wire wr_clk;
  wire wr_en;
  wire [4:4]wr_pntr_plus2;

  jtag_axi_axi_perf_mon_0_0_wr_status_flags_as_23 \gwas.wsts 
       (.E(E),
        .Q(wr_pntr_plus2),
        .full(full),
        .\gnxpm_cdc.rd_pntr_bin_reg[3] (wpntr_n_4),
        .\gnxpm_cdc.rd_pntr_bin_reg[4] (\gnxpm_cdc.rd_pntr_bin_reg[4] [4]),
        .out(out),
        .ram_full_i_reg_0(\gwas.wsts_n_1 ),
        .wr_clk(wr_clk),
        .wr_en(wr_en));
  jtag_axi_axi_perf_mon_0_0_wr_bin_cntr_24 wpntr
       (.AR(AR),
        .E(E),
        .Q({wr_pntr_plus2,Q}),
        .WR_RST_BUSY(WR_RST_BUSY),
        .\gnxpm_cdc.rd_pntr_bin_reg[3] (\gnxpm_cdc.rd_pntr_bin_reg[3] ),
        .\gnxpm_cdc.rd_pntr_bin_reg[4] (\gnxpm_cdc.rd_pntr_bin_reg[4] ),
        .\gnxpm_cdc.wr_pntr_gc_reg[4] (\gnxpm_cdc.wr_pntr_gc_reg[4] ),
        .ram_full_fb_i_reg(\gwas.wsts_n_1 ),
        .ram_full_i_reg(wpntr_n_4),
        .wr_clk(wr_clk));
endmodule

module jtag_axi_axi_perf_mon_0_0_wr_status_flags_as
   (full,
    ram_full_i_reg_0,
    E,
    \gnxpm_cdc.rd_pntr_bin_reg[3] ,
    wr_clk,
    out,
    wr_en,
    Q,
    \gnxpm_cdc.rd_pntr_bin_reg[4] );
  output full;
  output ram_full_i_reg_0;
  output [0:0]E;
  input \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  input wr_clk;
  input out;
  input wr_en;
  input [0:0]Q;
  input [0:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;

  wire [0:0]E;
  wire [0:0]Q;
  wire \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  wire [0:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_full_i_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \gic0.gc0.count_d1[4]_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gnxpm_cdc.rd_pntr_bin_reg[3] ),
        .PRE(out),
        .Q(ram_full_fb_i));
  LUT4 #(
    .INIT(16'h4004)) 
    ram_full_i_i_3
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(Q),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[4] ),
        .O(ram_full_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gnxpm_cdc.rd_pntr_bin_reg[3] ),
        .PRE(out),
        .Q(ram_full_i));
endmodule

(* ORIG_REF_NAME = "wr_status_flags_as" *) 
module jtag_axi_axi_perf_mon_0_0_wr_status_flags_as_23
   (full,
    ram_full_i_reg_0,
    E,
    \gnxpm_cdc.rd_pntr_bin_reg[3] ,
    wr_clk,
    out,
    wr_en,
    Q,
    \gnxpm_cdc.rd_pntr_bin_reg[4] );
  output full;
  output ram_full_i_reg_0;
  output [0:0]E;
  input \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  input wr_clk;
  input out;
  input wr_en;
  input [0:0]Q;
  input [0:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;

  wire [0:0]E;
  wire [0:0]Q;
  wire \gnxpm_cdc.rd_pntr_bin_reg[3] ;
  wire [0:0]\gnxpm_cdc.rd_pntr_bin_reg[4] ;
  wire out;
  (* DONT_TOUCH *) wire ram_full_fb_i;
  (* DONT_TOUCH *) wire ram_full_i;
  wire ram_full_i_reg_0;
  wire wr_clk;
  wire wr_en;

  assign full = ram_full_i;
  LUT2 #(
    .INIT(4'h2)) 
    \gic0.gc0.count_d1[4]_i_1 
       (.I0(wr_en),
        .I1(ram_full_fb_i),
        .O(E));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_fb_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gnxpm_cdc.rd_pntr_bin_reg[3] ),
        .PRE(out),
        .Q(ram_full_fb_i));
  LUT4 #(
    .INIT(16'h4004)) 
    ram_full_i_i_3
       (.I0(ram_full_fb_i),
        .I1(wr_en),
        .I2(Q),
        .I3(\gnxpm_cdc.rd_pntr_bin_reg[4] ),
        .O(ram_full_i_reg_0));
  (* DONT_TOUCH *) 
  (* KEEP = "yes" *) 
  (* equivalent_register_removal = "no" *) 
  FDPE #(
    .INIT(1'b1)) 
    ram_full_i_reg
       (.C(wr_clk),
        .CE(1'b1),
        .D(\gnxpm_cdc.rd_pntr_bin_reg[3] ),
        .PRE(out),
        .Q(ram_full_i));
endmodule
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (weak1, weak0) GSR = GSR_int;
    assign (weak1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

endmodule
`endif
